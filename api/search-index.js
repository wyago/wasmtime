var searchIndex = JSON.parse('{\
"clif_json":{"doc":"Utility for `cranelift_serde`.","i":[[0,"serde_clif_json","clif_json","",null,null],[4,"SerInstData","clif_json::serde_clif_json","Serializable version of the original Cranelift IR",null,null],[13,"Unary","","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",1,null],[12,"arg","","",1,null],[13,"UnaryImm","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",2,null],[12,"imm","","",2,null],[13,"UnaryIeee32","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",3,null],[12,"imm","","",3,null],[13,"UnaryIeee64","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",4,null],[12,"imm","","",4,null],[13,"UnaryBool","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",5,null],[12,"imm","","",5,null],[13,"UnaryGlobalValue","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",6,null],[12,"global_value","","",6,null],[13,"Binary","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",7,null],[12,"args","","",7,null],[13,"BinaryImm8","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",8,null],[12,"arg","","",8,null],[12,"imm","","",8,null],[13,"BinaryImm64","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",9,null],[12,"arg","","",9,null],[12,"imm","","",9,null],[13,"Ternary","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",10,null],[12,"args","","",10,null],[13,"TernaryImm8","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",11,null],[12,"args","","",11,null],[12,"imm","","",11,null],[13,"MultiAry","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",12,null],[12,"args","","",12,null],[13,"NullAry","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",13,null],[13,"Shuffle","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",14,null],[12,"args","","",14,null],[12,"mask","","",14,null],[13,"IntCompare","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",15,null],[12,"args","","",15,null],[12,"cond","","",15,null],[13,"IntCompareImm","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",16,null],[12,"arg","","",16,null],[12,"cond","","",16,null],[12,"imm","","",16,null],[13,"IntCond","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",17,null],[12,"arg","","",17,null],[12,"cond","","",17,null],[13,"FloatCompare","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",18,null],[12,"args","","",18,null],[12,"cond","","",18,null],[13,"FloatCond","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",19,null],[12,"arg","","",19,null],[12,"cond","","",19,null],[13,"IntSelect","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",20,null],[12,"args","","",20,null],[12,"cond","","",20,null],[13,"Jump","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",21,null],[12,"args","","",21,null],[12,"destination","","",21,null],[13,"Branch","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",22,null],[12,"args","","",22,null],[12,"destination","","",22,null],[13,"BranchInt","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",23,null],[12,"args","","",23,null],[12,"cond","","",23,null],[12,"destination","","",23,null],[13,"BranchFloat","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",24,null],[12,"args","","",24,null],[12,"cond","","",24,null],[12,"destination","","",24,null],[13,"BranchIcmp","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",25,null],[12,"args","","",25,null],[12,"cond","","",25,null],[12,"destination","","",25,null],[13,"BranchTable","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",26,null],[12,"arg","","",26,null],[12,"destination","","",26,null],[12,"table","","",26,null],[13,"BranchTableEntry","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",27,null],[12,"args","","",27,null],[12,"imm","","",27,null],[12,"table","","",27,null],[13,"BranchTableBase","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",28,null],[12,"table","","",28,null],[13,"IndirectJump","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",29,null],[12,"arg","","",29,null],[12,"table","","",29,null],[13,"Call","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",30,null],[12,"args","","",30,null],[12,"func_ref","","",30,null],[13,"CallIndirect","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",31,null],[12,"args","","",31,null],[12,"sig_ref","","",31,null],[13,"FuncAddr","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",32,null],[12,"func_ref","","",32,null],[13,"Load","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",33,null],[12,"arg","","",33,null],[12,"flags","","",33,null],[12,"offset","","",33,null],[13,"LoadComplex","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",34,null],[12,"args","","",34,null],[12,"flags","","",34,null],[12,"offset","","",34,null],[13,"Store","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",35,null],[12,"args","","",35,null],[12,"flags","","",35,null],[12,"offset","","",35,null],[13,"StoreComplex","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",36,null],[12,"args","","",36,null],[12,"flags","","",36,null],[12,"offset","","",36,null],[13,"StackLoad","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",37,null],[12,"stack_slot","","",37,null],[12,"offset","","",37,null],[13,"StackStore","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",38,null],[12,"arg","","",38,null],[12,"stack_slot","","",38,null],[12,"offset","","",38,null],[13,"HeapAddr","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",39,null],[12,"arg","","",39,null],[12,"heap","","",39,null],[12,"imm","","",39,null],[13,"TableAddr","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",40,null],[12,"arg","","",40,null],[12,"table","","",40,null],[12,"offset","","",40,null],[13,"RegMove","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",41,null],[12,"arg","","",41,null],[12,"src","","",41,null],[12,"dst","","",41,null],[13,"CopySpecial","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",42,null],[12,"src","","",42,null],[12,"dst","","",42,null],[13,"CopyToSsa","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",43,null],[12,"src","","",43,null],[13,"RegSpill","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",44,null],[12,"arg","","",44,null],[12,"src","","",44,null],[12,"dst","","",44,null],[13,"RegFill","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",45,null],[12,"arg","","",45,null],[12,"src","","",45,null],[12,"dst","","",45,null],[13,"Trap","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",46,null],[12,"code","","",46,null],[13,"CondTrap","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",47,null],[12,"arg","","",47,null],[12,"code","","",47,null],[13,"IntCondTrap","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",48,null],[12,"arg","","",48,null],[12,"cond","","",48,null],[12,"code","","",48,null],[13,"FloatCondTrap","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",49,null],[12,"arg","","",49,null],[12,"cond","","",49,null],[12,"code","","",49,null],[13,"AtomicCas","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",50,null],[12,"args","","",50,null],[12,"flags","","",50,null],[13,"AtomicRmw","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",51,null],[12,"args","","",51,null],[12,"flags","","",51,null],[12,"op","","",51,null],[13,"LoadNoOffset","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",52,null],[12,"arg","","",52,null],[12,"flags","","",52,null],[13,"StoreNoOffset","clif_json::serde_clif_json","",0,null],[12,"opcode","clif_json::serde_clif_json::SerInstData","",53,null],[12,"args","","",53,null],[12,"flags","","",53,null],[5,"get_inst_data","clif_json::serde_clif_json","Convert Cranelift IR instructions to JSON format.",null,[[["function",3],["inst",3]],["serinstdata",4]]],[3,"SerInst","","Serializable version of Cranelift IR instructions.",null,null],[12,"inst_name","","",54,null],[12,"inst_data","","",54,null],[11,"new","","",54,[[["function",3],["inst",3]]]],[3,"SerBlock","","Serializable version of Cranelift IR Blocks.",null,null],[12,"block","","",55,null],[12,"params","","",55,null],[12,"insts","","",55,null],[11,"new","","",55,[[["string",3]]]],[5,"populate_inst","","",null,[[["function",3],["block",3]],[["serinst",3],["vec",3]]]],[5,"populate_params","","Translating Block parameters into serializable parameters.",null,[[["function",3],["block",3]],[["vec",3],["string",3]]]],[3,"SerDataFlowGraph","","Serializable Data Flow Graph.",null,null],[12,"blocks","","",56,null],[5,"populate_blocks","","Serialize all parts of the Cranelift Block data structure,…",null,[[["function",3]],[["vec",3],["serblock",3]]]],[11,"create_new","","",56,[[["function",3]]]],[11,"new","","",56,[[["function",3]]]],[3,"SerSignature","","Serializable signature including function parameters and…",null,null],[12,"func_params","","",57,null],[12,"func_returns","","",57,null],[11,"create_new","","Creating serializable signature data structure from all…",57,[[["signature",3]]]],[11,"new","","",57,[[["function",3]]]],[3,"SerFunction","","Serializable Function type, including name, signature,…",null,null],[12,"name","","",58,null],[12,"signature","","",58,null],[12,"globals","","",58,null],[12,"dfg","","",58,null],[11,"create_new","","Creates serializable global values, as well as the…",58,[[["function",3]]]],[11,"new","","",58,[[["function",3]]]],[3,"SerObj","","Must have SerObj for deserialization, contains all of the…",null,null],[12,"functions","","",59,null],[11,"create_new","","",59,[[["vec",3],["serfunction",3]]]],[11,"new","","",59,[[]]],[5,"call_ser","clif_json","",null,[[],[["result",4],["string",3]]]],[5,"call_de","","",null,[[["file",3]],[["result",4],["string",3]]]],[5,"main","","",null,[[]]],[11,"from","clif_json::serde_clif_json","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"clone","","",0,[[],["serinstdata",4]]],[11,"clone","","",54,[[],["serinst",3]]],[11,"clone","","",55,[[],["serblock",3]]],[11,"eq","","",0,[[["serinstdata",4]]]],[11,"ne","","",0,[[["serinstdata",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",54,[[],["result",4]]],[11,"deserialize","","",55,[[],["result",4]]],[11,"deserialize","","",56,[[],["result",4]]],[11,"deserialize","","",57,[[],["result",4]]],[11,"deserialize","","",58,[[],["result",4]]],[11,"deserialize","","",59,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",54,[[],["result",4]]],[11,"serialize","","",55,[[],["result",4]]],[11,"serialize","","",56,[[],["result",4]]],[11,"serialize","","",57,[[],["result",4]]],[11,"serialize","","",58,[[],["result",4]]],[11,"serialize","","",59,[[],["result",4]]]],"p":[[4,"SerInstData"],[13,"Unary"],[13,"UnaryImm"],[13,"UnaryIeee32"],[13,"UnaryIeee64"],[13,"UnaryBool"],[13,"UnaryGlobalValue"],[13,"Binary"],[13,"BinaryImm8"],[13,"BinaryImm64"],[13,"Ternary"],[13,"TernaryImm8"],[13,"MultiAry"],[13,"NullAry"],[13,"Shuffle"],[13,"IntCompare"],[13,"IntCompareImm"],[13,"IntCond"],[13,"FloatCompare"],[13,"FloatCond"],[13,"IntSelect"],[13,"Jump"],[13,"Branch"],[13,"BranchInt"],[13,"BranchFloat"],[13,"BranchIcmp"],[13,"BranchTable"],[13,"BranchTableEntry"],[13,"BranchTableBase"],[13,"IndirectJump"],[13,"Call"],[13,"CallIndirect"],[13,"FuncAddr"],[13,"Load"],[13,"LoadComplex"],[13,"Store"],[13,"StoreComplex"],[13,"StackLoad"],[13,"StackStore"],[13,"HeapAddr"],[13,"TableAddr"],[13,"RegMove"],[13,"CopySpecial"],[13,"CopyToSsa"],[13,"RegSpill"],[13,"RegFill"],[13,"Trap"],[13,"CondTrap"],[13,"IntCondTrap"],[13,"FloatCondTrap"],[13,"AtomicCas"],[13,"AtomicRmw"],[13,"LoadNoOffset"],[13,"StoreNoOffset"],[3,"SerInst"],[3,"SerBlock"],[3,"SerDataFlowGraph"],[3,"SerSignature"],[3,"SerFunction"],[3,"SerObj"]]},\
"clif_util":{"doc":"","i":[[0,"bugpoint","clif_util","CLI tool to reduce Cranelift IR files crashing during…",null,null],[3,"Options","clif_util::bugpoint","Reduce size of clif file causing panic during compilation.",null,null],[12,"file","","Specify an input file to be used. Use \'-\' for stdin.",0,null],[12,"settings","","Configure Cranelift settings",0,null],[12,"target","","Specify the target architecture.",0,null],[12,"verbose","","Be more verbose",0,null],[5,"run","","",null,[[["options",3]],["result",6]]],[4,"ProgressStatus","","",null,null],[13,"ExpandedOrShrinked","","The mutation raised or reduced the amount of instructions…",1,null],[13,"Changed","","The mutation only changed an instruction. Performing…",1,null],[13,"Skip","","No need to re-test if the program crashes, because the…",1,null],[8,"Mutator","","",null,null],[10,"name","","",2,[[]]],[10,"mutation_count","","",2,[[["function",3]]]],[10,"mutate","","",2,[[["function",3]],["option",4]]],[11,"did_crash","","Gets called when the returned mutated function kept on…",2,[[]]],[3,"RemoveInst","","Try to remove instructions.",null,null],[12,"block","","",3,null],[12,"inst","","",3,null],[11,"new","","",3,[[["function",3]]]],[3,"ReplaceInstWithConst","","Try to replace instructions with `iconst` or `fconst`.",null,null],[12,"block","","",4,null],[12,"inst","","",4,null],[11,"new","","",4,[[["function",3]]]],[3,"ReplaceInstWithTrap","","Try to replace instructions with `trap`.",null,null],[12,"block","","",5,null],[12,"inst","","",5,null],[11,"new","","",5,[[["function",3]]]],[3,"MoveInstToEntryBlock","","Try to move instructions to entry block.",null,null],[12,"block","","",6,null],[12,"inst","","",6,null],[11,"new","","",6,[[["function",3]]]],[3,"RemoveBlock","","Try to remove a block.",null,null],[12,"block","","",7,null],[11,"new","","",7,[[["function",3]]]],[3,"ReplaceBlockParamWithConst","","Try to replace the block params with constants.",null,null],[12,"block","","",8,null],[12,"params_remaining","","",8,null],[11,"new","","",8,[[["function",3]]]],[3,"RemoveUnusedEntities","","Try to remove unused entities.",null,null],[12,"kind","","",9,null],[11,"new","","",9,[[]]],[3,"MergeBlocks","","",null,null],[12,"block","","",10,null],[12,"prev_block","","",10,null],[11,"new","","",10,[[["function",3]]]],[5,"const_for_type","","",null,[[["type",3],["instbuilder",8]]]],[5,"next_inst_ret_prev","","",null,[[["inst",3],["function",3],["block",3]],["option",4]]],[5,"block_count","","",null,[[["function",3]]]],[5,"inst_count","","",null,[[["function",3]]]],[5,"resolve_aliases","","",null,[[["function",3]]]],[5,"try_resolve_aliases","","Resolve aliases only if function still crashes after this.",null,[[["crashcheckcontext",3],["function",3]]]],[5,"reduce","","",null,[[["targetisa",8],["function",3]],["result",6]]],[3,"CrashCheckContext","","",null,null],[12,"context","","Cached `Context`, to prevent repeated allocation.",11,null],[12,"code_memory","","Cached code memory, to prevent repeated allocation.",11,null],[12,"isa","","The target isa to compile for.",11,null],[5,"get_panic_string","","",null,[[["any",8],["box",3]],["string",3]]],[4,"CheckResult","","",null,null],[13,"Succeed","","The function compiled fine, or the verifier noticed an…",12,null],[13,"Crash","","The compilation of the function panicked.",12,null],[11,"new","","",11,[[["targetisa",8]]]],[11,"check_for_crash","","",11,[[["function",3]],["checkresult",4]]],[0,"cat","clif_util","The `cat` sub-command.",null,null],[3,"Options","clif_util::cat","Outputs .clif file",null,null],[12,"files","","Specify input file(s) to be used. Use \'-\' for stdin.",13,null],[12,"debug","","Enable debug output on stderr/stdout",13,null],[5,"run","","",null,[[["options",3]],["result",6]]],[5,"cat_one","","",null,[[["path",3]],["result",6]]],[0,"compile","clif_util","CLI tool to read Cranelift IR files and compile them into…",null,null],[3,"Options","clif_util::compile","Compiles Cranelift IR into target language",null,null],[12,"print","","Print the resulting Cranelift IR",14,null],[12,"report_times","","Print pass timing report",14,null],[12,"disasm","","Print machine code disassembly",14,null],[12,"settings","","Configure Cranelift settings",14,null],[12,"target","","Specify the Cranelift target",14,null],[12,"files","","Specify an input file to be used. Use \'-\' for stdin.",14,null],[12,"debug","","Enable debug output on stderr/stdout",14,null],[5,"run","","",null,[[["options",3]],["result",6]]],[5,"handle_module","","",null,[[["options",3],["flagsorisa",3],["path",3]],["result",6]]],[0,"disasm","clif_util","",null,null],[3,"PrintRelocs","clif_util::disasm","",null,null],[12,"flag_print","","",15,null],[12,"text","","",15,null],[11,"new","","",15,[[]]],[3,"PrintTraps","","",null,null],[12,"flag_print","","",16,null],[12,"text","","",16,null],[11,"new","","",16,[[]]],[3,"PrintStackMaps","","",null,null],[12,"flag_print","","",17,null],[12,"text","","",17,null],[11,"new","","",17,[[]]],[5,"get_disassembler","","",null,[[["targetisa",8]],[["result",6],["capstone",3]]]],[5,"print_disassembly","","",null,[[["targetisa",8]],["result",6]]],[5,"map_caperr","","",null,[[["error",4]],["error",3]]],[5,"print_all","","",null,[[["targetisa",8],["printstackmaps",3],["printtraps",3],["printrelocs",3]],["result",6]]],[5,"print_bytes","","",null,[[]]],[5,"print_readonly_data","","",null,[[]]],[0,"interpret","clif_util","CLI tool to interpret Cranelift IR files.",null,null],[3,"Options","clif_util::interpret","Interpret clif code",null,null],[12,"files","","Specify an input file to be used. Use \'-\' for stdin.",18,null],[12,"debug","","Enable debug output on stderr/stdout",18,null],[12,"verbose","","Be more verbose",18,null],[5,"run","","Run files through the Cranelift interpreter, interpreting…",null,[[["options",3]],["result",6]]],[3,"FileInterpreter","","Contains CLIF code that can be executed with…",null,null],[12,"path","","",19,null],[12,"contents","","",19,null],[11,"from_path","","Construct a file runner from a CLIF file path.",19,[[],[["error",3],["result",4]]]],[11,"path","","Return the path of the file runner or `[inline code]`.",19,[[],["string",3]]],[11,"run","","Run the file; this searches for annotations like `; run:…",19,[[],[["result",4],["fileinterpreterfailure",4]]]],[4,"FileInterpreterFailure","","Possible sources of failure in this file.",null,null],[13,"Io","","",20,null],[13,"ParsingClif","","",20,null],[13,"FailedExecution","","",20,null],[0,"print_cfg","clif_util","The `print-cfg` sub-command.",null,null],[3,"Options","clif_util::print_cfg","Prints out cfg in GraphViz Dot format",null,null],[12,"files","","Specify an input file to be used. Use \'-\' for stdin.",21,null],[12,"debug","","Enable debug output on stderr/stdout",21,null],[5,"run","","",null,[[["options",3]],["result",6]]],[5,"print_cfg","","",null,[[["path",3]],["result",6]]],[0,"run","clif_util","CLI tool to compile Cranelift IR files to native code in…",null,null],[3,"Options","clif_util::run","Execute clif code and verify with test expressions",null,null],[12,"files","","Specify an input file to be used. Use \'-\' for stdin.",22,null],[12,"debug","","Enable debug output on stderr/stdout",22,null],[12,"verbose","","Be more verbose",22,null],[5,"run","","",null,[[["options",3]],["result",6]]],[5,"run_single_file","","Run all functions in a file that are succeeded by \\\"run:\\\"…",null,[[["pathbuf",3]],["result",6]]],[5,"run_file_contents","","Main body of `run_single_file` separated for testing",null,[[["string",3]],["result",6]]],[5,"create_target_isa","","Build an ISA based on the current machine running this…",null,[[["isaspec",4]],[["result",6],["box",3]]]],[0,"utils","clif_util","Utility functions.",null,null],[5,"read_to_string","clif_util::utils","Read an entire file into a string.",null,[[["asref",8],["path",3]],[["result",6],["string",3]]]],[4,"OwnedFlagsOrIsa","","Like `FlagsOrIsa`, but holds ownership.",null,null],[13,"Flags","","",23,null],[13,"Isa","","",23,null],[11,"as_fisa","","Produce a FlagsOrIsa reference.",23,[[],["flagsorisa",3]]],[5,"parse_sets_and_triple","","Parse \\\"set\\\" and \\\"triple\\\" commands.",null,[[],[["result",6],["ownedflagsorisa",4]]]],[5,"iterate_files","","Iterate over all of the files passed as arguments,…",null,[[]]],[0,"souper_harvest","clif_util","",null,null],[7,"WASM_MAGIC","clif_util::souper_harvest","",null,null],[3,"Options","","Harvest candidates for superoptimization from a Wasm or…",null,null],[12,"input","","Specify an input file to be used. Use \'-\' for stdin.",24,null],[12,"output","","Specify the output file to be used. Use \'-\' for stdout.",24,null],[12,"settings","","Configure Cranelift settings",24,null],[12,"target","","Specify the Cranelift target",24,null],[5,"run","","",null,[[["options",3]],["result",6]]],[0,"souper_to_peepmatic","clif_util","",null,null],[3,"Options","clif_util::souper_to_peepmatic","Convert Souper optimizations into Peepmatic DSL.",null,null],[12,"input","","Specify an input file to be used. Use \'-\' for stdin.",25,null],[12,"output","","Specify the output file to be used. Use \'-\' for stdout.",25,null],[5,"run","","",null,[[["options",3]],["result",6]]],[0,"wasm","clif_util","CLI tool to use the functions provided by the…",null,null],[3,"Options","clif_util::wasm","Compiles Wasm binary/text into Cranelift IR and then into…",null,null],[12,"verbose","","Be more verbose",26,null],[12,"print","","Print the resulting Cranelift IR",26,null],[12,"report_times","","Print pass timing report",26,null],[12,"disasm","","Print machine code disassembly",26,null],[12,"settings","","Configure Cranelift settings",26,null],[12,"target","","Specify the Cranelift target",26,null],[12,"files","","Specify an input file to be used. Use \'-\' for stdin.",26,null],[12,"debug","","Enable debug output on stderr/stdout",26,null],[12,"print_size","","Print bytecode size",26,null],[12,"just_decode","","Just decode Wasm into Cranelift IR, don\'t compile it to…",26,null],[12,"check_translation","","Just checks the correctness of Cranelift IR translated…",26,null],[12,"value_ranges","","Display values\' ranges and their locations",26,null],[12,"color","","Use colors in output? [options: auto/never/always;…",26,null],[4,"Color","","",null,null],[13,"Auto","","",27,null],[13,"Never","","",27,null],[13,"Always","","",27,null],[5,"run","","",null,[[["options",3]],["result",6]]],[5,"handle_module","","",null,[[["flagsorisa",3],["path",3],["options",3]],["result",6]]],[5,"handle_debug_flag","clif_util","",null,[[]]],[4,"Commands","","Cranelift code generator utility.",null,null],[13,"Test","","",28,null],[13,"Run","","",28,null],[13,"Interpret","","",28,null],[13,"Cat","","",28,null],[13,"PrintCfg","","",28,null],[13,"Compile","","",28,null],[13,"Pass","","",28,null],[13,"Bugpoint","","",28,null],[13,"Wasm","","",28,null],[13,"SouperToPeepmatic","","",28,null],[13,"SouperHarvest","","",28,null],[3,"TestOptions","","Run Cranelift tests",null,null],[12,"verbose","","Be more verbose",29,null],[12,"time_passes","","Print pass timing report for test",29,null],[12,"debug","","Enable debug output on stderr/stdout",29,null],[12,"files","","Specify an input file to be used. Use \'-\' for stdin.",29,null],[3,"PassOptions","","Run specified pass(es) on an input file.",null,null],[12,"verbose","","Be more verbose",30,null],[12,"time_passes","","Print pass timing report for test",30,null],[12,"debug","","Enable debug output on stderr/stdout",30,null],[12,"file","","Specify an input file to be used. Use \'-\' for stdin.",30,null],[12,"target","","Specify the target architecture.",30,null],[12,"passes","","Specify pass(es) to be run on the input file",30,null],[3,"CompiledWithoutSupportOptions","","(Compiled without support for this subcommand)",null,null],[5,"main","","",null,[[],["result",6]]],[11,"from","clif_util::bugpoint","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","clif_util::cat","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","clif_util::compile","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","clif_util::disasm","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","clif_util::interpret","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","clif_util::print_cfg","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","clif_util::run","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","clif_util::utils","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","clif_util::souper_harvest","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","clif_util::souper_to_peepmatic","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","clif_util::wasm","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"equivalent","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","clif_util","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"name","clif_util::bugpoint","",3,[[]]],[11,"mutation_count","","",3,[[["function",3]]]],[11,"mutate","","",3,[[["function",3]],["option",4]]],[11,"name","","",4,[[]]],[11,"mutation_count","","",4,[[["function",3]]]],[11,"mutate","","",4,[[["function",3]],["option",4]]],[11,"name","","",5,[[]]],[11,"mutation_count","","",5,[[["function",3]]]],[11,"mutate","","",5,[[["function",3]],["option",4]]],[11,"name","","",6,[[]]],[11,"mutation_count","","",6,[[["function",3]]]],[11,"mutate","","",6,[[["function",3]],["option",4]]],[11,"name","","",7,[[]]],[11,"mutation_count","","",7,[[["function",3]]]],[11,"mutate","","",7,[[["function",3]],["option",4]]],[11,"name","","",8,[[]]],[11,"mutation_count","","",8,[[["function",3]]]],[11,"mutate","","",8,[[["function",3]],["option",4]]],[11,"name","","",9,[[]]],[11,"mutation_count","","",9,[[["function",3]]]],[11,"mutate","","",9,[[["function",3]],["option",4]]],[11,"name","","",10,[[]]],[11,"mutation_count","","",10,[[["function",3]]]],[11,"mutate","","",10,[[["function",3]],["option",4]]],[11,"did_crash","","",10,[[]]],[11,"from","clif_util::interpret","",20,[[["error",3]]]],[11,"eq","clif_util::wasm","",27,[[["color",4]]]],[11,"fmt","clif_util::interpret","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"from_str","clif_util::wasm","",27,[[],["result",6]]],[11,"source","clif_util::interpret","",20,[[],[["error",8],["option",4]]]],[11,"reloc_external","clif_util::disasm","",15,[[["addend",6],["reloc",4],["sourceloc",3],["externalname",4],["codeoffset",6]]]],[11,"reloc_jt","","",15,[[["jumptable",3],["reloc",4],["codeoffset",6]]]],[11,"reloc_constant","","",15,[[["reloc",4],["constantoffset",6],["codeoffset",6]]]],[11,"trap","","",16,[[["sourceloc",3],["trapcode",4],["codeoffset",6]]]],[11,"add_stack_map","","",17,[[["stackmap",3],["codeoffset",6]]]],[11,"clap","clif_util::bugpoint","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"clap","clif_util::cat","",13,[[],["app",3]]],[11,"from_clap","","",13,[[["argmatches",3]]]],[11,"clap","clif_util::compile","",14,[[],["app",3]]],[11,"from_clap","","",14,[[["argmatches",3]]]],[11,"clap","clif_util::interpret","",18,[[],["app",3]]],[11,"from_clap","","",18,[[["argmatches",3]]]],[11,"clap","clif_util::print_cfg","",21,[[],["app",3]]],[11,"from_clap","","",21,[[["argmatches",3]]]],[11,"clap","clif_util::run","",22,[[],["app",3]]],[11,"from_clap","","",22,[[["argmatches",3]]]],[11,"clap","clif_util::souper_harvest","",24,[[],["app",3]]],[11,"from_clap","","",24,[[["argmatches",3]]]],[11,"clap","clif_util::souper_to_peepmatic","",25,[[],["app",3]]],[11,"from_clap","","",25,[[["argmatches",3]]]],[11,"clap","clif_util::wasm","",26,[[],["app",3]]],[11,"from_clap","","",26,[[["argmatches",3]]]],[11,"clap","clif_util","",28,[[],["app",3]]],[11,"from_clap","","",28,[[["argmatches",3]]]],[11,"clap","","",29,[[],["app",3]]],[11,"from_clap","","",29,[[["argmatches",3]]]],[11,"clap","","",30,[[],["app",3]]],[11,"from_clap","","",30,[[["argmatches",3]]]],[11,"clap","","",31,[[],["app",3]]],[11,"from_clap","","",31,[[["argmatches",3]]]],[11,"augment_clap","clif_util::bugpoint","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[]]],[11,"augment_clap","clif_util::cat","",13,[[["app",3]],["app",3]]],[11,"is_subcommand","","",13,[[]]],[11,"augment_clap","clif_util::compile","",14,[[["app",3]],["app",3]]],[11,"is_subcommand","","",14,[[]]],[11,"augment_clap","clif_util::interpret","",18,[[["app",3]],["app",3]]],[11,"is_subcommand","","",18,[[]]],[11,"augment_clap","clif_util::print_cfg","",21,[[["app",3]],["app",3]]],[11,"is_subcommand","","",21,[[]]],[11,"augment_clap","clif_util::run","",22,[[["app",3]],["app",3]]],[11,"is_subcommand","","",22,[[]]],[11,"augment_clap","clif_util::souper_harvest","",24,[[["app",3]],["app",3]]],[11,"is_subcommand","","",24,[[]]],[11,"augment_clap","clif_util::souper_to_peepmatic","",25,[[["app",3]],["app",3]]],[11,"is_subcommand","","",25,[[]]],[11,"augment_clap","clif_util::wasm","",26,[[["app",3]],["app",3]]],[11,"is_subcommand","","",26,[[]]],[11,"augment_clap","clif_util","",28,[[["app",3]],["app",3]]],[11,"from_subcommand","","",28,[[],["option",4]]],[11,"is_subcommand","","",28,[[]]],[11,"augment_clap","","",29,[[["app",3]],["app",3]]],[11,"is_subcommand","","",29,[[]]],[11,"augment_clap","","",30,[[["app",3]],["app",3]]],[11,"is_subcommand","","",30,[[]]],[11,"augment_clap","","",31,[[["app",3]],["app",3]]],[11,"is_subcommand","","",31,[[]]]],"p":[[3,"Options"],[4,"ProgressStatus"],[8,"Mutator"],[3,"RemoveInst"],[3,"ReplaceInstWithConst"],[3,"ReplaceInstWithTrap"],[3,"MoveInstToEntryBlock"],[3,"RemoveBlock"],[3,"ReplaceBlockParamWithConst"],[3,"RemoveUnusedEntities"],[3,"MergeBlocks"],[3,"CrashCheckContext"],[4,"CheckResult"],[3,"Options"],[3,"Options"],[3,"PrintRelocs"],[3,"PrintTraps"],[3,"PrintStackMaps"],[3,"Options"],[3,"FileInterpreter"],[4,"FileInterpreterFailure"],[3,"Options"],[3,"Options"],[4,"OwnedFlagsOrIsa"],[3,"Options"],[3,"Options"],[3,"Options"],[4,"Color"],[4,"Commands"],[3,"TestOptions"],[3,"PassOptions"],[3,"CompiledWithoutSupportOptions"]]},\
"cranelift":{"doc":"Cranelift umbrella crate, providing a convenient one-line…","i":[[0,"prelude","cranelift","A prelude providing convenient access to commonly-used…",null,null],[8,"EntityRef","cranelift::prelude","A type wrapping a small integer index should implement…",null,null],[10,"new","","Create a new entity reference from a small integer. This…",0,[[]]],[10,"index","","Get the index that was used to create this entity reference.",0,[[]]],[4,"FloatCC","","Condition code for comparing floating point numbers.",null,null],[13,"Ordered","","EQ | LT | GT",1,null],[13,"Unordered","","UN",1,null],[13,"Equal","","EQ",1,null],[13,"NotEqual","","The C \'!=\' operator is the inverse of \'==\': `NotEqual`. UN…",1,null],[13,"OrderedNotEqual","","LT | GT",1,null],[13,"UnorderedOrEqual","","UN | EQ",1,null],[13,"LessThan","","LT",1,null],[13,"LessThanOrEqual","","LT | EQ",1,null],[13,"GreaterThan","","GT",1,null],[13,"GreaterThanOrEqual","","GT | EQ",1,null],[13,"UnorderedOrLessThan","","UN | LT",1,null],[13,"UnorderedOrLessThanOrEqual","","UN | LT | EQ",1,null],[13,"UnorderedOrGreaterThan","","UN | GT",1,null],[13,"UnorderedOrGreaterThanOrEqual","","UN | GT | EQ",1,null],[4,"IntCC","","Condition code for comparing integers.",null,null],[13,"Equal","","`==`.",2,null],[13,"NotEqual","","`!=`.",2,null],[13,"SignedLessThan","","Signed `<`.",2,null],[13,"SignedGreaterThanOrEqual","","Signed `>=`.",2,null],[13,"SignedGreaterThan","","Signed `>`.",2,null],[13,"SignedLessThanOrEqual","","Signed `<=`.",2,null],[13,"UnsignedLessThan","","Unsigned `<`.",2,null],[13,"UnsignedGreaterThanOrEqual","","Unsigned `>=`.",2,null],[13,"UnsignedGreaterThan","","Unsigned `>`.",2,null],[13,"UnsignedLessThanOrEqual","","Unsigned `<=`.",2,null],[13,"Overflow","","Signed Overflow.",2,null],[13,"NotOverflow","","Signed No Overflow.",2,null],[3,"Ieee32","","An IEEE binary32 immediate floating point value,…",null,null],[3,"Ieee64","","An IEEE binary64 immediate floating point value,…",null,null],[3,"Imm64","","64-bit immediate signed integer operand.",null,null],[3,"Uimm64","","64-bit immediate unsigned integer operand.",null,null],[0,"types","","Common types for the Cranelift code generator.",null,null],[3,"Type","cranelift::prelude::types","The type of an SSA value.",null,null],[17,"INVALID","","Not a valid type. Can\'t be loaded or stored. Can\'t be part…",null,null],[17,"IFLAGS","","CPU flags representing the result of an integer…",null,null],[17,"FFLAGS","","CPU flags representing the result of a floating point…",null,null],[17,"SARG_T","","After legalization sarg_t arguments will get this type.",null,null],[17,"B1","","A boolean type with 1 bits.",null,null],[17,"B8","","A boolean type with 8 bits.",null,null],[17,"B16","","A boolean type with 16 bits.",null,null],[17,"B32","","A boolean type with 32 bits.",null,null],[17,"B64","","A boolean type with 64 bits.",null,null],[17,"B128","","A boolean type with 128 bits.",null,null],[17,"I8","","An integer type with 8 bits. WARNING: arithmetic on 8bit…",null,null],[17,"I16","","An integer type with 16 bits. WARNING: arithmetic on 16bit…",null,null],[17,"I32","","An integer type with 32 bits.",null,null],[17,"I64","","An integer type with 64 bits.",null,null],[17,"I128","","An integer type with 128 bits.",null,null],[17,"F32","","A 32-bit floating point type represented in the IEEE…",null,null],[17,"F64","","A 64-bit floating point type represented in the IEEE…",null,null],[17,"R32","","An opaque reference type with 32 bits.",null,null],[17,"R64","","An opaque reference type with 64 bits.",null,null],[17,"B8X8","","A SIMD vector with 8 lanes containing a `b8` each.",null,null],[17,"B16X4","","A SIMD vector with 4 lanes containing a `b16` each.",null,null],[17,"B32X2","","A SIMD vector with 2 lanes containing a `b32` each.",null,null],[17,"I8X8","","A SIMD vector with 8 lanes containing a `i8` each.",null,null],[17,"I16X4","","A SIMD vector with 4 lanes containing a `i16` each.",null,null],[17,"I32X2","","A SIMD vector with 2 lanes containing a `i32` each.",null,null],[17,"F32X2","","A SIMD vector with 2 lanes containing a `f32` each.",null,null],[17,"B8X16","","A SIMD vector with 16 lanes containing a `b8` each.",null,null],[17,"B16X8","","A SIMD vector with 8 lanes containing a `b16` each.",null,null],[17,"B32X4","","A SIMD vector with 4 lanes containing a `b32` each.",null,null],[17,"B64X2","","A SIMD vector with 2 lanes containing a `b64` each.",null,null],[17,"I8X16","","A SIMD vector with 16 lanes containing a `i8` each.",null,null],[17,"I16X8","","A SIMD vector with 8 lanes containing a `i16` each.",null,null],[17,"I32X4","","A SIMD vector with 4 lanes containing a `i32` each.",null,null],[17,"I64X2","","A SIMD vector with 2 lanes containing a `i64` each.",null,null],[17,"F32X4","","A SIMD vector with 4 lanes containing a `f32` each.",null,null],[17,"F64X2","","A SIMD vector with 2 lanes containing a `f64` each.",null,null],[17,"B8X32","","A SIMD vector with 32 lanes containing a `b8` each.",null,null],[17,"B16X16","","A SIMD vector with 16 lanes containing a `b16` each.",null,null],[17,"B32X8","","A SIMD vector with 8 lanes containing a `b32` each.",null,null],[17,"B64X4","","A SIMD vector with 4 lanes containing a `b64` each.",null,null],[17,"B128X2","","A SIMD vector with 2 lanes containing a `b128` each.",null,null],[17,"I8X32","","A SIMD vector with 32 lanes containing a `i8` each.",null,null],[17,"I16X16","","A SIMD vector with 16 lanes containing a `i16` each.",null,null],[17,"I32X8","","A SIMD vector with 8 lanes containing a `i32` each.",null,null],[17,"I64X4","","A SIMD vector with 4 lanes containing a `i64` each.",null,null],[17,"I128X2","","A SIMD vector with 2 lanes containing a `i128` each.",null,null],[17,"F32X8","","A SIMD vector with 8 lanes containing a `f32` each.",null,null],[17,"F64X4","","A SIMD vector with 4 lanes containing a `f64` each.",null,null],[17,"B8X64","","A SIMD vector with 64 lanes containing a `b8` each.",null,null],[17,"B16X32","","A SIMD vector with 32 lanes containing a `b16` each.",null,null],[17,"B32X16","","A SIMD vector with 16 lanes containing a `b32` each.",null,null],[17,"B64X8","","A SIMD vector with 8 lanes containing a `b64` each.",null,null],[17,"B128X4","","A SIMD vector with 4 lanes containing a `b128` each.",null,null],[17,"I8X64","","A SIMD vector with 64 lanes containing a `i8` each.",null,null],[17,"I16X32","","A SIMD vector with 32 lanes containing a `i16` each.",null,null],[17,"I32X16","","A SIMD vector with 16 lanes containing a `i32` each.",null,null],[17,"I64X8","","A SIMD vector with 8 lanes containing a `i64` each.",null,null],[17,"I128X4","","A SIMD vector with 4 lanes containing a `i128` each.",null,null],[17,"F32X16","","A SIMD vector with 16 lanes containing a `f32` each.",null,null],[17,"F64X8","","A SIMD vector with 8 lanes containing a `f64` each.",null,null],[3,"AbiParam","cranelift::prelude","Function parameter or return value descriptor.",null,null],[12,"value_type","","Type of the argument value.",3,null],[12,"purpose","","Special purpose of argument, or `Normal`.",3,null],[12,"extension","","Method for extending argument to a full register.",3,null],[12,"location","","ABI-specific location of this argument, or `Unassigned`…",3,null],[12,"legalized_to_pointer","","Was the argument converted to pointer during legalization?",3,null],[3,"Block","","An opaque reference to a basic block in a `Function`.",null,null],[3,"ExtFuncData","","An external function.",null,null],[12,"name","","Name of the external function.",4,null],[12,"signature","","Call signature of function.",4,null],[12,"colocated","","Will this function be defined nearby, such that it will…",4,null],[4,"ExternalName","","The name of an external is either a reference to a…",null,null],[13,"User","","A name in a user-defined symbol table. Cranelift does not…",5,null],[12,"namespace","cranelift::prelude::ExternalName","Arbitrary.",6,null],[12,"index","","Arbitrary.",6,null],[13,"TestCase","cranelift::prelude","A test case function name of up to a hardcoded amount of…",5,null],[12,"length","cranelift::prelude::ExternalName","How many of the bytes in `ascii` are valid?",7,null],[12,"ascii","","Ascii bytes of the name.",7,null],[13,"LibCall","cranelift::prelude","A well-known runtime library function.",5,null],[4,"GlobalValueData","","Information about a global value declaration.",null,null],[13,"VMContext","","Value is the address of the VM context struct.",8,null],[13,"Load","","Value is pointed to by another global value.",8,null],[12,"base","cranelift::prelude::GlobalValueData","The base pointer global value.",9,null],[12,"offset","","Offset added to the base pointer before doing the load.",9,null],[12,"global_type","","Type of the loaded value.",9,null],[12,"readonly","","Specifies whether the memory that this refers to is…",9,null],[13,"IAddImm","cranelift::prelude","Value is an offset from another global value.",8,null],[12,"base","cranelift::prelude::GlobalValueData","The base pointer global value.",10,null],[12,"offset","","Byte offset to be added to the value.",10,null],[12,"global_type","","Type of the iadd.",10,null],[13,"Symbol","cranelift::prelude","Value is symbolic, meaning it\'s a name which will be…",8,null],[12,"name","cranelift::prelude::GlobalValueData","The symbolic name.",11,null],[12,"offset","","Offset from the symbol. This can be used instead of…",11,null],[12,"colocated","","Will this symbol be defined nearby, such that it will…",11,null],[12,"tls","","Does this symbol refer to a thread local storage value?",11,null],[8,"InstBuilder","cranelift::prelude","Convenience methods for building instructions.",null,null],[11,"jump","","Jump.",12,[[["block",3]],["inst",3]]],[11,"fallthrough","","Fall through to the next block.",12,[[["block",3]],["inst",3]]],[11,"brz","","Branch when zero.",12,[[["value",3],["block",3]],["inst",3]]],[11,"brnz","","Branch when non-zero.",12,[[["value",3],["block",3]],["inst",3]]],[11,"br_icmp","","Compare scalar integers and branch.",12,[[["value",3],["block",3]],["inst",3]]],[11,"brif","","Branch when condition is true in integer CPU flags.",12,[[["value",3],["block",3]],["inst",3]]],[11,"brff","","Branch when condition is true in floating point CPU flags.",12,[[["value",3],["block",3]],["inst",3]]],[11,"br_table","","Indirect branch via jump table.",12,[[["value",3],["block",3],["jumptable",3]],["inst",3]]],[11,"jump_table_entry","","Get an entry from a jump table.",12,[[["value",3],["jumptable",3]],["value",3]]],[11,"jump_table_base","","Get the absolute base address of a jump table.",12,[[["type",3],["jumptable",3]],["value",3]]],[11,"indirect_jump_table_br","","Branch indirectly via a jump table entry.",12,[[["value",3],["jumptable",3]],["inst",3]]],[11,"debugtrap","","Encodes an assembly debug trap.",12,[[],["inst",3]]],[11,"trap","","Terminate execution unconditionally.",12,[[],["inst",3]]],[11,"trapz","","Trap when zero.",12,[[["value",3]],["inst",3]]],[11,"resumable_trap","","A resumable trap.",12,[[],["inst",3]]],[11,"trapnz","","Trap when non-zero.",12,[[["value",3]],["inst",3]]],[11,"resumable_trapnz","","A resumable trap to be called when the passed condition is…",12,[[["value",3]],["inst",3]]],[11,"trapif","","Trap when condition is true in integer CPU flags.",12,[[["value",3]],["inst",3]]],[11,"trapff","","Trap when condition is true in floating point CPU flags.",12,[[["value",3]],["inst",3]]],[11,"return_","","Return from the function.",12,[[],["inst",3]]],[11,"fallthrough_return","","Return from the function by fallthrough.",12,[[],["inst",3]]],[11,"call","","Direct function call.",12,[[["funcref",3]],["inst",3]]],[11,"call_indirect","","Indirect function call.",12,[[["value",3],["sigref",3]],["inst",3]]],[11,"func_addr","","Get the address of a function.",12,[[["type",3],["funcref",3]],["value",3]]],[11,"splat","","Vector splat.",12,[[["value",3],["type",3]],["value",3]]],[11,"swizzle","","Vector swizzle.",12,[[["value",3],["type",3]],["value",3]]],[11,"insertlane","","Insert `y` as lane `Idx` in x.",12,[[["value",3]],["value",3]]],[11,"extractlane","","Extract lane `Idx` from `x`.",12,[[["value",3]],["value",3]]],[11,"imin","","Signed integer minimum.",12,[[["value",3]],["value",3]]],[11,"umin","","Unsigned integer minimum.",12,[[["value",3]],["value",3]]],[11,"imax","","Signed integer maximum.",12,[[["value",3]],["value",3]]],[11,"umax","","Unsigned integer maximum.",12,[[["value",3]],["value",3]]],[11,"avg_round","","Unsigned average with rounding: `a := (x + y + 1) // 2`",12,[[["value",3]],["value",3]]],[11,"load","","Load from memory at `p + Offset`.",12,[[["value",3],["type",3]],["value",3]]],[11,"load_complex","","Load from memory at `sum(args) + Offset`.",12,[[["type",3]],["value",3]]],[11,"store","","Store `x` to memory at `p + Offset`.",12,[[["value",3]],["inst",3]]],[11,"store_complex","","Store `x` to memory at `sum(args) + Offset`.",12,[[["value",3]],["inst",3]]],[11,"uload8","","Load 8 bits from memory at `p + Offset` and zero-extend.",12,[[["value",3],["type",3]],["value",3]]],[11,"uload8_complex","","Load 8 bits from memory at `sum(args) + Offset` and…",12,[[["type",3]],["value",3]]],[11,"sload8","","Load 8 bits from memory at `p + Offset` and sign-extend.",12,[[["value",3],["type",3]],["value",3]]],[11,"sload8_complex","","Load 8 bits from memory at `sum(args) + Offset` and…",12,[[["type",3]],["value",3]]],[11,"istore8","","Store the low 8 bits of `x` to memory at `p + Offset`.",12,[[["value",3]],["inst",3]]],[11,"istore8_complex","","Store the low 8 bits of `x` to memory at `sum(args) +…",12,[[["value",3]],["inst",3]]],[11,"uload16","","Load 16 bits from memory at `p + Offset` and zero-extend.",12,[[["value",3],["type",3]],["value",3]]],[11,"uload16_complex","","Load 16 bits from memory at `sum(args) + Offset` and…",12,[[["type",3]],["value",3]]],[11,"sload16","","Load 16 bits from memory at `p + Offset` and sign-extend.",12,[[["value",3],["type",3]],["value",3]]],[11,"sload16_complex","","Load 16 bits from memory at `sum(args) + Offset` and…",12,[[["type",3]],["value",3]]],[11,"istore16","","Store the low 16 bits of `x` to memory at `p + Offset`.",12,[[["value",3]],["inst",3]]],[11,"istore16_complex","","Store the low 16 bits of `x` to memory at `sum(args) +…",12,[[["value",3]],["inst",3]]],[11,"uload32","","Load 32 bits from memory at `p + Offset` and zero-extend.",12,[[["value",3]],["value",3]]],[11,"uload32_complex","","Load 32 bits from memory at `sum(args) + Offset` and…",12,[[],["value",3]]],[11,"sload32","","Load 32 bits from memory at `p + Offset` and sign-extend.",12,[[["value",3]],["value",3]]],[11,"sload32_complex","","Load 32 bits from memory at `sum(args) + Offset` and…",12,[[],["value",3]]],[11,"istore32","","Store the low 32 bits of `x` to memory at `p + Offset`.",12,[[["value",3]],["inst",3]]],[11,"istore32_complex","","Store the low 32 bits of `x` to memory at `sum(args) +…",12,[[["value",3]],["inst",3]]],[11,"uload8x8","","Load an 8x8 vector (64 bits) from memory at `p + Offset`…",12,[[["value",3]],["value",3]]],[11,"uload8x8_complex","","Load an 8x8 vector (64 bits) from memory at `sum(args) +…",12,[[],["value",3]]],[11,"sload8x8","","Load an 8x8 vector (64 bits) from memory at `p + Offset`…",12,[[["value",3]],["value",3]]],[11,"sload8x8_complex","","Load an 8x8 vector (64 bits) from memory at `sum(args) +…",12,[[],["value",3]]],[11,"uload16x4","","Load a 16x4 vector (64 bits) from memory at `p + Offset`…",12,[[["value",3]],["value",3]]],[11,"uload16x4_complex","","Load a 16x4 vector (64 bits) from memory at `sum(args) +…",12,[[],["value",3]]],[11,"sload16x4","","Load a 16x4 vector (64 bits) from memory at `p + Offset`…",12,[[["value",3]],["value",3]]],[11,"sload16x4_complex","","Load a 16x4 vector (64 bits) from memory at `sum(args) +…",12,[[],["value",3]]],[11,"uload32x2","","Load an 32x2 vector (64 bits) from memory at `p + Offset`…",12,[[["value",3]],["value",3]]],[11,"uload32x2_complex","","Load a 32x2 vector (64 bits) from memory at `sum(args) +…",12,[[],["value",3]]],[11,"sload32x2","","Load a 32x2 vector (64 bits) from memory at `p + Offset`…",12,[[["value",3]],["value",3]]],[11,"sload32x2_complex","","Load a 32x2 vector (64 bits) from memory at `sum(args) +…",12,[[],["value",3]]],[11,"stack_load","","Load a value from a stack slot at the constant offset.",12,[[["type",3],["stackslot",3]],["value",3]]],[11,"stack_store","","Store a value to a stack slot at a constant offset.",12,[[["value",3],["stackslot",3]],["inst",3]]],[11,"stack_addr","","Get the address of a stack slot.",12,[[["type",3],["stackslot",3]],["value",3]]],[11,"global_value","","Compute the value of global GV.",12,[[["type",3],["globalvalue",3]],["value",3]]],[11,"symbol_value","","Compute the value of global GV, which is a symbolic value.",12,[[["type",3],["globalvalue",3]],["value",3]]],[11,"tls_value","","Compute the value of global GV, which is a TLS (thread…",12,[[["type",3],["globalvalue",3]],["value",3]]],[11,"heap_addr","","Bounds check and compute absolute address of heap memory.",12,[[["value",3],["type",3],["heap",3]],["value",3]]],[11,"get_pinned_reg","","Gets the content of the pinned register, when it\'s enabled.",12,[[["type",3]],["value",3]]],[11,"set_pinned_reg","","Sets the content of the pinned register, when it\'s enabled.",12,[[["value",3]],["inst",3]]],[11,"table_addr","","Bounds check and compute absolute address of a table entry.",12,[[["table",3],["type",3],["value",3]],["value",3]]],[11,"iconst","","Integer constant.",12,[[["type",3]],["value",3]]],[11,"f32const","","Floating point constant.",12,[[],["value",3]]],[11,"f64const","","Floating point constant.",12,[[],["value",3]]],[11,"bconst","","Boolean constant.",12,[[["type",3]],["value",3]]],[11,"vconst","","SIMD vector constant.",12,[[["type",3]],["value",3]]],[11,"const_addr","","Calculate the base address of a value in the constant pool.",12,[[["type",3]],["value",3]]],[11,"shuffle","","SIMD vector shuffle.",12,[[["value",3]],["value",3]]],[11,"null","","Null constant value for reference types.",12,[[["type",3]],["value",3]]],[11,"nop","","Just a dummy instruction.",12,[[],["inst",3]]],[11,"select","","Conditional select.",12,[[["value",3]],["value",3]]],[11,"selectif","","Conditional select, dependent on integer condition codes.",12,[[["value",3],["type",3]],["value",3]]],[11,"selectif_spectre_guard","","Conditional select intended for Spectre guards.",12,[[["value",3],["type",3]],["value",3]]],[11,"bitselect","","Conditional select of bits.",12,[[["value",3]],["value",3]]],[11,"copy","","Register-register copy.",12,[[["value",3]],["value",3]]],[11,"spill","","Spill a register value to a stack slot.",12,[[["value",3]],["value",3]]],[11,"fill","","Load a register value from a stack slot.",12,[[["value",3]],["value",3]]],[11,"fill_nop","","This is identical to `fill`, except it has no encoding,…",12,[[["value",3]],["value",3]]],[11,"dummy_sarg_t","","This creates a sarg_t",12,[[],["value",3]]],[11,"regmove","","Temporarily divert `x` from `src` to `dst`.",12,[[["value",3]],["inst",3]]],[11,"copy_special","","Copies the contents of \'\'src\'\' register to \'\'dst\'\' register.",12,[[],["inst",3]]],[11,"copy_to_ssa","","Copies the contents of \'\'src\'\' register to \'\'a\'\' SSA name.",12,[[["type",3]],["value",3]]],[11,"copy_nop","","Stack-slot-to-the-same-stack-slot copy, which is…",12,[[["value",3]],["value",3]]],[11,"adjust_sp_down","","Subtracts `delta` offset value from the stack pointer…",12,[[["value",3]],["inst",3]]],[11,"adjust_sp_up_imm","","Adds `Offset` immediate offset value to the stack pointer…",12,[[],["inst",3]]],[11,"adjust_sp_down_imm","","Subtracts `Offset` immediate offset value from the stack…",12,[[],["inst",3]]],[11,"ifcmp_sp","","Compare `addr` with the stack pointer and set the CPU flags.",12,[[["value",3]],["value",3]]],[11,"regspill","","Temporarily divert `x` from `src` to `SS`.",12,[[["value",3],["stackslot",3]],["inst",3]]],[11,"regfill","","Temporarily divert `x` from `SS` to `dst`.",12,[[["value",3],["stackslot",3]],["inst",3]]],[11,"safepoint","","This instruction will provide live reference values at a…",12,[[],["inst",3]]],[11,"vsplit","","Split a vector into two halves.",12,[[["value",3]]]],[11,"vconcat","","Vector concatenation.",12,[[["value",3]],["value",3]]],[11,"vselect","","Vector lane select.",12,[[["value",3]],["value",3]]],[11,"vany_true","","Reduce a vector to a scalar boolean.",12,[[["value",3]],["value",3]]],[11,"vall_true","","Reduce a vector to a scalar boolean.",12,[[["value",3]],["value",3]]],[11,"vhigh_bits","","Reduce a vector to a scalar integer.",12,[[["value",3],["type",3]],["value",3]]],[11,"icmp","","Integer comparison.",12,[[["value",3]],["value",3]]],[11,"icmp_imm","","Compare scalar integer to a constant.",12,[[["value",3]],["value",3]]],[11,"ifcmp","","Compare scalar integers and return flags.",12,[[["value",3]],["value",3]]],[11,"ifcmp_imm","","Compare scalar integer to a constant and return flags.",12,[[["value",3]],["value",3]]],[11,"iadd","","Wrapping integer addition: `a := x + y \\\\pmod{2^B}`.",12,[[["value",3]],["value",3]]],[11,"uadd_sat","","Add with unsigned saturation.",12,[[["value",3]],["value",3]]],[11,"sadd_sat","","Add with signed saturation.",12,[[["value",3]],["value",3]]],[11,"isub","","Wrapping integer subtraction: `a := x - y \\\\pmod{2^B}`.",12,[[["value",3]],["value",3]]],[11,"usub_sat","","Subtract with unsigned saturation.",12,[[["value",3]],["value",3]]],[11,"ssub_sat","","Subtract with signed saturation.",12,[[["value",3]],["value",3]]],[11,"ineg","","Integer negation: `a := -x \\\\pmod{2^B}`.",12,[[["value",3]],["value",3]]],[11,"iabs","","Integer absolute value with wrapping: `a := |x|`.",12,[[["value",3]],["value",3]]],[11,"imul","","Wrapping integer multiplication: `a := x y \\\\pmod{2^B}`.",12,[[["value",3]],["value",3]]],[11,"umulhi","","Unsigned integer multiplication, producing the high half…",12,[[["value",3]],["value",3]]],[11,"smulhi","","Signed integer multiplication, producing the high half of…",12,[[["value",3]],["value",3]]],[11,"udiv","","Unsigned integer division: `a := \\\\lfloor {x \\\\over y}…",12,[[["value",3]],["value",3]]],[11,"sdiv","","Signed integer division rounded toward zero: `a :=…",12,[[["value",3]],["value",3]]],[11,"urem","","Unsigned integer remainder.",12,[[["value",3]],["value",3]]],[11,"srem","","Signed integer remainder. The result has the sign of the…",12,[[["value",3]],["value",3]]],[11,"iadd_imm","","Add immediate integer.",12,[[["value",3]],["value",3]]],[11,"imul_imm","","Integer multiplication by immediate constant.",12,[[["value",3]],["value",3]]],[11,"udiv_imm","","Unsigned integer division by an immediate constant.",12,[[["value",3]],["value",3]]],[11,"sdiv_imm","","Signed integer division by an immediate constant.",12,[[["value",3]],["value",3]]],[11,"urem_imm","","Unsigned integer remainder with immediate divisor.",12,[[["value",3]],["value",3]]],[11,"srem_imm","","Signed integer remainder with immediate divisor.",12,[[["value",3]],["value",3]]],[11,"irsub_imm","","Immediate reverse wrapping subtraction: `a := Y - x…",12,[[["value",3]],["value",3]]],[11,"iadd_cin","","Add integers with carry in.",12,[[["value",3]],["value",3]]],[11,"iadd_ifcin","","Add integers with carry in.",12,[[["value",3]],["value",3]]],[11,"iadd_cout","","Add integers with carry out.",12,[[["value",3]]]],[11,"iadd_ifcout","","Add integers with carry out.",12,[[["value",3]]]],[11,"iadd_carry","","Add integers with carry in and out.",12,[[["value",3]]]],[11,"iadd_ifcarry","","Add integers with carry in and out.",12,[[["value",3]]]],[11,"isub_bin","","Subtract integers with borrow in.",12,[[["value",3]],["value",3]]],[11,"isub_ifbin","","Subtract integers with borrow in.",12,[[["value",3]],["value",3]]],[11,"isub_bout","","Subtract integers with borrow out.",12,[[["value",3]]]],[11,"isub_ifbout","","Subtract integers with borrow out.",12,[[["value",3]]]],[11,"isub_borrow","","Subtract integers with borrow in and out.",12,[[["value",3]]]],[11,"isub_ifborrow","","Subtract integers with borrow in and out.",12,[[["value",3]]]],[11,"band","","Bitwise and.",12,[[["value",3]],["value",3]]],[11,"bor","","Bitwise or.",12,[[["value",3]],["value",3]]],[11,"bxor","","Bitwise xor.",12,[[["value",3]],["value",3]]],[11,"bnot","","Bitwise not.",12,[[["value",3]],["value",3]]],[11,"band_not","","Bitwise and not.",12,[[["value",3]],["value",3]]],[11,"bor_not","","Bitwise or not.",12,[[["value",3]],["value",3]]],[11,"bxor_not","","Bitwise xor not.",12,[[["value",3]],["value",3]]],[11,"band_imm","","Bitwise and with immediate.",12,[[["value",3]],["value",3]]],[11,"bor_imm","","Bitwise or with immediate.",12,[[["value",3]],["value",3]]],[11,"bxor_imm","","Bitwise xor with immediate.",12,[[["value",3]],["value",3]]],[11,"rotl","","Rotate left.",12,[[["value",3]],["value",3]]],[11,"rotr","","Rotate right.",12,[[["value",3]],["value",3]]],[11,"rotl_imm","","Rotate left by immediate.",12,[[["value",3]],["value",3]]],[11,"rotr_imm","","Rotate right by immediate.",12,[[["value",3]],["value",3]]],[11,"ishl","","Integer shift left. Shift the bits in `x` towards the MSB…",12,[[["value",3]],["value",3]]],[11,"ushr","","Unsigned shift right. Shift bits in `x` towards the LSB by…",12,[[["value",3]],["value",3]]],[11,"sshr","","Signed shift right. Shift bits in `x` towards the LSB by…",12,[[["value",3]],["value",3]]],[11,"ishl_imm","","Integer shift left by immediate.",12,[[["value",3]],["value",3]]],[11,"ushr_imm","","Unsigned shift right by immediate.",12,[[["value",3]],["value",3]]],[11,"sshr_imm","","Signed shift right by immediate.",12,[[["value",3]],["value",3]]],[11,"bitrev","","Reverse the bits of a integer.",12,[[["value",3]],["value",3]]],[11,"clz","","Count leading zero bits.",12,[[["value",3]],["value",3]]],[11,"cls","","Count leading sign bits.",12,[[["value",3]],["value",3]]],[11,"ctz","","Count trailing zeros.",12,[[["value",3]],["value",3]]],[11,"popcnt","","Population count",12,[[["value",3]],["value",3]]],[11,"fcmp","","Floating point comparison.",12,[[["value",3]],["value",3]]],[11,"ffcmp","","Floating point comparison returning flags.",12,[[["value",3]],["value",3]]],[11,"fadd","","Floating point addition.",12,[[["value",3]],["value",3]]],[11,"fsub","","Floating point subtraction.",12,[[["value",3]],["value",3]]],[11,"fmul","","Floating point multiplication.",12,[[["value",3]],["value",3]]],[11,"fdiv","","Floating point division.",12,[[["value",3]],["value",3]]],[11,"sqrt","","Floating point square root.",12,[[["value",3]],["value",3]]],[11,"fma","","Floating point fused multiply-and-add.",12,[[["value",3]],["value",3]]],[11,"fneg","","Floating point negation.",12,[[["value",3]],["value",3]]],[11,"fabs","","Floating point absolute value.",12,[[["value",3]],["value",3]]],[11,"fcopysign","","Floating point copy sign.",12,[[["value",3]],["value",3]]],[11,"fmin","","Floating point minimum, propagating NaNs.",12,[[["value",3]],["value",3]]],[11,"fmin_pseudo","","Floating point pseudo-minimum, propagating NaNs. This…",12,[[["value",3]],["value",3]]],[11,"fmax","","Floating point maximum, propagating NaNs.",12,[[["value",3]],["value",3]]],[11,"fmax_pseudo","","Floating point pseudo-maximum, propagating NaNs. This…",12,[[["value",3]],["value",3]]],[11,"ceil","","Round floating point round to integral, towards positive…",12,[[["value",3]],["value",3]]],[11,"floor","","Round floating point round to integral, towards negative…",12,[[["value",3]],["value",3]]],[11,"trunc","","Round floating point round to integral, towards zero.",12,[[["value",3]],["value",3]]],[11,"nearest","","Round floating point round to integral, towards nearest…",12,[[["value",3]],["value",3]]],[11,"is_null","","Reference verification.",12,[[["value",3]],["value",3]]],[11,"is_invalid","","Reference verification.",12,[[["value",3]],["value",3]]],[11,"trueif","","Test integer CPU flags for a specific condition.",12,[[["value",3]],["value",3]]],[11,"trueff","","Test floating point CPU flags for a specific condition.",12,[[["value",3]],["value",3]]],[11,"bitcast","","Reinterpret the bits in `x` as a different type.",12,[[["value",3],["type",3]],["value",3]]],[11,"raw_bitcast","","Cast the bits in `x` as a different type of the same bit…",12,[[["value",3],["type",3]],["value",3]]],[11,"scalar_to_vector","","Copies a scalar value to a vector value. The scalar is…",12,[[["value",3],["type",3]],["value",3]]],[11,"breduce","","Convert `x` to a smaller boolean type in the…",12,[[["value",3],["type",3]],["value",3]]],[11,"bextend","","Convert `x` to a larger boolean type in the…",12,[[["value",3],["type",3]],["value",3]]],[11,"bint","","Convert `x` to an integer.",12,[[["value",3],["type",3]],["value",3]]],[11,"bmask","","Convert `x` to an integer mask.",12,[[["value",3],["type",3]],["value",3]]],[11,"ireduce","","Convert `x` to a smaller integer type by dropping high bits.",12,[[["value",3],["type",3]],["value",3]]],[11,"snarrow","","Combine `x` and `y` into a vector with twice the lanes but…",12,[[["value",3]],["value",3]]],[11,"unarrow","","Combine `x` and `y` into a vector with twice the lanes but…",12,[[["value",3]],["value",3]]],[11,"swiden_low","","Widen the low lanes of `x` using signed extension.",12,[[["value",3]],["value",3]]],[11,"swiden_high","","Widen the high lanes of `x` using signed extension.",12,[[["value",3]],["value",3]]],[11,"uwiden_low","","Widen the low lanes of `x` using unsigned extension.",12,[[["value",3]],["value",3]]],[11,"uwiden_high","","Widen the high lanes of `x` using unsigned extension.",12,[[["value",3]],["value",3]]],[11,"widening_pairwise_dot_product_s","","Takes corresponding elements in `x` and `y`, performs a…",12,[[["value",3]],["value",3]]],[11,"uextend","","Convert `x` to a larger integer type by zero-extending.",12,[[["value",3],["type",3]],["value",3]]],[11,"sextend","","Convert `x` to a larger integer type by sign-extending.",12,[[["value",3],["type",3]],["value",3]]],[11,"fpromote","","Convert `x` to a larger floating point format.",12,[[["value",3],["type",3]],["value",3]]],[11,"fdemote","","Convert `x` to a smaller floating point format.",12,[[["value",3],["type",3]],["value",3]]],[11,"fcvt_to_uint","","Convert floating point to unsigned integer.",12,[[["value",3],["type",3]],["value",3]]],[11,"fcvt_to_uint_sat","","Convert floating point to unsigned integer as fcvt_to_uint…",12,[[["value",3],["type",3]],["value",3]]],[11,"fcvt_to_sint","","Convert floating point to signed integer.",12,[[["value",3],["type",3]],["value",3]]],[11,"fcvt_to_sint_sat","","Convert floating point to signed integer as fcvt_to_sint…",12,[[["value",3],["type",3]],["value",3]]],[11,"fcvt_from_uint","","Convert unsigned integer to floating point.",12,[[["value",3],["type",3]],["value",3]]],[11,"fcvt_from_sint","","Convert signed integer to floating point.",12,[[["value",3],["type",3]],["value",3]]],[11,"isplit","","Split an integer into low and high parts.",12,[[["value",3]]]],[11,"iconcat","","Concatenate low and high bits to form a larger integer type.",12,[[["value",3]],["value",3]]],[11,"atomic_rmw","","Atomically read-modify-write memory at `p`, with second…",12,[[["value",3],["type",3]],["value",3]]],[11,"atomic_cas","","Perform an atomic compare-and-swap operation on memory at…",12,[[["value",3]],["value",3]]],[11,"atomic_load","","Atomically load from memory at `p`.",12,[[["value",3],["type",3]],["value",3]]],[11,"atomic_store","","Atomically store `x` to memory at `p`.",12,[[["value",3]],["inst",3]]],[11,"fence","","A memory fence. This must provide ordering to ensure that,…",12,[[],["inst",3]]],[11,"x86_udivmodx","","Extended unsigned division.",12,[[["value",3]]]],[11,"x86_sdivmodx","","Extended signed division.",12,[[["value",3]]]],[11,"x86_umulx","","Unsigned integer multiplication, producing a double-length…",12,[[["value",3]]]],[11,"x86_smulx","","Signed integer multiplication, producing a double-length…",12,[[["value",3]]]],[11,"x86_cvtt2si","","Convert with truncation floating point to signed integer.",12,[[["value",3],["type",3]],["value",3]]],[11,"x86_vcvtudq2ps","","Convert unsigned integer to floating point.",12,[[["value",3]],["value",3]]],[11,"x86_fmin","","Floating point minimum with x86 semantics.",12,[[["value",3]],["value",3]]],[11,"x86_fmax","","Floating point maximum with x86 semantics.",12,[[["value",3]],["value",3]]],[11,"x86_push","","Pushes a value onto the stack.",12,[[["value",3]],["inst",3]]],[11,"x86_pop","","Pops a value from the stack.",12,[[["type",3]],["value",3]]],[11,"x86_bsr","","Bit Scan Reverse -- returns the bit-index of the most…",12,[[["value",3]]]],[11,"x86_bsf","","Bit Scan Forwards -- returns the bit-index of the least…",12,[[["value",3]]]],[11,"x86_pshufd","","Packed Shuffle Doublewords -- copies data from either…",12,[[["value",3]],["value",3]]],[11,"x86_pshufb","","Packed Shuffle Bytes -- re-orders data in an extended…",12,[[["value",3]],["value",3]]],[11,"x86_pblendw","","Blend packed words using an immediate mask. Each bit of…",12,[[["value",3]],["value",3]]],[11,"x86_pextr","","Extract lane `Idx` from `x`. The lane index, `Idx`, is an…",12,[[["value",3]],["value",3]]],[11,"x86_pinsr","","Insert `y` into `x` at lane `Idx`. The lane index, `Idx`,…",12,[[["value",3]],["value",3]]],[11,"x86_insertps","","Insert a lane of `y` into `x` at using `Idx` to encode…",12,[[["value",3]],["value",3]]],[11,"x86_punpckh","","Unpack the high-order lanes of `x` and `y` and interleave…",12,[[["value",3]],["value",3]]],[11,"x86_punpckl","","Unpack the low-order lanes of `x` and `y` and interleave…",12,[[["value",3]],["value",3]]],[11,"x86_movsd","","Move the low 64 bits of the float vector `y` to the low 64…",12,[[["value",3]],["value",3]]],[11,"x86_movlhps","","Move the low 64 bits of the float vector `y` to the high…",12,[[["value",3]],["value",3]]],[11,"x86_psll","","Shift Packed Data Left Logical -- This implements the…",12,[[["value",3]],["value",3]]],[11,"x86_psrl","","Shift Packed Data Right Logical -- This implements the…",12,[[["value",3]],["value",3]]],[11,"x86_psra","","Shift Packed Data Right Arithmetic -- This implements the…",12,[[["value",3]],["value",3]]],[11,"x86_pmullq","","Multiply Packed Integers -- Multiply two 64x2 integers and…",12,[[["value",3]],["value",3]]],[11,"x86_pmuludq","","Multiply Packed Integers -- Using only the bottom 32 bits…",12,[[["value",3]],["value",3]]],[11,"x86_ptest","","Logical Compare -- PTEST will set the ZF flag if all bits…",12,[[["value",3]],["value",3]]],[11,"x86_pmaxs","","Maximum of Packed Signed Integers -- Compare signed…",12,[[["value",3]],["value",3]]],[11,"x86_pmaxu","","Maximum of Packed Unsigned Integers -- Compare unsigned…",12,[[["value",3]],["value",3]]],[11,"x86_pmins","","Minimum of Packed Signed Integers -- Compare signed…",12,[[["value",3]],["value",3]]],[11,"x86_pminu","","Minimum of Packed Unsigned Integers -- Compare unsigned…",12,[[["value",3]],["value",3]]],[11,"x86_palignr","","Concatenate destination and source operands, extracting a…",12,[[["value",3]],["value",3]]],[11,"x86_elf_tls_get_addr","","Elf tls get addr -- This implements the GD TLS model for…",12,[[["globalvalue",3]],["value",3]]],[11,"x86_macho_tls_get_addr","","Mach-O tls get addr -- This implements TLS access for…",12,[[["globalvalue",3]],["value",3]]],[11,"AtomicCas","","AtomicCas(imms=(flags: ir::MemFlags), vals=3)",12,[[["value",3],["memflags",3],["opcode",4],["type",3]]]],[11,"AtomicRmw","","AtomicRmw(imms=(flags: ir::MemFlags, op: ir::AtomicRmwOp),…",12,[[["value",3],["memflags",3],["atomicrmwop",4],["opcode",4],["type",3]]]],[11,"Binary","","Binary(imms=(), vals=2)",12,[[["value",3],["opcode",4],["type",3]]]],[11,"BinaryImm64","","BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1)",12,[[["value",3],["imm64",3],["opcode",4],["type",3]]]],[11,"BinaryImm8","","BinaryImm8(imms=(imm: ir::immediates::Uimm8), vals=1)",12,[[["value",3],["opcode",4],["type",3]]]],[11,"Branch","","Branch(imms=(destination: ir::Block), vals=1)",12,[[["value",3],["block",3],["opcode",4],["type",3],["entitylist",3]]]],[11,"BranchFloat","","BranchFloat(imms=(cond: ir::condcodes::FloatCC,…",12,[[["value",3],["entitylist",3],["block",3],["opcode",4],["type",3],["floatcc",4]]]],[11,"BranchIcmp","","BranchIcmp(imms=(cond: ir::condcodes::IntCC, destination:…",12,[[["value",3],["entitylist",3],["block",3],["opcode",4],["type",3],["intcc",4]]]],[11,"BranchInt","","BranchInt(imms=(cond: ir::condcodes::IntCC, destination:…",12,[[["value",3],["entitylist",3],["block",3],["opcode",4],["type",3],["intcc",4]]]],[11,"BranchTable","","BranchTable(imms=(destination: ir::Block, table:…",12,[[["value",3],["block",3],["jumptable",3],["opcode",4],["type",3]]]],[11,"BranchTableBase","","BranchTableBase(imms=(table: ir::JumpTable), vals=0)",12,[[["opcode",4],["type",3],["jumptable",3]]]],[11,"BranchTableEntry","","BranchTableEntry(imms=(imm: ir::immediates::Uimm8, table:…",12,[[["value",3],["jumptable",3],["opcode",4],["type",3]]]],[11,"Call","","Call(imms=(func_ref: ir::FuncRef), vals=0)",12,[[["value",3],["entitylist",3],["opcode",4],["type",3],["funcref",3]]]],[11,"CallIndirect","","CallIndirect(imms=(sig_ref: ir::SigRef), vals=1)",12,[[["value",3],["sigref",3],["opcode",4],["type",3],["entitylist",3]]]],[11,"CondTrap","","CondTrap(imms=(code: ir::TrapCode), vals=1)",12,[[["value",3],["trapcode",4],["opcode",4],["type",3]]]],[11,"CopySpecial","","CopySpecial(imms=(src: isa::RegUnit, dst: isa::RegUnit),…",12,[[["opcode",4],["type",3]]]],[11,"CopyToSsa","","CopyToSsa(imms=(src: isa::RegUnit), vals=0)",12,[[["opcode",4],["type",3]]]],[11,"FloatCompare","","FloatCompare(imms=(cond: ir::condcodes::FloatCC), vals=2)",12,[[["value",3],["opcode",4],["type",3],["floatcc",4]]]],[11,"FloatCond","","FloatCond(imms=(cond: ir::condcodes::FloatCC), vals=1)",12,[[["value",3],["opcode",4],["type",3],["floatcc",4]]]],[11,"FloatCondTrap","","FloatCondTrap(imms=(cond: ir::condcodes::FloatCC, code:…",12,[[["value",3],["trapcode",4],["opcode",4],["type",3],["floatcc",4]]]],[11,"FuncAddr","","FuncAddr(imms=(func_ref: ir::FuncRef), vals=0)",12,[[["opcode",4],["type",3],["funcref",3]]]],[11,"HeapAddr","","HeapAddr(imms=(heap: ir::Heap, imm:…",12,[[["value",3],["heap",3],["opcode",4],["type",3],["uimm32",3]]]],[11,"IndirectJump","","IndirectJump(imms=(table: ir::JumpTable), vals=1)",12,[[["value",3],["jumptable",3],["opcode",4],["type",3]]]],[11,"IntCompare","","IntCompare(imms=(cond: ir::condcodes::IntCC), vals=2)",12,[[["value",3],["opcode",4],["type",3],["intcc",4]]]],[11,"IntCompareImm","","IntCompareImm(imms=(cond: ir::condcodes::IntCC, imm:…",12,[[["value",3],["imm64",3],["opcode",4],["type",3],["intcc",4]]]],[11,"IntCond","","IntCond(imms=(cond: ir::condcodes::IntCC), vals=1)",12,[[["value",3],["opcode",4],["type",3],["intcc",4]]]],[11,"IntCondTrap","","IntCondTrap(imms=(cond: ir::condcodes::IntCC, code:…",12,[[["value",3],["trapcode",4],["opcode",4],["type",3],["intcc",4]]]],[11,"IntSelect","","IntSelect(imms=(cond: ir::condcodes::IntCC), vals=3)",12,[[["value",3],["opcode",4],["type",3],["intcc",4]]]],[11,"Jump","","Jump(imms=(destination: ir::Block), vals=0)",12,[[["value",3],["block",3],["opcode",4],["type",3],["entitylist",3]]]],[11,"Load","","Load(imms=(flags: ir::MemFlags, offset:…",12,[[["value",3],["memflags",3],["offset32",3],["opcode",4],["type",3]]]],[11,"LoadComplex","","LoadComplex(imms=(flags: ir::MemFlags, offset:…",12,[[["value",3],["memflags",3],["offset32",3],["opcode",4],["type",3],["entitylist",3]]]],[11,"LoadNoOffset","","LoadNoOffset(imms=(flags: ir::MemFlags), vals=1)",12,[[["value",3],["memflags",3],["opcode",4],["type",3]]]],[11,"MultiAry","","MultiAry(imms=(), vals=0)",12,[[["value",3],["opcode",4],["type",3],["entitylist",3]]]],[11,"NullAry","","NullAry(imms=(), vals=0)",12,[[["opcode",4],["type",3]]]],[11,"RegFill","","RegFill(imms=(src: ir::StackSlot, dst: isa::RegUnit),…",12,[[["value",3],["stackslot",3],["opcode",4],["type",3]]]],[11,"RegMove","","RegMove(imms=(src: isa::RegUnit, dst: isa::RegUnit), vals=1)",12,[[["value",3],["opcode",4],["type",3]]]],[11,"RegSpill","","RegSpill(imms=(src: isa::RegUnit, dst: ir::StackSlot),…",12,[[["value",3],["stackslot",3],["opcode",4],["type",3]]]],[11,"Shuffle","","Shuffle(imms=(mask: ir::Immediate), vals=2)",12,[[["value",3],["opcode",4],["type",3],["immediate",3]]]],[11,"StackLoad","","StackLoad(imms=(stack_slot: ir::StackSlot, offset:…",12,[[["stackslot",3],["offset32",3],["opcode",4],["type",3]]]],[11,"StackStore","","StackStore(imms=(stack_slot: ir::StackSlot, offset:…",12,[[["value",3],["stackslot",3],["offset32",3],["opcode",4],["type",3]]]],[11,"Store","","Store(imms=(flags: ir::MemFlags, offset:…",12,[[["value",3],["memflags",3],["offset32",3],["opcode",4],["type",3]]]],[11,"StoreComplex","","StoreComplex(imms=(flags: ir::MemFlags, offset:…",12,[[["value",3],["memflags",3],["offset32",3],["opcode",4],["type",3],["entitylist",3]]]],[11,"StoreNoOffset","","StoreNoOffset(imms=(flags: ir::MemFlags), vals=2)",12,[[["value",3],["memflags",3],["opcode",4],["type",3]]]],[11,"TableAddr","","TableAddr(imms=(table: ir::Table, offset:…",12,[[["table",3],["value",3],["offset32",3],["opcode",4],["type",3]]]],[11,"Ternary","","Ternary(imms=(), vals=3)",12,[[["value",3],["opcode",4],["type",3]]]],[11,"TernaryImm8","","TernaryImm8(imms=(imm: ir::immediates::Uimm8), vals=2)",12,[[["value",3],["opcode",4],["type",3]]]],[11,"Trap","","Trap(imms=(code: ir::TrapCode), vals=0)",12,[[["opcode",4],["type",3],["trapcode",4]]]],[11,"Unary","","Unary(imms=(), vals=1)",12,[[["value",3],["opcode",4],["type",3]]]],[11,"UnaryBool","","UnaryBool(imms=(imm: bool), vals=0)",12,[[["opcode",4],["type",3]]]],[11,"UnaryConst","","UnaryConst(imms=(constant_handle: ir::Constant), vals=0)",12,[[["constant",3],["opcode",4],["type",3]]]],[11,"UnaryGlobalValue","","UnaryGlobalValue(imms=(global_value: ir::GlobalValue),…",12,[[["opcode",4],["type",3],["globalvalue",3]]]],[11,"UnaryIeee32","","UnaryIeee32(imms=(imm: ir::immediates::Ieee32), vals=0)",12,[[["opcode",4],["type",3],["ieee32",3]]]],[11,"UnaryIeee64","","UnaryIeee64(imms=(imm: ir::immediates::Ieee64), vals=0)",12,[[["opcode",4],["type",3],["ieee64",3]]]],[11,"UnaryImm","","UnaryImm(imms=(imm: ir::immediates::Imm64), vals=0)",12,[[["opcode",4],["type",3],["imm64",3]]]],[3,"JumpTableData","","Contents of a jump table.",null,null],[3,"MemFlags","","Flags for memory operations like load/store.",null,null],[3,"Signature","","Function signature.",null,null],[12,"params","","The arguments passed to the function.",13,null],[12,"returns","","Values returned from the function.",13,null],[12,"call_conv","","Calling convention.",13,null],[3,"StackSlotData","","Contents of a stack slot.",null,null],[12,"kind","","The kind of stack slot.",14,null],[12,"size","","Size of stack slot in bytes.",14,null],[12,"offset","","Offset of stack slot relative to the stack pointer in the…",14,null],[4,"StackSlotKind","","The kind of a stack slot.",null,null],[13,"SpillSlot","","A spill slot. This is a stack slot created by the register…",15,null],[13,"ExplicitSlot","","An explicit stack slot. This is a chunk of stack memory…",15,null],[13,"IncomingArg","","An incoming function argument.",15,null],[13,"OutgoingArg","","An outgoing function argument.",15,null],[13,"StructReturnSlot","","Space allocated in the caller\'s frame for the callee\'s…",15,null],[13,"EmergencySlot","","An emergency spill slot.",15,null],[4,"TrapCode","","A trap code describing the reason for a trap.",null,null],[13,"StackOverflow","","The current stack space was exhausted.",16,null],[13,"HeapOutOfBounds","","A `heap_addr` instruction detected an out-of-bounds error.",16,null],[13,"HeapMisaligned","","A wasm atomic operation was presented with a…",16,null],[13,"TableOutOfBounds","","A `table_addr` instruction detected an out-of-bounds error.",16,null],[13,"IndirectCallToNull","","Indirect call to a null table entry.",16,null],[13,"BadSignature","","Signature mismatch on indirect call.",16,null],[13,"IntegerOverflow","","An integer arithmetic operation caused an overflow.",16,null],[13,"IntegerDivisionByZero","","An integer division by zero.",16,null],[13,"BadConversionToInteger","","Failed float-to-int conversion.",16,null],[13,"UnreachableCodeReached","","Code that was supposed to have been unreachable was reached.",16,null],[13,"Interrupt","","Execution has potentially run too long and may be…",16,null],[13,"User","","A user-defined trap code.",16,null],[3,"Type","","The type of an SSA value.",null,null],[3,"Value","","An opaque reference to an SSA value.",null,null],[0,"isa","","Instruction Set Architectures.",null,null],[0,"unwind","cranelift::prelude::isa","Represents information relating to function unwinding.",null,null],[0,"systemv","cranelift::prelude::isa::unwind","System V ABI unwind information.",null,null],[4,"RegisterMappingError","cranelift::prelude::isa::unwind::systemv","Enumerate the errors possible in mapping Cranelift…",null,null],[13,"MissingBank","","",17,null],[13,"UnsupportedArchitecture","","",17,null],[13,"UnsupportedRegisterBank","","",17,null],[3,"UnwindInfo","","Represents unwind information for a single System V ABI…",null,null],[0,"winx64","cranelift::prelude::isa::unwind","Windows x64 ABI unwind information.",null,null],[3,"UnwindInfo","cranelift::prelude::isa::unwind::winx64","Represents Windows x64 unwind information.",null,null],[4,"UnwindInfo","cranelift::prelude::isa::unwind","Represents unwind information for a single function.",null,null],[13,"WindowsX64","","Windows x64 ABI unwind information.",18,null],[13,"SystemV","","System V ABI unwind information.",18,null],[0,"input","","Intermediate representation for the unwind information…",null,null],[4,"UnwindCode","cranelift::prelude::isa::unwind::input","Elementary operation in the unwind operations.",null,null],[13,"SaveRegister","","Defines that a register is saved at the specified offset.",19,null],[12,"reg","cranelift::prelude::isa::unwind::input::UnwindCode","The saved register.",20,null],[12,"stack_offset","","The specified offset relative to the stack pointer.",20,null],[13,"RestoreRegister","cranelift::prelude::isa::unwind::input","Defines that a register is as defined before call.",19,null],[12,"reg","cranelift::prelude::isa::unwind::input::UnwindCode","The restored register.",21,null],[13,"StackAlloc","cranelift::prelude::isa::unwind::input","The stack pointer was adjusted to allocate the stack.",19,null],[12,"size","cranelift::prelude::isa::unwind::input::UnwindCode","Size to allocate.",22,null],[13,"StackDealloc","cranelift::prelude::isa::unwind::input","The stack pointer was adjusted to free the stack.",19,null],[12,"size","cranelift::prelude::isa::unwind::input::UnwindCode","Size to deallocate.",23,null],[13,"SetFramePointer","cranelift::prelude::isa::unwind::input","The alternative register was assigned as frame pointer base.",19,null],[12,"reg","cranelift::prelude::isa::unwind::input::UnwindCode","The specified register.",24,null],[13,"RestoreFramePointer","cranelift::prelude::isa::unwind::input","Restores a frame pointer base to default register.",19,null],[13,"RememberState","","Saves the state.",19,null],[13,"RestoreState","","Restores the state.",19,null],[3,"UnwindInfo","","Unwind information as generated by a backend.",null,null],[12,"prologue_size","","Size of the prologue.",25,null],[12,"prologue_unwind_codes","","Unwind codes for prologue.",25,null],[12,"epilogues_unwind_codes","","Unwind codes for epilogues.",25,null],[12,"function_size","","Entire function size.",25,null],[12,"word_size","","Platform word size in bytes.",25,null],[12,"initial_sp_offset","","Initial stack pointer offset.",25,null],[0,"registers","cranelift::prelude::isa","Data structures describing the registers in an ISA.",null,null],[6,"RegUnit","cranelift::prelude::isa::registers","Register units are the smallest units of register…",null,null],[6,"RegClassMask","","A bit mask indexed by register classes.",null,null],[6,"RegUnitMask","","A bit mask indexed by register units.",null,null],[3,"RegBank","","The register units in a target ISA are divided into…",null,null],[12,"name","","The name of this register bank as defined in the ISA\'s DSL…",26,null],[12,"first_unit","","The first register unit in this bank.",26,null],[12,"units","","The total number of register units in this bank.",26,null],[12,"names","","Array of specially named register units. This array can be…",26,null],[12,"prefix","","Name prefix to use for those register units in the bank…",26,null],[12,"first_toprc","","Index of the first top-level register class in this bank.",26,null],[12,"num_toprcs","","Number of top-level register classes in this bank.",26,null],[12,"pressure_tracking","","Is register pressure tracking enabled for this bank?",26,null],[6,"RegClass","","A register class reference.",null,null],[3,"RegClassData","","Data about a register class.",null,null],[12,"name","","The name of the register class.",27,null],[12,"index","","The index of this class in the ISA\'s RegInfo description.",27,null],[12,"width","","How many register units to allocate per register.",27,null],[12,"bank","","Index of the register bank this class belongs to.",27,null],[12,"toprc","","Index of the top-level register class contains this one.",27,null],[12,"first","","The first register unit in this class.",27,null],[12,"subclasses","","Bit-mask of sub-classes of this register class, including…",27,null],[12,"mask","","Mask of register units in the class. If `width > 1`, the…",27,null],[12,"info","","The global `RegInfo` instance containing this register…",27,null],[12,"pinned_reg","","The \\\"pinned\\\" register of the associated register bank.",27,null],[3,"RegClassIndex","","A small reference to a register class.",null,null],[5,"regs_overlap","","Test of two registers overlap.",null,[[["regclassdata",3]]]],[3,"RegInfo","","Information about the registers in an ISA.",null,null],[12,"banks","","All register banks, ordered by their `first_unit`. The…",28,null],[12,"classes","","All register classes ordered topologically so a sub-class…",28,null],[3,"DisplayRegUnit","","Temporary object that holds enough information to print a…",null,null],[4,"BackendVariant","cranelift::prelude::isa","The \\\"variant\\\" for a given target. On one platform…",null,null],[13,"Any","","Any backend available.",29,null],[13,"Legacy","","A \\\"legacy\\\" backend: one that operates using legalizations…",29,null],[13,"MachInst","","A backend built on `MachInst`s and the `VCode` framework.",29,null],[5,"lookup_variant","","Look for an ISA for the given `triple`, selecting the…",null,[[["triple",3],["backendvariant",4]],[["lookuperror",4],["result",4],["builder",3]]]],[5,"lookup","","Look for an ISA for the given `triple`. Return a builder…",null,[[["triple",3]],[["lookuperror",4],["result",4],["builder",3]]]],[5,"lookup_by_name","","Look for a supported ISA with the given `name`. Return a…",null,[[],[["lookuperror",4],["result",4],["builder",3]]]],[4,"LookupError","","Describes reason for target lookup failure",null,null],[13,"SupportDisabled","","Support for this target was disabled in the current build.",30,null],[13,"Unsupported","","Support for this target has not yet been implemented.",30,null],[3,"Builder","","Builder for a `TargetIsa`. Modify the ISA-specific…",null,null],[6,"Legalize","","After determining that an instruction doesn\'t have an…",null,null],[3,"TargetFrontendConfig","","This struct provides information that a frontend may need…",null,null],[12,"default_call_conv","","The default calling convention of the target.",31,null],[12,"pointer_width","","The pointer width of the target.",31,null],[8,"TargetIsa","","Methods that are specialized to a target ISA. Implies a…",null,null],[10,"name","","Get the name of this ISA.",32,[[]]],[10,"triple","","Get the target triple that was used to make this trait…",32,[[],["triple",3]]],[10,"flags","","Get the ISA-independent flags that were used to make this…",32,[[],["flags",3]]],[10,"hash_all_flags","","Hashes all flags, both ISA-independent and ISA-specific,…",32,[[["hasher",8]]]],[11,"default_call_conv","","Get the default calling convention of this target.",32,[[],["callconv",4]]],[11,"endianness","","Get the endianness of this ISA.",32,[[],["endianness",4]]],[11,"pointer_type","","Get the pointer type of this ISA.",32,[[],["type",3]]],[11,"pointer_width","","Get the width of pointers on this ISA.",32,[[],["pointerwidth",4]]],[11,"pointer_bits","","Get the width of pointers on this ISA, in units of bits.",32,[[]]],[11,"pointer_bytes","","Get the width of pointers on this ISA, in units of bytes.",32,[[]]],[11,"frontend_config","","Get the information needed by frontends producing…",32,[[],["targetfrontendconfig",3]]],[11,"uses_cpu_flags","","Does the CPU implement scalar comparisons using a CPU…",32,[[]]],[11,"uses_complex_addresses","","Does the CPU implement multi-register addressing?",32,[[]]],[10,"register_info","","Get a data structure describing the registers in this ISA.",32,[[],["reginfo",3]]],[11,"map_dwarf_register","","Map a Cranelift register to its corresponding DWARF…",32,[[],[["result",4],["registermappingerror",4]]]],[11,"map_regalloc_reg_to_dwarf","","Map a regalloc::Reg to its corresponding DWARF register.",32,[[["reg",3]],[["result",4],["registermappingerror",4]]]],[10,"legal_encodings","","Returns an iterator over legal encodings for the…",32,[[["type",3],["function",3],["instructiondata",4]],["encodings",3]]],[11,"encode","","Encode an instruction after determining it is legal.",32,[[["instructiondata",4],["function",3],["type",3]],[["encoding",3],["result",4]]]],[10,"encoding_info","","Get a data structure describing the instruction encodings…",32,[[],["encinfo",3]]],[10,"legalize_signature","","Legalize a function signature.",32,[[["cow",4]]]],[10,"regclass_for_abi_type","","Get the register class that should be used to represent an…",32,[[["type",3]],["regclassdata",3]]],[10,"allocatable_registers","","Get the set of allocatable registers that can be used when…",32,[[["function",3]],["registerset",3]]],[11,"prologue_epilogue","","Compute the stack layout and insert prologue and epilogue…",32,[[["function",3]],[["result",4],["codegenerror",4]]]],[10,"emit_inst","","Emit binary machine code for a single instruction into the…",32,[[["function",3],["inst",3],["regdiversions",3],["codesink",8]]]],[10,"emit_function_to_memory","","Emit a whole function into memory.",32,[[["function",3],["memorycodesink",3]]]],[10,"unsigned_add_overflow_condition","","IntCC condition for Unsigned Addition Overflow (Carry).",32,[[],["intcc",4]]],[10,"unsigned_sub_overflow_condition","","IntCC condition for Unsigned Subtraction Overflow…",32,[[],["intcc",4]]],[11,"create_unwind_info","","Creates unwind information for the function.",32,[[["function",3]],[["result",4],["option",4],["codegenerror",4]]]],[11,"create_systemv_cie","","Creates a new System V Common Information Entry for the ISA.",32,[[],[["option",4],["commoninformationentry",3]]]],[11,"get_mach_backend","","Get the new-style MachBackend, if this is an adapter…",32,[[],[["machbackend",8],["option",4]]]],[10,"as_any","","Return an [Any] reference for downcasting to the…",32,[[],["any",8]]],[4,"CallConv","","Calling convention identifiers.",null,null],[13,"Fast","","Best performance, not ABI-stable",33,null],[13,"Cold","","Smallest caller code size, not ABI-stable",33,null],[13,"SystemV","","System V-style convention used on many platforms",33,null],[13,"WindowsFastcall","","Windows \\\"fastcall\\\" convention, also used for x64 and ARM",33,null],[13,"BaldrdashSystemV","","SpiderMonkey WebAssembly convention on systems using…",33,null],[13,"BaldrdashWindows","","SpiderMonkey WebAssembly convention on Windows",33,null],[13,"Baldrdash2020","","SpiderMonkey WebAssembly convention for \\\"ABI-2020\\\", with…",33,null],[13,"Probestack","","Specialized convention for the probestack function",33,null],[3,"BranchRange","","Constraints on the range of a branch instruction.",null,null],[12,"origin","","Offset in bytes from the address of the branch instruction…",34,null],[12,"bits","","Number of bits in the signed byte displacement encoded in…",34,null],[4,"ConstraintKind","","The different kinds of operand constraints.",null,null],[13,"Reg","","This operand or result must be a register from the given…",35,null],[13,"FixedReg","","This operand or result must be a fixed register.",35,null],[13,"Tied","","This result value must use the same register as an input…",35,null],[13,"FixedTied","","This operand must be a fixed register, and it has a tied…",35,null],[13,"Stack","","This operand must be a value in a stack slot.",35,null],[3,"OperandConstraint","","Register constraint for a single value operand or…",null,null],[12,"kind","","The kind of constraint.",36,null],[12,"regclass","","The register class of the operand.",36,null],[3,"RecipeConstraints","","Value operand constraints for an encoding recipe.",null,null],[12,"ins","","Constraints for the instruction\'s fixed value operands.",37,null],[12,"outs","","Constraints for the instruction\'s fixed results.",37,null],[12,"fixed_ins","","Are any of the input constraints `FixedReg` or `FixedTied`?",37,null],[12,"fixed_outs","","Are any of the output constraints `FixedReg` or `FixedTied`?",37,null],[12,"tied_ops","","Are any of the input/output constraints `Tied` (but not…",37,null],[12,"clobbers_flags","","Does this instruction clobber the CPU flags?",37,null],[3,"Encodings","","An iterator over legal encodings for the instruction.",null,null],[5,"base_size","","Returns the base size of the Recipe, assuming it\'s fixed.…",null,[[["function",3],["inst",3],["encoding",3],["recipesizing",3],["regdiversions",3]]]],[3,"EncInfo","","Information about all the encodings in this ISA.",null,null],[12,"constraints","","Constraints on value operands per recipe.",38,null],[12,"sizing","","Code size information per recipe.",38,null],[12,"names","","Names of encoding recipes.",38,null],[3,"Encoding","","Bits needed to encode an instruction as binary machine code.",null,null],[5,"regs_overlap","","Test of two registers overlap.",null,[[["regclassdata",3]]]],[6,"RegClass","","A register class reference.",null,null],[3,"RegClassIndex","","A small reference to a register class.",null,null],[3,"RegInfo","","Information about the registers in an ISA.",null,null],[12,"banks","","All register banks, ordered by their `first_unit`. The…",28,null],[12,"classes","","All register classes ordered topologically so a sub-class…",28,null],[6,"RegUnit","","Register units are the smallest units of register…",null,null],[4,"StackBase","","Generic base register for referencing stack slots.",null,null],[13,"SP","","Use the stack pointer.",39,null],[13,"FP","","Use the frame pointer (if one is present).",39,null],[13,"Zone","","Use an explicit zone pointer in a general-purpose register.",39,null],[3,"StackBaseMask","","Bit mask of supported stack bases.",null,null],[12,"0","","",40,null],[3,"StackRef","","A method for referencing a stack slot in the current stack…",null,null],[12,"base","","The base register to use for addressing.",41,null],[12,"offset","","Immediate offset from the base register to the first byte…",41,null],[0,"settings","cranelift::prelude","Shared settings module.",null,null],[8,"Configurable","cranelift::prelude::settings","A string-based configurator for settings groups.",null,null],[10,"set","","Set the string value of any setting by name.",42,[[],[["result",4],["seterror",4]]]],[10,"enable","","Enable a boolean setting or apply a preset.",42,[[],[["result",4],["seterror",4]]]],[3,"Builder","","Collect settings values based on a template.",null,null],[4,"SetError","","An error produced when changing a setting.",null,null],[13,"BadName","","No setting by this name exists.",43,null],[13,"BadType","","Type mismatch for setting (e.g., setting an enum setting…",43,null],[13,"BadValue","","This is not a valid value for this setting.",43,null],[6,"SetResult","","A result returned when changing a setting.",null,null],[3,"PredicateView","","A reference to just the boolean predicates of a settings…",null,null],[0,"detail","","Implementation details for generated code.",null,null],[3,"Template","cranelift::prelude::settings::detail","An instruction group template.",null,null],[12,"name","","Name of the instruction group.",44,null],[12,"descriptors","","List of setting descriptors.",44,null],[12,"enumerators","","Union of all enumerators.",44,null],[12,"hash_table","","Hash table of settings.",44,null],[12,"defaults","","Default values.",44,null],[12,"presets","","Pairs of (mask, value) for presets.",44,null],[3,"Descriptor","","A setting descriptor holds the information needed to…",null,null],[12,"name","","Lower snake-case name of setting as defined in meta.",45,null],[12,"offset","","Offset of byte containing this setting.",45,null],[12,"detail","","Additional details, depending on the kind of setting.",45,null],[4,"Detail","","The different kind of settings along with descriptor bits…",null,null],[13,"Bool","","A boolean setting only uses one bit, numbered from LSB.",46,null],[12,"bit","cranelift::prelude::settings::detail::Detail","0-7.",47,null],[13,"Num","cranelift::prelude::settings::detail","A numerical setting uses the whole byte.",46,null],[13,"Enum","","An Enum setting uses a range of enumerators.",46,null],[12,"last","cranelift::prelude::settings::detail::Detail","Numerical value of last enumerator, allowing for 1-256…",48,null],[12,"enumerators","","First enumerator in the ENUMERATORS table.",48,null],[13,"Preset","cranelift::prelude::settings::detail","A preset is not an individual setting, it is a collection…",46,null],[3,"Flags","cranelift::prelude::settings","Flags group `shared`.",null,null],[4,"Regalloc","","Values for `shared.regalloc`.",null,null],[13,"Backtracking","","`backtracking`.",49,null],[13,"BacktrackingChecked","","`backtracking_checked`.",49,null],[13,"ExperimentalLinearScan","","`experimental_linear_scan`.",49,null],[13,"ExperimentalLinearScanChecked","","`experimental_linear_scan_checked`.",49,null],[4,"OptLevel","","Values for `shared.opt_level`.",null,null],[13,"None","","`none`.",50,null],[13,"Speed","","`speed`.",50,null],[13,"SpeedAndSize","","`speed_and_size`.",50,null],[4,"TlsModel","","Values for `shared.tls_model`.",null,null],[13,"None","","`none`.",51,null],[13,"ElfGd","","`elf_gd`.",51,null],[13,"Macho","","`macho`.",51,null],[13,"Coff","","`coff`.",51,null],[4,"LibcallCallConv","","Values for `shared.libcall_call_conv`.",null,null],[13,"IsaDefault","","`isa_default`.",52,null],[13,"Fast","","`fast`.",52,null],[13,"Cold","","`cold`.",52,null],[13,"SystemV","","`system_v`.",52,null],[13,"WindowsFastcall","","`windows_fastcall`.",52,null],[13,"BaldrdashSystemV","","`baldrdash_system_v`.",52,null],[13,"BaldrdashWindows","","`baldrdash_windows`.",52,null],[13,"Baldrdash2020","","`baldrdash_2020`.",52,null],[13,"Probestack","","`probestack`.",52,null],[5,"builder","","Create a `settings::Builder` for the shared settings group.",null,[[],["builder",3]]],[3,"FlagsOrIsa","","Wrapper containing flags and optionally a `TargetIsa`…",null,null],[12,"flags","","Flags are always present.",53,null],[12,"isa","","The ISA may not be present.",53,null],[8,"Configurable","cranelift::prelude","A string-based configurator for settings groups.",null,null],[10,"set","","Set the string value of any setting by name.",42,[[],[["result",4],["seterror",4]]]],[10,"enable","","Enable a boolean setting or apply a preset.",42,[[],[["result",4],["seterror",4]]]],[3,"FunctionBuilder","","Temporary object used to build a single Cranelift IR…",null,null],[12,"func","","The function currently being built. This field is public…",54,null],[3,"FunctionBuilderContext","","Structure used for translating a series of functions into…",null,null],[3,"Variable","","! An opaque reference to a variable.",null,null],[17,"VERSION","cranelift","Version number of this crate.",null,null],[11,"from","cranelift::prelude","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_string","","",1,[[],["string",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_string","","",2,[[],["string",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"equivalent","","",2,[[]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"to_string","","",55,[[],["string",3]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"equivalent","","",55,[[]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"to_string","","",56,[[],["string",3]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"equivalent","","",56,[[]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"to_string","","",57,[[],["string",3]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"equivalent","","",57,[[]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"to_string","","",58,[[],["string",3]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"equivalent","","",58,[[]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"to_string","","",59,[[],["string",3]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"equivalent","","",59,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_string","","",3,[[],["string",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"equivalent","","",3,[[]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"to_string","","",60,[[],["string",3]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"key","","",60,[[]]],[11,"equivalent","","",60,[[]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_string","","",4,[[],["string",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_string","","",5,[[],["string",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"equivalent","","",5,[[]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_string","","",8,[[],["string",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"to_string","","",61,[[],["string",3]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"to_string","","",62,[[],["string",3]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"equivalent","","",62,[[]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_string","","",13,[[],["string",3]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"equivalent","","",13,[[]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_string","","",14,[[],["string",3]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"equivalent","","",14,[[]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_string","","",15,[[],["string",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"equivalent","","",15,[[]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_string","","",16,[[],["string",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"equivalent","","",16,[[]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"to_string","","",63,[[],["string",3]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"key","","",63,[[]]],[11,"equivalent","","",63,[[]]],[11,"from","cranelift::prelude::isa::unwind::systemv","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_string","","",17,[[],["string",3]]],[11,"equivalent","","",17,[[]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"equivalent","","",64,[[]]],[11,"from","cranelift::prelude::isa::unwind::winx64","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"equivalent","","",65,[[]]],[11,"from","cranelift::prelude::isa::unwind","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"equivalent","","",18,[[]]],[11,"from","cranelift::prelude::isa::unwind::input","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"equivalent","","",19,[[]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"equivalent","","",25,[[]]],[11,"from","cranelift::prelude::isa::registers","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_string","","",27,[[],["string",3]]],[11,"from","cranelift::prelude::isa","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"to_string","","",66,[[],["string",3]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"key","","",66,[[]]],[11,"equivalent","","",66,[[]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"from","cranelift::prelude::isa::registers","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"to_string","","",67,[[],["string",3]]],[11,"from","cranelift::prelude::isa","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"to_string","","",30,[[],["string",3]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"equivalent","","",30,[[]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_string","","",33,[[],["string",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"equivalent","","",33,[[]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"equivalent","","",35,[[]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"into_iter","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"to_string","","",70,[[],["string",3]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"equivalent","","",70,[[]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"equivalent","","",39,[[]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"equivalent","","",40,[[]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"from","cranelift::prelude::settings","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"to_string","","",43,[[],["string",3]]],[11,"equivalent","","",43,[[]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"from","cranelift::prelude::settings::detail","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"from","cranelift::prelude::settings","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"to_string","","",73,[[],["string",3]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"to_string","","",49,[[],["string",3]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"equivalent","","",49,[[]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"to_string","","",50,[[],["string",3]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"equivalent","","",50,[[]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"to_string","","",51,[[],["string",3]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"equivalent","","",51,[[]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"to_string","","",52,[[],["string",3]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"equivalent","","",52,[[]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"from","cranelift::prelude","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"key","","",75,[[]]],[11,"equivalent","","",75,[[]]],[11,"next","cranelift::prelude::isa","",69,[[],[["encoding",3],["option",4]]]],[11,"set","","",68,[[],[["result",4],["seterror",4]]]],[11,"enable","","",68,[[],[["result",4],["seterror",4]]]],[11,"enable","cranelift::prelude::settings","",71,[[],[["result",4],["seterror",4]]]],[11,"set","","",71,[[],[["result",4],["seterror",4]]]],[11,"eq","cranelift::prelude","",55,[[["ieee32",3]]]],[11,"ne","","",55,[[["ieee32",3]]]],[11,"eq","","",60,[[["block",3]]]],[11,"ne","","",60,[[["block",3]]]],[11,"eq","","",5,[[["externalname",4]]]],[11,"ne","","",5,[[["externalname",4]]]],[11,"eq","cranelift::prelude::isa::unwind::systemv","",64,[[["unwindinfo",3]]]],[11,"ne","","",64,[[["unwindinfo",3]]]],[11,"eq","cranelift::prelude::isa","",39,[[["stackbase",4]]]],[11,"eq","cranelift::prelude::settings","",52,[[["libcallcallconv",4]]]],[11,"eq","cranelift::prelude","",56,[[["ieee64",3]]]],[11,"ne","","",56,[[["ieee64",3]]]],[11,"eq","cranelift::prelude::isa","",66,[[["regclassindex",3]]]],[11,"ne","","",66,[[["regclassindex",3]]]],[11,"eq","","",35,[[["constraintkind",4]]]],[11,"ne","","",35,[[["constraintkind",4]]]],[11,"eq","cranelift::prelude::settings","",51,[[["tlsmodel",4]]]],[11,"eq","cranelift::prelude::isa::unwind::systemv","",17,[[["registermappingerror",4]]]],[11,"ne","","",17,[[["registermappingerror",4]]]],[11,"eq","cranelift::prelude","",15,[[["stackslotkind",4]]]],[11,"eq","cranelift::prelude::isa","",30,[[["lookuperror",4]]]],[11,"eq","cranelift::prelude","",3,[[["abiparam",3]]]],[11,"ne","","",3,[[["abiparam",3]]]],[11,"eq","","",14,[[["stackslotdata",3]]]],[11,"ne","","",14,[[["stackslotdata",3]]]],[11,"eq","cranelift::prelude::isa","",33,[[["callconv",4]]]],[11,"eq","cranelift::prelude::isa::unwind::winx64","",65,[[["unwindinfo",3]]]],[11,"ne","","",65,[[["unwindinfo",3]]]],[11,"eq","cranelift::prelude::isa::registers","",27,[[["regclassdata",3]]]],[11,"eq","cranelift::prelude::isa::unwind::input","",19,[[["unwindcode",4]]]],[11,"ne","","",19,[[["unwindcode",4]]]],[11,"eq","cranelift::prelude","",13,[[["signature",3]]]],[11,"ne","","",13,[[["signature",3]]]],[11,"eq","cranelift::prelude::settings","",49,[[["regalloc",4]]]],[11,"eq","cranelift::prelude","",57,[[["imm64",3]]]],[11,"ne","","",57,[[["imm64",3]]]],[11,"eq","","",63,[[["value",3]]]],[11,"ne","","",63,[[["value",3]]]],[11,"eq","cranelift::prelude::isa","",36,[[["operandconstraint",3]]]],[11,"ne","","",36,[[["operandconstraint",3]]]],[11,"eq","cranelift::prelude::settings","",50,[[["optlevel",4]]]],[11,"eq","","",43,[[["seterror",4]]]],[11,"ne","","",43,[[["seterror",4]]]],[11,"eq","cranelift::prelude","",59,[[["type",3]]]],[11,"ne","","",59,[[["type",3]]]],[11,"eq","cranelift::prelude::isa","",70,[[["encoding",3]]]],[11,"ne","","",70,[[["encoding",3]]]],[11,"eq","cranelift::prelude::isa::unwind","",18,[[["unwindinfo",4]]]],[11,"ne","","",18,[[["unwindinfo",4]]]],[11,"eq","cranelift::prelude","",62,[[["memflags",3]]]],[11,"ne","","",62,[[["memflags",3]]]],[11,"eq","","",58,[[["uimm64",3]]]],[11,"ne","","",58,[[["uimm64",3]]]],[11,"eq","cranelift::prelude::isa::unwind::input","",25,[[["unwindinfo",3]]]],[11,"ne","","",25,[[["unwindinfo",3]]]],[11,"eq","cranelift::prelude::isa","",37,[[["recipeconstraints",3]]]],[11,"ne","","",37,[[["recipeconstraints",3]]]],[11,"eq","","",40,[[["stackbasemask",3]]]],[11,"ne","","",40,[[["stackbasemask",3]]]],[11,"eq","cranelift::prelude","",16,[[["trapcode",4]]]],[11,"ne","","",16,[[["trapcode",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",55,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",58,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",60,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::settings","",51,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa::registers","",27,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::settings","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa::unwind::systemv","",17,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::settings","",73,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa::registers","",67,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::settings","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa","",33,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",66,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude","",14,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",59,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",15,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",62,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",13,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::settings","",52,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",43,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude","",61,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",56,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa","",70,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude","",57,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",55,[[["ieee32",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",60,[[["block",3]],[["option",4],["ordering",4]]]],[11,"lt","","",60,[[["block",3]]]],[11,"le","","",60,[[["block",3]]]],[11,"gt","","",60,[[["block",3]]]],[11,"ge","","",60,[[["block",3]]]],[11,"partial_cmp","","",56,[[["ieee64",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",63,[[["value",3]],[["option",4],["ordering",4]]]],[11,"lt","","",63,[[["value",3]]]],[11,"le","","",63,[[["value",3]]]],[11,"gt","","",63,[[["value",3]]]],[11,"ge","","",63,[[["value",3]]]],[11,"into_bytes","","",57,[[],[["global",3],["vec",3]]]],[11,"into_bytes","","",56,[[],[["global",3],["vec",3]]]],[11,"into_bytes","","",55,[[],[["global",3],["vec",3]]]],[11,"fmt","cranelift::prelude::isa","",35,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa","",70,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude","",57,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",16,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",59,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa","",36,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::settings","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa","",39,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::settings","",51,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude","",58,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",60,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",13,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa::unwind::input","",19,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::settings","",52,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa::registers","",27,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa","",66,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa::unwind::systemv","",17,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude","",56,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa::unwind::systemv","",64,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude","",62,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa::unwind","",18,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::settings","",43,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa","",40,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",33,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::settings","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude","",15,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa::unwind::winx64","",65,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude","",14,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa::unwind::input","",25,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude::isa","",34,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift::prelude","",55,[[["formatter",3]],[["result",4],["error",3]]]],[11,"deserialize","","",59,[[],[["type",3],["result",4]]]],[11,"deserialize","cranelift::prelude::isa::unwind","",18,[[],[["unwindinfo",4],["result",4]]]],[11,"deserialize","cranelift::prelude::isa::unwind::input","",25,[[],[["result",4],["unwindinfo",3]]]],[11,"deserialize","cranelift::prelude","",3,[[],[["result",4],["abiparam",3]]]],[11,"deserialize","","",16,[[],[["result",4],["trapcode",4]]]],[11,"deserialize","cranelift::prelude::isa::unwind::winx64","",65,[[],[["result",4],["unwindinfo",3]]]],[11,"deserialize","cranelift::prelude","",14,[[],[["result",4],["stackslotdata",3]]]],[11,"deserialize","cranelift::prelude::isa::unwind::input","",19,[[],[["unwindcode",4],["result",4]]]],[11,"deserialize","cranelift::prelude::isa","",33,[[],[["callconv",4],["result",4]]]],[11,"deserialize","cranelift::prelude","",13,[[],[["signature",3],["result",4]]]],[11,"deserialize","","",15,[[],[["result",4],["stackslotkind",4]]]],[11,"deserialize","cranelift::prelude::isa::unwind::systemv","",64,[[],[["result",4],["unwindinfo",3]]]],[11,"cmp","cranelift::prelude","",60,[[["block",3]],["ordering",4]]],[11,"cmp","","",63,[[["value",3]],["ordering",4]]],[11,"default","cranelift::prelude::isa","",29,[[],["backendvariant",4]]],[11,"default","cranelift::prelude","",5,[[],["externalname",4]]],[11,"default","cranelift::prelude::isa","",70,[[],["encoding",3]]],[11,"default","cranelift::prelude","",59,[[],["type",3]]],[11,"clone","","",61,[[],["jumptabledata",3]]],[11,"clone","cranelift::prelude::settings","",73,[[],["flags",3]]],[11,"clone","cranelift::prelude::isa::unwind::winx64","",65,[[],["unwindinfo",3]]],[11,"clone","cranelift::prelude::isa","",41,[[],["stackref",3]]],[11,"clone","cranelift::prelude","",63,[[],["value",3]]],[11,"clone","cranelift::prelude::isa","",30,[[],["lookuperror",4]]],[11,"clone","","",68,[[],["builder",3]]],[11,"clone","cranelift::prelude","",3,[[],["abiparam",3]]],[11,"clone","cranelift::prelude::settings","",49,[[],["regalloc",4]]],[11,"clone","cranelift::prelude","",4,[[],["extfuncdata",3]]],[11,"clone","cranelift::prelude::isa","",29,[[],["backendvariant",4]]],[11,"clone","cranelift::prelude","",58,[[],["uimm64",3]]],[11,"clone","cranelift::prelude::isa::unwind::input","",25,[[],["unwindinfo",3]]],[11,"clone","cranelift::prelude","",14,[[],["stackslotdata",3]]],[11,"clone","cranelift::prelude::settings","",53,[[],["flagsorisa",3]]],[11,"clone","cranelift::prelude","",57,[[],["imm64",3]]],[11,"clone","","",59,[[],["type",3]]],[11,"clone","cranelift::prelude::isa","",35,[[],["constraintkind",4]]],[11,"clone","","",70,[[],["encoding",3]]],[11,"clone","cranelift::prelude","",60,[[],["block",3]]],[11,"clone","cranelift::prelude::settings::detail","",46,[[],["detail",4]]],[11,"clone","cranelift::prelude","",62,[[],["memflags",3]]],[11,"clone","cranelift::prelude::isa","",31,[[],["targetfrontendconfig",3]]],[11,"clone","cranelift::prelude::settings","",72,[[],["predicateview",3]]],[11,"clone","cranelift::prelude::isa::unwind::systemv","",64,[[],["unwindinfo",3]]],[11,"clone","cranelift::prelude::isa","",38,[[],["encinfo",3]]],[11,"clone","cranelift::prelude::isa::unwind::input","",19,[[],["unwindcode",4]]],[11,"clone","cranelift::prelude::isa","",39,[[],["stackbase",4]]],[11,"clone","cranelift::prelude::settings","",51,[[],["tlsmodel",4]]],[11,"clone","cranelift::prelude::isa","",37,[[],["recipeconstraints",3]]],[11,"clone","","",28,[[],["reginfo",3]]],[11,"clone","cranelift::prelude::settings","",50,[[],["optlevel",4]]],[11,"clone","cranelift::prelude","",5,[[],["externalname",4]]],[11,"clone","cranelift::prelude::isa","",66,[[],["regclassindex",3]]],[11,"clone","","",33,[[],["callconv",4]]],[11,"clone","cranelift::prelude","",55,[[],["ieee32",3]]],[11,"clone","","",13,[[],["signature",3]]],[11,"clone","","",56,[[],["ieee64",3]]],[11,"clone","","",8,[[],["globalvaluedata",4]]],[11,"clone","cranelift::prelude::isa","",40,[[],["stackbasemask",3]]],[11,"clone","cranelift::prelude::settings","",52,[[],["libcallcallconv",4]]],[11,"clone","cranelift::prelude::isa","",34,[[],["branchrange",3]]],[11,"clone","cranelift::prelude","",15,[[],["stackslotkind",4]]],[11,"clone","","",16,[[],["trapcode",4]]],[11,"clone","cranelift::prelude::isa::unwind","",18,[[],["unwindinfo",4]]],[11,"clone","cranelift::prelude::settings","",71,[[],["builder",3]]],[11,"reserved_value","cranelift::prelude","",63,[[],["value",3]]],[11,"is_reserved_value","","",63,[[]]],[11,"reserved_value","","",60,[[],["block",3]]],[11,"is_reserved_value","","",60,[[]]],[11,"hash","","",55,[[]]],[11,"hash","cranelift::prelude::settings","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","cranelift::prelude","",13,[[]]],[11,"hash","cranelift::prelude::settings","",71,[[]]],[11,"hash","cranelift::prelude","",56,[[]]],[11,"hash","","",63,[[]]],[11,"hash","cranelift::prelude::settings","",51,[[]]],[11,"hash","cranelift::prelude","",58,[[]]],[11,"hash","cranelift::prelude::settings","",73,[[]]],[11,"hash","cranelift::prelude::settings::detail","",45,[[]]],[11,"hash","cranelift::prelude::settings","",52,[[]]],[11,"hash","cranelift::prelude","",62,[[]]],[11,"hash","cranelift::prelude::settings::detail","",44,[[]]],[11,"hash","cranelift::prelude::isa","",31,[[]]],[11,"hash","cranelift::prelude","",3,[[]]],[11,"hash","cranelift::prelude::settings","",72,[[]]],[11,"hash","cranelift::prelude","",60,[[]]],[11,"hash","cranelift::prelude::settings::detail","",46,[[]]],[11,"hash","cranelift::prelude","",57,[[]]],[11,"hash","","",16,[[]]],[11,"hash","cranelift::prelude::isa","",33,[[]]],[11,"hash","cranelift::prelude","",59,[[]]],[11,"from_str","cranelift::prelude::settings","",51,[[],[["tlsmodel",4],["result",4]]]],[11,"from_str","","",50,[[],[["optlevel",4],["result",4]]]],[11,"from_str","cranelift::prelude","",56,[[],[["result",4],["ieee64",3]]]],[11,"from_str","cranelift::prelude::settings","",52,[[],[["result",4],["libcallcallconv",4]]]],[11,"from_str","","",49,[[],[["result",4],["regalloc",4]]]],[11,"from_str","cranelift::prelude","",58,[[],[["result",4],["uimm64",3]]]],[11,"from_str","","",57,[[],[["imm64",3],["result",4]]]],[11,"from_str","","",16,[[],[["result",4],["trapcode",4]]]],[11,"from_str","","",55,[[],[["result",4],["ieee32",3]]]],[11,"from_str","cranelift::prelude::isa","",33,[[],[["result",4],["callconv",4]]]],[11,"from_str","cranelift::prelude","",5,[[],[["result",4],["externalname",4]]]],[11,"from_str","","",15,[[],[["stackslotkind",4],["result",4]]]],[11,"from","","",56,[[],["ieee64",3]]],[11,"from","","",56,[[],["ieee64",3]]],[11,"from","","",55,[[],["ieee32",3]]],[11,"from","cranelift::prelude::settings","",53,[[["targetisa",8]],["flagsorisa",3]]],[11,"from","cranelift::prelude::isa","",66,[[["regclassdata",3]],["regclassindex",3]]],[11,"from","cranelift::prelude::settings","",53,[[["flags",3]],["flagsorisa",3]]],[11,"from","cranelift::prelude","",58,[[],["uimm64",3]]],[11,"from","","",57,[[],["imm64",3]]],[11,"new","","",60,[[],["block",3]]],[11,"index","","",60,[[]]],[11,"new","cranelift::prelude::isa","",66,[[],["regclassindex",3]]],[11,"index","","",66,[[]]],[11,"new","cranelift::prelude","",63,[[],["value",3]]],[11,"index","","",63,[[]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","cranelift::prelude::isa","",33,[[],["result",4]]],[11,"serialize","cranelift::prelude","",59,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","cranelift::prelude::isa::unwind::systemv","",64,[[],["result",4]]],[11,"serialize","cranelift::prelude","",14,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","cranelift::prelude::isa::unwind","",18,[[],["result",4]]],[11,"serialize","cranelift::prelude::isa::unwind::input","",19,[[],["result",4]]],[11,"serialize","cranelift::prelude::isa::unwind::winx64","",65,[[],["result",4]]],[11,"serialize","cranelift::prelude::isa::unwind::input","",25,[[],["result",4]]],[11,"into","cranelift::prelude","",58,[[]]],[11,"into","","",57,[[]]],[11,"eq","","",1,[[["floatcc",4]]]],[11,"eq","","",2,[[["intcc",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"hash","","",2,[[]]],[11,"hash","","",1,[[]]],[11,"from_str","","",2,[[],[["result",4],["intcc",4]]]],[11,"from_str","","",1,[[],[["result",4],["floatcc",4]]]],[11,"inverse","","",2,[[],["intcc",4]]],[11,"reverse","","",2,[[],["intcc",4]]],[11,"inverse","","",1,[[],["floatcc",4]]],[11,"reverse","","",1,[[],["floatcc",4]]],[11,"clone","","",1,[[],["floatcc",4]]],[11,"clone","","",2,[[],["intcc",4]]],[11,"new","","",75,[[],["variable",3]]],[11,"index","","",75,[[]]],[11,"fmt","","",75,[[["formatter",3]],[["result",4],["error",3]]]],[11,"eq","","",75,[[["variable",3]]]],[11,"ne","","",75,[[["variable",3]]]],[11,"clone","","",75,[[],["variable",3]]],[11,"without_equal","","Get the corresponding IntCC with the equal component…",2,[[],["intcc",4]]],[11,"unsigned","","Get the corresponding IntCC with the signed component…",2,[[],["intcc",4]]],[11,"to_static_str","","Get the corresponding string condition code for the IntCC…",2,[[]]],[11,"with_bits","","Create a new `Ieee32` containing the bits of `x`.",55,[[],["ieee32",3]]],[11,"pow2","","Create an `Ieee32` number representing `2.0^n`.",55,[[],["ieee32",3]]],[11,"fcvt_to_sint_negative_overflow","","Create an `Ieee32` number representing the greatest…",55,[[],["ieee32",3]]],[11,"neg","","Return self negated.",55,[[],["ieee32",3]]],[11,"with_float","","Create a new `Ieee32` representing the number `x`.",55,[[],["ieee32",3]]],[11,"bits","","Get the bitwise representation.",55,[[]]],[11,"is_nan","","Check if the value is a NaN.",55,[[]]],[11,"with_bits","","Create a new `Ieee64` containing the bits of `x`.",56,[[],["ieee64",3]]],[11,"pow2","","Create an `Ieee64` number representing `2.0^n`.",56,[[],["ieee64",3]]],[11,"fcvt_to_sint_negative_overflow","","Create an `Ieee64` number representing the greatest…",56,[[],["ieee64",3]]],[11,"neg","","Return self negated.",56,[[],["ieee64",3]]],[11,"with_float","","Create a new `Ieee64` representing the number `x`.",56,[[],["ieee64",3]]],[11,"bits","","Get the bitwise representation.",56,[[]]],[11,"is_nan","","Check if the value is a NaN. For [Ieee64], this means…",56,[[]]],[11,"new","","Create a new `Imm64` representing the signed number `x`.",57,[[],["imm64",3]]],[11,"wrapping_neg","","Return self negated.",57,[[],["imm64",3]]],[11,"bits","","Return bits of this immediate.",57,[[]]],[11,"sign_extend_from_width","","Sign extend this immediate as if it were a signed integer…",57,[[]]],[11,"new","","Create a new `Uimm64` representing the unsigned number `x`.",58,[[],["uimm64",3]]],[11,"wrapping_neg","","Return self negated.",58,[[],["uimm64",3]]],[11,"lane_type","","Get the lane type of this SIMD vector type.",59,[[],["type",3]]],[11,"lane_of","","The type transformation that returns the lane type of a…",59,[[],["type",3]]],[11,"log2_lane_bits","","Get log_2 of the number of bits in a lane.",59,[[]]],[11,"lane_bits","","Get the number of bits in a lane.",59,[[]]],[11,"int","","Get an integer type with the requested number of bits.",59,[[],[["type",3],["option",4]]]],[11,"as_bool_pedantic","","Get a type with the same number of lanes as this type, but…",59,[[],["type",3]]],[11,"as_bool","","Get a type with the same number of lanes as this type, but…",59,[[],["type",3]]],[11,"half_width","","Get a type with the same number of lanes as this type, but…",59,[[],[["type",3],["option",4]]]],[11,"double_width","","Get a type with the same number of lanes as this type, but…",59,[[],[["type",3],["option",4]]]],[11,"is_invalid","","Is this the INVALID type?",59,[[]]],[11,"is_special","","Is this a special type?",59,[[]]],[11,"is_lane","","Is this a lane type?",59,[[]]],[11,"is_vector","","Is this a SIMD vector type?",59,[[]]],[11,"is_bool","","Is this a scalar boolean type?",59,[[]]],[11,"is_int","","Is this a scalar integer type?",59,[[]]],[11,"is_float","","Is this a scalar floating point type?",59,[[]]],[11,"is_flags","","Is this a CPU flags type?",59,[[]]],[11,"is_ref","","Is this a ref type?",59,[[]]],[11,"log2_lane_count","","Get log_2 of the number of lanes in this SIMD vector type.",59,[[]]],[11,"lane_count","","Get the number of lanes in this SIMD vector type.",59,[[]]],[11,"bits","","Get the total number of bits used to represent this type.",59,[[]]],[11,"bytes","","Get the number of bytes used to store this type in memory.",59,[[]]],[11,"by","","Get a SIMD vector type with `n` times more lanes than this…",59,[[],[["type",3],["option",4]]]],[11,"half_vector","","Get a SIMD vector with half the number of lanes.",59,[[],[["type",3],["option",4]]]],[11,"split_lanes","","Split the lane width in half and double the number of…",59,[[],[["type",3],["option",4]]]],[11,"merge_lanes","","Merge lanes to half the number of lanes and double the…",59,[[],[["type",3],["option",4]]]],[11,"index","","Index of this type, for use with hash tables etc.",59,[[]]],[11,"wider_or_equal","","True iff:",59,[[["type",3]]]],[11,"triple_pointer_type","","Return the pointer type for the given target triple.",59,[[["triple",3]],["type",3]]],[11,"new","","Create a parameter with default flags.",3,[[["type",3]],["abiparam",3]]],[11,"special","","Create a special-purpose parameter that is not (yet) bound…",3,[[["type",3],["argumentpurpose",4]],["abiparam",3]]],[11,"special_reg","","Create a parameter for a special-purpose register.",3,[[["type",3],["argumentpurpose",4]],["abiparam",3]]],[11,"uext","","Convert `self` to a parameter with the `uext` flag set.",3,[[],["abiparam",3]]],[11,"sext","","Convert `self` to a parameter type with the `sext` flag set.",3,[[],["abiparam",3]]],[11,"display","","Return an object that can display `self` with correct…",3,[[],["displayabiparam",3]]],[11,"with_number","","Create a new block reference from its number. This…",60,[[],[["option",4],["block",3]]]],[11,"from_u32","","Create a new instance from a `u32`.",60,[[],["block",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",60,[[]]],[11,"reloc_distance","","Return an estimate of the distance to the referred-to…",4,[[],["relocdistance",4]]],[11,"testcase","","Creates a new external name from a sequence of bytes.…",5,[[],["externalname",4]]],[11,"user","","Create a new external name from user-provided integer…",5,[[],["externalname",4]]],[11,"symbol_name","","Assume that `self` is an `GlobalValueData::Symbol` and…",8,[[],["externalname",4]]],[11,"global_type","","Return the type of this global.",8,[[["targetisa",8]],["type",3]]],[11,"maybe_reloc_distance","","If this global references a symbol, return an estimate of…",8,[[],[["relocdistance",4],["option",4]]]],[11,"new","","Create a new empty jump table.",61,[[],["jumptabledata",3]]],[11,"with_capacity","","Create a new empty jump table with the specified capacity.",61,[[],["jumptabledata",3]]],[11,"len","","Get the number of table entries.",61,[[]]],[11,"push_entry","","Append a table entry.",61,[[["block",3]]]],[11,"branches_to","","Checks if any of the entries branch to `block`.",61,[[["block",3]]]],[11,"as_slice","","Access the whole table as a slice.",61,[[]]],[11,"as_mut_slice","","Access the whole table as a mutable slice.",61,[[]]],[11,"iter","","Returns an iterator over the table.",61,[[],[["iter",3],["block",3]]]],[11,"iter_mut","","Returns an iterator that allows modifying each value.",61,[[],[["itermut",3],["block",3]]]],[11,"new","","Create a new empty set of flags.",62,[[],["memflags",3]]],[11,"trusted","","Create a set of flags representing an access from a…",62,[[],["memflags",3]]],[11,"set_by_name","","Set a flag bit by name.",62,[[]]],[11,"endianness","","Return endianness of the memory access. This will return…",62,[[["endianness",4]],["endianness",4]]],[11,"set_endianness","","Set endianness of the memory access.",62,[[["endianness",4]]]],[11,"notrap","","Test if the `notrap` flag is set.",62,[[]]],[11,"set_notrap","","Set the `notrap` flag.",62,[[]]],[11,"aligned","","Test if the `aligned` flag is set.",62,[[]]],[11,"set_aligned","","Set the `aligned` flag.",62,[[]]],[11,"readonly","","Test if the `readonly` flag is set.",62,[[]]],[11,"set_readonly","","Set the `readonly` flag.",62,[[]]],[11,"new","","Create a new blank signature.",13,[[["callconv",4]],["signature",3]]],[11,"clear","","Clear the signature so it is identical to a fresh one…",13,[[["callconv",4]]]],[11,"display","","Return an object that can display `self` with correct…",13,[[],["displaysignature",3]]],[11,"special_param_index","","Find the index of a presumed unique special-purpose…",13,[[["argumentpurpose",4]],["option",4]]],[11,"special_return_index","","Find the index of a presumed unique special-purpose…",13,[[["argumentpurpose",4]],["option",4]]],[11,"uses_special_param","","Does this signature have a parameter whose…",13,[[["argumentpurpose",4]]]],[11,"uses_special_return","","Does this signature have a return whose `ArgumentPurpose`…",13,[[["argumentpurpose",4]]]],[11,"num_special_params","","How many special parameters does this function have?",13,[[]]],[11,"num_special_returns","","How many special returns does this function have?",13,[[]]],[11,"uses_struct_return_param","","Does this signature take an struct return pointer parameter?",13,[[]]],[11,"is_multi_return","","Does this return more than one normal value? (Pre-struct…",13,[[]]],[11,"new","","Create a stack slot with the specified byte size.",14,[[["stackslotkind",4]],["stackslotdata",3]]],[11,"alignment","","Get the alignment in bytes of this stack slot given the…",14,[[]]],[11,"with_number","","Create a value from its number representation. This is the…",63,[[],[["value",3],["option",4]]]],[11,"from_u32","","Create a new instance from a `u32`.",63,[[],["value",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",63,[[]]],[11,"to_fde","cranelift::prelude::isa::unwind::systemv","Converts the unwind information into a…",64,[[["address",4]],["framedescriptionentry",3]]],[11,"emit_size","cranelift::prelude::isa::unwind::winx64","Gets the emit size of the unwind information, in bytes.",65,[[]]],[11,"emit","","Emits the unwind information into the given mutable byte…",65,[[]]],[11,"intersect_index","cranelift::prelude::isa::registers","Get the register class index corresponding to the…",27,[[["regclassdata",3]],[["option",4],["regclassindex",3]]]],[11,"intersect","","Get the intersection of `self` and `other`.",27,[[["regclassdata",3]],[["regclassdata",3],["option",4]]]],[11,"has_subclass","","Returns true if `other` is a subclass of this register…",27,[[]]],[11,"toprc","","Get the top-level register class containing this class.",27,[[],["regclassdata",3]]],[11,"unit","","Get a specific register unit in this class.",27,[[]]],[11,"contains","","Does this register class contain `regunit`?",27,[[]]],[11,"is_pinned_reg","","If the pinned register is used, is the given regunit the…",27,[[]]],[11,"index_of","","Calculate the index of the register inside the class.",27,[[]]],[11,"bank_containing_regunit","cranelift::prelude::isa","Get the register bank holding `regunit`.",28,[[],[["option",4],["regbank",3]]]],[11,"parse_regunit","","Try to parse a regunit name. The name is not expected to…",28,[[],["option",4]]],[11,"display_regunit","","Make a temporary object that can display a register unit.",28,[[],["displayregunit",3]]],[11,"rc","","Get the register class corresponding to `idx`.",28,[[["regclassindex",3]],["regclassdata",3]]],[11,"toprc","","Get the top-level register class containing the `idx` class.",28,[[["regclassindex",3]],["regclassdata",3]]],[11,"finish","","Combine the ISA-specific settings with the provided…",68,[[["flags",3]],[["targetisa",8],["global",3],["box",3]]]],[11,"pointer_type","","Get the pointer type of this target.",31,[[],["type",3]]],[11,"pointer_bits","","Get the width of pointers on this target, in units of bits.",31,[[]]],[11,"pointer_bytes","","Get the width of pointers on this target, in units of bytes.",31,[[]]],[11,"triple_default","","Return the default calling convention for the given target…",33,[[["triple",3]],["callconv",4]]],[11,"for_libcall","","Returns the calling convention used for libcalls according…",33,[[["callconv",4],["flags",3]],["callconv",4]]],[11,"extends_windows_fastcall","","Is the calling convention extending the Windows Fastcall…",33,[[]]],[11,"extends_baldrdash","","Is the calling convention extending the Baldrdash ABI?",33,[[]]],[11,"contains","","Determine if this branch range can represent the range…",34,[[]]],[11,"satisfied","","Check if this operand constraint is satisfied by the given…",36,[[["valueloc",4]]]],[11,"satisfied","","Check that these constraints are satisfied by the operands…",37,[[["regdiversions",3],["function",3],["inst",3]]]],[11,"new","","Creates a new instance of `Encodings`.",69,[[["predicateview",3],["instructiondata",4],["function",3]],["encodings",3]]],[11,"legalize","","Get the legalization action that caused the enumeration of…",69,[[]]],[11,"operand_constraints","","Get the value operand constraints for `enc` if it is a…",38,[[["encoding",3]],[["option",4],["recipeconstraints",3]]]],[11,"display","","Create an object that can display an ISA-dependent…",38,[[["encoding",3]],["displayencoding",3]]],[11,"byte_size","","Get the size in bytes of `inst`, if it were encoded with…",38,[[["function",3],["regdiversions",3],["encoding",3],["inst",3]]]],[11,"branch_range","","Get the branch range that is supported by `enc`, if any.",38,[[["encoding",3]],[["branchrange",3],["option",4]]]],[11,"new","","Create a new `Encoding` containing `(recipe, bits)`.",70,[[],["encoding",3]]],[11,"recipe","","Get the recipe number in this encoding.",70,[[]]],[11,"bits","","Get the recipe-specific encoding bits.",70,[[]]],[11,"is_legal","","Is this a legal encoding, or the default placeholder?",70,[[]]],[11,"contains","","Check if this mask contains the `base` variant.",40,[[["stackbase",4]]]],[11,"masked","","Get a reference to the stack slot `ss` using one of the…",41,[[["stackslots",3],["stackbasemask",3],["stackslot",3]],[["option",4],["stackref",3]]]],[11,"sp","","Get a reference to `ss` using the stack pointer as a base.",41,[[["stackslots",3],["stackslot",3]],["stackref",3]]],[11,"new","cranelift::prelude::settings","Create a new builder with defaults and names from the…",71,[[["template",3]],["builder",3]]],[11,"state_for","","Extract contents of builder once everything is configured.",71,[[],[["global",3],["box",3]]]],[11,"new","","Create a new view of a precomputed predicate vector.",72,[[],["predicateview",3]]],[11,"test","","Check a numbered predicate.",72,[[]]],[11,"enums","cranelift::prelude::settings::detail","Get enumerators corresponding to a `Details::Enum`.",44,[[]]],[11,"format_toml_value","","Format a setting value as a TOML string. This is mostly…",44,[[["formatter",3],["detail",4]],[["result",4],["error",3]]]],[11,"is_preset","","Check if a detail is a Detail::Preset. Useful because the…",46,[[]]],[11,"new","cranelift::prelude::settings","Create flags shared settings group.",73,[[["builder",3]],["flags",3]]],[11,"predicate_view","","Get a view of the boolean predicates.",73,[[],["predicateview",3]]],[11,"regalloc","","Register allocator to use with the MachInst backend.",73,[[],["regalloc",4]]],[11,"opt_level","","Optimization level:",73,[[],["optlevel",4]]],[11,"tls_model","","Defines the model used to perform TLS accesses.",73,[[],["tlsmodel",4]]],[11,"libcall_call_conv","","Defines the calling convention to use for LibCalls call…",73,[[],["libcallcallconv",4]]],[11,"baldrdash_prologue_words","","Number of pointer-sized words pushed by the baldrdash…",73,[[]]],[11,"probestack_size_log2","","The log2 of the size of the stack guard region.",73,[[]]],[11,"enable_verifier","","Run the Cranelift IR verifier at strategic times during…",73,[[]]],[11,"is_pic","","Enable Position-Independent Code generation",73,[[]]],[11,"use_colocated_libcalls","","Use colocated libcalls.",73,[[]]],[11,"avoid_div_traps","","Generate explicit checks around native division…",73,[[]]],[11,"enable_float","","Enable the use of floating-point instructions",73,[[]]],[11,"enable_nan_canonicalization","","Enable NaN canonicalization",73,[[]]],[11,"enable_pinned_reg","","Enable the use of the pinned register.",73,[[]]],[11,"use_pinned_reg_as_heap_base","","Use the pinned register as the heap base.",73,[[]]],[11,"enable_simd","","Enable the use of SIMD instructions.",73,[[]]],[11,"enable_atomics","","Enable the use of atomic instructions",73,[[]]],[11,"enable_safepoints","","Enable safepoint instruction insertions.",73,[[]]],[11,"emit_all_ones_funcaddrs","","Emit not-yet-relocated function addresses as all-ones bit…",73,[[]]],[11,"enable_probestack","","Enable the use of stack probes, for calling conventions…",73,[[]]],[11,"probestack_func_adjusts_sp","","Set this to true of the stack probe function modifies the…",73,[[]]],[11,"enable_jump_tables","","Enable the use of jump tables in generated machine code.",73,[[]]],[11,"enable_heap_access_spectre_mitigation","","Enable Spectre mitigation on heap bounds checks.",73,[[]]],[11,"new","cranelift::prelude","Creates a new FunctionBuilder structure that will operate…",54,[[["function",3],["functionbuildercontext",3]],["functionbuilder",3]]],[11,"current_block","","Get the block that this builder is currently at.",54,[[],[["option",4],["block",3]]]],[11,"set_srcloc","","Set the source location that should be assigned to all new…",54,[[["sourceloc",3]]]],[11,"create_block","","Creates a new `Block` and returns its reference.",54,[[],["block",3]]],[11,"insert_block_after","","Insert `block` in the layout after the existing block…",54,[[["block",3]]]],[11,"switch_to_block","","After the call to this function, new instructions will be…",54,[[["block",3]]]],[11,"seal_block","","Declares that all the predecessors of this block are known.",54,[[["block",3]]]],[11,"seal_all_blocks","","Effectively calls seal_block on all unsealed blocks in the…",54,[[]]],[11,"declare_var","","In order to use a variable in a `use_var`, you need to…",54,[[["type",3],["variable",3]]]],[11,"use_var","","Returns the Cranelift IR value corresponding to the…",54,[[["variable",3]],["value",3]]],[11,"def_var","","Register a new definition of a user variable. The type of…",54,[[["value",3],["variable",3]]]],[11,"set_val_label","","Set label for Value",54,[[["value",3],["valuelabel",3]]]],[11,"create_jump_table","","Creates a jump table in the function, to be used by…",54,[[["jumptabledata",3]],["jumptable",3]]],[11,"create_stack_slot","","Creates a stack slot in the function, to be used by…",54,[[["stackslotdata",3]],["stackslot",3]]],[11,"import_signature","","Adds a signature which can later be used to declare an…",54,[[["signature",3]],["sigref",3]]],[11,"import_function","","Declare an external function import.",54,[[["extfuncdata",3]],["funcref",3]]],[11,"create_global_value","","Declares a global value accessible to the function.",54,[[["globalvaluedata",4]],["globalvalue",3]]],[11,"create_heap","","Declares a heap accessible to the function.",54,[[["heapdata",3]],["heap",3]]],[11,"ins","","Returns an object with the `InstBuilder` trait that allows…",54,[[],["funcinstbuilder",3]]],[11,"ensure_inserted_block","","Make sure that the current block is inserted in the layout.",54,[[]]],[11,"cursor","","Returns a `FuncCursor` pointed at the current position…",54,[[],["funccursor",3]]],[11,"append_block_params_for_function_params","","Append parameters to the given `Block` corresponding to…",54,[[["block",3]]]],[11,"append_block_params_for_function_returns","","Append parameters to the given `Block` corresponding to…",54,[[["block",3]]]],[11,"finalize","","Declare that translation of the current function is…",54,[[]]],[11,"block_params","","Retrieves all the parameters for a `Block` currently…",54,[[["block",3]]]],[11,"signature","","Retrieves the signature with reference `sigref` previously…",54,[[["sigref",3]],[["signature",3],["option",4]]]],[11,"append_block_param","","Creates a parameter for a specific `Block` by appending it…",54,[[["type",3],["block",3]],["value",3]]],[11,"inst_results","","Returns the result values of an instruction.",54,[[["inst",3]]]],[11,"change_jump_destination","","Changes the destination of a jump instruction after…",54,[[["block",3],["inst",3]]]],[11,"is_unreachable","","Returns `true` if and only if the current `Block` is…",54,[[]]],[11,"is_pristine","","Returns `true` if and only if no instructions have been…",54,[[]]],[11,"is_filled","","Returns `true` if and only if a terminator instruction has…",54,[[]]],[11,"display","","Returns a displayable object for the function as it is.",54,[[],["displayfunction",3]]],[11,"call_memcpy","","Calls libc.memcpy",54,[[["value",3],["targetfrontendconfig",3]]]],[11,"emit_small_memory_copy","","Optimised memcpy or memmove for small copies.",54,[[["value",3],["targetfrontendconfig",3]]]],[11,"call_memset","","Calls libc.memset",54,[[["value",3],["targetfrontendconfig",3]]]],[11,"emit_small_memset","","Calls libc.memset",54,[[["value",3],["targetfrontendconfig",3]]]],[11,"call_memmove","","Calls libc.memmove",54,[[["value",3],["targetfrontendconfig",3]]]],[11,"new","","Creates a FunctionBuilderContext structure. The structure…",74,[[],["functionbuildercontext",3]]],[11,"with_u32","","Create a new Variable with the given index.",75,[[],["variable",3]]]],"p":[[8,"EntityRef"],[4,"FloatCC"],[4,"IntCC"],[3,"AbiParam"],[3,"ExtFuncData"],[4,"ExternalName"],[13,"User"],[13,"TestCase"],[4,"GlobalValueData"],[13,"Load"],[13,"IAddImm"],[13,"Symbol"],[8,"InstBuilder"],[3,"Signature"],[3,"StackSlotData"],[4,"StackSlotKind"],[4,"TrapCode"],[4,"RegisterMappingError"],[4,"UnwindInfo"],[4,"UnwindCode"],[13,"SaveRegister"],[13,"RestoreRegister"],[13,"StackAlloc"],[13,"StackDealloc"],[13,"SetFramePointer"],[3,"UnwindInfo"],[3,"RegBank"],[3,"RegClassData"],[3,"RegInfo"],[4,"BackendVariant"],[4,"LookupError"],[3,"TargetFrontendConfig"],[8,"TargetIsa"],[4,"CallConv"],[3,"BranchRange"],[4,"ConstraintKind"],[3,"OperandConstraint"],[3,"RecipeConstraints"],[3,"EncInfo"],[4,"StackBase"],[3,"StackBaseMask"],[3,"StackRef"],[8,"Configurable"],[4,"SetError"],[3,"Template"],[3,"Descriptor"],[4,"Detail"],[13,"Bool"],[13,"Enum"],[4,"Regalloc"],[4,"OptLevel"],[4,"TlsModel"],[4,"LibcallCallConv"],[3,"FlagsOrIsa"],[3,"FunctionBuilder"],[3,"Ieee32"],[3,"Ieee64"],[3,"Imm64"],[3,"Uimm64"],[3,"Type"],[3,"Block"],[3,"JumpTableData"],[3,"MemFlags"],[3,"Value"],[3,"UnwindInfo"],[3,"UnwindInfo"],[3,"RegClassIndex"],[3,"DisplayRegUnit"],[3,"Builder"],[3,"Encodings"],[3,"Encoding"],[3,"Builder"],[3,"PredicateView"],[3,"Flags"],[3,"FunctionBuilderContext"],[3,"Variable"]]},\
"cranelift_bforest":{"doc":"A forest of B+-trees.","i":[[3,"Map","cranelift_bforest","B-tree mapping from `K` to `V`.",null,null],[3,"MapCursor","","A position in a `Map` used to navigate and modify the…",null,null],[3,"MapForest","","Memory pool for a forest of `Map` instances.",null,null],[3,"MapIter","","An iterator visiting the key-value pairs of a `Map`.",null,null],[3,"Set","","B-tree representing an ordered set of `K`s using `C` for…",null,null],[3,"SetCursor","","A position in a `Set` used to navigate and modify the…",null,null],[3,"SetForest","","Memory pool for a forest of `Set` instances.",null,null],[3,"SetIter","","An iterator visiting the elements of a `Set`.",null,null],[8,"Comparator","","Key comparator.",null,null],[10,"cmp","","Compare keys `a` and `b`.",0,[[],["ordering",4]]],[11,"search","","Binary search for `k` in an ordered slice.",0,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"into_iter","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"into_iter","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"next","","",4,[[],["option",4]]],[11,"next","","",8,[[],["option",4]]],[11,"clone","","",2,[[],["map",3]]],[11,"clone","","",6,[[],["set",3]]],[11,"default","","",2,[[]]],[11,"default","","",6,[[]]],[11,"new","","Create a new empty forest.",1,[[]]],[11,"clear","","Clear all maps in the forest.",1,[[]]],[11,"new","","Make an empty map.",2,[[]]],[11,"is_empty","","Is this an empty map?",2,[[]]],[11,"get","","Get the value stored for `key`.",2,[[["mapforest",3]],["option",4]]],[11,"get_or_less","","Look up the value stored for `key`.",2,[[["mapforest",3]],["option",4]]],[11,"insert","","Insert `key, value` into the map and return the old value…",2,[[["mapforest",3]],["option",4]]],[11,"remove","","Remove `key` from the map and return the removed value for…",2,[[["mapforest",3]],["option",4]]],[11,"clear","","Remove all entries.",2,[[["mapforest",3]]]],[11,"retain","","Retains only the elements specified by the predicate.",2,[[["mapforest",3]]]],[11,"cursor","","Create a cursor for navigating this map. The cursor is…",2,[[["mapforest",3]],[["comparator",8],["mapcursor",3]]]],[11,"iter","","Create an iterator traversing this map. The iterator type…",2,[[["mapforest",3]],["mapiter",3]]],[11,"is_empty","","Is this cursor pointing to an empty map?",3,[[]]],[11,"next","","Move cursor to the next key-value pair and return it.",3,[[],["option",4]]],[11,"prev","","Move cursor to the previous key-value pair and return it.",3,[[],["option",4]]],[11,"key","","Get the current key, or `None` if the cursor is at the end.",3,[[],["option",4]]],[11,"value","","Get the current value, or `None` if the cursor is at the…",3,[[],["option",4]]],[11,"value_mut","","Get a mutable reference to the current value, or `None` if…",3,[[],["option",4]]],[11,"goto","","Move this cursor to `key`.",3,[[],["option",4]]],[11,"goto_first","","Move this cursor to the first element.",3,[[],["option",4]]],[11,"insert","","Insert `(key, value))` into the map and leave the cursor…",3,[[],["option",4]]],[11,"remove","","Remove the current entry (if any) and return the mapped…",3,[[],["option",4]]],[11,"new","","Create a new empty forest.",5,[[]]],[11,"clear","","Clear all sets in the forest.",5,[[]]],[11,"new","","Make an empty set.",6,[[]]],[11,"is_empty","","Is this an empty set?",6,[[]]],[11,"contains","","Does the set contain `key`?.",6,[[["setforest",3]]]],[11,"insert","","Try to insert `key` into the set.",6,[[["setforest",3]]]],[11,"remove","","Remove `key` from the set and return true.",6,[[["setforest",3]]]],[11,"clear","","Remove all entries.",6,[[["setforest",3]]]],[11,"retain","","Retains only the elements specified by the predicate.",6,[[["setforest",3]]]],[11,"cursor","","Create a cursor for navigating this set. The cursor is…",6,[[["setforest",3]],[["comparator",8],["setcursor",3]]]],[11,"iter","","Create an iterator traversing this set. The iterator type…",6,[[["setforest",3]],["setiter",3]]],[11,"is_empty","","Is this cursor pointing to an empty set?",7,[[]]],[11,"next","","Move cursor to the next element and return it.",7,[[],["option",4]]],[11,"prev","","Move cursor to the previous element and return it.",7,[[],["option",4]]],[11,"elem","","Get the current element, or `None` if the cursor is at the…",7,[[],["option",4]]],[11,"goto","","Move this cursor to `elem`.",7,[[]]],[11,"goto_first","","Move this cursor to the first element.",7,[[],["option",4]]],[11,"insert","","Try to insert `elem` into the set and leave the cursor at…",7,[[]]],[11,"remove","","Remove the current element (if any) and return it. This…",7,[[],["option",4]]]],"p":[[8,"Comparator"],[3,"MapForest"],[3,"Map"],[3,"MapCursor"],[3,"MapIter"],[3,"SetForest"],[3,"Set"],[3,"SetCursor"],[3,"SetIter"]]},\
"cranelift_codegen":{"doc":"Cranelift code generation library.","i":[[0,"packed_option","cranelift_codegen","Compact representation of `Option<T>` for types with a…",null,null],[8,"ReservedValue","cranelift_codegen::packed_option","Types that have a reserved value which can\'t be created…",null,null],[10,"reserved_value","","Create an instance of the reserved value.",0,[[]]],[10,"is_reserved_value","","Checks whether value is the reserved one.",0,[[]]],[3,"PackedOption","","Packed representation of `Option<T>`.",null,null],[0,"binemit","cranelift_codegen","Binary machine code emission.",null,null],[3,"MemoryCodeSink","cranelift_codegen::binemit","A `CodeSink` that writes binary machine code directly into…",null,null],[12,"info","","Information about the generated code and read-only data.",1,null],[3,"NullRelocSink","","A `RelocSink` implementation that does nothing, which is…",null,null],[3,"NullStackMapSink","","Placeholder StackMapSink that does nothing.",null,null],[3,"NullTrapSink","","A `TrapSink` implementation that does nothing, which is…",null,null],[8,"RelocSink","","A trait for receiving relocations for code that is emitted…",null,null],[10,"reloc_external","","Add a relocation referencing an external symbol at the…",2,[[["reloc",4],["sourceloc",3],["codeoffset",6],["addend",6],["externalname",4]]]],[10,"reloc_constant","","Add a relocation referencing a constant.",2,[[["codeoffset",6],["reloc",4],["constantoffset",6]]]],[10,"reloc_jt","","Add a relocation referencing a jump table.",2,[[["codeoffset",6],["reloc",4],["jumptable",3]]]],[11,"add_call_site","","Track a call site whose return address is the given…",2,[[["codeoffset",6],["sourceloc",3],["opcode",4]]]],[8,"StackMapSink","","A trait for emitting stack maps.",null,null],[10,"add_stack_map","","Output a bitmap of the stack representing the live…",3,[[["codeoffset",6],["stackmap",3]]]],[8,"TrapSink","","A trait for receiving trap codes and offsets.",null,null],[10,"trap","","Add trap information for a specific offset.",4,[[["codeoffset",6],["trapcode",4],["sourceloc",3]]]],[5,"relax_branches","","Relax branches and compute the final layout of block…",null,[[["controlflowgraph",3],["dominatortree",3],["function",3],["targetisa",8]],[["codegenresult",6],["codeinfo",3]]]],[5,"shrink_instructions","","Pick the smallest valid encodings for instructions.",null,[[["function",3],["targetisa",8]]]],[3,"StackMap","","Stack maps record which words in a stack frame contain…",null,null],[3,"RegDiversions","","Keep track of diversions in a block.",null,null],[6,"CodeOffset","","Offset in bytes from the beginning of the function.",null,null],[6,"Addend","","Addend to add to the symbol value.",null,null],[4,"Reloc","","Relocation kinds for every ISA",null,null],[13,"Abs4","","absolute 4-byte",5,null],[13,"Abs8","","absolute 8-byte",5,null],[13,"X86PCRel4","","x86 PC-relative 4-byte",5,null],[13,"X86PCRelRodata4","","x86 PC-relative 4-byte offset to trailing rodata",5,null],[13,"X86CallPCRel4","","x86 call to PC-relative 4-byte",5,null],[13,"X86CallPLTRel4","","x86 call to PLT-relative 4-byte",5,null],[13,"X86GOTPCRel4","","x86 GOT PC-relative 4-byte",5,null],[13,"Arm32Call","","Arm32 call target",5,null],[13,"Arm64Call","","Arm64 call target. Encoded as bottom 26 bits of…",5,null],[13,"RiscvCall","","RISC-V call target",5,null],[13,"ElfX86_64TlsGd","","Elf x86_64 32 bit signed PC relative offset to two GOT…",5,null],[13,"MachOX86_64Tlv","","Mach-O x86_64 32 bit signed PC relative offset to a…",5,null],[3,"CodeInfo","","Container for information about a vector of compiled code…",null,null],[12,"code_size","","Number of bytes of machine code (the code starts at offset…",6,null],[12,"jumptables_size","","Number of bytes of jumptables.",6,null],[12,"rodata_size","","Number of bytes of rodata.",6,null],[12,"total_size","","Number of bytes in total.",6,null],[11,"jumptables","","Offset of any relocatable jump tables, or equal to rodata…",6,[[],["codeoffset",6]]],[11,"rodata","","Offset of any copyable read-only data, or equal to…",6,[[],["codeoffset",6]]],[8,"CodeSink","","Abstract interface for adding bytes to the code segment.",null,null],[10,"offset","","Get the current position.",7,[[],["codeoffset",6]]],[10,"put1","","Add 1 byte to the code section.",7,[[]]],[10,"put2","","Add 2 bytes to the code section.",7,[[]]],[10,"put4","","Add 4 bytes to the code section.",7,[[]]],[10,"put8","","Add 8 bytes to the code section.",7,[[]]],[10,"reloc_external","","Add a relocation referencing an external symbol plus the…",7,[[["reloc",4],["sourceloc",3],["addend",6],["externalname",4]]]],[10,"reloc_constant","","Add a relocation referencing a constant.",7,[[["constantoffset",6],["reloc",4]]]],[10,"reloc_jt","","Add a relocation referencing a jump table.",7,[[["reloc",4],["jumptable",3]]]],[10,"trap","","Add trap information for the current offset.",7,[[["trapcode",4],["sourceloc",3]]]],[10,"begin_jumptables","","Machine code output is complete, jump table data may follow.",7,[[]]],[10,"begin_rodata","","Jump table output is complete, raw read-only data may…",7,[[]]],[10,"end_codegen","","Read-only data output is complete, we\'re done.",7,[[]]],[10,"add_stack_map","","Add a stack map at the current code offset.",7,[[["function",3],["targetisa",8]]]],[11,"add_call_site","","Add a call site for a call with the given opcode,…",7,[[["sourceloc",3],["opcode",4]]]],[5,"bad_encoding","","Report a bad encoding error.",null,[[["function",3],["inst",3]]]],[5,"emit_function","","Emit a function to `sink`, given an instruction emitter…",null,[[["function",3],["targetisa",8]]]],[0,"cfg_printer","cranelift_codegen","The `CFGPrinter` utility.",null,null],[3,"CFGPrinter","cranelift_codegen::cfg_printer","A utility for pretty-printing the CFG of a `Function`.",null,null],[11,"new","","Create a new CFGPrinter.",8,[[["function",3]]]],[11,"write","","Write the CFG for this function to `w`.",8,[[["write",8]],["result",6]]],[0,"cursor","cranelift_codegen","Cursor library.",null,null],[4,"CursorPosition","cranelift_codegen::cursor","The possible positions of a cursor.",null,null],[13,"Nowhere","","Cursor is not pointing anywhere. No instructions can be…",9,null],[13,"At","","Cursor is pointing at an existing instruction. New…",9,null],[13,"Before","","Cursor is before the beginning of a block. No instructions…",9,null],[13,"After","","Cursor is pointing after the end of a block. New…",9,null],[8,"Cursor","","All cursor types implement the `Cursor` which provides…",null,null],[10,"position","","Get the current cursor position.",10,[[],["cursorposition",4]]],[10,"set_position","","Set the current position.",10,[[["cursorposition",4]]]],[10,"srcloc","","Get the source location that should be assigned to new…",10,[[],["sourceloc",3]]],[10,"set_srcloc","","Set the source location that should be assigned to new…",10,[[["sourceloc",3]]]],[10,"layout","","Borrow a reference to the function layout that this cursor…",10,[[],["layout",3]]],[10,"layout_mut","","Borrow a mutable reference to the function layout that…",10,[[],["layout",3]]],[11,"with_srcloc","","Exchange this cursor for one with a set source location.",10,[[["sourceloc",3]]]],[11,"at_position","","Rebuild this cursor positioned at `pos`.",10,[[["cursorposition",4]]]],[11,"at_inst","","Rebuild this cursor positioned at `inst`.",10,[[["inst",3]]]],[11,"at_first_insertion_point","","Rebuild this cursor positioned at the first insertion…",10,[[["block",3]]]],[11,"at_first_inst","","Rebuild this cursor positioned at the first instruction in…",10,[[["block",3]]]],[11,"at_last_inst","","Rebuild this cursor positioned at the last instruction in…",10,[[["block",3]]]],[11,"after_inst","","Rebuild this cursor positioned after `inst`.",10,[[["inst",3]]]],[11,"at_top","","Rebuild this cursor positioned at the top of `block`.",10,[[["block",3]]]],[11,"at_bottom","","Rebuild this cursor positioned at the bottom of `block`.",10,[[["block",3]]]],[11,"current_block","","Get the block corresponding to the current position.",10,[[],[["option",4],["block",3]]]],[11,"current_inst","","Get the instruction corresponding to the current position,…",10,[[],[["option",4],["inst",3]]]],[11,"goto_after_inst","","Go to the position after a specific instruction, which…",10,[[["inst",3]]]],[11,"goto_inst","","Go to a specific instruction which must be inserted in the…",10,[[["inst",3]]]],[11,"goto_first_insertion_point","","Go to the position for inserting instructions at the…",10,[[["block",3]]]],[11,"goto_first_inst","","Go to the first instruction in `block`.",10,[[["block",3]]]],[11,"goto_last_inst","","Go to the last instruction in `block`.",10,[[["block",3]]]],[11,"goto_top","","Go to the top of `block` which must be inserted into the…",10,[[["block",3]]]],[11,"goto_bottom","","Go to the bottom of `block` which must be inserted into…",10,[[["block",3]]]],[11,"next_block","","Go to the top of the next block in layout order and return…",10,[[],[["option",4],["block",3]]]],[11,"prev_block","","Go to the bottom of the previous block in layout order and…",10,[[],[["option",4],["block",3]]]],[11,"next_inst","","Move to the next instruction in the same block and return…",10,[[],[["option",4],["inst",3]]]],[11,"prev_inst","","Move to the previous instruction in the same block and…",10,[[],[["option",4],["inst",3]]]],[11,"insert_inst","","Insert an instruction at the current position.",10,[[["inst",3]]]],[11,"remove_inst","","Remove the instruction under the cursor.",10,[[],["inst",3]]],[11,"remove_inst_and_step_back","","Remove the instruction under the cursor.",10,[[],["inst",3]]],[11,"insert_block","","Insert a block at the current position and switch to it.",10,[[["block",3]]]],[3,"FuncCursor","","Function cursor.",null,null],[12,"func","","The referenced function.",11,null],[11,"new","","Create a new `FuncCursor` pointing nowhere.",11,[[["function",3]]]],[11,"use_srcloc","","Use the source location of `inst` for future instructions.",11,[[["inst",3]]]],[11,"ins","","Create an instruction builder that inserts an instruction…",11,[[],[["funccursor",3],["insertbuilder",3]]]],[3,"EncCursor","","Encoding cursor.",null,null],[12,"func","","The referenced function.",12,null],[12,"isa","","The target ISA that will be used to encode instructions.",12,null],[11,"new","","Create a new `EncCursor` pointing nowhere.",12,[[["targetisa",8],["function",3]]]],[11,"use_srcloc","","Use the source location of `inst` for future instructions.",12,[[["inst",3]]]],[11,"ins","","Create an instruction builder that will insert an encoded…",12,[[],[["insertbuilder",3],["enccursor",3]]]],[11,"built_inst","","Get the last built instruction.",12,[[],["inst",3]]],[11,"display_inst","","Return an object that can display `inst`.",12,[[["inst",3]],["displayinst",3]]],[0,"data_value","cranelift_codegen","This module gives users to instantiate values that…",null,null],[4,"DataValue","cranelift_codegen::data_value","Represent a data value. Where Value is an SSA reference,…",null,null],[13,"B","","",13,null],[13,"I8","","",13,null],[13,"I16","","",13,null],[13,"I32","","",13,null],[13,"I64","","",13,null],[13,"U8","","",13,null],[13,"U16","","",13,null],[13,"U32","","",13,null],[13,"U64","","",13,null],[13,"F32","","",13,null],[13,"F64","","",13,null],[13,"V128","","",13,null],[11,"from_integer","","Try to cast an immediate integer (a wrapped `i64` on most…",13,[[["type",3]],[["result",4],["datavaluecastfailure",4],["datavalue",4]]]],[11,"ty","","Return the Cranelift IR [Type] for this [DataValue].",13,[[],["type",3]]],[11,"is_vector","","Return true if the value is a vector (i.e.…",13,[[]]],[11,"write_value_to","","Write a [DataValue] to a memory location.",13,[[]]],[11,"read_value_from","","Read a [DataValue] from a memory location using a given…",13,[[["type",3]]]],[4,"DataValueCastFailure","","Record failures to cast [DataValue].",null,null],[13,"TryInto","","",14,null],[13,"FromInteger","","",14,null],[3,"DisplayDataValues","","Helper structure for printing bracket-enclosed vectors of…",null,null],[12,"0","","",15,null],[5,"write_data_value_list","","Helper function for displaying `Vec<DataValue>`.",null,[[["formatter",3]],["result",6]]],[0,"dbg","cranelift_codegen","Debug tracing helpers.",null,null],[7,"LOG_FILENAME_PREFIX","cranelift_codegen::dbg","Prefix added to the log file names, just before the thread…",null,null],[3,"DisplayList","","Helper for printing lists.",null,null],[12,"0","","",16,null],[0,"dominator_tree","cranelift_codegen","A Dominator Tree represented as mappings of Blocks to…",null,null],[3,"DominatorTree","cranelift_codegen::dominator_tree","The dominator tree for a single function.",null,null],[11,"is_reachable","","Is `block` reachable from the entry block?",17,[[["block",3]]]],[11,"cfg_postorder","","Get the CFG post-order of blocks that was used to compute…",17,[[]]],[11,"idom","","Returns the immediate dominator of `block`.",17,[[["block",3]],[["option",4],["inst",3]]]],[11,"rpo_cmp","","Compare two program points relative to a reverse…",17,[[["layout",3]],["ordering",4]]],[11,"dominates","","Returns `true` if `a` dominates `b`.",17,[[["layout",3]]]],[11,"last_dominator","","Find the last instruction in `a` that dominates `b`. If no…",17,[[["block",3],["layout",3]],[["option",4],["inst",3]]]],[11,"common_dominator","","Compute the common dominator of two basic blocks.",17,[[["blockpredecessor",3],["layout",3]],["blockpredecessor",3]]],[11,"new","","Allocate a new blank dominator tree. Use `compute` to…",17,[[]]],[11,"with_function","","Allocate and compute a dominator tree.",17,[[["function",3],["controlflowgraph",3]]]],[11,"compute","","Reset and compute a CFG post-order and dominator tree.",17,[[["function",3],["controlflowgraph",3]]]],[11,"clear","","Clear the data structures used to represent the dominator…",17,[[]]],[11,"is_valid","","Check if the dominator tree is in a valid state.",17,[[]]],[3,"DominatorTreePreorder","","Optional pre-order information that can be computed for a…",null,null],[11,"new","","Create a new blank `DominatorTreePreorder`.",18,[[]]],[11,"compute","","Recompute this data structure to match `domtree`.",18,[[["layout",3],["dominatortree",3]]]],[3,"ChildIter","","An iterator that enumerates the direct children of a block…",null,null],[11,"children","","Get an iterator over the direct children of `block` in the…",18,[[["block",3]],["childiter",3]]],[11,"dominates","","Fast, constant time dominance check with block granularity.",18,[[["block",3]]]],[11,"pre_cmp_block","","Compare two blocks according to the dominator pre-order.",18,[[["block",3]],["ordering",4]]],[11,"pre_cmp","","Compare two program points according to the dominator tree…",18,[[["layout",3]],["ordering",4]]],[11,"pre_cmp_def","","Compare two value defs according to the dominator tree…",18,[[["value",3],["function",3]],["ordering",4]]],[0,"flowgraph","cranelift_codegen","A control flow graph represented as mappings of basic…",null,null],[3,"BlockPredecessor","cranelift_codegen::flowgraph","A basic block denoted by its enclosing Block and last…",null,null],[12,"block","","Enclosing Block key.",19,null],[12,"inst","","Last instruction in the basic block.",19,null],[11,"new","","Convenient method to construct new BlockPredecessor.",19,[[["block",3],["inst",3]]]],[3,"ControlFlowGraph","","The Control Flow Graph maintains a mapping of blocks to…",null,null],[11,"new","","Allocate a new blank control flow graph.",20,[[]]],[11,"clear","","Clear all data structures in this control flow graph.",20,[[]]],[11,"with_function","","Allocate and compute the control flow graph for `func`.",20,[[["function",3]]]],[11,"compute","","Compute the control flow graph of `func`.",20,[[["function",3]]]],[11,"recompute_block","","Recompute the control flow graph of `block`.",20,[[["block",3],["function",3]]]],[11,"pred_iter","","Get an iterator over the CFG predecessors to `block`.",20,[[["block",3]],["prediter",3]]],[11,"succ_iter","","Get an iterator over the CFG successors to `block`.",20,[[["block",3]],["succiter",6]]],[11,"is_valid","","Check if the CFG is in a valid state.",20,[[]]],[3,"PredIter","","An iterator over block predecessors. The iterator type is…",null,null],[6,"SuccIter","","An iterator over block successors. The iterator type is…",null,null],[0,"ir","cranelift_codegen","Representation of Cranelift IR functions.",null,null],[0,"condcodes","cranelift_codegen::ir","Condition codes for the Cranelift code generator.",null,null],[8,"CondCode","cranelift_codegen::ir::condcodes","Common traits of condition codes.",null,null],[10,"inverse","","Get the inverse condition code of `self`.",21,[[]]],[10,"reverse","","Get the reversed condition code for `self`.",21,[[]]],[4,"IntCC","","Condition code for comparing integers.",null,null],[13,"Equal","","`==`.",22,null],[13,"NotEqual","","`!=`.",22,null],[13,"SignedLessThan","","Signed `<`.",22,null],[13,"SignedGreaterThanOrEqual","","Signed `>=`.",22,null],[13,"SignedGreaterThan","","Signed `>`.",22,null],[13,"SignedLessThanOrEqual","","Signed `<=`.",22,null],[13,"UnsignedLessThan","","Unsigned `<`.",22,null],[13,"UnsignedGreaterThanOrEqual","","Unsigned `>=`.",22,null],[13,"UnsignedGreaterThan","","Unsigned `>`.",22,null],[13,"UnsignedLessThanOrEqual","","Unsigned `<=`.",22,null],[13,"Overflow","","Signed Overflow.",22,null],[13,"NotOverflow","","Signed No Overflow.",22,null],[4,"FloatCC","","Condition code for comparing floating point numbers.",null,null],[13,"Ordered","","EQ | LT | GT",23,null],[13,"Unordered","","UN",23,null],[13,"Equal","","EQ",23,null],[13,"NotEqual","","The C \'!=\' operator is the inverse of \'==\': `NotEqual`. UN…",23,null],[13,"OrderedNotEqual","","LT | GT",23,null],[13,"UnorderedOrEqual","","UN | EQ",23,null],[13,"LessThan","","LT",23,null],[13,"LessThanOrEqual","","LT | EQ",23,null],[13,"GreaterThan","","GT",23,null],[13,"GreaterThanOrEqual","","GT | EQ",23,null],[13,"UnorderedOrLessThan","","UN | LT",23,null],[13,"UnorderedOrLessThanOrEqual","","UN | LT | EQ",23,null],[13,"UnorderedOrGreaterThan","","UN | GT",23,null],[13,"UnorderedOrGreaterThanOrEqual","","UN | GT | EQ",23,null],[0,"constant","cranelift_codegen::ir","Constants",null,null],[3,"ConstantData","cranelift_codegen::ir::constant","This type describes the actual constant data. Note that…",null,null],[11,"len","","Return the number of bytes in the constant.",24,[[]]],[11,"is_empty","","Check if the constant contains any bytes.",24,[[]]],[11,"as_slice","","Return the data as a slice.",24,[[]]],[11,"into_vec","","Convert the data to a vector.",24,[[],["vec",3]]],[11,"iter","","Iterate over the constant\'s bytes.",24,[[],["iter",3]]],[11,"append","","Add new bytes to the constant data.",24,[[]]],[11,"expand_to","","Expand the size of the constant data to `expected_size`…",24,[[]]],[6,"ConstantOffset","","This type describes an offset in bytes within a constant…",null,null],[3,"ConstantPoolEntry","","Inner type for storing data and offset together in the…",null,null],[11,"len","","Return the size of the constant at this entry.",25,[[]]],[11,"set_offset","","Assign a new offset to the constant at this entry.",25,[[["constantoffset",6]]]],[3,"ConstantPool","","Maintains the mapping between a constant handle (i.e.…",null,null],[11,"new","","Create a new constant pool instance.",26,[[]]],[11,"clear","","Empty the constant pool of all data.",26,[[]]],[11,"insert","","Insert constant data into the pool, returning a handle for…",26,[[["constantdata",3]],["constant",3]]],[11,"get","","Retrieve the constant data given a handle.",26,[[["constant",3]],["constantdata",3]]],[11,"set","","Link a constant handle to its value. This does not…",26,[[["constantdata",3],["constant",3]]]],[11,"set_offset","","Assign an offset to a given constant, where the offset is…",26,[[["constantoffset",6],["constant",3]]]],[11,"get_offset","","Retrieve the offset of a given constant, where the offset…",26,[[["constant",3]],["constantoffset",6]]],[11,"iter","","Iterate over the constants in insertion order.",26,[[]]],[11,"entries_mut","","Iterate over mutable entries in the constant pool in…",26,[[]]],[11,"len","","Return the number of constants in the pool.",26,[[]]],[11,"byte_size","","Return the combined size of all of the constant values in…",26,[[]]],[0,"dfg","cranelift_codegen::ir","Data flow graph tracking Instructions, Values, and blocks.",null,null],[3,"DataFlowGraph","cranelift_codegen::ir::dfg","A data flow graph defines all instructions and basic…",null,null],[12,"value_lists","","Memory pool of value lists.",27,null],[12,"signatures","","Function signature table. These signatures are referenced…",27,null],[12,"old_signatures","","The pre-legalization signature for each entry in…",27,null],[12,"ext_funcs","","External function references. These are functions that can…",27,null],[12,"values_labels","","Saves Value labels.",27,null],[12,"constants","","Constants used within the function",27,null],[12,"immediates","","Stores large immediates that otherwise will not fit on…",27,null],[11,"new","","Create a new empty `DataFlowGraph`.",27,[[]]],[11,"clear","","Clear everything.",27,[[]]],[11,"num_insts","","Get the total number of instructions created in this…",27,[[]]],[11,"inst_is_valid","","Returns `true` if the given instruction reference is valid.",27,[[["inst",3]]]],[11,"num_blocks","","Get the total number of basic blocks created in this…",27,[[]]],[11,"block_is_valid","","Returns `true` if the given block reference is valid.",27,[[["block",3]]]],[11,"num_values","","Get the total number of values.",27,[[]]],[11,"collect_debug_info","","Starts collection of debug information.",27,[[]]],[3,"Values","","Iterator over all Values in a DFG",null,null],[11,"values","","Get an iterator over all values.",27,[[],["values",3]]],[11,"value_is_valid","","Check if a value reference is valid.",27,[[["value",3]]]],[11,"value_type","","Get the type of a value.",27,[[["value",3]],["type",3]]],[11,"value_def","","Get the definition of a value.",27,[[["value",3]],["valuedef",4]]],[11,"value_is_attached","","Determine if `v` is an attached instruction result / block…",27,[[["value",3]]]],[11,"resolve_aliases","","Resolve value aliases.",27,[[["value",3]],["value",3]]],[11,"resolve_aliases_in_arguments","","Resolve all aliases among inst\'s arguments.",27,[[["inst",3]]]],[11,"change_to_alias","","Turn a value into an alias of another.",27,[[["value",3]]]],[11,"replace_with_aliases","","Replace the results of one instruction with aliases to the…",27,[[["inst",3]]]],[4,"ValueDef","","Where did a value come from?",null,null],[13,"Result","","Value is the n\'th result of an instruction.",28,null],[13,"Param","","Value is the n\'th parameter to a block.",28,null],[11,"unwrap_inst","","Unwrap the instruction where the value was defined, or…",28,[[],["inst",3]]],[11,"inst","","Get the instruction where the value was defined, if any.",28,[[],[["option",4],["inst",3]]]],[11,"unwrap_block","","Unwrap the block there the parameter is defined, or panic.",28,[[],["block",3]]],[11,"pp","","Get the program point where the value was defined.",28,[[],["expandedprogrampoint",4]]],[11,"num","","Get the number component of this definition.",28,[[]]],[11,"make_inst","","Create a new instruction.",27,[[["instructiondata",4]],["inst",3]]],[11,"display_inst","","Returns an object that displays `inst`.",27,[[["option",4],["into",8],["inst",3]],["displayinst",3]]],[11,"inst_args","","Get all value arguments on `inst` as a slice.",27,[[["inst",3]]]],[11,"inst_args_mut","","Get all value arguments on `inst` as a mutable slice.",27,[[["inst",3]]]],[11,"inst_fixed_args","","Get the fixed value arguments on `inst` as a slice.",27,[[["inst",3]]]],[11,"inst_fixed_args_mut","","Get the fixed value arguments on `inst` as a mutable slice.",27,[[["inst",3]]]],[11,"inst_variable_args","","Get the variable value arguments on `inst` as a slice.",27,[[["inst",3]]]],[11,"inst_variable_args_mut","","Get the variable value arguments on `inst` as a mutable…",27,[[["inst",3]]]],[11,"make_inst_results","","Create result values for an instruction that produces…",27,[[["type",3],["inst",3]]]],[11,"make_inst_results_reusing","","Create result values for `inst`, reusing the provided…",27,[[["type",3],["inst",3]]]],[11,"replace","","Create a `ReplaceBuilder` that will replace `inst` with a…",27,[[["inst",3]],["replacebuilder",3]]],[11,"detach_results","","Detach the list of result values from `inst` and return it.",27,[[["inst",3]],["valuelist",6]]],[11,"clear_results","","Clear the list of result values from `inst`.",27,[[["inst",3]]]],[11,"attach_result","","Attach an existing value to the result value list for…",27,[[["value",3],["inst",3]]]],[11,"replace_result","","Replace an instruction result with a new value of type…",27,[[["value",3],["type",3]],["value",3]]],[11,"append_result","","Append a new instruction result value to `inst`.",27,[[["type",3],["inst",3]],["value",3]]],[11,"append_inst_arg","","Append a new value argument to an instruction.",27,[[["value",3],["inst",3]]]],[11,"first_result","","Get the first result of an instruction.",27,[[["inst",3]],["value",3]]],[11,"has_results","","Test if `inst` has any result values currently.",27,[[["inst",3]]]],[11,"inst_results","","Return all the results of an instruction.",27,[[["inst",3]]]],[11,"call_signature","","Get the call signature of a direct or indirect call…",27,[[["inst",3]],[["sigref",3],["option",4]]]],[11,"analyze_branch","","Check if `inst` is a branch.",27,[[["inst",3]],["branchinfo",4]]],[11,"compute_result_type","","Compute the type of an instruction result from opcode…",27,[[["type",3],["inst",3]],[["type",3],["option",4]]]],[11,"ctrl_typevar","","Get the controlling type variable, or `INVALID` if `inst`…",27,[[["inst",3]],["type",3]]],[11,"make_block","","Create a new basic block.",27,[[],["block",3]]],[11,"num_block_params","","Get the number of parameters on `block`.",27,[[["block",3]]]],[11,"block_params","","Get the parameters on `block`.",27,[[["block",3]]]],[11,"block_param_types","","Get the types of the parameters on `block`.",27,[[["block",3]],[["type",3],["vec",3]]]],[11,"append_block_param","","Append a parameter with type `ty` to `block`.",27,[[["block",3],["type",3]],["value",3]]],[11,"swap_remove_block_param","","Removes `val` from `block`\'s parameters by swapping it…",27,[[["value",3]]]],[11,"remove_block_param","","Removes `val` from `block`\'s parameters by a standard…",27,[[["value",3]]]],[11,"attach_block_param","","Append an existing value to `block`\'s parameters.",27,[[["block",3],["value",3]]]],[11,"replace_block_param","","Replace a block parameter with a new value of type `ty`.",27,[[["value",3],["type",3]],["value",3]]],[11,"detach_block_params","","Detach all the parameters from `block` and return them as…",27,[[["block",3]],["valuelist",6]]],[3,"DisplayInst","","Object that can display an instruction.",null,null],[11,"make_inst_results_for_parser","","Create result values for `inst`, reusing the provided…",27,[[["type",3],["inst",3]]]],[11,"append_block_param_for_parser","","Similar to `append_block_param`, append a parameter with…",27,[[["block",3],["type",3],["value",3]]]],[11,"make_value_alias_for_serialization","","Create a new value alias. This is only for use by the…",27,[[["value",3]]]],[11,"value_alias_dest_for_serialization","","If `v` is already defined as an alias, return its…",27,[[["value",3]],[["value",3],["option",4]]]],[11,"set_alias_type_for_parser","","Compute the type of an alias. This is only for use in the…",27,[[["value",3]]]],[11,"make_invalid_value_for_parser","","Create an invalid value, to pad the index space. This is…",27,[[]]],[11,"value_is_valid_for_parser","","Check if a value reference is valid, while being aware of…",27,[[["value",3]]]],[0,"entities","cranelift_codegen::ir","Cranelift IR entity references.",null,null],[3,"Block","cranelift_codegen::ir::entities","An opaque reference to a basic block in a `Function`.",null,null],[11,"from_u32","","Create a new instance from a `u32`.",29,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",29,[[]]],[11,"with_number","","Create a new block reference from its number. This…",29,[[],["option",4]]],[3,"Value","","An opaque reference to an SSA value.",null,null],[11,"from_u32","","Create a new instance from a `u32`.",30,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",30,[[]]],[11,"with_number","","Create a value from its number representation. This is the…",30,[[],["option",4]]],[3,"Inst","","An opaque reference to an instruction in a `Function`.",null,null],[11,"from_u32","","Create a new instance from a `u32`.",31,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",31,[[]]],[3,"StackSlot","","An opaque reference to a stack slot.",null,null],[11,"from_u32","","Create a new instance from a `u32`.",32,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",32,[[]]],[11,"with_number","","Create a new stack slot reference from its number.",32,[[],["option",4]]],[3,"GlobalValue","","An opaque reference to a global value.",null,null],[11,"from_u32","","Create a new instance from a `u32`.",33,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",33,[[]]],[11,"with_number","","Create a new global value reference from its number.",33,[[],["option",4]]],[3,"Constant","","An opaque reference to a constant.",null,null],[11,"from_u32","","Create a new instance from a `u32`.",34,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",34,[[]]],[11,"with_number","","Create a const reference from its number.",34,[[],["option",4]]],[3,"Immediate","","An opaque reference to an immediate.",null,null],[11,"from_u32","","Create a new instance from a `u32`.",35,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",35,[[]]],[11,"with_number","","Create an immediate reference from its number.",35,[[],["option",4]]],[3,"JumpTable","","An opaque reference to a jump table.",null,null],[11,"from_u32","","Create a new instance from a `u32`.",36,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",36,[[]]],[11,"with_number","","Create a new jump table reference from its number.",36,[[],["option",4]]],[3,"FuncRef","","An opaque reference to another `Function`.",null,null],[11,"from_u32","","Create a new instance from a `u32`.",37,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",37,[[]]],[11,"with_number","","Create a new external function reference from its number.",37,[[],["option",4]]],[3,"SigRef","","An opaque reference to a function `Signature`.",null,null],[11,"from_u32","","Create a new instance from a `u32`.",38,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",38,[[]]],[11,"with_number","","Create a new function signature reference from its number.",38,[[],["option",4]]],[3,"Heap","","An opaque reference to a heap.",null,null],[11,"from_u32","","Create a new instance from a `u32`.",39,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",39,[[]]],[11,"with_number","","Create a new heap reference from its number.",39,[[],["option",4]]],[3,"Table","","An opaque reference to a WebAssembly table.",null,null],[11,"from_u32","","Create a new instance from a `u32`.",40,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",40,[[]]],[11,"with_number","","Create a new table reference from its number.",40,[[],["option",4]]],[4,"AnyEntity","","An opaque reference to any of the entities defined in this…",null,null],[13,"Function","","The whole function.",41,null],[13,"Block","","a basic block.",41,null],[13,"Inst","","An instruction.",41,null],[13,"Value","","An SSA value.",41,null],[13,"StackSlot","","A stack slot.",41,null],[13,"GlobalValue","","A Global value.",41,null],[13,"JumpTable","","A jump table.",41,null],[13,"Constant","","A constant.",41,null],[13,"FuncRef","","An external function.",41,null],[13,"SigRef","","A function call signature.",41,null],[13,"Heap","","A heap.",41,null],[13,"Table","","A table.",41,null],[13,"StackLimit","","A function\'s stack limit",41,null],[0,"function","cranelift_codegen::ir","Intermediate representation of a function.",null,null],[3,"Function","cranelift_codegen::ir::function","A function.",null,null],[12,"name","","Name of this function. Mostly used by `.clif` files.",42,null],[12,"signature","","Signature of this function.",42,null],[12,"old_signature","","The old signature of this function, before the most recent…",42,null],[12,"stack_slots","","Stack slots allocated in this function.",42,null],[12,"global_values","","Global values referenced.",42,null],[12,"heaps","","Heaps referenced.",42,null],[12,"tables","","Tables referenced.",42,null],[12,"jump_tables","","Jump tables used in this function.",42,null],[12,"dfg","","Data flow graph containing the primary definition of all…",42,null],[12,"layout","","Layout of blocks and instructions in the function body.",42,null],[12,"encodings","","Encoding recipe and bits for the legal instructions.…",42,null],[12,"locations","","Location assigned to every value.",42,null],[12,"entry_diversions","","Non-default locations assigned to value at the entry of…",42,null],[12,"offsets","","Code offsets of the block headers.",42,null],[12,"jt_offsets","","Code offsets of Jump Table headers.",42,null],[12,"srclocs","","Source locations.",42,null],[12,"prologue_end","","Instruction that marks the end (inclusive) of the…",42,null],[12,"epilogues_start","","The instructions that mark the start (inclusive) of an…",42,null],[12,"stack_limit","","An optional global value which represents an expression…",42,null],[11,"with_name_signature","","Create a function with the given name and signature.",42,[[["externalname",4],["signature",3]]]],[11,"clear","","Clear all data structures in this function.",42,[[]]],[11,"new","","Create a new empty, anonymous function with a Fast calling…",42,[[]]],[11,"create_jump_table","","Creates a jump table in the function, to be used by…",42,[[["jumptabledata",3]],["jumptable",3]]],[11,"create_stack_slot","","Creates a stack slot in the function, to be used by…",42,[[["stackslotdata",3]],["stackslot",3]]],[11,"import_signature","","Adds a signature which can later be used to declare an…",42,[[["signature",3]],["sigref",3]]],[11,"import_function","","Declare an external function import.",42,[[["extfuncdata",3]],["funcref",3]]],[11,"create_global_value","","Declares a global value accessible to the function.",42,[[["globalvaluedata",4]],["globalvalue",3]]],[11,"create_heap","","Declares a heap accessible to the function.",42,[[["heapdata",3]],["heap",3]]],[11,"create_table","","Declares a table accessible to the function.",42,[[["tabledata",3]],["table",3]]],[11,"display","","Return an object that can display this function with…",42,[[["option",4],["into",8]],["displayfunction",3]]],[11,"display_with","","Return an object that can display this function with…",42,[[["displayfunctionannotations",3]],["displayfunction",3]]],[11,"special_param","","Find a presumed unique special-purpose function parameter…",42,[[["argumentpurpose",4]],[["value",3],["option",4]]]],[11,"inst_offsets","","Get an iterator over the instructions in `block`,…",42,[[["block",3],["encinfo",3]],["instoffsetiter",3]]],[11,"update_encoding","","Wrapper around `encode` which assigns `inst` the resulting…",42,[[["inst",3],["targetisa",8]],[["legalize",6],["result",4]]]],[11,"encode","","Wrapper around `TargetIsa::encode` for encoding an…",42,[[["inst",3],["targetisa",8]],[["legalize",6],["encoding",3],["result",4]]]],[11,"collect_debug_info","","Starts collection of debug information.",42,[[]]],[11,"change_branch_destination","","Changes the destination of a jump or branch instruction.…",42,[[["block",3],["inst",3]]]],[11,"rewrite_branch_destination","","Rewrite the branch destination to `new_dest` if the…",42,[[["block",3],["inst",3]]]],[11,"is_block_basic","","Checks that the specified block can be encoded as a basic…",42,[[["block",3]],["result",4]]],[11,"is_leaf","","Returns true if the function is function that doesn\'t call…",42,[[]]],[11,"transplant_inst","","Replace the `dst` instruction\'s data with the `src`…",42,[[["inst",3]]]],[3,"DisplayFunctionAnnotations","","Additional annotations for function display.",null,null],[12,"isa","","Enable ISA annotations.",43,null],[12,"value_ranges","","Enable value labels annotations.",43,null],[3,"DisplayFunction","","Wrapper type capable of displaying a `Function` with…",null,null],[3,"InstOffsetIter","","Iterator returning instruction offsets and sizes:…",null,null],[0,"immediates","cranelift_codegen::ir","Immediate operands for Cranelift instructions",null,null],[8,"IntoBytes","cranelift_codegen::ir::immediates","Convert a type into a vector of bytes; all implementors in…",null,null],[10,"into_bytes","","Return the little-endian byte representation of the…",44,[[],["vec",3]]],[3,"Imm64","","64-bit immediate signed integer operand.",null,null],[11,"new","","Create a new `Imm64` representing the signed number `x`.",45,[[]]],[11,"wrapping_neg","","Return self negated.",45,[[]]],[11,"bits","","Return bits of this immediate.",45,[[]]],[11,"sign_extend_from_width","","Sign extend this immediate as if it were a signed integer…",45,[[]]],[3,"Uimm64","","64-bit immediate unsigned integer operand.",null,null],[11,"new","","Create a new `Uimm64` representing the unsigned number `x`.",46,[[]]],[11,"wrapping_neg","","Return self negated.",46,[[]]],[6,"Uimm8","","8-bit unsigned integer immediate operand.",null,null],[3,"Uimm32","","A 32-bit unsigned integer immediate operand.",null,null],[3,"V128Imm","","A 128-bit immediate operand.",null,null],[12,"0","","",47,null],[11,"bytes","","Iterate over the bytes in the constant.",47,[[]]],[11,"to_vec","","Convert the immediate into a vector.",47,[[],["vec",3]]],[11,"as_slice","","Convert the immediate into a slice.",47,[[]]],[3,"Offset32","","32-bit signed immediate offset.",null,null],[11,"new","","Create a new `Offset32` representing the signed number `x`.",48,[[]]],[11,"try_from_i64","","Create a new `Offset32` representing the signed number `x`…",48,[[],["option",4]]],[11,"try_add_i64","","Add in the signed number `x` if possible.",48,[[],["option",4]]],[3,"Ieee32","","An IEEE binary32 immediate floating point value,…",null,null],[3,"Ieee64","","An IEEE binary64 immediate floating point value,…",null,null],[11,"with_bits","","Create a new `Ieee32` containing the bits of `x`.",49,[[]]],[11,"pow2","","Create an `Ieee32` number representing `2.0^n`.",49,[[["into",8]]]],[11,"fcvt_to_sint_negative_overflow","","Create an `Ieee32` number representing the greatest…",49,[[["into",8]]]],[11,"neg","","Return self negated.",49,[[]]],[11,"with_float","","Create a new `Ieee32` representing the number `x`.",49,[[]]],[11,"bits","","Get the bitwise representation.",49,[[]]],[11,"is_nan","","Check if the value is a NaN.",49,[[]]],[11,"with_bits","","Create a new `Ieee64` containing the bits of `x`.",50,[[]]],[11,"pow2","","Create an `Ieee64` number representing `2.0^n`.",50,[[["into",8]]]],[11,"fcvt_to_sint_negative_overflow","","Create an `Ieee64` number representing the greatest…",50,[[["into",8]]]],[11,"neg","","Return self negated.",50,[[]]],[11,"with_float","","Create a new `Ieee64` representing the number `x`.",50,[[]]],[11,"bits","","Get the bitwise representation.",50,[[]]],[11,"is_nan","","Check if the value is a NaN. For [Ieee64], this means…",50,[[]]],[0,"instructions","cranelift_codegen::ir","Instruction formats and opcodes.",null,null],[6,"ValueList","cranelift_codegen::ir::instructions","Some instructions use an external list of argument values…",null,null],[6,"ValueListPool","","Memory pool for holding value lists. See `ValueList`.",null,null],[4,"InstructionFormat","","An instruction format",null,null],[13,"AtomicCas","","AtomicCas(imms=(flags: ir::MemFlags), vals=3)",51,null],[13,"AtomicRmw","","AtomicRmw(imms=(flags: ir::MemFlags, op: ir::AtomicRmwOp),…",51,null],[13,"Binary","","Binary(imms=(), vals=2)",51,null],[13,"BinaryImm64","","BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1)",51,null],[13,"BinaryImm8","","BinaryImm8(imms=(imm: ir::immediates::Uimm8), vals=1)",51,null],[13,"Branch","","Branch(imms=(destination: ir::Block), vals=1)",51,null],[13,"BranchFloat","","BranchFloat(imms=(cond: ir::condcodes::FloatCC,…",51,null],[13,"BranchIcmp","","BranchIcmp(imms=(cond: ir::condcodes::IntCC, destination:…",51,null],[13,"BranchInt","","BranchInt(imms=(cond: ir::condcodes::IntCC, destination:…",51,null],[13,"BranchTable","","BranchTable(imms=(destination: ir::Block, table:…",51,null],[13,"BranchTableBase","","BranchTableBase(imms=(table: ir::JumpTable), vals=0)",51,null],[13,"BranchTableEntry","","BranchTableEntry(imms=(imm: ir::immediates::Uimm8, table:…",51,null],[13,"Call","","Call(imms=(func_ref: ir::FuncRef), vals=0)",51,null],[13,"CallIndirect","","CallIndirect(imms=(sig_ref: ir::SigRef), vals=1)",51,null],[13,"CondTrap","","CondTrap(imms=(code: ir::TrapCode), vals=1)",51,null],[13,"CopySpecial","","CopySpecial(imms=(src: isa::RegUnit, dst: isa::RegUnit),…",51,null],[13,"CopyToSsa","","CopyToSsa(imms=(src: isa::RegUnit), vals=0)",51,null],[13,"FloatCompare","","FloatCompare(imms=(cond: ir::condcodes::FloatCC), vals=2)",51,null],[13,"FloatCond","","FloatCond(imms=(cond: ir::condcodes::FloatCC), vals=1)",51,null],[13,"FloatCondTrap","","FloatCondTrap(imms=(cond: ir::condcodes::FloatCC, code:…",51,null],[13,"FuncAddr","","FuncAddr(imms=(func_ref: ir::FuncRef), vals=0)",51,null],[13,"HeapAddr","","HeapAddr(imms=(heap: ir::Heap, imm:…",51,null],[13,"IndirectJump","","IndirectJump(imms=(table: ir::JumpTable), vals=1)",51,null],[13,"IntCompare","","IntCompare(imms=(cond: ir::condcodes::IntCC), vals=2)",51,null],[13,"IntCompareImm","","IntCompareImm(imms=(cond: ir::condcodes::IntCC, imm:…",51,null],[13,"IntCond","","IntCond(imms=(cond: ir::condcodes::IntCC), vals=1)",51,null],[13,"IntCondTrap","","IntCondTrap(imms=(cond: ir::condcodes::IntCC, code:…",51,null],[13,"IntSelect","","IntSelect(imms=(cond: ir::condcodes::IntCC), vals=3)",51,null],[13,"Jump","","Jump(imms=(destination: ir::Block), vals=0)",51,null],[13,"Load","","Load(imms=(flags: ir::MemFlags, offset:…",51,null],[13,"LoadComplex","","LoadComplex(imms=(flags: ir::MemFlags, offset:…",51,null],[13,"LoadNoOffset","","LoadNoOffset(imms=(flags: ir::MemFlags), vals=1)",51,null],[13,"MultiAry","","MultiAry(imms=(), vals=0)",51,null],[13,"NullAry","","NullAry(imms=(), vals=0)",51,null],[13,"RegFill","","RegFill(imms=(src: ir::StackSlot, dst: isa::RegUnit),…",51,null],[13,"RegMove","","RegMove(imms=(src: isa::RegUnit, dst: isa::RegUnit), vals=1)",51,null],[13,"RegSpill","","RegSpill(imms=(src: isa::RegUnit, dst: ir::StackSlot),…",51,null],[13,"Shuffle","","Shuffle(imms=(mask: ir::Immediate), vals=2)",51,null],[13,"StackLoad","","StackLoad(imms=(stack_slot: ir::StackSlot, offset:…",51,null],[13,"StackStore","","StackStore(imms=(stack_slot: ir::StackSlot, offset:…",51,null],[13,"Store","","Store(imms=(flags: ir::MemFlags, offset:…",51,null],[13,"StoreComplex","","StoreComplex(imms=(flags: ir::MemFlags, offset:…",51,null],[13,"StoreNoOffset","","StoreNoOffset(imms=(flags: ir::MemFlags), vals=2)",51,null],[13,"TableAddr","","TableAddr(imms=(table: ir::Table, offset:…",51,null],[13,"Ternary","","Ternary(imms=(), vals=3)",51,null],[13,"TernaryImm8","","TernaryImm8(imms=(imm: ir::immediates::Uimm8), vals=2)",51,null],[13,"Trap","","Trap(imms=(code: ir::TrapCode), vals=0)",51,null],[13,"Unary","","Unary(imms=(), vals=1)",51,null],[13,"UnaryBool","","UnaryBool(imms=(imm: bool), vals=0)",51,null],[13,"UnaryConst","","UnaryConst(imms=(constant_handle: ir::Constant), vals=0)",51,null],[13,"UnaryGlobalValue","","UnaryGlobalValue(imms=(global_value: ir::GlobalValue),…",51,null],[13,"UnaryIeee32","","UnaryIeee32(imms=(imm: ir::immediates::Ieee32), vals=0)",51,null],[13,"UnaryIeee64","","UnaryIeee64(imms=(imm: ir::immediates::Ieee64), vals=0)",51,null],[13,"UnaryImm","","UnaryImm(imms=(imm: ir::immediates::Imm64), vals=0)",51,null],[4,"InstructionData","","",null,null],[13,"AtomicCas","","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",53,null],[12,"args","","",53,null],[12,"flags","","",53,null],[13,"AtomicRmw","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",54,null],[12,"args","","",54,null],[12,"flags","","",54,null],[12,"op","","",54,null],[13,"Binary","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",55,null],[12,"args","","",55,null],[13,"BinaryImm64","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",56,null],[12,"arg","","",56,null],[12,"imm","","",56,null],[13,"BinaryImm8","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",57,null],[12,"arg","","",57,null],[12,"imm","","",57,null],[13,"Branch","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",58,null],[12,"args","","",58,null],[12,"destination","","",58,null],[13,"BranchFloat","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",59,null],[12,"args","","",59,null],[12,"cond","","",59,null],[12,"destination","","",59,null],[13,"BranchIcmp","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",60,null],[12,"args","","",60,null],[12,"cond","","",60,null],[12,"destination","","",60,null],[13,"BranchInt","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",61,null],[12,"args","","",61,null],[12,"cond","","",61,null],[12,"destination","","",61,null],[13,"BranchTable","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",62,null],[12,"arg","","",62,null],[12,"destination","","",62,null],[12,"table","","",62,null],[13,"BranchTableBase","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",63,null],[12,"table","","",63,null],[13,"BranchTableEntry","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",64,null],[12,"args","","",64,null],[12,"imm","","",64,null],[12,"table","","",64,null],[13,"Call","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",65,null],[12,"args","","",65,null],[12,"func_ref","","",65,null],[13,"CallIndirect","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",66,null],[12,"args","","",66,null],[12,"sig_ref","","",66,null],[13,"CondTrap","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",67,null],[12,"arg","","",67,null],[12,"code","","",67,null],[13,"CopySpecial","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",68,null],[12,"src","","",68,null],[12,"dst","","",68,null],[13,"CopyToSsa","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",69,null],[12,"src","","",69,null],[13,"FloatCompare","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",70,null],[12,"args","","",70,null],[12,"cond","","",70,null],[13,"FloatCond","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",71,null],[12,"arg","","",71,null],[12,"cond","","",71,null],[13,"FloatCondTrap","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",72,null],[12,"arg","","",72,null],[12,"cond","","",72,null],[12,"code","","",72,null],[13,"FuncAddr","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",73,null],[12,"func_ref","","",73,null],[13,"HeapAddr","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",74,null],[12,"arg","","",74,null],[12,"heap","","",74,null],[12,"imm","","",74,null],[13,"IndirectJump","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"arg","","",75,null],[12,"table","","",75,null],[13,"IntCompare","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",76,null],[12,"args","","",76,null],[12,"cond","","",76,null],[13,"IntCompareImm","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",77,null],[12,"arg","","",77,null],[12,"cond","","",77,null],[12,"imm","","",77,null],[13,"IntCond","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",78,null],[12,"arg","","",78,null],[12,"cond","","",78,null],[13,"IntCondTrap","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",79,null],[12,"arg","","",79,null],[12,"cond","","",79,null],[12,"code","","",79,null],[13,"IntSelect","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",80,null],[12,"args","","",80,null],[12,"cond","","",80,null],[13,"Jump","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",81,null],[12,"args","","",81,null],[12,"destination","","",81,null],[13,"Load","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",82,null],[12,"arg","","",82,null],[12,"flags","","",82,null],[12,"offset","","",82,null],[13,"LoadComplex","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",83,null],[12,"args","","",83,null],[12,"flags","","",83,null],[12,"offset","","",83,null],[13,"LoadNoOffset","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",84,null],[12,"arg","","",84,null],[12,"flags","","",84,null],[13,"MultiAry","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",85,null],[12,"args","","",85,null],[13,"NullAry","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",86,null],[13,"RegFill","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",87,null],[12,"arg","","",87,null],[12,"src","","",87,null],[12,"dst","","",87,null],[13,"RegMove","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",88,null],[12,"arg","","",88,null],[12,"src","","",88,null],[12,"dst","","",88,null],[13,"RegSpill","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",89,null],[12,"arg","","",89,null],[12,"src","","",89,null],[12,"dst","","",89,null],[13,"Shuffle","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",90,null],[12,"args","","",90,null],[12,"mask","","",90,null],[13,"StackLoad","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",91,null],[12,"stack_slot","","",91,null],[12,"offset","","",91,null],[13,"StackStore","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",92,null],[12,"arg","","",92,null],[12,"stack_slot","","",92,null],[12,"offset","","",92,null],[13,"Store","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",93,null],[12,"args","","",93,null],[12,"flags","","",93,null],[12,"offset","","",93,null],[13,"StoreComplex","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",94,null],[12,"args","","",94,null],[12,"flags","","",94,null],[12,"offset","","",94,null],[13,"StoreNoOffset","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",95,null],[12,"args","","",95,null],[12,"flags","","",95,null],[13,"TableAddr","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",96,null],[12,"arg","","",96,null],[12,"table","","",96,null],[12,"offset","","",96,null],[13,"Ternary","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",97,null],[12,"args","","",97,null],[13,"TernaryImm8","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",98,null],[12,"args","","",98,null],[12,"imm","","",98,null],[13,"Trap","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",99,null],[12,"code","","",99,null],[13,"Unary","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",100,null],[12,"arg","","",100,null],[13,"UnaryBool","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",101,null],[12,"imm","","",101,null],[13,"UnaryConst","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",102,null],[12,"constant_handle","","",102,null],[13,"UnaryGlobalValue","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",103,null],[12,"global_value","","",103,null],[13,"UnaryIeee32","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",104,null],[12,"imm","","",104,null],[13,"UnaryIeee64","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",105,null],[12,"imm","","",105,null],[13,"UnaryImm","cranelift_codegen::ir::instructions","",52,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",106,null],[12,"imm","","",106,null],[11,"opcode","cranelift_codegen::ir::instructions","Get the opcode of this instruction.",52,[[],["opcode",4]]],[11,"typevar_operand","","Get the controlling type variable operand.",52,[[["valuelistpool",6]],[["value",3],["option",4]]]],[11,"arguments","","Get the value arguments to this instruction.",52,[[["valuelistpool",6]]]],[11,"arguments_mut","","Get mutable references to the value arguments to this…",52,[[["valuelistpool",6]]]],[11,"take_value_list","","Take out the value list with all the value arguments and…",52,[[],[["option",4],["valuelist",6]]]],[11,"put_value_list","","Put back a value list.",52,[[["valuelist",6]]]],[11,"eq","","Compare two `InstructionData` for equality.",52,[[["valuelistpool",6]]]],[11,"hash","","Hash an `InstructionData`.",52,[[["valuelistpool",6]]]],[4,"Opcode","","An instruction opcode.",null,null],[13,"Jump","","`jump block, args`. (Jump)",107,null],[13,"Fallthrough","","`fallthrough block, args`. (Jump)",107,null],[13,"Brz","","`brz c, block, args`. (Branch) Type inferred from `c`.",107,null],[13,"Brnz","","`brnz c, block, args`. (Branch) Type inferred from `c`.",107,null],[13,"BrIcmp","","`br_icmp Cond, x, y, block, args`. (BranchIcmp) Type…",107,null],[13,"Brif","","`brif Cond, f, block, args`. (BranchInt)",107,null],[13,"Brff","","`brff Cond, f, block, args`. (BranchFloat)",107,null],[13,"BrTable","","`br_table x, block, JT`. (BranchTable) Type inferred from…",107,null],[13,"JumpTableEntry","","`entry = jump_table_entry x, addr, Size, JT`.…",107,null],[13,"JumpTableBase","","`addr = jump_table_base JT`. (BranchTableBase)",107,null],[13,"IndirectJumpTableBr","","`indirect_jump_table_br addr, JT`. (IndirectJump) Type…",107,null],[13,"Debugtrap","","`debugtrap`. (NullAry)",107,null],[13,"Trap","","`trap code`. (Trap)",107,null],[13,"Trapz","","`trapz c, code`. (CondTrap) Type inferred from `c`.",107,null],[13,"ResumableTrap","","`resumable_trap code`. (Trap)",107,null],[13,"Trapnz","","`trapnz c, code`. (CondTrap) Type inferred from `c`.",107,null],[13,"ResumableTrapnz","","`resumable_trapnz c, code`. (CondTrap) Type inferred from…",107,null],[13,"Trapif","","`trapif Cond, f, code`. (IntCondTrap)",107,null],[13,"Trapff","","`trapff Cond, f, code`. (FloatCondTrap)",107,null],[13,"Return","","`return rvals`. (MultiAry)",107,null],[13,"FallthroughReturn","","`fallthrough_return rvals`. (MultiAry)",107,null],[13,"Call","","`rvals = call FN, args`. (Call)",107,null],[13,"CallIndirect","","`rvals = call_indirect SIG, callee, args`. (CallIndirect)…",107,null],[13,"FuncAddr","","`addr = func_addr FN`. (FuncAddr)",107,null],[13,"Splat","","`a = splat x`. (Unary)",107,null],[13,"Swizzle","","`a = swizzle x, y`. (Binary)",107,null],[13,"Insertlane","","`a = insertlane x, y, Idx`. (TernaryImm8) Type inferred…",107,null],[13,"Extractlane","","`a = extractlane x, Idx`. (BinaryImm8) Type inferred from…",107,null],[13,"Imin","","`a = imin x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Umin","","`a = umin x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Imax","","`a = imax x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Umax","","`a = umax x, y`. (Binary) Type inferred from `x`.",107,null],[13,"AvgRound","","`a = avg_round x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Load","","`a = load MemFlags, p, Offset`. (Load)",107,null],[13,"LoadComplex","","`a = load_complex MemFlags, args, Offset`. (LoadComplex)",107,null],[13,"Store","","`store MemFlags, x, p, Offset`. (Store) Type inferred from…",107,null],[13,"StoreComplex","","`store_complex MemFlags, x, args, Offset`. (StoreComplex)…",107,null],[13,"Uload8","","`a = uload8 MemFlags, p, Offset`. (Load)",107,null],[13,"Uload8Complex","","`a = uload8_complex MemFlags, args, Offset`. (LoadComplex)",107,null],[13,"Sload8","","`a = sload8 MemFlags, p, Offset`. (Load)",107,null],[13,"Sload8Complex","","`a = sload8_complex MemFlags, args, Offset`. (LoadComplex)",107,null],[13,"Istore8","","`istore8 MemFlags, x, p, Offset`. (Store) Type inferred…",107,null],[13,"Istore8Complex","","`istore8_complex MemFlags, x, args, Offset`.…",107,null],[13,"Uload16","","`a = uload16 MemFlags, p, Offset`. (Load)",107,null],[13,"Uload16Complex","","`a = uload16_complex MemFlags, args, Offset`. (LoadComplex)",107,null],[13,"Sload16","","`a = sload16 MemFlags, p, Offset`. (Load)",107,null],[13,"Sload16Complex","","`a = sload16_complex MemFlags, args, Offset`. (LoadComplex)",107,null],[13,"Istore16","","`istore16 MemFlags, x, p, Offset`. (Store) Type inferred…",107,null],[13,"Istore16Complex","","`istore16_complex MemFlags, x, args, Offset`.…",107,null],[13,"Uload32","","`a = uload32 MemFlags, p, Offset`. (Load) Type inferred…",107,null],[13,"Uload32Complex","","`a = uload32_complex MemFlags, args, Offset`. (LoadComplex)",107,null],[13,"Sload32","","`a = sload32 MemFlags, p, Offset`. (Load) Type inferred…",107,null],[13,"Sload32Complex","","`a = sload32_complex MemFlags, args, Offset`. (LoadComplex)",107,null],[13,"Istore32","","`istore32 MemFlags, x, p, Offset`. (Store) Type inferred…",107,null],[13,"Istore32Complex","","`istore32_complex MemFlags, x, args, Offset`. (StoreComplex)",107,null],[13,"Uload8x8","","`a = uload8x8 MemFlags, p, Offset`. (Load) Type inferred…",107,null],[13,"Uload8x8Complex","","`a = uload8x8_complex MemFlags, args, Offset`. (LoadComplex)",107,null],[13,"Sload8x8","","`a = sload8x8 MemFlags, p, Offset`. (Load) Type inferred…",107,null],[13,"Sload8x8Complex","","`a = sload8x8_complex MemFlags, args, Offset`. (LoadComplex)",107,null],[13,"Uload16x4","","`a = uload16x4 MemFlags, p, Offset`. (Load) Type inferred…",107,null],[13,"Uload16x4Complex","","`a = uload16x4_complex MemFlags, args, Offset`.…",107,null],[13,"Sload16x4","","`a = sload16x4 MemFlags, p, Offset`. (Load) Type inferred…",107,null],[13,"Sload16x4Complex","","`a = sload16x4_complex MemFlags, args, Offset`.…",107,null],[13,"Uload32x2","","`a = uload32x2 MemFlags, p, Offset`. (Load) Type inferred…",107,null],[13,"Uload32x2Complex","","`a = uload32x2_complex MemFlags, args, Offset`.…",107,null],[13,"Sload32x2","","`a = sload32x2 MemFlags, p, Offset`. (Load) Type inferred…",107,null],[13,"Sload32x2Complex","","`a = sload32x2_complex MemFlags, args, Offset`.…",107,null],[13,"StackLoad","","`a = stack_load SS, Offset`. (StackLoad)",107,null],[13,"StackStore","","`stack_store x, SS, Offset`. (StackStore) Type inferred…",107,null],[13,"StackAddr","","`addr = stack_addr SS, Offset`. (StackLoad)",107,null],[13,"GlobalValue","","`a = global_value GV`. (UnaryGlobalValue)",107,null],[13,"SymbolValue","","`a = symbol_value GV`. (UnaryGlobalValue)",107,null],[13,"TlsValue","","`a = tls_value GV`. (UnaryGlobalValue)",107,null],[13,"HeapAddr","","`addr = heap_addr H, p, Size`. (HeapAddr)",107,null],[13,"GetPinnedReg","","`addr = get_pinned_reg`. (NullAry)",107,null],[13,"SetPinnedReg","","`set_pinned_reg addr`. (Unary) Type inferred from `addr`.",107,null],[13,"TableAddr","","`addr = table_addr T, p, Offset`. (TableAddr)",107,null],[13,"Iconst","","`a = iconst N`. (UnaryImm)",107,null],[13,"F32const","","`a = f32const N`. (UnaryIeee32)",107,null],[13,"F64const","","`a = f64const N`. (UnaryIeee64)",107,null],[13,"Bconst","","`a = bconst N`. (UnaryBool)",107,null],[13,"Vconst","","`a = vconst N`. (UnaryConst)",107,null],[13,"ConstAddr","","`address = const_addr constant`. (UnaryConst)",107,null],[13,"Shuffle","","`a = shuffle a, b, mask`. (Shuffle) Type inferred from `a`.",107,null],[13,"Null","","`a = null`. (NullAry)",107,null],[13,"Nop","","`nop`. (NullAry)",107,null],[13,"Select","","`a = select c, x, y`. (Ternary) Type inferred from `x`.",107,null],[13,"Selectif","","`a = selectif cc, flags, x, y`. (IntSelect)",107,null],[13,"SelectifSpectreGuard","","`a = selectif_spectre_guard cc, flags, x, y`. (IntSelect)",107,null],[13,"Bitselect","","`a = bitselect c, x, y`. (Ternary) Type inferred from `x`.",107,null],[13,"Copy","","`a = copy x`. (Unary) Type inferred from `x`.",107,null],[13,"Spill","","`a = spill x`. (Unary) Type inferred from `x`.",107,null],[13,"Fill","","`a = fill x`. (Unary) Type inferred from `x`.",107,null],[13,"FillNop","","`a = fill_nop x`. (Unary) Type inferred from `x`.",107,null],[13,"DummySargT","","`sarg_t = dummy_sarg_t`. (NullAry)",107,null],[13,"Regmove","","`regmove x, src, dst`. (RegMove) Type inferred from `x`.",107,null],[13,"CopySpecial","","`copy_special src, dst`. (CopySpecial)",107,null],[13,"CopyToSsa","","`a = copy_to_ssa src`. (CopyToSsa)",107,null],[13,"CopyNop","","`a = copy_nop x`. (Unary) Type inferred from `x`.",107,null],[13,"AdjustSpDown","","`adjust_sp_down delta`. (Unary) Type inferred from `delta`.",107,null],[13,"AdjustSpUpImm","","`adjust_sp_up_imm Offset`. (UnaryImm)",107,null],[13,"AdjustSpDownImm","","`adjust_sp_down_imm Offset`. (UnaryImm)",107,null],[13,"IfcmpSp","","`f = ifcmp_sp addr`. (Unary) Type inferred from `addr`.",107,null],[13,"Regspill","","`regspill x, src, SS`. (RegSpill) Type inferred from `x`.",107,null],[13,"Regfill","","`regfill x, SS, dst`. (RegFill) Type inferred from `x`.",107,null],[13,"Safepoint","","`safepoint args`. (MultiAry)",107,null],[13,"Vsplit","","`lo, hi = vsplit x`. (Unary) Type inferred from `x`.",107,null],[13,"Vconcat","","`a = vconcat x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Vselect","","`a = vselect c, x, y`. (Ternary) Type inferred from `x`.",107,null],[13,"VanyTrue","","`s = vany_true a`. (Unary) Type inferred from `a`.",107,null],[13,"VallTrue","","`s = vall_true a`. (Unary) Type inferred from `a`.",107,null],[13,"VhighBits","","`x = vhigh_bits a`. (Unary)",107,null],[13,"Icmp","","`a = icmp Cond, x, y`. (IntCompare) Type inferred from `x`.",107,null],[13,"IcmpImm","","`a = icmp_imm Cond, x, Y`. (IntCompareImm) Type inferred…",107,null],[13,"Ifcmp","","`f = ifcmp x, y`. (Binary) Type inferred from `x`.",107,null],[13,"IfcmpImm","","`f = ifcmp_imm x, Y`. (BinaryImm64) Type inferred from `x`.",107,null],[13,"Iadd","","`a = iadd x, y`. (Binary) Type inferred from `x`.",107,null],[13,"UaddSat","","`a = uadd_sat x, y`. (Binary) Type inferred from `x`.",107,null],[13,"SaddSat","","`a = sadd_sat x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Isub","","`a = isub x, y`. (Binary) Type inferred from `x`.",107,null],[13,"UsubSat","","`a = usub_sat x, y`. (Binary) Type inferred from `x`.",107,null],[13,"SsubSat","","`a = ssub_sat x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Ineg","","`a = ineg x`. (Unary) Type inferred from `x`.",107,null],[13,"Iabs","","`a = iabs x`. (Unary) Type inferred from `x`.",107,null],[13,"Imul","","`a = imul x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Umulhi","","`a = umulhi x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Smulhi","","`a = smulhi x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Udiv","","`a = udiv x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Sdiv","","`a = sdiv x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Urem","","`a = urem x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Srem","","`a = srem x, y`. (Binary) Type inferred from `x`.",107,null],[13,"IaddImm","","`a = iadd_imm x, Y`. (BinaryImm64) Type inferred from `x`.",107,null],[13,"ImulImm","","`a = imul_imm x, Y`. (BinaryImm64) Type inferred from `x`.",107,null],[13,"UdivImm","","`a = udiv_imm x, Y`. (BinaryImm64) Type inferred from `x`.",107,null],[13,"SdivImm","","`a = sdiv_imm x, Y`. (BinaryImm64) Type inferred from `x`.",107,null],[13,"UremImm","","`a = urem_imm x, Y`. (BinaryImm64) Type inferred from `x`.",107,null],[13,"SremImm","","`a = srem_imm x, Y`. (BinaryImm64) Type inferred from `x`.",107,null],[13,"IrsubImm","","`a = irsub_imm x, Y`. (BinaryImm64) Type inferred from `x`.",107,null],[13,"IaddCin","","`a = iadd_cin x, y, c_in`. (Ternary) Type inferred from `y`.",107,null],[13,"IaddIfcin","","`a = iadd_ifcin x, y, c_in`. (Ternary) Type inferred from…",107,null],[13,"IaddCout","","`a, c_out = iadd_cout x, y`. (Binary) Type inferred from…",107,null],[13,"IaddIfcout","","`a, c_out = iadd_ifcout x, y`. (Binary) Type inferred from…",107,null],[13,"IaddCarry","","`a, c_out = iadd_carry x, y, c_in`. (Ternary) Type…",107,null],[13,"IaddIfcarry","","`a, c_out = iadd_ifcarry x, y, c_in`. (Ternary) Type…",107,null],[13,"IsubBin","","`a = isub_bin x, y, b_in`. (Ternary) Type inferred from `y`.",107,null],[13,"IsubIfbin","","`a = isub_ifbin x, y, b_in`. (Ternary) Type inferred from…",107,null],[13,"IsubBout","","`a, b_out = isub_bout x, y`. (Binary) Type inferred from…",107,null],[13,"IsubIfbout","","`a, b_out = isub_ifbout x, y`. (Binary) Type inferred from…",107,null],[13,"IsubBorrow","","`a, b_out = isub_borrow x, y, b_in`. (Ternary) Type…",107,null],[13,"IsubIfborrow","","`a, b_out = isub_ifborrow x, y, b_in`. (Ternary) Type…",107,null],[13,"Band","","`a = band x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Bor","","`a = bor x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Bxor","","`a = bxor x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Bnot","","`a = bnot x`. (Unary) Type inferred from `x`.",107,null],[13,"BandNot","","`a = band_not x, y`. (Binary) Type inferred from `x`.",107,null],[13,"BorNot","","`a = bor_not x, y`. (Binary) Type inferred from `x`.",107,null],[13,"BxorNot","","`a = bxor_not x, y`. (Binary) Type inferred from `x`.",107,null],[13,"BandImm","","`a = band_imm x, Y`. (BinaryImm64) Type inferred from `x`.",107,null],[13,"BorImm","","`a = bor_imm x, Y`. (BinaryImm64) Type inferred from `x`.",107,null],[13,"BxorImm","","`a = bxor_imm x, Y`. (BinaryImm64) Type inferred from `x`.",107,null],[13,"Rotl","","`a = rotl x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Rotr","","`a = rotr x, y`. (Binary) Type inferred from `x`.",107,null],[13,"RotlImm","","`a = rotl_imm x, Y`. (BinaryImm64) Type inferred from `x`.",107,null],[13,"RotrImm","","`a = rotr_imm x, Y`. (BinaryImm64) Type inferred from `x`.",107,null],[13,"Ishl","","`a = ishl x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Ushr","","`a = ushr x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Sshr","","`a = sshr x, y`. (Binary) Type inferred from `x`.",107,null],[13,"IshlImm","","`a = ishl_imm x, Y`. (BinaryImm64) Type inferred from `x`.",107,null],[13,"UshrImm","","`a = ushr_imm x, Y`. (BinaryImm64) Type inferred from `x`.",107,null],[13,"SshrImm","","`a = sshr_imm x, Y`. (BinaryImm64) Type inferred from `x`.",107,null],[13,"Bitrev","","`a = bitrev x`. (Unary) Type inferred from `x`.",107,null],[13,"Clz","","`a = clz x`. (Unary) Type inferred from `x`.",107,null],[13,"Cls","","`a = cls x`. (Unary) Type inferred from `x`.",107,null],[13,"Ctz","","`a = ctz x`. (Unary) Type inferred from `x`.",107,null],[13,"Popcnt","","`a = popcnt x`. (Unary) Type inferred from `x`.",107,null],[13,"Fcmp","","`a = fcmp Cond, x, y`. (FloatCompare) Type inferred from…",107,null],[13,"Ffcmp","","`f = ffcmp x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Fadd","","`a = fadd x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Fsub","","`a = fsub x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Fmul","","`a = fmul x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Fdiv","","`a = fdiv x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Sqrt","","`a = sqrt x`. (Unary) Type inferred from `x`.",107,null],[13,"Fma","","`a = fma x, y, z`. (Ternary) Type inferred from `y`.",107,null],[13,"Fneg","","`a = fneg x`. (Unary) Type inferred from `x`.",107,null],[13,"Fabs","","`a = fabs x`. (Unary) Type inferred from `x`.",107,null],[13,"Fcopysign","","`a = fcopysign x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Fmin","","`a = fmin x, y`. (Binary) Type inferred from `x`.",107,null],[13,"FminPseudo","","`a = fmin_pseudo x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Fmax","","`a = fmax x, y`. (Binary) Type inferred from `x`.",107,null],[13,"FmaxPseudo","","`a = fmax_pseudo x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Ceil","","`a = ceil x`. (Unary) Type inferred from `x`.",107,null],[13,"Floor","","`a = floor x`. (Unary) Type inferred from `x`.",107,null],[13,"Trunc","","`a = trunc x`. (Unary) Type inferred from `x`.",107,null],[13,"Nearest","","`a = nearest x`. (Unary) Type inferred from `x`.",107,null],[13,"IsNull","","`a = is_null x`. (Unary) Type inferred from `x`.",107,null],[13,"IsInvalid","","`a = is_invalid x`. (Unary) Type inferred from `x`.",107,null],[13,"Trueif","","`a = trueif Cond, f`. (IntCond)",107,null],[13,"Trueff","","`a = trueff Cond, f`. (FloatCond)",107,null],[13,"Bitcast","","`a = bitcast x`. (Unary)",107,null],[13,"RawBitcast","","`a = raw_bitcast x`. (Unary)",107,null],[13,"ScalarToVector","","`a = scalar_to_vector s`. (Unary)",107,null],[13,"Breduce","","`a = breduce x`. (Unary)",107,null],[13,"Bextend","","`a = bextend x`. (Unary)",107,null],[13,"Bint","","`a = bint x`. (Unary)",107,null],[13,"Bmask","","`a = bmask x`. (Unary)",107,null],[13,"Ireduce","","`a = ireduce x`. (Unary)",107,null],[13,"Snarrow","","`a = snarrow x, y`. (Binary) Type inferred from `x`.",107,null],[13,"Unarrow","","`a = unarrow x, y`. (Binary) Type inferred from `x`.",107,null],[13,"SwidenLow","","`a = swiden_low x`. (Unary) Type inferred from `x`.",107,null],[13,"SwidenHigh","","`a = swiden_high x`. (Unary) Type inferred from `x`.",107,null],[13,"UwidenLow","","`a = uwiden_low x`. (Unary) Type inferred from `x`.",107,null],[13,"UwidenHigh","","`a = uwiden_high x`. (Unary) Type inferred from `x`.",107,null],[13,"WideningPairwiseDotProductS","","`a = widening_pairwise_dot_product_s x, y`. (Binary)",107,null],[13,"Uextend","","`a = uextend x`. (Unary)",107,null],[13,"Sextend","","`a = sextend x`. (Unary)",107,null],[13,"Fpromote","","`a = fpromote x`. (Unary)",107,null],[13,"Fdemote","","`a = fdemote x`. (Unary)",107,null],[13,"FcvtToUint","","`a = fcvt_to_uint x`. (Unary)",107,null],[13,"FcvtToUintSat","","`a = fcvt_to_uint_sat x`. (Unary)",107,null],[13,"FcvtToSint","","`a = fcvt_to_sint x`. (Unary)",107,null],[13,"FcvtToSintSat","","`a = fcvt_to_sint_sat x`. (Unary)",107,null],[13,"FcvtFromUint","","`a = fcvt_from_uint x`. (Unary)",107,null],[13,"FcvtFromSint","","`a = fcvt_from_sint x`. (Unary)",107,null],[13,"Isplit","","`lo, hi = isplit x`. (Unary) Type inferred from `x`.",107,null],[13,"Iconcat","","`a = iconcat lo, hi`. (Binary) Type inferred from `lo`.",107,null],[13,"AtomicRmw","","`a = atomic_rmw MemFlags, AtomicRmwOp, p, x`. (AtomicRmw)",107,null],[13,"AtomicCas","","`a = atomic_cas MemFlags, p, e, x`. (AtomicCas) Type…",107,null],[13,"AtomicLoad","","`a = atomic_load MemFlags, p`. (LoadNoOffset)",107,null],[13,"AtomicStore","","`atomic_store MemFlags, x, p`. (StoreNoOffset) Type…",107,null],[13,"Fence","","`fence`. (NullAry)",107,null],[13,"X86Udivmodx","","`q, r = x86_udivmodx nlo, nhi, d`. (Ternary) Type inferred…",107,null],[13,"X86Sdivmodx","","`q, r = x86_sdivmodx nlo, nhi, d`. (Ternary) Type inferred…",107,null],[13,"X86Umulx","","`resLo, resHi = x86_umulx argL, argR`. (Binary) Type…",107,null],[13,"X86Smulx","","`resLo, resHi = x86_smulx argL, argR`. (Binary) Type…",107,null],[13,"X86Cvtt2si","","`a = x86_cvtt2si x`. (Unary)",107,null],[13,"X86Vcvtudq2ps","","`a = x86_vcvtudq2ps x`. (Unary)",107,null],[13,"X86Fmin","","`a = x86_fmin x, y`. (Binary) Type inferred from `x`.",107,null],[13,"X86Fmax","","`a = x86_fmax x, y`. (Binary) Type inferred from `x`.",107,null],[13,"X86Push","","`x86_push x`. (Unary) Type inferred from `x`.",107,null],[13,"X86Pop","","`x = x86_pop`. (NullAry)",107,null],[13,"X86Bsr","","`y, rflags = x86_bsr x`. (Unary) Type inferred from `x`.",107,null],[13,"X86Bsf","","`y, rflags = x86_bsf x`. (Unary) Type inferred from `x`.",107,null],[13,"X86Pshufd","","`a = x86_pshufd a, i`. (BinaryImm8) Type inferred from `a`.",107,null],[13,"X86Pshufb","","`a = x86_pshufb a, b`. (Binary) Type inferred from `a`.",107,null],[13,"X86Pblendw","","`a = x86_pblendw a, b, mask`. (TernaryImm8) Type inferred…",107,null],[13,"X86Pextr","","`a = x86_pextr x, Idx`. (BinaryImm8) Type inferred from `x`.",107,null],[13,"X86Pinsr","","`a = x86_pinsr x, y, Idx`. (TernaryImm8) Type inferred…",107,null],[13,"X86Insertps","","`a = x86_insertps x, y, Idx`. (TernaryImm8) Type inferred…",107,null],[13,"X86Punpckh","","`a = x86_punpckh x, y`. (Binary) Type inferred from `x`.",107,null],[13,"X86Punpckl","","`a = x86_punpckl x, y`. (Binary) Type inferred from `x`.",107,null],[13,"X86Movsd","","`a = x86_movsd x, y`. (Binary) Type inferred from `x`.",107,null],[13,"X86Movlhps","","`a = x86_movlhps x, y`. (Binary) Type inferred from `x`.",107,null],[13,"X86Psll","","`a = x86_psll x, y`. (Binary) Type inferred from `x`.",107,null],[13,"X86Psrl","","`a = x86_psrl x, y`. (Binary) Type inferred from `x`.",107,null],[13,"X86Psra","","`a = x86_psra x, y`. (Binary) Type inferred from `x`.",107,null],[13,"X86Pmullq","","`a = x86_pmullq x, y`. (Binary)",107,null],[13,"X86Pmuludq","","`a = x86_pmuludq x, y`. (Binary)",107,null],[13,"X86Ptest","","`f = x86_ptest x, y`. (Binary) Type inferred from `x`.",107,null],[13,"X86Pmaxs","","`a = x86_pmaxs x, y`. (Binary) Type inferred from `x`.",107,null],[13,"X86Pmaxu","","`a = x86_pmaxu x, y`. (Binary) Type inferred from `x`.",107,null],[13,"X86Pmins","","`a = x86_pmins x, y`. (Binary) Type inferred from `x`.",107,null],[13,"X86Pminu","","`a = x86_pminu x, y`. (Binary) Type inferred from `x`.",107,null],[13,"X86Palignr","","`a = x86_palignr x, y, c`. (TernaryImm8) Type inferred…",107,null],[13,"X86ElfTlsGetAddr","","`addr = x86_elf_tls_get_addr GV`. (UnaryGlobalValue)",107,null],[13,"X86MachoTlsGetAddr","","`addr = x86_macho_tls_get_addr GV`. (UnaryGlobalValue)",107,null],[11,"is_terminator","","True for instructions that terminate the block",107,[[]]],[11,"is_branch","","True for all branch or jump instructions.",107,[[]]],[11,"is_indirect_branch","","True for all indirect branch or jump instructions.",107,[[]]],[11,"is_call","","Is this a call instruction?",107,[[]]],[11,"is_return","","Is this a return instruction?",107,[[]]],[11,"is_ghost","","Is this a ghost instruction?",107,[[]]],[11,"can_load","","Can this instruction read from memory?",107,[[]]],[11,"can_store","","Can this instruction write to memory?",107,[[]]],[11,"can_trap","","Can this instruction cause a trap?",107,[[]]],[11,"other_side_effects","","Does this instruction have other side effects besides…",107,[[]]],[11,"writes_cpu_flags","","Does this instruction write to CPU flags?",107,[[]]],[11,"clobbers_all_regs","","Should this opcode be considered to clobber all the…",107,[[]]],[11,"format","","Get the instruction format for this opcode.",107,[[],["instructionformat",4]]],[11,"constraints","","Get the constraint descriptor for this opcode. Panic if…",107,[[],["opcodeconstraints",3]]],[11,"is_resumable_trap","","Returns true if the instruction is a resumable trap.",107,[[]]],[3,"VariableArgs","","A variable list of `Value` operands used for function call…",null,null],[11,"new","","Create an empty argument list.",108,[[]]],[11,"push","","Add an argument to the end.",108,[[["value",3]]]],[11,"is_empty","","Check if the list is empty.",108,[[]]],[11,"into_value_list","","Convert this to a value list in `pool` with `fixed`…",108,[[["valuelistpool",6]],["valuelist",6]]],[11,"analyze_branch","","Return information about the destination of a branch or…",52,[[["valuelistpool",6]],["branchinfo",4]]],[11,"branch_destination","","Get the single destination of this branch instruction, if…",52,[[],[["block",3],["option",4]]]],[11,"branch_destination_mut","","Get a mutable reference to the single destination of this…",52,[[],[["block",3],["option",4]]]],[11,"imm_value","","Return the value of an immediate if the instruction has…",52,[[],[["option",4],["datavalue",4]]]],[11,"trap_code","","If this is a trapping instruction, get its trap code.…",52,[[],[["option",4],["trapcode",4]]]],[11,"cond_code","","If this is a control-flow instruction depending on an…",52,[[],[["option",4],["intcc",4]]]],[11,"fp_cond_code","","If this is a control-flow instruction depending on a…",52,[[],[["option",4],["floatcc",4]]]],[11,"trap_code_mut","","If this is a trapping instruction, get an exclusive…",52,[[],[["trapcode",4],["option",4]]]],[11,"atomic_rmw_op","","If this is an atomic read/modify/write instruction, return…",52,[[],[["option",4],["atomicrmwop",4]]]],[11,"load_store_offset","","If this is a load/store instruction, returns its immediate…",52,[[],["option",4]]],[11,"analyze_call","","Return information about a call instruction.",52,[[["valuelistpool",6]],["callinfo",4]]],[4,"BranchInfo","","Information about branch and jump instructions.",null,null],[13,"NotABranch","","This is not a branch or jump instruction. This instruction…",109,null],[13,"SingleDest","","This is a branch or jump to a single destination block,…",109,null],[13,"Table","","This is a jump table branch which can have many…",109,null],[4,"CallInfo","","Information about call instructions.",null,null],[13,"NotACall","","This is not a call instruction.",110,null],[13,"Direct","","This is a direct call to an external function declared in…",110,null],[13,"Indirect","","This is an indirect call with the specified signature. See…",110,null],[3,"OpcodeConstraints","","Value type constraints for a given opcode.",null,null],[11,"use_typevar_operand","","Can the controlling type variable for this opcode be…",111,[[]]],[11,"requires_typevar_operand","","Is it necessary to look at the designated value input…",111,[[]]],[11,"num_fixed_results","","Get the number of fixed result values produced by this…",111,[[]]],[11,"num_fixed_value_arguments","","Get the number of fixed input values required by this…",111,[[]]],[11,"result_type","","Get the value type of result number `n`, having resolved…",111,[[["type",3]],["type",3]]],[11,"value_argument_constraint","","Get the value type of input value number `n`, having…",111,[[["type",3]],["resolvedconstraint",4]]],[11,"ctrl_typeset","","Get the typeset of allowed types for the controlling type…",111,[[],[["valuetypeset",3],["option",4]]]],[11,"is_polymorphic","","Is this instruction polymorphic?",111,[[]]],[3,"ValueTypeSet","","A value type set describes the permitted set of types for…",null,null],[12,"lanes","","Allowed lane sizes",112,null],[12,"ints","","Allowed int widths",112,null],[12,"floats","","Allowed float widths",112,null],[12,"bools","","Allowed bool widths",112,null],[12,"refs","","Allowed ref widths",112,null],[11,"contains","","Does `typ` belong to this set?",112,[[["type",3]]]],[11,"example","","Get an example member of this type set.",112,[[],["type",3]]],[4,"ResolvedConstraint","","The type constraint on a value argument once the…",null,null],[13,"Bound","","The operand is bound to a known type.",113,null],[13,"Free","","The operand type can vary freely within the given set.",113,null],[0,"jumptable","cranelift_codegen::ir","Jump table representation.",null,null],[3,"JumpTableData","cranelift_codegen::ir::jumptable","Contents of a jump table.",null,null],[11,"new","","Create a new empty jump table.",114,[[]]],[11,"with_capacity","","Create a new empty jump table with the specified capacity.",114,[[]]],[11,"len","","Get the number of table entries.",114,[[]]],[11,"push_entry","","Append a table entry.",114,[[["block",3]]]],[11,"branches_to","","Checks if any of the entries branch to `block`.",114,[[["block",3]]]],[11,"as_slice","","Access the whole table as a slice.",114,[[]]],[11,"as_mut_slice","","Access the whole table as a mutable slice.",114,[[]]],[11,"iter","","Returns an iterator over the table.",114,[[],[["block",3],["iter",3]]]],[11,"iter_mut","","Returns an iterator that allows modifying each value.",114,[[],[["block",3],["itermut",3]]]],[0,"layout","cranelift_codegen::ir","Function layout.",null,null],[3,"Layout","cranelift_codegen::ir::layout","The `Layout` struct determines the layout of blocks and…",null,null],[11,"new","","Create a new empty `Layout`.",115,[[]]],[11,"clear","","Clear the layout.",115,[[]]],[11,"block_capacity","","Returns the capacity of the `BlockData` map.",115,[[]]],[11,"is_block_inserted","","Is `block` currently part of the layout?",115,[[["block",3]]]],[11,"append_block","","Insert `block` as the last block in the layout.",115,[[["block",3]]]],[11,"insert_block","","Insert `block` in the layout before the existing block…",115,[[["block",3]]]],[11,"insert_block_after","","Insert `block` in the layout after the existing block…",115,[[["block",3]]]],[11,"remove_block","","Remove `block` from the layout.",115,[[["block",3]]]],[11,"blocks","","Return an iterator over all blocks in layout order.",115,[[],["blocks",3]]],[11,"entry_block","","Get the function\'s entry block. This is simply the first…",115,[[],[["block",3],["option",4]]]],[11,"last_block","","Get the last block in the layout.",115,[[],[["block",3],["option",4]]]],[11,"prev_block","","Get the block preceding `block` in the layout order.",115,[[["block",3]],[["block",3],["option",4]]]],[11,"next_block","","Get the block following `block` in the layout order.",115,[[["block",3]],[["block",3],["option",4]]]],[3,"Blocks","","Iterate over blocks in layout order. See `Layout::blocks()`.",null,null],[11,"inst_block","","Get the block containing `inst`, or `None` if `inst` is…",115,[[["inst",3]],[["block",3],["option",4]]]],[11,"pp_block","","Get the block containing the program point `pp`. Panic if…",115,[[],["block",3]]],[11,"append_inst","","Append `inst` to the end of `block`.",115,[[["block",3],["inst",3]]]],[11,"first_inst","","Fetch a block\'s first instruction.",115,[[["block",3]],[["option",4],["inst",3]]]],[11,"last_inst","","Fetch a block\'s last instruction.",115,[[["block",3]],[["option",4],["inst",3]]]],[11,"next_inst","","Fetch the instruction following `inst`.",115,[[["inst",3]],[["option",4],["inst",3]]]],[11,"prev_inst","","Fetch the instruction preceding `inst`.",115,[[["inst",3]],[["option",4],["inst",3]]]],[11,"canonical_branch_inst","","Fetch the first instruction in a block\'s terminal branch…",115,[[["block",3],["dataflowgraph",3]],[["option",4],["inst",3]]]],[11,"insert_inst","","Insert `inst` before the instruction `before` in the same…",115,[[["inst",3]]]],[11,"remove_inst","","Remove `inst` from the layout.",115,[[["inst",3]]]],[11,"block_insts","","Iterate over the instructions in `block` in layout order.",115,[[["block",3]],["insts",3]]],[11,"block_likely_branches","","Iterate over a limited set of instruction which are likely…",115,[[["block",3]],["insts",3]]],[11,"split_block","","Split the block containing `before` in two.",115,[[["block",3],["inst",3]]]],[3,"Insts","","Iterate over instructions in a block in layout order. See…",null,null],[0,"stackslot","cranelift_codegen::ir","Stack slots.",null,null],[6,"StackSize","cranelift_codegen::ir::stackslot","The size of an object on the stack, or the size of a stack…",null,null],[6,"StackOffset","","A stack offset.",null,null],[4,"StackSlotKind","","The kind of a stack slot.",null,null],[13,"SpillSlot","","A spill slot. This is a stack slot created by the register…",116,null],[13,"ExplicitSlot","","An explicit stack slot. This is a chunk of stack memory…",116,null],[13,"IncomingArg","","An incoming function argument.",116,null],[13,"OutgoingArg","","An outgoing function argument.",116,null],[13,"StructReturnSlot","","Space allocated in the caller\'s frame for the callee\'s…",116,null],[13,"EmergencySlot","","An emergency spill slot.",116,null],[3,"StackSlotData","","Contents of a stack slot.",null,null],[12,"kind","","The kind of stack slot.",117,null],[12,"size","","Size of stack slot in bytes.",117,null],[12,"offset","","Offset of stack slot relative to the stack pointer in the…",117,null],[11,"new","","Create a stack slot with the specified byte size.",117,[[["stacksize",6],["stackslotkind",4]]]],[11,"alignment","","Get the alignment in bytes of this stack slot given the…",117,[[["stacksize",6]],["stacksize",6]]],[3,"StackLayoutInfo","","Stack frame layout information.",null,null],[12,"frame_size","","The total size of the stack frame.",118,null],[12,"inbound_args_size","","The total size of the stack frame for inbound arguments…",118,null],[3,"StackSlots","","Stack frame manager.",null,null],[12,"layout_info","","Layout information computed from `layout_stack`.",119,null],[11,"new","","Create an empty stack slot manager.",119,[[]]],[11,"clear","","Clear out everything.",119,[[]]],[11,"push","","Allocate a new stack slot.",119,[[["stackslotdata",3]],["stackslot",3]]],[11,"is_valid","","Check if `ss` is a valid stack slot reference.",119,[[["stackslot",3]]]],[11,"iter","","Get an iterator over all the stack slot keys.",119,[[],[["stackslotdata",3],["iter",3],["stackslot",3]]]],[11,"iter_mut","","Get an iterator over all the stack slot keys, mutable…",119,[[],[["stackslotdata",3],["itermut",3],["stackslot",3]]]],[11,"values","","Get an iterator over all the stack slot records.",119,[[],[["stackslotdata",3],["iter",3]]]],[11,"values_mut","","Get an iterator over all the stack slot records, mutable…",119,[[],[["stackslotdata",3],["itermut",3]]]],[11,"keys","","Get an iterator over all the stack slot keys.",119,[[],[["stackslot",3],["keys",3]]]],[11,"next_key","","Get a reference to the next stack slot that would be…",119,[[],["stackslot",3]]],[11,"make_spill_slot","","Create a new spill slot for spilling values of type `ty`.",119,[[["type",3]],["stackslot",3]]],[11,"make_incoming_arg","","Create a stack slot representing an incoming function…",119,[[["stackoffset",6]],["stackslot",3]]],[11,"get_outgoing_arg","","Get a stack slot representing an outgoing argument.",119,[[["stackoffset",6]],["stackslot",3]]],[11,"get_emergency_slot","","Get an emergency spill slot that can be used to store a…",119,[[["type",3]],["stackslot",3]]],[0,"types","cranelift_codegen::ir","Common types for the Cranelift code generator.",null,null],[3,"Type","cranelift_codegen::ir::types","The type of an SSA value.",null,null],[17,"INVALID","","Not a valid type. Can\'t be loaded or stored. Can\'t be part…",null,null],[17,"IFLAGS","","CPU flags representing the result of an integer…",null,null],[17,"FFLAGS","","CPU flags representing the result of a floating point…",null,null],[17,"SARG_T","","After legalization sarg_t arguments will get this type.",null,null],[17,"B1","","A boolean type with 1 bits.",null,null],[17,"B8","","A boolean type with 8 bits.",null,null],[17,"B16","","A boolean type with 16 bits.",null,null],[17,"B32","","A boolean type with 32 bits.",null,null],[17,"B64","","A boolean type with 64 bits.",null,null],[17,"B128","","A boolean type with 128 bits.",null,null],[17,"I8","","An integer type with 8 bits. WARNING: arithmetic on 8bit…",null,null],[17,"I16","","An integer type with 16 bits. WARNING: arithmetic on 16bit…",null,null],[17,"I32","","An integer type with 32 bits.",null,null],[17,"I64","","An integer type with 64 bits.",null,null],[17,"I128","","An integer type with 128 bits.",null,null],[17,"F32","","A 32-bit floating point type represented in the IEEE…",null,null],[17,"F64","","A 64-bit floating point type represented in the IEEE…",null,null],[17,"R32","","An opaque reference type with 32 bits.",null,null],[17,"R64","","An opaque reference type with 64 bits.",null,null],[17,"B8X8","","A SIMD vector with 8 lanes containing a `b8` each.",null,null],[17,"B16X4","","A SIMD vector with 4 lanes containing a `b16` each.",null,null],[17,"B32X2","","A SIMD vector with 2 lanes containing a `b32` each.",null,null],[17,"I8X8","","A SIMD vector with 8 lanes containing a `i8` each.",null,null],[17,"I16X4","","A SIMD vector with 4 lanes containing a `i16` each.",null,null],[17,"I32X2","","A SIMD vector with 2 lanes containing a `i32` each.",null,null],[17,"F32X2","","A SIMD vector with 2 lanes containing a `f32` each.",null,null],[17,"B8X16","","A SIMD vector with 16 lanes containing a `b8` each.",null,null],[17,"B16X8","","A SIMD vector with 8 lanes containing a `b16` each.",null,null],[17,"B32X4","","A SIMD vector with 4 lanes containing a `b32` each.",null,null],[17,"B64X2","","A SIMD vector with 2 lanes containing a `b64` each.",null,null],[17,"I8X16","","A SIMD vector with 16 lanes containing a `i8` each.",null,null],[17,"I16X8","","A SIMD vector with 8 lanes containing a `i16` each.",null,null],[17,"I32X4","","A SIMD vector with 4 lanes containing a `i32` each.",null,null],[17,"I64X2","","A SIMD vector with 2 lanes containing a `i64` each.",null,null],[17,"F32X4","","A SIMD vector with 4 lanes containing a `f32` each.",null,null],[17,"F64X2","","A SIMD vector with 2 lanes containing a `f64` each.",null,null],[17,"B8X32","","A SIMD vector with 32 lanes containing a `b8` each.",null,null],[17,"B16X16","","A SIMD vector with 16 lanes containing a `b16` each.",null,null],[17,"B32X8","","A SIMD vector with 8 lanes containing a `b32` each.",null,null],[17,"B64X4","","A SIMD vector with 4 lanes containing a `b64` each.",null,null],[17,"B128X2","","A SIMD vector with 2 lanes containing a `b128` each.",null,null],[17,"I8X32","","A SIMD vector with 32 lanes containing a `i8` each.",null,null],[17,"I16X16","","A SIMD vector with 16 lanes containing a `i16` each.",null,null],[17,"I32X8","","A SIMD vector with 8 lanes containing a `i32` each.",null,null],[17,"I64X4","","A SIMD vector with 4 lanes containing a `i64` each.",null,null],[17,"I128X2","","A SIMD vector with 2 lanes containing a `i128` each.",null,null],[17,"F32X8","","A SIMD vector with 8 lanes containing a `f32` each.",null,null],[17,"F64X4","","A SIMD vector with 4 lanes containing a `f64` each.",null,null],[17,"B8X64","","A SIMD vector with 64 lanes containing a `b8` each.",null,null],[17,"B16X32","","A SIMD vector with 32 lanes containing a `b16` each.",null,null],[17,"B32X16","","A SIMD vector with 16 lanes containing a `b32` each.",null,null],[17,"B64X8","","A SIMD vector with 8 lanes containing a `b64` each.",null,null],[17,"B128X4","","A SIMD vector with 4 lanes containing a `b128` each.",null,null],[17,"I8X64","","A SIMD vector with 64 lanes containing a `i8` each.",null,null],[17,"I16X32","","A SIMD vector with 32 lanes containing a `i16` each.",null,null],[17,"I32X16","","A SIMD vector with 16 lanes containing a `i32` each.",null,null],[17,"I64X8","","A SIMD vector with 8 lanes containing a `i64` each.",null,null],[17,"I128X4","","A SIMD vector with 4 lanes containing a `i128` each.",null,null],[17,"F32X16","","A SIMD vector with 16 lanes containing a `f32` each.",null,null],[17,"F64X8","","A SIMD vector with 8 lanes containing a `f64` each.",null,null],[11,"lane_type","","Get the lane type of this SIMD vector type.",120,[[]]],[11,"lane_of","","The type transformation that returns the lane type of a…",120,[[]]],[11,"log2_lane_bits","","Get log_2 of the number of bits in a lane.",120,[[]]],[11,"lane_bits","","Get the number of bits in a lane.",120,[[]]],[11,"int","","Get an integer type with the requested number of bits.",120,[[],["option",4]]],[11,"as_bool_pedantic","","Get a type with the same number of lanes as this type, but…",120,[[]]],[11,"as_bool","","Get a type with the same number of lanes as this type, but…",120,[[]]],[11,"half_width","","Get a type with the same number of lanes as this type, but…",120,[[],["option",4]]],[11,"double_width","","Get a type with the same number of lanes as this type, but…",120,[[],["option",4]]],[11,"is_invalid","","Is this the INVALID type?",120,[[]]],[11,"is_special","","Is this a special type?",120,[[]]],[11,"is_lane","","Is this a lane type?",120,[[]]],[11,"is_vector","","Is this a SIMD vector type?",120,[[]]],[11,"is_bool","","Is this a scalar boolean type?",120,[[]]],[11,"is_int","","Is this a scalar integer type?",120,[[]]],[11,"is_float","","Is this a scalar floating point type?",120,[[]]],[11,"is_flags","","Is this a CPU flags type?",120,[[]]],[11,"is_ref","","Is this a ref type?",120,[[]]],[11,"log2_lane_count","","Get log_2 of the number of lanes in this SIMD vector type.",120,[[]]],[11,"lane_count","","Get the number of lanes in this SIMD vector type.",120,[[]]],[11,"bits","","Get the total number of bits used to represent this type.",120,[[]]],[11,"bytes","","Get the number of bytes used to store this type in memory.",120,[[]]],[11,"by","","Get a SIMD vector type with `n` times more lanes than this…",120,[[],["option",4]]],[11,"half_vector","","Get a SIMD vector with half the number of lanes.",120,[[],["option",4]]],[11,"split_lanes","","Split the lane width in half and double the number of…",120,[[],["option",4]]],[11,"merge_lanes","","Merge lanes to half the number of lanes and double the…",120,[[],["option",4]]],[11,"index","","Index of this type, for use with hash tables etc.",120,[[]]],[11,"wider_or_equal","","True iff:",120,[[]]],[11,"triple_pointer_type","","Return the pointer type for the given target triple.",120,[[["triple",3]]]],[4,"AtomicRmwOp","cranelift_codegen::ir","Describes the arithmetic operation in an atomic memory…",null,null],[13,"Add","","Add",121,null],[13,"Sub","","Sub",121,null],[13,"And","","And",121,null],[13,"Or","","Or",121,null],[13,"Xor","","Xor",121,null],[13,"Xchg","","Exchange",121,null],[3,"InsertBuilder","","Builder that inserts an instruction at the current position.",null,null],[8,"InstBuilder","","Convenience methods for building instructions.",null,null],[11,"jump","","Jump.",122,[[["block",3]],["inst",3]]],[11,"fallthrough","","Fall through to the next block.",122,[[["block",3]],["inst",3]]],[11,"brz","","Branch when zero.",122,[[["block",3],["value",3]],["inst",3]]],[11,"brnz","","Branch when non-zero.",122,[[["block",3],["value",3]],["inst",3]]],[11,"br_icmp","","Compare scalar integers and branch.",122,[[["block",3],["into",8],["value",3],["intcc",4]],["inst",3]]],[11,"brif","","Branch when condition is true in integer CPU flags.",122,[[["block",3],["into",8],["value",3],["intcc",4]],["inst",3]]],[11,"brff","","Branch when condition is true in floating point CPU flags.",122,[[["block",3],["floatcc",4],["value",3],["into",8]],["inst",3]]],[11,"br_table","","Indirect branch via jump table.",122,[[["block",3],["value",3],["jumptable",3]],["inst",3]]],[11,"jump_table_entry","","Get an entry from a jump table.",122,[[["jumptable",3],["into",8],["uimm8",6],["value",3]],["value",3]]],[11,"jump_table_base","","Get the absolute base address of a jump table.",122,[[["jumptable",3],["type",3]],["value",3]]],[11,"indirect_jump_table_br","","Branch indirectly via a jump table entry.",122,[[["jumptable",3],["value",3]],["inst",3]]],[11,"debugtrap","","Encodes an assembly debug trap.",122,[[],["inst",3]]],[11,"trap","","Terminate execution unconditionally.",122,[[["trapcode",4],["into",8]],["inst",3]]],[11,"trapz","","Trap when zero.",122,[[["value",3],["trapcode",4],["into",8]],["inst",3]]],[11,"resumable_trap","","A resumable trap.",122,[[["trapcode",4],["into",8]],["inst",3]]],[11,"trapnz","","Trap when non-zero.",122,[[["value",3],["trapcode",4],["into",8]],["inst",3]]],[11,"resumable_trapnz","","A resumable trap to be called when the passed condition is…",122,[[["value",3],["trapcode",4],["into",8]],["inst",3]]],[11,"trapif","","Trap when condition is true in integer CPU flags.",122,[[["into",8],["into",8],["value",3],["trapcode",4],["intcc",4]],["inst",3]]],[11,"trapff","","Trap when condition is true in floating point CPU flags.",122,[[["into",8],["floatcc",4],["value",3],["trapcode",4],["into",8]],["inst",3]]],[11,"return_","","Return from the function.",122,[[],["inst",3]]],[11,"fallthrough_return","","Return from the function by fallthrough.",122,[[],["inst",3]]],[11,"call","","Direct function call.",122,[[["funcref",3]],["inst",3]]],[11,"call_indirect","","Indirect function call.",122,[[["sigref",3],["value",3]],["inst",3]]],[11,"func_addr","","Get the address of a function.",122,[[["type",3],["funcref",3]],["value",3]]],[11,"splat","","Vector splat.",122,[[["value",3],["type",3]],["value",3]]],[11,"swizzle","","Vector swizzle.",122,[[["value",3],["type",3]],["value",3]]],[11,"insertlane","","Insert `y` as lane `Idx` in x.",122,[[["value",3],["into",8],["uimm8",6]],["value",3]]],[11,"extractlane","","Extract lane `Idx` from `x`.",122,[[["value",3],["into",8],["uimm8",6]],["value",3]]],[11,"imin","","Signed integer minimum.",122,[[["value",3]],["value",3]]],[11,"umin","","Unsigned integer minimum.",122,[[["value",3]],["value",3]]],[11,"imax","","Signed integer maximum.",122,[[["value",3]],["value",3]]],[11,"umax","","Unsigned integer maximum.",122,[[["value",3]],["value",3]]],[11,"avg_round","","Unsigned average with rounding: `a := (x + y + 1) // 2`",122,[[["value",3]],["value",3]]],[11,"load","","Load from memory at `p + Offset`.",122,[[["offset32",3],["type",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"load_complex","","Load from memory at `sum(args) + Offset`.",122,[[["type",3],["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"store","","Store `x` to memory at `p + Offset`.",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["inst",3]]],[11,"store_complex","","Store `x` to memory at `sum(args) + Offset`.",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["inst",3]]],[11,"uload8","","Load 8 bits from memory at `p + Offset` and zero-extend.",122,[[["offset32",3],["type",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"uload8_complex","","Load 8 bits from memory at `sum(args) + Offset` and…",122,[[["type",3],["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"sload8","","Load 8 bits from memory at `p + Offset` and sign-extend.",122,[[["offset32",3],["type",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"sload8_complex","","Load 8 bits from memory at `sum(args) + Offset` and…",122,[[["type",3],["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"istore8","","Store the low 8 bits of `x` to memory at `p + Offset`.",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["inst",3]]],[11,"istore8_complex","","Store the low 8 bits of `x` to memory at `sum(args) +…",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["inst",3]]],[11,"uload16","","Load 16 bits from memory at `p + Offset` and zero-extend.",122,[[["offset32",3],["type",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"uload16_complex","","Load 16 bits from memory at `sum(args) + Offset` and…",122,[[["type",3],["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"sload16","","Load 16 bits from memory at `p + Offset` and sign-extend.",122,[[["offset32",3],["type",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"sload16_complex","","Load 16 bits from memory at `sum(args) + Offset` and…",122,[[["type",3],["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"istore16","","Store the low 16 bits of `x` to memory at `p + Offset`.",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["inst",3]]],[11,"istore16_complex","","Store the low 16 bits of `x` to memory at `sum(args) +…",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["inst",3]]],[11,"uload32","","Load 32 bits from memory at `p + Offset` and zero-extend.",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"uload32_complex","","Load 32 bits from memory at `sum(args) + Offset` and…",122,[[["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"sload32","","Load 32 bits from memory at `p + Offset` and sign-extend.",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"sload32_complex","","Load 32 bits from memory at `sum(args) + Offset` and…",122,[[["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"istore32","","Store the low 32 bits of `x` to memory at `p + Offset`.",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["inst",3]]],[11,"istore32_complex","","Store the low 32 bits of `x` to memory at `sum(args) +…",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["inst",3]]],[11,"uload8x8","","Load an 8x8 vector (64 bits) from memory at `p + Offset`…",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"uload8x8_complex","","Load an 8x8 vector (64 bits) from memory at `sum(args) +…",122,[[["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"sload8x8","","Load an 8x8 vector (64 bits) from memory at `p + Offset`…",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"sload8x8_complex","","Load an 8x8 vector (64 bits) from memory at `sum(args) +…",122,[[["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"uload16x4","","Load a 16x4 vector (64 bits) from memory at `p + Offset`…",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"uload16x4_complex","","Load a 16x4 vector (64 bits) from memory at `sum(args) +…",122,[[["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"sload16x4","","Load a 16x4 vector (64 bits) from memory at `p + Offset`…",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"sload16x4_complex","","Load a 16x4 vector (64 bits) from memory at `sum(args) +…",122,[[["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"uload32x2","","Load an 32x2 vector (64 bits) from memory at `p + Offset`…",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"uload32x2_complex","","Load a 32x2 vector (64 bits) from memory at `sum(args) +…",122,[[["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"sload32x2","","Load a 32x2 vector (64 bits) from memory at `p + Offset`…",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"sload32x2_complex","","Load a 32x2 vector (64 bits) from memory at `sum(args) +…",122,[[["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"stack_load","","Load a value from a stack slot at the constant offset.",122,[[["type",3],["into",8],["offset32",3],["stackslot",3]],["value",3]]],[11,"stack_store","","Store a value to a stack slot at a constant offset.",122,[[["offset32",3],["value",3],["into",8],["stackslot",3]],["inst",3]]],[11,"stack_addr","","Get the address of a stack slot.",122,[[["type",3],["into",8],["offset32",3],["stackslot",3]],["value",3]]],[11,"global_value","","Compute the value of global GV.",122,[[["globalvalue",3],["type",3]],["value",3]]],[11,"symbol_value","","Compute the value of global GV, which is a symbolic value.",122,[[["globalvalue",3],["type",3]],["value",3]]],[11,"tls_value","","Compute the value of global GV, which is a TLS (thread…",122,[[["globalvalue",3],["type",3]],["value",3]]],[11,"heap_addr","","Bounds check and compute absolute address of heap memory.",122,[[["uimm32",3],["type",3],["heap",3],["value",3],["into",8]],["value",3]]],[11,"get_pinned_reg","","Gets the content of the pinned register, when it\'s enabled.",122,[[["type",3]],["value",3]]],[11,"set_pinned_reg","","Sets the content of the pinned register, when it\'s enabled.",122,[[["value",3]],["inst",3]]],[11,"table_addr","","Bounds check and compute absolute address of a table entry.",122,[[["offset32",3],["type",3],["value",3],["table",3],["into",8]],["value",3]]],[11,"iconst","","Integer constant.",122,[[["into",8],["type",3],["imm64",3]],["value",3]]],[11,"f32const","","Floating point constant.",122,[[["into",8],["ieee32",3]],["value",3]]],[11,"f64const","","Floating point constant.",122,[[["ieee64",3],["into",8]],["value",3]]],[11,"bconst","","Boolean constant.",122,[[["type",3],["into",8]],["value",3]]],[11,"vconst","","SIMD vector constant.",122,[[["constant",3],["type",3],["into",8]],["value",3]]],[11,"const_addr","","Calculate the base address of a value in the constant pool.",122,[[["constant",3],["type",3],["into",8]],["value",3]]],[11,"shuffle","","SIMD vector shuffle.",122,[[["value",3],["into",8],["immediate",3]],["value",3]]],[11,"null","","Null constant value for reference types.",122,[[["type",3]],["value",3]]],[11,"nop","","Just a dummy instruction.",122,[[],["inst",3]]],[11,"select","","Conditional select.",122,[[["value",3]],["value",3]]],[11,"selectif","","Conditional select, dependent on integer condition codes.",122,[[["type",3],["into",8],["value",3],["intcc",4]],["value",3]]],[11,"selectif_spectre_guard","","Conditional select intended for Spectre guards.",122,[[["type",3],["into",8],["value",3],["intcc",4]],["value",3]]],[11,"bitselect","","Conditional select of bits.",122,[[["value",3]],["value",3]]],[11,"copy","","Register-register copy.",122,[[["value",3]],["value",3]]],[11,"spill","","Spill a register value to a stack slot.",122,[[["value",3]],["value",3]]],[11,"fill","","Load a register value from a stack slot.",122,[[["value",3]],["value",3]]],[11,"fill_nop","","This is identical to `fill`, except it has no encoding,…",122,[[["value",3]],["value",3]]],[11,"dummy_sarg_t","","This creates a sarg_t",122,[[],["value",3]]],[11,"regmove","","Temporarily divert `x` from `src` to `dst`.",122,[[["regunit",6],["value",3],["into",8]],["inst",3]]],[11,"copy_special","","Copies the contents of \'\'src\'\' register to \'\'dst\'\' register.",122,[[["regunit",6],["into",8]],["inst",3]]],[11,"copy_to_ssa","","Copies the contents of \'\'src\'\' register to \'\'a\'\' SSA name.",122,[[["regunit",6],["type",3],["into",8]],["value",3]]],[11,"copy_nop","","Stack-slot-to-the-same-stack-slot copy, which is…",122,[[["value",3]],["value",3]]],[11,"adjust_sp_down","","Subtracts `delta` offset value from the stack pointer…",122,[[["value",3]],["inst",3]]],[11,"adjust_sp_up_imm","","Adds `Offset` immediate offset value to the stack pointer…",122,[[["into",8],["imm64",3]],["inst",3]]],[11,"adjust_sp_down_imm","","Subtracts `Offset` immediate offset value from the stack…",122,[[["into",8],["imm64",3]],["inst",3]]],[11,"ifcmp_sp","","Compare `addr` with the stack pointer and set the CPU flags.",122,[[["value",3]],["value",3]]],[11,"regspill","","Temporarily divert `x` from `src` to `SS`.",122,[[["stackslot",3],["regunit",6],["value",3],["into",8]],["inst",3]]],[11,"regfill","","Temporarily divert `x` from `SS` to `dst`.",122,[[["into",8],["regunit",6],["value",3],["stackslot",3]],["inst",3]]],[11,"safepoint","","This instruction will provide live reference values at a…",122,[[],["inst",3]]],[11,"vsplit","","Split a vector into two halves.",122,[[["value",3]]]],[11,"vconcat","","Vector concatenation.",122,[[["value",3]],["value",3]]],[11,"vselect","","Vector lane select.",122,[[["value",3]],["value",3]]],[11,"vany_true","","Reduce a vector to a scalar boolean.",122,[[["value",3]],["value",3]]],[11,"vall_true","","Reduce a vector to a scalar boolean.",122,[[["value",3]],["value",3]]],[11,"vhigh_bits","","Reduce a vector to a scalar integer.",122,[[["value",3],["type",3]],["value",3]]],[11,"icmp","","Integer comparison.",122,[[["into",8],["value",3],["intcc",4]],["value",3]]],[11,"icmp_imm","","Compare scalar integer to a constant.",122,[[["imm64",3],["into",8],["value",3],["into",8],["intcc",4]],["value",3]]],[11,"ifcmp","","Compare scalar integers and return flags.",122,[[["value",3]],["value",3]]],[11,"ifcmp_imm","","Compare scalar integer to a constant and return flags.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"iadd","","Wrapping integer addition: `a := x + y \\\\pmod{2^B}`.",122,[[["value",3]],["value",3]]],[11,"uadd_sat","","Add with unsigned saturation.",122,[[["value",3]],["value",3]]],[11,"sadd_sat","","Add with signed saturation.",122,[[["value",3]],["value",3]]],[11,"isub","","Wrapping integer subtraction: `a := x - y \\\\pmod{2^B}`.",122,[[["value",3]],["value",3]]],[11,"usub_sat","","Subtract with unsigned saturation.",122,[[["value",3]],["value",3]]],[11,"ssub_sat","","Subtract with signed saturation.",122,[[["value",3]],["value",3]]],[11,"ineg","","Integer negation: `a := -x \\\\pmod{2^B}`.",122,[[["value",3]],["value",3]]],[11,"iabs","","Integer absolute value with wrapping: `a := |x|`.",122,[[["value",3]],["value",3]]],[11,"imul","","Wrapping integer multiplication: `a := x y \\\\pmod{2^B}`.",122,[[["value",3]],["value",3]]],[11,"umulhi","","Unsigned integer multiplication, producing the high half…",122,[[["value",3]],["value",3]]],[11,"smulhi","","Signed integer multiplication, producing the high half of…",122,[[["value",3]],["value",3]]],[11,"udiv","","Unsigned integer division: `a := \\\\lfloor {x \\\\over y}…",122,[[["value",3]],["value",3]]],[11,"sdiv","","Signed integer division rounded toward zero: `a :=…",122,[[["value",3]],["value",3]]],[11,"urem","","Unsigned integer remainder.",122,[[["value",3]],["value",3]]],[11,"srem","","Signed integer remainder. The result has the sign of the…",122,[[["value",3]],["value",3]]],[11,"iadd_imm","","Add immediate integer.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"imul_imm","","Integer multiplication by immediate constant.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"udiv_imm","","Unsigned integer division by an immediate constant.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"sdiv_imm","","Signed integer division by an immediate constant.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"urem_imm","","Unsigned integer remainder with immediate divisor.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"srem_imm","","Signed integer remainder with immediate divisor.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"irsub_imm","","Immediate reverse wrapping subtraction: `a := Y - x…",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"iadd_cin","","Add integers with carry in.",122,[[["value",3]],["value",3]]],[11,"iadd_ifcin","","Add integers with carry in.",122,[[["value",3]],["value",3]]],[11,"iadd_cout","","Add integers with carry out.",122,[[["value",3]]]],[11,"iadd_ifcout","","Add integers with carry out.",122,[[["value",3]]]],[11,"iadd_carry","","Add integers with carry in and out.",122,[[["value",3]]]],[11,"iadd_ifcarry","","Add integers with carry in and out.",122,[[["value",3]]]],[11,"isub_bin","","Subtract integers with borrow in.",122,[[["value",3]],["value",3]]],[11,"isub_ifbin","","Subtract integers with borrow in.",122,[[["value",3]],["value",3]]],[11,"isub_bout","","Subtract integers with borrow out.",122,[[["value",3]]]],[11,"isub_ifbout","","Subtract integers with borrow out.",122,[[["value",3]]]],[11,"isub_borrow","","Subtract integers with borrow in and out.",122,[[["value",3]]]],[11,"isub_ifborrow","","Subtract integers with borrow in and out.",122,[[["value",3]]]],[11,"band","","Bitwise and.",122,[[["value",3]],["value",3]]],[11,"bor","","Bitwise or.",122,[[["value",3]],["value",3]]],[11,"bxor","","Bitwise xor.",122,[[["value",3]],["value",3]]],[11,"bnot","","Bitwise not.",122,[[["value",3]],["value",3]]],[11,"band_not","","Bitwise and not.",122,[[["value",3]],["value",3]]],[11,"bor_not","","Bitwise or not.",122,[[["value",3]],["value",3]]],[11,"bxor_not","","Bitwise xor not.",122,[[["value",3]],["value",3]]],[11,"band_imm","","Bitwise and with immediate.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"bor_imm","","Bitwise or with immediate.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"bxor_imm","","Bitwise xor with immediate.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"rotl","","Rotate left.",122,[[["value",3]],["value",3]]],[11,"rotr","","Rotate right.",122,[[["value",3]],["value",3]]],[11,"rotl_imm","","Rotate left by immediate.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"rotr_imm","","Rotate right by immediate.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"ishl","","Integer shift left. Shift the bits in `x` towards the MSB…",122,[[["value",3]],["value",3]]],[11,"ushr","","Unsigned shift right. Shift bits in `x` towards the LSB by…",122,[[["value",3]],["value",3]]],[11,"sshr","","Signed shift right. Shift bits in `x` towards the LSB by…",122,[[["value",3]],["value",3]]],[11,"ishl_imm","","Integer shift left by immediate.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"ushr_imm","","Unsigned shift right by immediate.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"sshr_imm","","Signed shift right by immediate.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"bitrev","","Reverse the bits of a integer.",122,[[["value",3]],["value",3]]],[11,"clz","","Count leading zero bits.",122,[[["value",3]],["value",3]]],[11,"cls","","Count leading sign bits.",122,[[["value",3]],["value",3]]],[11,"ctz","","Count trailing zeros.",122,[[["value",3]],["value",3]]],[11,"popcnt","","Population count",122,[[["value",3]],["value",3]]],[11,"fcmp","","Floating point comparison.",122,[[["floatcc",4],["value",3],["into",8]],["value",3]]],[11,"ffcmp","","Floating point comparison returning flags.",122,[[["value",3]],["value",3]]],[11,"fadd","","Floating point addition.",122,[[["value",3]],["value",3]]],[11,"fsub","","Floating point subtraction.",122,[[["value",3]],["value",3]]],[11,"fmul","","Floating point multiplication.",122,[[["value",3]],["value",3]]],[11,"fdiv","","Floating point division.",122,[[["value",3]],["value",3]]],[11,"sqrt","","Floating point square root.",122,[[["value",3]],["value",3]]],[11,"fma","","Floating point fused multiply-and-add.",122,[[["value",3]],["value",3]]],[11,"fneg","","Floating point negation.",122,[[["value",3]],["value",3]]],[11,"fabs","","Floating point absolute value.",122,[[["value",3]],["value",3]]],[11,"fcopysign","","Floating point copy sign.",122,[[["value",3]],["value",3]]],[11,"fmin","","Floating point minimum, propagating NaNs.",122,[[["value",3]],["value",3]]],[11,"fmin_pseudo","","Floating point pseudo-minimum, propagating NaNs. This…",122,[[["value",3]],["value",3]]],[11,"fmax","","Floating point maximum, propagating NaNs.",122,[[["value",3]],["value",3]]],[11,"fmax_pseudo","","Floating point pseudo-maximum, propagating NaNs. This…",122,[[["value",3]],["value",3]]],[11,"ceil","","Round floating point round to integral, towards positive…",122,[[["value",3]],["value",3]]],[11,"floor","","Round floating point round to integral, towards negative…",122,[[["value",3]],["value",3]]],[11,"trunc","","Round floating point round to integral, towards zero.",122,[[["value",3]],["value",3]]],[11,"nearest","","Round floating point round to integral, towards nearest…",122,[[["value",3]],["value",3]]],[11,"is_null","","Reference verification.",122,[[["value",3]],["value",3]]],[11,"is_invalid","","Reference verification.",122,[[["value",3]],["value",3]]],[11,"trueif","","Test integer CPU flags for a specific condition.",122,[[["intcc",4],["value",3],["into",8]],["value",3]]],[11,"trueff","","Test floating point CPU flags for a specific condition.",122,[[["floatcc",4],["value",3],["into",8]],["value",3]]],[11,"bitcast","","Reinterpret the bits in `x` as a different type.",122,[[["value",3],["type",3]],["value",3]]],[11,"raw_bitcast","","Cast the bits in `x` as a different type of the same bit…",122,[[["value",3],["type",3]],["value",3]]],[11,"scalar_to_vector","","Copies a scalar value to a vector value. The scalar is…",122,[[["value",3],["type",3]],["value",3]]],[11,"breduce","","Convert `x` to a smaller boolean type in the…",122,[[["value",3],["type",3]],["value",3]]],[11,"bextend","","Convert `x` to a larger boolean type in the…",122,[[["value",3],["type",3]],["value",3]]],[11,"bint","","Convert `x` to an integer.",122,[[["value",3],["type",3]],["value",3]]],[11,"bmask","","Convert `x` to an integer mask.",122,[[["value",3],["type",3]],["value",3]]],[11,"ireduce","","Convert `x` to a smaller integer type by dropping high bits.",122,[[["value",3],["type",3]],["value",3]]],[11,"snarrow","","Combine `x` and `y` into a vector with twice the lanes but…",122,[[["value",3]],["value",3]]],[11,"unarrow","","Combine `x` and `y` into a vector with twice the lanes but…",122,[[["value",3]],["value",3]]],[11,"swiden_low","","Widen the low lanes of `x` using signed extension.",122,[[["value",3]],["value",3]]],[11,"swiden_high","","Widen the high lanes of `x` using signed extension.",122,[[["value",3]],["value",3]]],[11,"uwiden_low","","Widen the low lanes of `x` using unsigned extension.",122,[[["value",3]],["value",3]]],[11,"uwiden_high","","Widen the high lanes of `x` using unsigned extension.",122,[[["value",3]],["value",3]]],[11,"widening_pairwise_dot_product_s","","Takes corresponding elements in `x` and `y`, performs a…",122,[[["value",3]],["value",3]]],[11,"uextend","","Convert `x` to a larger integer type by zero-extending.",122,[[["value",3],["type",3]],["value",3]]],[11,"sextend","","Convert `x` to a larger integer type by sign-extending.",122,[[["value",3],["type",3]],["value",3]]],[11,"fpromote","","Convert `x` to a larger floating point format.",122,[[["value",3],["type",3]],["value",3]]],[11,"fdemote","","Convert `x` to a smaller floating point format.",122,[[["value",3],["type",3]],["value",3]]],[11,"fcvt_to_uint","","Convert floating point to unsigned integer.",122,[[["value",3],["type",3]],["value",3]]],[11,"fcvt_to_uint_sat","","Convert floating point to unsigned integer as fcvt_to_uint…",122,[[["value",3],["type",3]],["value",3]]],[11,"fcvt_to_sint","","Convert floating point to signed integer.",122,[[["value",3],["type",3]],["value",3]]],[11,"fcvt_to_sint_sat","","Convert floating point to signed integer as fcvt_to_sint…",122,[[["value",3],["type",3]],["value",3]]],[11,"fcvt_from_uint","","Convert unsigned integer to floating point.",122,[[["value",3],["type",3]],["value",3]]],[11,"fcvt_from_sint","","Convert signed integer to floating point.",122,[[["value",3],["type",3]],["value",3]]],[11,"isplit","","Split an integer into low and high parts.",122,[[["value",3]]]],[11,"iconcat","","Concatenate low and high bits to form a larger integer type.",122,[[["value",3]],["value",3]]],[11,"atomic_rmw","","Atomically read-modify-write memory at `p`, with second…",122,[[["type",3],["memflags",3],["into",8],["into",8],["atomicrmwop",4],["value",3]],["value",3]]],[11,"atomic_cas","","Perform an atomic compare-and-swap operation on memory at…",122,[[["memflags",3],["into",8],["value",3]],["value",3]]],[11,"atomic_load","","Atomically load from memory at `p`.",122,[[["type",3],["memflags",3],["into",8],["value",3]],["value",3]]],[11,"atomic_store","","Atomically store `x` to memory at `p`.",122,[[["memflags",3],["into",8],["value",3]],["inst",3]]],[11,"fence","","A memory fence. This must provide ordering to ensure that,…",122,[[],["inst",3]]],[11,"x86_udivmodx","","Extended unsigned division.",122,[[["value",3]]]],[11,"x86_sdivmodx","","Extended signed division.",122,[[["value",3]]]],[11,"x86_umulx","","Unsigned integer multiplication, producing a double-length…",122,[[["value",3]]]],[11,"x86_smulx","","Signed integer multiplication, producing a double-length…",122,[[["value",3]]]],[11,"x86_cvtt2si","","Convert with truncation floating point to signed integer.",122,[[["value",3],["type",3]],["value",3]]],[11,"x86_vcvtudq2ps","","Convert unsigned integer to floating point.",122,[[["value",3]],["value",3]]],[11,"x86_fmin","","Floating point minimum with x86 semantics.",122,[[["value",3]],["value",3]]],[11,"x86_fmax","","Floating point maximum with x86 semantics.",122,[[["value",3]],["value",3]]],[11,"x86_push","","Pushes a value onto the stack.",122,[[["value",3]],["inst",3]]],[11,"x86_pop","","Pops a value from the stack.",122,[[["type",3]],["value",3]]],[11,"x86_bsr","","Bit Scan Reverse -- returns the bit-index of the most…",122,[[["value",3]]]],[11,"x86_bsf","","Bit Scan Forwards -- returns the bit-index of the least…",122,[[["value",3]]]],[11,"x86_pshufd","","Packed Shuffle Doublewords -- copies data from either…",122,[[["value",3],["into",8],["uimm8",6]],["value",3]]],[11,"x86_pshufb","","Packed Shuffle Bytes -- re-orders data in an extended…",122,[[["value",3]],["value",3]]],[11,"x86_pblendw","","Blend packed words using an immediate mask. Each bit of…",122,[[["value",3],["into",8],["uimm8",6]],["value",3]]],[11,"x86_pextr","","Extract lane `Idx` from `x`. The lane index, `Idx`, is an…",122,[[["value",3],["into",8],["uimm8",6]],["value",3]]],[11,"x86_pinsr","","Insert `y` into `x` at lane `Idx`. The lane index, `Idx`,…",122,[[["value",3],["into",8],["uimm8",6]],["value",3]]],[11,"x86_insertps","","Insert a lane of `y` into `x` at using `Idx` to encode…",122,[[["value",3],["into",8],["uimm8",6]],["value",3]]],[11,"x86_punpckh","","Unpack the high-order lanes of `x` and `y` and interleave…",122,[[["value",3]],["value",3]]],[11,"x86_punpckl","","Unpack the low-order lanes of `x` and `y` and interleave…",122,[[["value",3]],["value",3]]],[11,"x86_movsd","","Move the low 64 bits of the float vector `y` to the low 64…",122,[[["value",3]],["value",3]]],[11,"x86_movlhps","","Move the low 64 bits of the float vector `y` to the high…",122,[[["value",3]],["value",3]]],[11,"x86_psll","","Shift Packed Data Left Logical -- This implements the…",122,[[["value",3]],["value",3]]],[11,"x86_psrl","","Shift Packed Data Right Logical -- This implements the…",122,[[["value",3]],["value",3]]],[11,"x86_psra","","Shift Packed Data Right Arithmetic -- This implements the…",122,[[["value",3]],["value",3]]],[11,"x86_pmullq","","Multiply Packed Integers -- Multiply two 64x2 integers and…",122,[[["value",3]],["value",3]]],[11,"x86_pmuludq","","Multiply Packed Integers -- Using only the bottom 32 bits…",122,[[["value",3]],["value",3]]],[11,"x86_ptest","","Logical Compare -- PTEST will set the ZF flag if all bits…",122,[[["value",3]],["value",3]]],[11,"x86_pmaxs","","Maximum of Packed Signed Integers -- Compare signed…",122,[[["value",3]],["value",3]]],[11,"x86_pmaxu","","Maximum of Packed Unsigned Integers -- Compare unsigned…",122,[[["value",3]],["value",3]]],[11,"x86_pmins","","Minimum of Packed Signed Integers -- Compare signed…",122,[[["value",3]],["value",3]]],[11,"x86_pminu","","Minimum of Packed Unsigned Integers -- Compare unsigned…",122,[[["value",3]],["value",3]]],[11,"x86_palignr","","Concatenate destination and source operands, extracting a…",122,[[["value",3],["into",8],["uimm8",6]],["value",3]]],[11,"x86_elf_tls_get_addr","","Elf tls get addr -- This implements the GD TLS model for…",122,[[["globalvalue",3]],["value",3]]],[11,"x86_macho_tls_get_addr","","Mach-O tls get addr -- This implements TLS access for…",122,[[["globalvalue",3]],["value",3]]],[11,"AtomicCas","","AtomicCas(imms=(flags: ir::MemFlags), vals=3)",122,[[["type",3],["memflags",3],["opcode",4],["value",3]]]],[11,"AtomicRmw","","AtomicRmw(imms=(flags: ir::MemFlags, op: ir::AtomicRmwOp),…",122,[[["type",3],["atomicrmwop",4],["memflags",3],["opcode",4],["value",3]]]],[11,"Binary","","Binary(imms=(), vals=2)",122,[[["type",3],["opcode",4],["value",3]]]],[11,"BinaryImm64","","BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1)",122,[[["type",3],["opcode",4],["value",3],["imm64",3]]]],[11,"BinaryImm8","","BinaryImm8(imms=(imm: ir::immediates::Uimm8), vals=1)",122,[[["type",3],["uimm8",6],["opcode",4],["value",3]]]],[11,"Branch","","Branch(imms=(destination: ir::Block), vals=1)",122,[[["type",3],["block",3],["opcode",4],["valuelist",6]]]],[11,"BranchFloat","","BranchFloat(imms=(cond: ir::condcodes::FloatCC,…",122,[[["type",3],["block",3],["floatcc",4],["opcode",4],["valuelist",6]]]],[11,"BranchIcmp","","BranchIcmp(imms=(cond: ir::condcodes::IntCC, destination:…",122,[[["type",3],["block",3],["opcode",4],["valuelist",6],["intcc",4]]]],[11,"BranchInt","","BranchInt(imms=(cond: ir::condcodes::IntCC, destination:…",122,[[["type",3],["block",3],["opcode",4],["valuelist",6],["intcc",4]]]],[11,"BranchTable","","BranchTable(imms=(destination: ir::Block, table:…",122,[[["type",3],["block",3],["jumptable",3],["opcode",4],["value",3]]]],[11,"BranchTableBase","","BranchTableBase(imms=(table: ir::JumpTable), vals=0)",122,[[["type",3],["jumptable",3],["opcode",4]]]],[11,"BranchTableEntry","","BranchTableEntry(imms=(imm: ir::immediates::Uimm8, table:…",122,[[["type",3],["jumptable",3],["uimm8",6],["opcode",4],["value",3]]]],[11,"Call","","Call(imms=(func_ref: ir::FuncRef), vals=0)",122,[[["type",3],["funcref",3],["opcode",4],["valuelist",6]]]],[11,"CallIndirect","","CallIndirect(imms=(sig_ref: ir::SigRef), vals=1)",122,[[["type",3],["sigref",3],["opcode",4],["valuelist",6]]]],[11,"CondTrap","","CondTrap(imms=(code: ir::TrapCode), vals=1)",122,[[["type",3],["opcode",4],["value",3],["trapcode",4]]]],[11,"CopySpecial","","CopySpecial(imms=(src: isa::RegUnit, dst: isa::RegUnit),…",122,[[["type",3],["opcode",4],["regunit",6]]]],[11,"CopyToSsa","","CopyToSsa(imms=(src: isa::RegUnit), vals=0)",122,[[["type",3],["regunit",6],["opcode",4]]]],[11,"FloatCompare","","FloatCompare(imms=(cond: ir::condcodes::FloatCC), vals=2)",122,[[["type",3],["floatcc",4],["opcode",4],["value",3]]]],[11,"FloatCond","","FloatCond(imms=(cond: ir::condcodes::FloatCC), vals=1)",122,[[["type",3],["floatcc",4],["opcode",4],["value",3]]]],[11,"FloatCondTrap","","FloatCondTrap(imms=(cond: ir::condcodes::FloatCC, code:…",122,[[["type",3],["floatcc",4],["opcode",4],["trapcode",4],["value",3]]]],[11,"FuncAddr","","FuncAddr(imms=(func_ref: ir::FuncRef), vals=0)",122,[[["type",3],["funcref",3],["opcode",4]]]],[11,"HeapAddr","","HeapAddr(imms=(heap: ir::Heap, imm:…",122,[[["type",3],["uimm32",3],["heap",3],["opcode",4],["value",3]]]],[11,"IndirectJump","","IndirectJump(imms=(table: ir::JumpTable), vals=1)",122,[[["type",3],["jumptable",3],["opcode",4],["value",3]]]],[11,"IntCompare","","IntCompare(imms=(cond: ir::condcodes::IntCC), vals=2)",122,[[["type",3],["opcode",4],["value",3],["intcc",4]]]],[11,"IntCompareImm","","IntCompareImm(imms=(cond: ir::condcodes::IntCC, imm:…",122,[[["type",3],["imm64",3],["opcode",4],["value",3],["intcc",4]]]],[11,"IntCond","","IntCond(imms=(cond: ir::condcodes::IntCC), vals=1)",122,[[["type",3],["opcode",4],["value",3],["intcc",4]]]],[11,"IntCondTrap","","IntCondTrap(imms=(cond: ir::condcodes::IntCC, code:…",122,[[["type",3],["opcode",4],["value",3],["trapcode",4],["intcc",4]]]],[11,"IntSelect","","IntSelect(imms=(cond: ir::condcodes::IntCC), vals=3)",122,[[["type",3],["opcode",4],["value",3],["intcc",4]]]],[11,"Jump","","Jump(imms=(destination: ir::Block), vals=0)",122,[[["type",3],["block",3],["opcode",4],["valuelist",6]]]],[11,"Load","","Load(imms=(flags: ir::MemFlags, offset:…",122,[[["type",3],["memflags",3],["opcode",4],["offset32",3],["value",3]]]],[11,"LoadComplex","","LoadComplex(imms=(flags: ir::MemFlags, offset:…",122,[[["type",3],["memflags",3],["opcode",4],["offset32",3],["valuelist",6]]]],[11,"LoadNoOffset","","LoadNoOffset(imms=(flags: ir::MemFlags), vals=1)",122,[[["type",3],["memflags",3],["opcode",4],["value",3]]]],[11,"MultiAry","","MultiAry(imms=(), vals=0)",122,[[["type",3],["valuelist",6],["opcode",4]]]],[11,"NullAry","","NullAry(imms=(), vals=0)",122,[[["type",3],["opcode",4]]]],[11,"RegFill","","RegFill(imms=(src: ir::StackSlot, dst: isa::RegUnit),…",122,[[["type",3],["opcode",4],["regunit",6],["value",3],["stackslot",3]]]],[11,"RegMove","","RegMove(imms=(src: isa::RegUnit, dst: isa::RegUnit), vals=1)",122,[[["type",3],["opcode",4],["regunit",6],["value",3]]]],[11,"RegSpill","","RegSpill(imms=(src: isa::RegUnit, dst: ir::StackSlot),…",122,[[["type",3],["opcode",4],["regunit",6],["value",3],["stackslot",3]]]],[11,"Shuffle","","Shuffle(imms=(mask: ir::Immediate), vals=2)",122,[[["type",3],["immediate",3],["opcode",4],["value",3]]]],[11,"StackLoad","","StackLoad(imms=(stack_slot: ir::StackSlot, offset:…",122,[[["type",3],["opcode",4],["offset32",3],["stackslot",3]]]],[11,"StackStore","","StackStore(imms=(stack_slot: ir::StackSlot, offset:…",122,[[["type",3],["opcode",4],["value",3],["offset32",3],["stackslot",3]]]],[11,"Store","","Store(imms=(flags: ir::MemFlags, offset:…",122,[[["type",3],["memflags",3],["opcode",4],["offset32",3],["value",3]]]],[11,"StoreComplex","","StoreComplex(imms=(flags: ir::MemFlags, offset:…",122,[[["type",3],["memflags",3],["opcode",4],["offset32",3],["valuelist",6]]]],[11,"StoreNoOffset","","StoreNoOffset(imms=(flags: ir::MemFlags), vals=2)",122,[[["type",3],["memflags",3],["opcode",4],["value",3]]]],[11,"TableAddr","","TableAddr(imms=(table: ir::Table, offset:…",122,[[["type",3],["opcode",4],["value",3],["offset32",3],["table",3]]]],[11,"Ternary","","Ternary(imms=(), vals=3)",122,[[["type",3],["opcode",4],["value",3]]]],[11,"TernaryImm8","","TernaryImm8(imms=(imm: ir::immediates::Uimm8), vals=2)",122,[[["type",3],["uimm8",6],["opcode",4],["value",3]]]],[11,"Trap","","Trap(imms=(code: ir::TrapCode), vals=0)",122,[[["type",3],["trapcode",4],["opcode",4]]]],[11,"Unary","","Unary(imms=(), vals=1)",122,[[["type",3],["value",3],["opcode",4]]]],[11,"UnaryBool","","UnaryBool(imms=(imm: bool), vals=0)",122,[[["type",3],["opcode",4]]]],[11,"UnaryConst","","UnaryConst(imms=(constant_handle: ir::Constant), vals=0)",122,[[["type",3],["constant",3],["opcode",4]]]],[11,"UnaryGlobalValue","","UnaryGlobalValue(imms=(global_value: ir::GlobalValue),…",122,[[["type",3],["globalvalue",3],["opcode",4]]]],[11,"UnaryIeee32","","UnaryIeee32(imms=(imm: ir::immediates::Ieee32), vals=0)",122,[[["type",3],["ieee32",3],["opcode",4]]]],[11,"UnaryIeee64","","UnaryIeee64(imms=(imm: ir::immediates::Ieee64), vals=0)",122,[[["type",3],["ieee64",3],["opcode",4]]]],[11,"UnaryImm","","UnaryImm(imms=(imm: ir::immediates::Imm64), vals=0)",122,[[["type",3],["imm64",3],["opcode",4]]]],[8,"InstBuilderBase","","Base trait for instruction builders.",null,null],[10,"data_flow_graph","","Get an immutable reference to the data flow graph that…",123,[[],["dataflowgraph",3]]],[10,"data_flow_graph_mut","","Get a mutable reference to the data flow graph that will…",123,[[],["dataflowgraph",3]]],[10,"build","","Insert an instruction and return a reference to it,…",123,[[["type",3],["instructiondata",4]]]],[8,"InstInserterBase","","Base trait for instruction inserters.",null,null],[10,"data_flow_graph","","Get an immutable reference to the data flow graph.",124,[[],["dataflowgraph",3]]],[10,"data_flow_graph_mut","","Get a mutable reference to the data flow graph.",124,[[],["dataflowgraph",3]]],[10,"insert_built_inst","","Insert a new instruction which belongs to the DFG.",124,[[["type",3],["inst",3]],["dataflowgraph",3]]],[3,"ReplaceBuilder","","Instruction builder that replaces an existing instruction.",null,null],[3,"AbiParam","","Function parameter or return value descriptor.",null,null],[12,"value_type","","Type of the argument value.",125,null],[12,"purpose","","Special purpose of argument, or `Normal`.",125,null],[12,"extension","","Method for extending argument to a full register.",125,null],[12,"location","","ABI-specific location of this argument, or `Unassigned`…",125,null],[12,"legalized_to_pointer","","Was the argument converted to pointer during legalization?",125,null],[4,"ArgumentExtension","","Function argument extension options.",null,null],[13,"None","","No extension, high bits are indeterminate.",126,null],[13,"Uext","","Unsigned extension: high bits in register are 0.",126,null],[13,"Sext","","Signed extension: high bits in register replicate sign bit.",126,null],[4,"ArgumentPurpose","","The special purpose of a function argument.",null,null],[13,"Normal","","A normal user program value passed to or from a function.",127,null],[13,"StructArgument","","A C struct passed as argument.",127,null],[13,"StructReturn","","Struct return pointer.",127,null],[13,"Link","","The link register.",127,null],[13,"FramePointer","","The frame pointer.",127,null],[13,"CalleeSaved","","A callee-saved register.",127,null],[13,"VMContext","","A VM context pointer.",127,null],[13,"SignatureId","","A signature identifier.",127,null],[13,"StackLimit","","A stack limit pointer.",127,null],[13,"CalleeTLS","","A callee TLS value.",127,null],[13,"CallerTLS","","A caller TLS value.",127,null],[3,"ExtFuncData","","An external function.",null,null],[12,"name","","Name of the external function.",128,null],[12,"signature","","Call signature of function.",128,null],[12,"colocated","","Will this function be defined nearby, such that it will…",128,null],[3,"Signature","","Function signature.",null,null],[12,"params","","The arguments passed to the function.",129,null],[12,"returns","","Values returned from the function.",129,null],[12,"call_conv","","Calling convention.",129,null],[4,"ExternalName","","The name of an external is either a reference to a…",null,null],[13,"User","","A name in a user-defined symbol table. Cranelift does not…",130,null],[12,"namespace","cranelift_codegen::ir::ExternalName","Arbitrary.",131,null],[12,"index","","Arbitrary.",131,null],[13,"TestCase","cranelift_codegen::ir","A test case function name of up to a hardcoded amount of…",130,null],[12,"length","cranelift_codegen::ir::ExternalName","How many of the bytes in `ascii` are valid?",132,null],[12,"ascii","","Ascii bytes of the name.",132,null],[13,"LibCall","cranelift_codegen::ir","A well-known runtime library function.",130,null],[4,"GlobalValueData","","Information about a global value declaration.",null,null],[13,"VMContext","","Value is the address of the VM context struct.",133,null],[13,"Load","","Value is pointed to by another global value.",133,null],[12,"base","cranelift_codegen::ir::GlobalValueData","The base pointer global value.",134,null],[12,"offset","","Offset added to the base pointer before doing the load.",134,null],[12,"global_type","","Type of the loaded value.",134,null],[12,"readonly","","Specifies whether the memory that this refers to is…",134,null],[13,"IAddImm","cranelift_codegen::ir","Value is an offset from another global value.",133,null],[12,"base","cranelift_codegen::ir::GlobalValueData","The base pointer global value.",135,null],[12,"offset","","Byte offset to be added to the value.",135,null],[12,"global_type","","Type of the iadd.",135,null],[13,"Symbol","cranelift_codegen::ir","Value is symbolic, meaning it\'s a name which will be…",133,null],[12,"name","cranelift_codegen::ir::GlobalValueData","The symbolic name.",136,null],[12,"offset","","Offset from the symbol. This can be used instead of…",136,null],[12,"colocated","","Will this symbol be defined nearby, such that it will…",136,null],[12,"tls","","Does this symbol refer to a thread local storage value?",136,null],[3,"HeapData","cranelift_codegen::ir","Information about a heap declaration.",null,null],[12,"base","","The address of the start of the heap\'s storage.",137,null],[12,"min_size","","Guaranteed minimum heap size in bytes. Heap accesses…",137,null],[12,"offset_guard_size","","Size in bytes of the offset-guard pages following the heap.",137,null],[12,"style","","Heap style, with additional style-specific info.",137,null],[12,"index_type","","The index type for the heap.",137,null],[4,"HeapStyle","","Style of heap including style-specific information.",null,null],[13,"Dynamic","","A dynamic heap can be relocated to a different base…",138,null],[12,"bound_gv","cranelift_codegen::ir::HeapStyle","Global value providing the current bound of the heap in…",139,null],[13,"Static","cranelift_codegen::ir","A static heap has a fixed base address and a number of…",138,null],[12,"bound","cranelift_codegen::ir::HeapStyle","Heap bound in bytes. The offset-guard pages are allocated…",140,null],[5,"get_probestack_funcref","cranelift_codegen::ir","Get a function reference for the probestack function in…",null,[[["type",3],["function",3],["regunit",6],["targetisa",8]],["funcref",3]]],[4,"LibCall","","The name of a runtime library routine.",null,null],[13,"Probestack","","probe for stack overflow. These are emitted for functions…",141,null],[13,"UdivI64","","udiv.i64",141,null],[13,"SdivI64","","sdiv.i64",141,null],[13,"UremI64","","urem.i64",141,null],[13,"SremI64","","srem.i64",141,null],[13,"IshlI64","","ishl.i64",141,null],[13,"UshrI64","","ushr.i64",141,null],[13,"SshrI64","","sshr.i64",141,null],[13,"CeilF32","","ceil.f32",141,null],[13,"CeilF64","","ceil.f64",141,null],[13,"FloorF32","","floor.f32",141,null],[13,"FloorF64","","floor.f64",141,null],[13,"TruncF32","","trunc.f32",141,null],[13,"TruncF64","","frunc.f64",141,null],[13,"NearestF32","","nearest.f32",141,null],[13,"NearestF64","","nearest.f64",141,null],[13,"Memcpy","","libc.memcpy",141,null],[13,"Memset","","libc.memset",141,null],[13,"Memmove","","libc.memmove",141,null],[13,"ElfTlsGetAddr","","Elf __tls_get_addr",141,null],[4,"Endianness","","Endianness of a memory access.",null,null],[13,"Little","","Little-endian",142,null],[13,"Big","","Big-endian",142,null],[3,"MemFlags","","Flags for memory operations like load/store.",null,null],[4,"ExpandedProgramPoint","","An expanded program point directly exposes the variants,…",null,null],[13,"Inst","","An instruction in the function.",143,null],[13,"Block","","A block header.",143,null],[8,"ProgramOrder","","Context for ordering program points.",null,null],[10,"cmp","","Compare the program points `a` and `b` relative to this…",144,[[],["ordering",4]]],[10,"is_block_gap","","Is the range from `inst` to `block` just the gap between…",144,[[["block",3],["inst",3]]]],[3,"ProgramPoint","","A `ProgramPoint` represents a position in a function where…",null,null],[3,"SourceLoc","","A source location.",null,null],[3,"TableData","","Information about a table declaration.",null,null],[12,"base_gv","","Global value giving the address of the start of the table.",145,null],[12,"min_size","","Guaranteed minimum table size in elements. Table accesses…",145,null],[12,"bound_gv","","Global value giving the current bound of the table, in…",145,null],[12,"element_size","","The size of a table element, in bytes.",145,null],[12,"index_type","","The index type for the table.",145,null],[4,"TrapCode","","A trap code describing the reason for a trap.",null,null],[13,"StackOverflow","","The current stack space was exhausted.",146,null],[13,"HeapOutOfBounds","","A `heap_addr` instruction detected an out-of-bounds error.",146,null],[13,"HeapMisaligned","","A wasm atomic operation was presented with a…",146,null],[13,"TableOutOfBounds","","A `table_addr` instruction detected an out-of-bounds error.",146,null],[13,"IndirectCallToNull","","Indirect call to a null table entry.",146,null],[13,"BadSignature","","Signature mismatch on indirect call.",146,null],[13,"IntegerOverflow","","An integer arithmetic operation caused an overflow.",146,null],[13,"IntegerDivisionByZero","","An integer division by zero.",146,null],[13,"BadConversionToInteger","","Failed float-to-int conversion.",146,null],[13,"UnreachableCodeReached","","Code that was supposed to have been unreachable was reached.",146,null],[13,"Interrupt","","Execution has potentially run too long and may be…",146,null],[13,"User","","A user-defined trap code.",146,null],[4,"ArgumentLoc","","Function argument location.",null,null],[13,"Unassigned","","This argument has not been assigned to a location yet.",147,null],[13,"Reg","","Argument is passed in a register.",147,null],[13,"Stack","","Argument is passed on the stack, at the given byte offset…",147,null],[4,"ValueLoc","","Value location.",null,null],[13,"Unassigned","","This value has not been assigned to a location yet.",148,null],[13,"Reg","","Value is assigned to a register.",148,null],[13,"Stack","","Value is assigned to a stack slot.",148,null],[4,"LabelValueLoc","","The particular location for a value.",null,null],[13,"ValueLoc","","Old-backend location: RegUnit, StackSlot, or Unassigned.",149,null],[13,"Reg","","New-backend Reg.",149,null],[13,"SPOffset","","New-backend offset from stack pointer.",149,null],[6,"ValueLocations","","Map of value locations.",null,null],[6,"JumpTables","","Map of jump tables.",null,null],[6,"InstEncodings","","Map of instruction encodings.",null,null],[6,"BlockOffsets","","Code offsets for blocks.",null,null],[6,"JumpTableOffsets","","Code offsets for Jump Tables.",null,null],[6,"SourceLocs","","Source locations for instructions.",null,null],[3,"ValueLabel","","Marked with a label value.",null,null],[11,"from_u32","","Create a new instance from a `u32`.",150,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",150,[[]]],[3,"ValueLabelStart","","A label of a Value.",null,null],[12,"from","","Source location when it is in effect",151,null],[12,"label","","The label index.",151,null],[4,"ValueLabelAssignments","","Value label assignements: label starts or value aliases.",null,null],[13,"Starts","","Original value labels assigned at transform.",152,null],[13,"Alias","","A value alias to original value.",152,null],[12,"from","cranelift_codegen::ir::ValueLabelAssignments","Source location when it is in effect",153,null],[12,"value","","The label index.",153,null],[0,"isa","cranelift_codegen","Instruction Set Architectures.",null,null],[0,"unwind","cranelift_codegen::isa","Represents information relating to function unwinding.",null,null],[0,"systemv","cranelift_codegen::isa::unwind","System V ABI unwind information.",null,null],[4,"RegisterMappingError","cranelift_codegen::isa::unwind::systemv","Enumerate the errors possible in mapping Cranelift…",null,null],[13,"MissingBank","","",154,null],[13,"UnsupportedArchitecture","","",154,null],[13,"UnsupportedRegisterBank","","",154,null],[3,"UnwindInfo","","Represents unwind information for a single System V ABI…",null,null],[11,"to_fde","","Converts the unwind information into a…",155,[[["address",4]],["framedescriptionentry",3]]],[0,"winx64","cranelift_codegen::isa::unwind","Windows x64 ABI unwind information.",null,null],[3,"UnwindInfo","cranelift_codegen::isa::unwind::winx64","Represents Windows x64 unwind information.",null,null],[11,"emit_size","","Gets the emit size of the unwind information, in bytes.",156,[[]]],[11,"emit","","Emits the unwind information into the given mutable byte…",156,[[]]],[0,"input","cranelift_codegen::isa::unwind","Intermediate representation for the unwind information…",null,null],[4,"UnwindCode","cranelift_codegen::isa::unwind::input","Elementary operation in the unwind operations.",null,null],[13,"SaveRegister","","Defines that a register is saved at the specified offset.",157,null],[12,"reg","cranelift_codegen::isa::unwind::input::UnwindCode","The saved register.",158,null],[12,"stack_offset","","The specified offset relative to the stack pointer.",158,null],[13,"RestoreRegister","cranelift_codegen::isa::unwind::input","Defines that a register is as defined before call.",157,null],[12,"reg","cranelift_codegen::isa::unwind::input::UnwindCode","The restored register.",159,null],[13,"StackAlloc","cranelift_codegen::isa::unwind::input","The stack pointer was adjusted to allocate the stack.",157,null],[12,"size","cranelift_codegen::isa::unwind::input::UnwindCode","Size to allocate.",160,null],[13,"StackDealloc","cranelift_codegen::isa::unwind::input","The stack pointer was adjusted to free the stack.",157,null],[12,"size","cranelift_codegen::isa::unwind::input::UnwindCode","Size to deallocate.",161,null],[13,"SetFramePointer","cranelift_codegen::isa::unwind::input","The alternative register was assigned as frame pointer base.",157,null],[12,"reg","cranelift_codegen::isa::unwind::input::UnwindCode","The specified register.",162,null],[13,"RestoreFramePointer","cranelift_codegen::isa::unwind::input","Restores a frame pointer base to default register.",157,null],[13,"RememberState","","Saves the state.",157,null],[13,"RestoreState","","Restores the state.",157,null],[3,"UnwindInfo","","Unwind information as generated by a backend.",null,null],[12,"prologue_size","","Size of the prologue.",163,null],[12,"prologue_unwind_codes","","Unwind codes for prologue.",163,null],[12,"epilogues_unwind_codes","","Unwind codes for epilogues.",163,null],[12,"function_size","","Entire function size.",163,null],[12,"word_size","","Platform word size in bytes.",163,null],[12,"initial_sp_offset","","Initial stack pointer offset.",163,null],[4,"UnwindInfo","cranelift_codegen::isa::unwind","Represents unwind information for a single function.",null,null],[13,"WindowsX64","","Windows x64 ABI unwind information.",164,null],[13,"SystemV","","System V ABI unwind information.",164,null],[0,"registers","cranelift_codegen::isa","Data structures describing the registers in an ISA.",null,null],[6,"RegUnit","cranelift_codegen::isa::registers","Register units are the smallest units of register…",null,null],[6,"RegClassMask","","A bit mask indexed by register classes.",null,null],[6,"RegUnitMask","","A bit mask indexed by register units.",null,null],[3,"RegBank","","The register units in a target ISA are divided into…",null,null],[12,"name","","The name of this register bank as defined in the ISA\'s DSL…",165,null],[12,"first_unit","","The first register unit in this bank.",165,null],[12,"units","","The total number of register units in this bank.",165,null],[12,"names","","Array of specially named register units. This array can be…",165,null],[12,"prefix","","Name prefix to use for those register units in the bank…",165,null],[12,"first_toprc","","Index of the first top-level register class in this bank.",165,null],[12,"num_toprcs","","Number of top-level register classes in this bank.",165,null],[12,"pressure_tracking","","Is register pressure tracking enabled for this bank?",165,null],[6,"RegClass","","A register class reference.",null,null],[3,"RegClassData","","Data about a register class.",null,null],[12,"name","","The name of the register class.",166,null],[12,"index","","The index of this class in the ISA\'s RegInfo description.",166,null],[12,"width","","How many register units to allocate per register.",166,null],[12,"bank","","Index of the register bank this class belongs to.",166,null],[12,"toprc","","Index of the top-level register class contains this one.",166,null],[12,"first","","The first register unit in this class.",166,null],[12,"subclasses","","Bit-mask of sub-classes of this register class, including…",166,null],[12,"mask","","Mask of register units in the class. If `width > 1`, the…",166,null],[12,"info","","The global `RegInfo` instance containing this register…",166,null],[12,"pinned_reg","","The \\\"pinned\\\" register of the associated register bank.",166,null],[11,"intersect_index","","Get the register class index corresponding to the…",166,[[["regclass",6]],[["option",4],["regclassindex",3]]]],[11,"intersect","","Get the intersection of `self` and `other`.",166,[[["regclass",6]],[["regclass",6],["option",4]]]],[11,"has_subclass","","Returns true if `other` is a subclass of this register…",166,[[["into",8],["regclassindex",3]]]],[11,"toprc","","Get the top-level register class containing this class.",166,[[],["regclass",6]]],[11,"unit","","Get a specific register unit in this class.",166,[[],["regunit",6]]],[11,"contains","","Does this register class contain `regunit`?",166,[[["regunit",6]]]],[11,"is_pinned_reg","","If the pinned register is used, is the given regunit the…",166,[[["regunit",6]]]],[11,"index_of","","Calculate the index of the register inside the class.",166,[[["regunit",6]]]],[3,"RegClassIndex","","A small reference to a register class.",null,null],[5,"regs_overlap","","Test of two registers overlap.",null,[[["regclass",6],["regunit",6]]]],[3,"RegInfo","","Information about the registers in an ISA.",null,null],[12,"banks","","All register banks, ordered by their `first_unit`. The…",167,null],[12,"classes","","All register classes ordered topologically so a sub-class…",167,null],[11,"bank_containing_regunit","","Get the register bank holding `regunit`.",167,[[["regunit",6]],[["regbank",3],["option",4]]]],[11,"parse_regunit","","Try to parse a regunit name. The name is not expected to…",167,[[],[["option",4],["regunit",6]]]],[11,"display_regunit","","Make a temporary object that can display a register unit.",167,[[["regunit",6]],["displayregunit",3]]],[11,"rc","","Get the register class corresponding to `idx`.",167,[[["regclassindex",3]],["regclass",6]]],[11,"toprc","","Get the top-level register class containing the `idx` class.",167,[[["regclassindex",3]],["regclass",6]]],[3,"DisplayRegUnit","","Temporary object that holds enough information to print a…",null,null],[4,"CallConv","cranelift_codegen::isa","Calling convention identifiers.",null,null],[13,"Fast","","Best performance, not ABI-stable",168,null],[13,"Cold","","Smallest caller code size, not ABI-stable",168,null],[13,"SystemV","","System V-style convention used on many platforms",168,null],[13,"WindowsFastcall","","Windows \\\"fastcall\\\" convention, also used for x64 and ARM",168,null],[13,"BaldrdashSystemV","","SpiderMonkey WebAssembly convention on systems using…",168,null],[13,"BaldrdashWindows","","SpiderMonkey WebAssembly convention on Windows",168,null],[13,"Baldrdash2020","","SpiderMonkey WebAssembly convention for \\\"ABI-2020\\\", with…",168,null],[13,"Probestack","","Specialized convention for the probestack function",168,null],[3,"BranchRange","","Constraints on the range of a branch instruction.",null,null],[12,"origin","","Offset in bytes from the address of the branch instruction…",169,null],[12,"bits","","Number of bits in the signed byte displacement encoded in…",169,null],[4,"ConstraintKind","","The different kinds of operand constraints.",null,null],[13,"Reg","","This operand or result must be a register from the given…",170,null],[13,"FixedReg","","This operand or result must be a fixed register.",170,null],[13,"Tied","","This result value must use the same register as an input…",170,null],[13,"FixedTied","","This operand must be a fixed register, and it has a tied…",170,null],[13,"Stack","","This operand must be a value in a stack slot.",170,null],[3,"OperandConstraint","","Register constraint for a single value operand or…",null,null],[12,"kind","","The kind of constraint.",171,null],[12,"regclass","","The register class of the operand.",171,null],[3,"RecipeConstraints","","Value operand constraints for an encoding recipe.",null,null],[12,"ins","","Constraints for the instruction\'s fixed value operands.",172,null],[12,"outs","","Constraints for the instruction\'s fixed results.",172,null],[12,"fixed_ins","","Are any of the input constraints `FixedReg` or `FixedTied`?",172,null],[12,"fixed_outs","","Are any of the output constraints `FixedReg` or `FixedTied`?",172,null],[12,"tied_ops","","Are any of the input/output constraints `Tied` (but not…",172,null],[12,"clobbers_flags","","Does this instruction clobber the CPU flags?",172,null],[3,"Encodings","","An iterator over legal encodings for the instruction.",null,null],[5,"base_size","","Returns the base size of the Recipe, assuming it\'s fixed.…",null,[[["encoding",3],["regdiversions",3],["recipesizing",3],["function",3],["inst",3]]]],[3,"EncInfo","","Information about all the encodings in this ISA.",null,null],[12,"constraints","","Constraints on value operands per recipe.",173,null],[12,"sizing","","Code size information per recipe.",173,null],[12,"names","","Names of encoding recipes.",173,null],[3,"Encoding","","Bits needed to encode an instruction as binary machine code.",null,null],[4,"StackBase","","Generic base register for referencing stack slots.",null,null],[13,"SP","","Use the stack pointer.",174,null],[13,"FP","","Use the frame pointer (if one is present).",174,null],[13,"Zone","","Use an explicit zone pointer in a general-purpose register.",174,null],[3,"StackBaseMask","","Bit mask of supported stack bases.",null,null],[12,"0","","",175,null],[3,"StackRef","","A method for referencing a stack slot in the current stack…",null,null],[12,"base","","The base register to use for addressing.",176,null],[12,"offset","","Immediate offset from the base register to the first byte…",176,null],[4,"BackendVariant","","The \\\"variant\\\" for a given target. On one platform…",null,null],[13,"Any","","Any backend available.",177,null],[13,"Legacy","","A \\\"legacy\\\" backend: one that operates using legalizations…",177,null],[13,"MachInst","","A backend built on `MachInst`s and the `VCode` framework.",177,null],[5,"lookup_variant","","Look for an ISA for the given `triple`, selecting the…",null,[[["triple",3],["backendvariant",4]],[["builder",3],["result",4],["lookuperror",4]]]],[5,"lookup","","Look for an ISA for the given `triple`. Return a builder…",null,[[["triple",3]],[["builder",3],["result",4],["lookuperror",4]]]],[5,"lookup_by_name","","Look for a supported ISA with the given `name`. Return a…",null,[[],[["builder",3],["result",4],["lookuperror",4]]]],[4,"LookupError","","Describes reason for target lookup failure",null,null],[13,"SupportDisabled","","Support for this target was disabled in the current build.",178,null],[13,"Unsupported","","Support for this target has not yet been implemented.",178,null],[3,"Builder","","Builder for a `TargetIsa`. Modify the ISA-specific…",null,null],[11,"finish","","Combine the ISA-specific settings with the provided…",179,[[["flags",3]],[["box",3],["targetisa",8]]]],[6,"Legalize","","After determining that an instruction doesn\'t have an…",null,null],[3,"TargetFrontendConfig","","This struct provides information that a frontend may need…",null,null],[12,"default_call_conv","","The default calling convention of the target.",180,null],[12,"pointer_width","","The pointer width of the target.",180,null],[11,"pointer_type","","Get the pointer type of this target.",180,[[],["type",3]]],[11,"pointer_bits","","Get the width of pointers on this target, in units of bits.",180,[[]]],[11,"pointer_bytes","","Get the width of pointers on this target, in units of bytes.",180,[[]]],[8,"TargetIsa","","Methods that are specialized to a target ISA. Implies a…",null,null],[10,"name","","Get the name of this ISA.",181,[[]]],[10,"triple","","Get the target triple that was used to make this trait…",181,[[],["triple",3]]],[10,"flags","","Get the ISA-independent flags that were used to make this…",181,[[],["flags",3]]],[10,"hash_all_flags","","Hashes all flags, both ISA-independent and ISA-specific,…",181,[[["hasher",8]]]],[11,"default_call_conv","","Get the default calling convention of this target.",181,[[],["callconv",4]]],[11,"endianness","","Get the endianness of this ISA.",181,[[],["endianness",4]]],[11,"pointer_type","","Get the pointer type of this ISA.",181,[[],["type",3]]],[11,"pointer_width","","Get the width of pointers on this ISA.",181,[[],["pointerwidth",4]]],[11,"pointer_bits","","Get the width of pointers on this ISA, in units of bits.",181,[[]]],[11,"pointer_bytes","","Get the width of pointers on this ISA, in units of bytes.",181,[[]]],[11,"frontend_config","","Get the information needed by frontends producing…",181,[[],["targetfrontendconfig",3]]],[11,"uses_cpu_flags","","Does the CPU implement scalar comparisons using a CPU…",181,[[]]],[11,"uses_complex_addresses","","Does the CPU implement multi-register addressing?",181,[[]]],[10,"register_info","","Get a data structure describing the registers in this ISA.",181,[[],["reginfo",3]]],[11,"map_dwarf_register","","Map a Cranelift register to its corresponding DWARF…",181,[[["regunit",6]],[["result",4],["registermappingerror",4]]]],[11,"map_regalloc_reg_to_dwarf","","Map a regalloc::Reg to its corresponding DWARF register.",181,[[["reg",3]],[["result",4],["registermappingerror",4]]]],[10,"legal_encodings","","Returns an iterator over legal encodings for the…",181,[[["instructiondata",4],["type",3],["function",3]],["encodings",3]]],[11,"encode","","Encode an instruction after determining it is legal.",181,[[["type",3],["function",3],["instructiondata",4]],[["legalize",6],["encoding",3],["result",4]]]],[10,"encoding_info","","Get a data structure describing the instruction encodings…",181,[[],["encinfo",3]]],[10,"legalize_signature","","Legalize a function signature.",181,[[["cow",4]]]],[10,"regclass_for_abi_type","","Get the register class that should be used to represent an…",181,[[["type",3]],["regclass",6]]],[10,"allocatable_registers","","Get the set of allocatable registers that can be used when…",181,[[["function",3]],["registerset",3]]],[11,"prologue_epilogue","","Compute the stack layout and insert prologue and epilogue…",181,[[["function",3]],["codegenresult",6]]],[10,"emit_inst","","Emit binary machine code for a single instruction into the…",181,[[["regdiversions",3],["function",3],["inst",3],["codesink",8]]]],[10,"emit_function_to_memory","","Emit a whole function into memory.",181,[[["memorycodesink",3],["function",3]]]],[10,"unsigned_add_overflow_condition","","IntCC condition for Unsigned Addition Overflow (Carry).",181,[[],["intcc",4]]],[10,"unsigned_sub_overflow_condition","","IntCC condition for Unsigned Subtraction Overflow…",181,[[],["intcc",4]]],[11,"create_unwind_info","","Creates unwind information for the function.",181,[[["function",3]],[["option",4],["codegenresult",6]]]],[11,"create_systemv_cie","","Creates a new System V Common Information Entry for the ISA.",181,[[],[["commoninformationentry",3],["option",4]]]],[11,"get_mach_backend","","Get the new-style MachBackend, if this is an adapter…",181,[[],[["machbackend",8],["option",4]]]],[10,"as_any","","Return an [Any] reference for downcasting to the…",181,[[],["any",8]]],[0,"loop_analysis","cranelift_codegen","A loop analysis represented as mappings of loops to their…",null,null],[3,"Loop","cranelift_codegen::loop_analysis","A opaque reference to a code loop.",null,null],[11,"from_u32","","Create a new instance from a `u32`.",182,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",182,[[]]],[3,"LoopAnalysis","","Loop tree information for a single function.",null,null],[11,"new","","Allocate a new blank loop analysis struct. Use `compute`…",183,[[]]],[11,"loops","","Returns all the loops contained in a function.",183,[[],[["keys",3],["loop",3]]]],[11,"loop_header","","Returns the header block of a particular loop.",183,[[["loop",3]],["block",3]]],[11,"loop_parent","","Return the eventual parent of a loop in the loop tree.",183,[[["loop",3]],[["option",4],["loop",3]]]],[11,"is_in_loop","","Determine if a Block belongs to a loop by running a finger…",183,[[["block",3],["loop",3]]]],[11,"is_child_loop","","Determines if a loop is contained in another loop.",183,[[["loop",3]]]],[11,"compute","","Detects the loops in a function. Needs the control flow…",183,[[["dominatortree",3],["function",3],["controlflowgraph",3]]]],[11,"is_valid","","Check if the loop analysis is in a valid state.",183,[[]]],[11,"clear","","Clear all the data structures contained in the loop…",183,[[]]],[0,"machinst","cranelift_codegen","This module exposes the machine-specific backend…",null,null],[0,"lower","cranelift_codegen::machinst","This module implements lowering (instruction selection)…",null,null],[8,"LowerCtx","cranelift_codegen::machinst::lower","A context that machine-specific lowering code can use to…",null,null],[16,"I","","The instruction type for which this lowering framework is…",184,null],[10,"abi","","Get the `ABICallee`.",184,[[],["abicallee",8]]],[10,"retval","","Get the (virtual) register that receives the return value.…",184,[[],[["valueregs",3],["writable",3]]]],[10,"get_vm_context","","Returns the vreg containing the VmContext parameter, if…",184,[[],[["option",4],["reg",3]]]],[10,"data","","Get the instdata for a given IR instruction.",184,[[["inst",3]],["instructiondata",4]]],[10,"ty","","Get the controlling type for a polymorphic IR instruction.",184,[[["inst",3]],["type",3]]],[10,"call_target","","Get the target for a call instruction, as an…",184,[[["inst",3]],["option",4]]],[10,"call_sig","","Get the signature for a call or call-indirect instruction.",184,[[["inst",3]],[["option",4],["signature",3]]]],[10,"symbol_value","","Get the symbol name, relocation distance estimate, and…",184,[[["inst",3]],["option",4]]],[10,"memflags","","Returns the memory flags of a given memory access.",184,[[["inst",3]],[["option",4],["memflags",3]]]],[10,"srcloc","","Get the source location for a given instruction.",184,[[["inst",3]],["sourceloc",3]]],[10,"num_inputs","","Get the number of inputs to the given IR instruction.",184,[[["inst",3]]]],[10,"num_outputs","","Get the number of outputs to the given IR instruction.",184,[[["inst",3]]]],[10,"input_ty","","Get the type for an instruction\'s input.",184,[[["inst",3]],["type",3]]],[10,"output_ty","","Get the type for an instruction\'s output.",184,[[["inst",3]],["type",3]]],[10,"get_constant","","Get the value of a constant instruction (`iconst`, etc.)…",184,[[["inst",3]],["option",4]]],[10,"get_input_as_source_or_const","","Get the input as one of two options other than a direct…",184,[[["inst",3]],["nonreginput",3]]],[10,"put_input_in_regs","","Put the `idx`th input into register(s) and return the…",184,[[["inst",3]],[["valueregs",3],["reg",3]]]],[10,"get_output","","Get the `idx`th output register(s) of the given IR…",184,[[["inst",3]],[["valueregs",3],["writable",3]]]],[10,"alloc_tmp","","Get a new temp.",184,[[["type",3]],[["valueregs",3],["writable",3]]]],[10,"emit","","Emit a machine instruction.",184,[[]]],[10,"emit_safepoint","","Emit a machine instruction that is a safepoint.",184,[[]]],[10,"sink_inst","","Indicate that the side-effect of an instruction has been…",184,[[["inst",3]]]],[10,"get_constant_data","","Retrieve constant data given a handle.",184,[[["constant",3]],["constantdata",3]]],[10,"use_constant","","Indicate that a constant should be emitted.",184,[[["vcodeconstantdata",4]],["vcodeconstant",3]]],[10,"get_immediate","","Retrieve the value immediate from an instruction. This…",184,[[["inst",3]],[["option",4],["datavalue",4]]]],[10,"ensure_in_vreg","","Cause the value in `reg` to be in a virtual reg, by…",184,[[["type",3],["reg",3]],["reg",3]]],[3,"NonRegInput","","A representation of all of the ways in which a value is…",null,null],[12,"inst","","An instruction produces this value (as the given output),…",185,null],[12,"constant","","The value is a known constant.",185,null],[8,"LowerBackend","","A machine backend.",null,null],[16,"MInst","","The machine instruction type.",186,null],[10,"lower","","Lower a single instruction.",186,[[["inst",3]],["codegenresult",6]]],[10,"lower_branch_group","","Lower a block-terminating group of branches (which…",186,[[],["codegenresult",6]]],[11,"maybe_pinned_reg","","A bit of a hack: give a fixed register that always holds…",186,[[],[["option",4],["reg",3]]]],[3,"Lower","","Machine-independent lowering driver / machine-instruction…",null,null],[4,"RelocDistance","","Notion of \\\"relocation distance\\\". This gives an estimate of…",null,null],[13,"Near","","Target of relocation is \\\"nearby\\\". The threshold for this…",187,null],[13,"Far","","Target of relocation could be anywhere in the address space.",187,null],[11,"new","","Prepare a new lowering context for the given IR function.",188,[[["function",3],["box",3],["abicallee",8],["blockloweringorder",3]],[["codegenresult",6],["lower",3]]]],[11,"lower","","Lower the function.",188,[[],["codegenresult",6]]],[0,"vcode","cranelift_codegen::machinst","This implements the VCode container: a CFG of Insts that…",null,null],[6,"InsnIndex","cranelift_codegen::machinst::vcode","Index referring to an instruction in VCode.",null,null],[6,"BlockIndex","","Index referring to a basic block in VCode.",null,null],[6,"InsnRange","","Range of an instructions in VCode.",null,null],[8,"VCodeInst","","VCodeInst wraps all requirements for a MachInst to be in…",null,null],[3,"VCode","","A function in \\\"VCode\\\" (virtualized-register code) form,…",null,null],[3,"VCodeBuilder","","A builder for a VCode function body. This builder is…",null,null],[11,"new","","Create a new VCodeBuilder.",189,[[["box",3],["abicallee",8],["blockloweringorder",3],["vcodeconstants",3]],["vcodebuilder",3]]],[11,"abi","","Access the ABI object.",189,[[],["abicallee",8]]],[11,"block_order","","Access to the BlockLoweringOrder object.",189,[[],["blockloweringorder",3]]],[11,"set_vreg_type","","Set the type of a VReg.",189,[[["type",3],["virtualreg",3]]]],[11,"have_ref_values","","Are there any reference-typed values at all among the vregs?",189,[[]]],[11,"set_entry","","Set the current block as the entry block.",189,[[["blockindex",6]]]],[11,"end_bb","","End the current basic block. Must be called after emitting…",189,[[]]],[11,"push","","Push an instruction for the current BB and current IR inst…",189,[[]]],[11,"get_srcloc","","Get the current source location.",189,[[],["sourceloc",3]]],[11,"set_srcloc","","Set the current source location.",189,[[["sourceloc",3]]]],[11,"constants","","Access the constants.",189,[[],["vcodeconstants",3]]],[11,"build","","Build the final VCode, returning the vcode itself as well…",189,[[]]],[11,"flags","","Returns the flags controlling this function\'s compilation.",190,[[],["flags",3]]],[11,"vreg_type","","Get the IR-level type of a VReg.",190,[[["virtualreg",3]],["type",3]]],[11,"have_ref_values","","Are there any reference-typed values at all among the vregs?",190,[[]]],[11,"entry","","Get the entry block.",190,[[],["blockindex",6]]],[11,"num_blocks","","Get the number of blocks. Block indices will be in the…",190,[[]]],[11,"frame_size","","Stack frame size for the full function\'s body.",190,[[]]],[11,"stack_args_size","","Inbound stack-args size.",190,[[]]],[11,"succs","","Get the successors for a block.",190,[[["blockindex",6]]]],[11,"replace_insns_from_regalloc","","Take the results of register allocation, with a sequence…",190,[[["regallocresult",3]]]],[11,"emit","","Emit the instructions to a `MachBuffer`, containing…",190,[[],["machbuffer",3]]],[11,"unwind_info","","Generates unwind info.",190,[[],[["option",4],["codegenresult",6]]]],[11,"value_labels_ranges","","Generates value-label ranges.",190,[[],[["codegenresult",6],["option",4]]]],[11,"bindex_to_bb","","Get the IR block for a BlockIndex, if one exists.",190,[[["blockindex",6]],[["option",4],["block",3]]]],[3,"VCodeConstants","","This structure tracks the large constants used in VCode…",null,null],[11,"with_capacity","","Initialize the structure with the expected number of…",191,[[]]],[11,"insert","","Insert a constant; using this method indicates that a…",191,[[["vcodeconstantdata",4]],["vcodeconstant",3]]],[11,"get","","Retrieve a byte slice for the given [VCodeConstant], if…",191,[[["vcodeconstant",3]],["option",4]]],[11,"len","","Return the number of constants inserted.",191,[[]]],[11,"keys","","Iterate over the [VCodeConstant] keys inserted in this…",191,[[],[["keys",3],["vcodeconstant",3]]]],[11,"iter","","Iterate over the [VCodeConstant] keys and the data (as a…",191,[[]]],[3,"VCodeConstant","","A use of a constant by one or more VCode instructions; see…",null,null],[11,"from_u32","","Create a new instance from a `u32`.",192,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",192,[[]]],[4,"VCodeConstantData","","Identify the different types of constant that can be…",null,null],[13,"Pool","","A constant already present in the Cranelift IR ConstantPool.",193,null],[13,"WellKnown","","A reference to a well-known constant value that is…",193,null],[13,"Generated","","A constant value generated during lowering; the value may…",193,null],[11,"as_slice","","Retrieve the constant data as a byte slice.",193,[[]]],[11,"alignment","","Calculate the alignment of the constant data.",193,[[]]],[0,"compile","cranelift_codegen::machinst","Compilation backend pipeline: optimized IR to VCode /…",null,null],[5,"compile","cranelift_codegen::machinst::compile","Compile the given function down to VCode with allocated…",null,[[["box",3],["function",3],["abicallee",8]],[["codegenresult",6],["vcode",3]]]],[0,"blockorder","cranelift_codegen::machinst","Computation of basic block order in emitted code.",null,null],[3,"BlockLoweringOrder","cranelift_codegen::machinst::blockorder","Mapping from CLIF BBs to VCode BBs.",null,null],[4,"LoweredBlock","","The origin of a block in the lowered block-order: either…",null,null],[13,"Orig","","Block in original CLIF, with no merged edge-blocks.",194,null],[12,"block","cranelift_codegen::machinst::blockorder::LoweredBlock","Original CLIF block.",195,null],[13,"OrigAndEdge","cranelift_codegen::machinst::blockorder","Block in the original CLIF, plus edge-block to one succ…",194,null],[12,"block","cranelift_codegen::machinst::blockorder::LoweredBlock","The original CLIF block contained in this lowered block.",196,null],[12,"edge_inst","","The edge (jump) instruction transitioning from this block…",196,null],[12,"succ","","The successor CLIF block.",196,null],[13,"EdgeAndOrig","cranelift_codegen::machinst::blockorder","Block in the original CLIF, preceded by edge-block from…",194,null],[12,"pred","cranelift_codegen::machinst::blockorder::LoweredBlock","The previous CLIF block, i.e., the edge block\'s predecessor.",197,null],[12,"edge_inst","","The edge (jump) instruction corresponding to the included…",197,null],[12,"block","","The original CLIF block included in this lowered block.",197,null],[13,"Edge","cranelift_codegen::machinst::blockorder","Split critical edge between two CLIF blocks. This lowered…",194,null],[12,"pred","cranelift_codegen::machinst::blockorder::LoweredBlock","The predecessor CLIF block.",198,null],[12,"edge_inst","","The edge (jump) instruction corresponding to this edge\'s…",198,null],[12,"succ","","The successor CLIF block.",198,null],[11,"orig_block","cranelift_codegen::machinst::blockorder","The associated original (CLIF) block included in this…",194,[[],[["block",3],["option",4]]]],[11,"in_edge","","The associated in-edge, if any.",194,[[],["option",4]]],[11,"out_edge","","the associated out-edge, if any. Also includes edge-only…",194,[[],["option",4]]],[11,"new","","Compute and return a lowered block order for `f`.",199,[[["function",3]],["blockloweringorder",3]]],[11,"lowered_order","","Get the lowered order of blocks.",199,[[]]],[11,"succs","","Get the successors for a lowered block, by index in…",199,[[["blockindex",6]]]],[11,"succ_indices","","Get the successor indices for a lowered block.",199,[[["blockindex",6]]]],[11,"lowered_block_for_bb","","Get the lowered block index containing a CLIF block, if…",199,[[["block",3]],[["blockindex",6],["option",4]]]],[0,"abi","cranelift_codegen::machinst","ABI definitions.",null,null],[6,"SmallInstVec","cranelift_codegen::machinst::abi","A small vector of instructions (with some reasonable…",null,null],[8,"ABICallee","","Trait implemented by an object that tracks ABI-related…",null,null],[16,"I","","The instruction type for the ISA associated with this ABI.",200,null],[10,"temp_needed","","Does the ABI-body code need a temp reg (and if so, of what…",200,[[],[["type",3],["option",4]]]],[10,"init","","Initialize. This is called after the ABICallee is…",200,[[["option",4],["writable",3]]]],[10,"signature","","Access the (possibly legalized) signature.",200,[[],["signature",3]]],[10,"accumulate_outgoing_args_size","","Accumulate outgoing arguments. This ensures that at least…",200,[[]]],[10,"flags","","Get the settings controlling this function\'s compilation.",200,[[],["flags",3]]],[10,"call_conv","","Get the calling convention implemented by this ABI object.",200,[[],["callconv",4]]],[10,"liveins","","Get the liveins of the function.",200,[[],[["set",3],["realreg",3]]]],[10,"liveouts","","Get the liveouts of the function.",200,[[],[["set",3],["realreg",3]]]],[10,"num_args","","Number of arguments.",200,[[]]],[10,"num_retvals","","Number of return values.",200,[[]]],[10,"num_stackslots","","Number of stack slots (not spill slots).",200,[[]]],[10,"gen_copy_arg_to_regs","","Generate an instruction which copies an argument to a…",200,[[["valueregs",3],["writable",3]],["smallinstvec",6]]],[10,"arg_is_needed_in_body","","Is the given argument needed in the body (as opposed to,…",200,[[]]],[10,"gen_retval_area_setup","","Generate any setup instruction needed to save values to…",200,[[],["option",4]]],[10,"gen_copy_regs_to_retval","","Generate an instruction which copies a source register to…",200,[[["valueregs",3],["writable",3]],["smallinstvec",6]]],[10,"gen_ret","","Generate a return instruction.",200,[[]]],[10,"gen_epilogue_placeholder","","Generate an epilogue placeholder. The returned instruction…",200,[[]]],[10,"set_num_spillslots","","Update with the number of spillslots, post-regalloc.",200,[[]]],[10,"set_clobbered","","Update with the clobbered registers, post-regalloc.",200,[[["writable",3],["set",3]]]],[10,"stackslot_addr","","Get the address of a stackslot.",200,[[["writable",3],["stackslot",3],["reg",3]]]],[10,"load_stackslot","","Load from a stackslot.",200,[[["type",3],["stackslot",3],["writable",3],["valueregs",3]],["smallinstvec",6]]],[10,"store_stackslot","","Store to a stackslot.",200,[[["type",3],["stackslot",3],["valueregs",3],["reg",3]],["smallinstvec",6]]],[10,"load_spillslot","","Load from a spillslot.",200,[[["type",3],["spillslot",3],["writable",3],["valueregs",3]],["smallinstvec",6]]],[10,"store_spillslot","","Store to a spillslot.",200,[[["type",3],["spillslot",3],["valueregs",3],["reg",3]],["smallinstvec",6]]],[10,"spillslots_to_stack_map","","Generate a stack map, given a list of spillslots and the…",200,[[],["stackmap",3]]],[10,"gen_prologue","","Generate a prologue, post-regalloc. This should include…",200,[[],["smallinstvec",6]]],[10,"gen_epilogue","","Generate an epilogue, post-regalloc. Note that this must…",200,[[],["smallinstvec",6]]],[10,"frame_size","","Returns the full frame size for the given function, after…",200,[[]]],[10,"stack_args_size","","Returns the size of arguments expected on the stack.",200,[[]]],[10,"get_spillslot_size","","Get the spill-slot size.",200,[[["regclass",4],["type",3]]]],[10,"gen_spill","","Generate a spill. The type, if known, is given; this can…",200,[[["type",3],["spillslot",3],["option",4],["realreg",3]]]],[10,"gen_reload","","Generate a reload (fill). As for spills, the type may be…",200,[[["type",3],["spillslot",3],["writable",3],["option",4],["realreg",3]]]],[10,"unwind_info_kind","","Desired unwind info type.",200,[[],["unwindinfokind",4]]],[8,"ABICaller","","Trait implemented by an object that tracks ABI-related…",null,null],[16,"I","","The instruction type for the ISA associated with this ABI.",201,null],[10,"num_args","","Get the number of arguments expected.",201,[[]]],[10,"signature","","Access the (possibly legalized) signature.",201,[[],["signature",3]]],[10,"emit_copy_regs_to_arg","","Emit a copy of an argument value from a source register,…",201,[[["valueregs",3],["reg",3]]]],[10,"get_copy_to_arg_order","","Specific order for copying into arguments at callsites. We…",201,[[],["smallvec",3]]],[10,"emit_copy_retval_to_regs","","Emit a copy a return value into a destination register,…",201,[[["valueregs",3],["writable",3]]]],[10,"emit_stack_pre_adjust","","Emit code to pre-adjust the stack, prior to argument…",201,[[]]],[10,"emit_stack_post_adjust","","Emit code to post-adjust the satck, after call return and…",201,[[]]],[10,"accumulate_outgoing_args_size","","Accumulate outgoing arguments. This ensures that the…",201,[[]]],[10,"emit_call","","Emit the call itself.",201,[[]]],[0,"abi_impl","cranelift_codegen::machinst","Implementation of a vanilla ABI, shared between several…",null,null],[4,"ABIArg","cranelift_codegen::machinst::abi_impl","A location for an argument or return value.",null,null],[13,"Reg","","In a real register (or set of registers).",202,null],[12,"regs","cranelift_codegen::machinst::abi_impl::ABIArg","Register(s) that hold this arg.",203,null],[12,"ty","","Value type of this arg.",203,null],[12,"extension","","Should this arg be zero- or sign-extended?",203,null],[12,"purpose","","Purpose of this arg.",203,null],[13,"Stack","cranelift_codegen::machinst::abi_impl","Arguments only: on stack, at given offset from SP at entry.",202,null],[12,"offset","cranelift_codegen::machinst::abi_impl::ABIArg","Offset of this arg relative to the base of stack args.",204,null],[12,"ty","","Value type of this arg.",204,null],[12,"extension","","Should this arg be zero- or sign-extended?",204,null],[12,"purpose","","Purpose of this arg.",204,null],[13,"StructArg","cranelift_codegen::machinst::abi_impl","Structure argument. We reserve stack space for it, but the…",202,null],[12,"offset","cranelift_codegen::machinst::abi_impl::ABIArg","Offset of this arg relative to base of stack args.",205,null],[12,"size","","Size of this arg on the stack.",205,null],[12,"purpose","","Purpose of this arg.",205,null],[4,"ArgsOrRets","cranelift_codegen::machinst::abi_impl","Are we computing information about arguments or return…",null,null],[13,"Args","","Arguments.",206,null],[13,"Rets","","Return values.",206,null],[4,"InstIsSafepoint","","Is an instruction returned by an ABI machine-specific…",null,null],[13,"Yes","","The instruction is a safepoint.",207,null],[13,"No","","The instruction is not a safepoint.",207,null],[4,"StackAMode","","Abstract location for a machine-specific ABI impl to…",null,null],[13,"FPOffset","","Offset from the frame pointer, possibly making use of a…",208,null],[13,"NominalSPOffset","","Offset from the nominal stack pointer, possibly making use…",208,null],[13,"SPOffset","","Offset from the real stack pointer, possibly making use of…",208,null],[11,"offset","","Offset by an addend.",208,[[]]],[8,"ABIMachineSpec","","Trait implemented by machine-specific backend to provide…",null,null],[16,"I","","The instruction type.",209,null],[10,"word_bits","","Returns the number of bits in a word, that is 32/64 for…",209,[[]]],[11,"word_bytes","","Returns the number of bytes in a word.",209,[[]]],[11,"word_type","","Returns word-size integer type.",209,[[],["type",3]]],[11,"word_reg_class","","Returns word register class.",209,[[],["regclass",4]]],[10,"stack_align","","Returns required stack alignment in bytes.",209,[[["callconv",4]]]],[10,"compute_arg_locs","","Process a list of parameters or return values and allocate…",209,[[["callconv",4],["argsorrets",4]],["codegenresult",6]]],[10,"fp_to_arg_offset","","Returns the offset from FP to the argument area, i.e.,…",209,[[["callconv",4],["flags",3]]]],[10,"gen_load_stack","","Generate a load from the stack.",209,[[["type",3],["reg",3],["writable",3],["stackamode",4]]]],[10,"gen_store_stack","","Generate a store to the stack.",209,[[["type",3],["stackamode",4],["reg",3]]]],[10,"gen_move","","Generate a move.",209,[[["type",3],["reg",3],["writable",3]]]],[10,"gen_extend","","Generate an integer-extend operation.",209,[[["reg",3],["writable",3]]]],[10,"gen_ret","","Generate a return instruction.",209,[[]]],[10,"gen_epilogue_placeholder","","Generate an \\\"epilogue placeholder\\\" instruction, recognized…",209,[[]]],[10,"gen_add_imm","","Generate an add-with-immediate. Note that even if this…",209,[[["reg",3],["writable",3]],["smallinstvec",6]]],[10,"gen_stack_lower_bound_trap","","Generate a sequence that traps with a…",209,[[["reg",3]],["smallinstvec",6]]],[10,"gen_get_stack_addr","","Generate an instruction to compute an address of a stack…",209,[[["type",3],["reg",3],["writable",3],["stackamode",4]]]],[10,"get_stacklimit_reg","","Get a fixed register to use to compute a stack limit. This…",209,[[],["reg",3]]],[10,"gen_load_base_offset","","Generate a store to the given [base+offset] address.",209,[[["type",3],["reg",3],["writable",3]]]],[10,"gen_store_base_offset","","Generate a load from the given [base+offset] address.",209,[[["type",3],["reg",3]]]],[10,"gen_sp_reg_adjust","","Adjust the stack pointer up or down.",209,[[],["smallinstvec",6]]],[10,"gen_nominal_sp_adj","","Generate a meta-instruction that adjusts the nominal SP…",209,[[]]],[10,"gen_prologue_frame_setup","","Generate the usual frame-setup sequence for this…",209,[[],["smallinstvec",6]]],[10,"gen_epilogue_frame_restore","","Generate the usual frame-restore sequence for this…",209,[[],["smallinstvec",6]]],[10,"gen_probestack","","Generate a probestack call.",209,[[],["smallinstvec",6]]],[10,"gen_clobber_save","","Generate a clobber-save sequence. This takes the list of…",209,[[["callconv",4],["set",3],["flags",3]]]],[10,"gen_clobber_restore","","Generate a clobber-restore sequence. This sequence should…",209,[[["callconv",4],["set",3],["flags",3]],["smallvec",3]]],[10,"gen_call","","Generate a call instruction/sequence. This method is…",209,[[["callconv",4],["writable",3],["calldest",4],["vec",3],["opcode",4],["reg",3],["vec",3]],["smallvec",3]]],[10,"gen_memcpy","","Generate a memcpy invocation. Used to set up struct args.…",209,[[["callconv",4],["reg",3]],["smallvec",3]]],[10,"get_number_of_spillslots_for_value","","Get the number of spillslots required for the given…",209,[[["regclass",4],["type",3]]]],[10,"get_virtual_sp_offset_from_state","","Get the current virtual-SP offset from an…",209,[[]]],[10,"get_nominal_sp_to_fp","","Get the \\\"nominal SP to FP\\\" offset from an…",209,[[]]],[10,"get_regs_clobbered_by_call","","Get all caller-save registers, that is, registers that we…",209,[[["callconv",4]],[["writable",3],["vec",3]]]],[10,"get_ext_mode","","Get the needed extension mode, given the mode attached to…",209,[[["callconv",4],["argumentextension",4]],["argumentextension",4]]],[3,"ABICalleeImpl","","ABI object for a function body.",null,null],[11,"new","","Create a new body ABI instance.",210,[[["flags",3],["function",3]],["codegenresult",6]]],[3,"ABICallerImpl","","ABI object for a callsite.",null,null],[4,"CallDest","","Destination for a call.",null,null],[13,"ExtName","","Call to an ExtName (named function symbol).",211,null],[13,"Reg","","Indirect call to a function pointer in a register.",211,null],[11,"from_func","","Create a callsite ABI object for a call directly to the…",212,[[["callconv",4],["signature",3],["relocdistance",4],["externalname",4],["flags",3]],[["abicallerimpl",3],["codegenresult",6]]]],[11,"from_ptr","","Create a callsite ABI object for a call to a function…",212,[[["callconv",4],["opcode",4],["signature",3],["reg",3],["flags",3]],[["abicallerimpl",3],["codegenresult",6]]]],[0,"buffer","cranelift_codegen::machinst","In-memory representation of compiled machine code, with…",null,null],[3,"MachBuffer","cranelift_codegen::machinst::buffer","A buffer of output to be produced, fixed up, and then…",null,null],[3,"MachBufferFinalized","","A `MachBuffer` once emission is completed: holds generated…",null,null],[12,"data","","The buffer contents, as raw bytes.",213,null],[3,"MachLabel","","A label refers to some offset in a `MachBuffer`. It may…",null,null],[11,"from_u32","","Create a new instance from a `u32`.",214,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",214,[[]]],[11,"from_block","","Get a label for a block. (The first N MachLabels are…",214,[[["blockindex",6]],["machlabel",3]]],[11,"get","","Get the numeric label index.",214,[[]]],[11,"to_string","","Creates a string representing this label, for convenience.",214,[[],["string",3]]],[4,"StackMapExtent","","A stack map extent, when creating a stack map.",null,null],[13,"UpcomingBytes","","The stack map starts at this instruction, and ends after…",215,null],[13,"StartedAtOffset","","The stack map started at the given offset and ends at the…",215,null],[11,"new","","Create a new section, known to start at `start_offset` and…",216,[[],["machbuffer",3]]],[11,"cur_offset","","Current offset from start of buffer.",216,[[],["codeoffset",6]]],[11,"put1","","Add a byte.",216,[[]]],[11,"put2","","Add 2 bytes.",216,[[]]],[11,"put4","","Add 4 bytes.",216,[[]]],[11,"put8","","Add 8 bytes.",216,[[]]],[11,"put_data","","Add a slice of bytes.",216,[[]]],[11,"get_appended_space","","Reserve appended space and return a mutable slice…",216,[[]]],[11,"align_to","","Align up to the given alignment.",216,[[["codeoffset",6]]]],[11,"get_label","","Allocate a `Label` to refer to some offset. May not be…",216,[[],["machlabel",3]]],[11,"reserve_labels_for_blocks","","Reserve the first N MachLabels for blocks.",216,[[["blockindex",6]]]],[11,"reserve_labels_for_constants","","Reserve the next N MachLabels for constants.",216,[[["vcodeconstants",3]]]],[11,"get_label_for_constant","","Retrieve the reserved label for a constant.",216,[[["vcodeconstant",3]],["machlabel",3]]],[11,"bind_label","","Bind a label to the current offset. A label can only be…",216,[[["machlabel",3]]]],[11,"use_label_at_offset","","Emit a reference to the given label with the given…",216,[[["codeoffset",6],["machlabel",3]]]],[11,"add_uncond_branch","","Inform the buffer of an unconditional branch at the given…",216,[[["codeoffset",6],["machlabel",3]]]],[11,"add_cond_branch","","Inform the buffer of a conditional branch at the given…",216,[[["codeoffset",6],["machlabel",3]]]],[11,"defer_constant","","Emit a constant at some point in the future, binding the…",216,[[["machlabel",3],["codeoffset",6]]]],[11,"island_needed","","Is an island needed within the next N bytes?",216,[[["codeoffset",6]]]],[11,"emit_island","","Emit all pending constants and veneers. Should only be…",216,[[]]],[11,"finish","","Finish any deferred emissions and/or fixups.",216,[[],["machbufferfinalized",3]]],[11,"add_reloc","","Add an external relocation at the current offset.",216,[[["reloc",4],["sourceloc",3],["addend",6],["externalname",4]]]],[11,"add_trap","","Add a trap record at the current offset.",216,[[["trapcode",4],["sourceloc",3]]]],[11,"add_call_site","","Add a call-site record at the current offset.",216,[[["opcode",4],["sourceloc",3]]]],[11,"start_srcloc","","Set the `SourceLoc` for code from this offset until the…",216,[[["sourceloc",3]]]],[11,"end_srcloc","","Mark the end of the `SourceLoc` segment started at the…",216,[[]]],[11,"add_stack_map","","Add stack map metadata for this program point: a set of…",216,[[["stackmap",3],["stackmapextent",4]]]],[11,"get_srclocs_sorted","","Get a list of source location mapping tuples in…",213,[[]]],[11,"total_size","","Get the total required size for the code.",213,[[],["codeoffset",6]]],[11,"emit","","Emit this buffer to the given CodeSink.",213,[[]]],[11,"stack_maps","","Get the stack map metadata for this code.",213,[[]]],[3,"MachSrcLoc","","A source-location mapping resulting from a compilation.",null,null],[12,"start","","The start of the region of code corresponding to a source…",217,null],[12,"end","","The end of the region of code corresponding to a source…",217,null],[12,"loc","","The source location.",217,null],[3,"MachStackMap","","Record of stack map metadata: stack offsets containing…",null,null],[12,"offset","","The code offset at which this stack map applies.",218,null],[12,"offset_end","","The code offset just past the \\\"end\\\" of the instruction:…",218,null],[12,"stack_map","","The stack map itself.",218,null],[0,"adapter","cranelift_codegen::machinst","Adapter for a `MachBackend` to implement the `TargetIsa`…",null,null],[3,"TargetIsaAdapter","cranelift_codegen::machinst::adapter","A wrapper around a `MachBackend` that provides a…",null,null],[11,"new","","Create a new `TargetIsa` wrapper around a `MachBackend`.",219,[[["sync",8],["machbackend",8],["send",8]],["targetisaadapter",3]]],[0,"helpers","cranelift_codegen::machinst","Miscellaneous helpers for machine backends.",null,null],[5,"ty_bits","cranelift_codegen::machinst::helpers","Returns the size (in bits) of a given type.",null,[[["type",3]]]],[0,"inst_common","cranelift_codegen::machinst","A place to park MachInst::Inst fragments which are common…",null,null],[4,"AtomicRmwOp","cranelift_codegen::machinst::inst_common","Atomic memory update operations. As of 21 Aug 2020 these…",null,null],[13,"Add","","Add",220,null],[13,"Sub","","Sub",220,null],[13,"And","","And",220,null],[13,"Or","","Or",220,null],[13,"Xor","","Exclusive Or",220,null],[13,"Xchg","","Exchange (swap operands)",220,null],[11,"from","","Converts an `ir::AtomicRmwOp` to the corresponding…",220,[[["atomicrmwop",4]]]],[0,"valueregs","cranelift_codegen::machinst","Data structure for tracking the (possibly multiple)…",null,null],[3,"ValueRegs","cranelift_codegen::machinst::valueregs","Location at which a `Value` is stored in register(s): the…",null,null],[8,"InvalidSentinel","","A type with an \\\"invalid\\\" sentinel value.",null,null],[10,"invalid_sentinel","","The invalid sentinel value.",221,[[]]],[11,"is_invalid_sentinel","","Is this the invalid sentinel?",221,[[]]],[11,"invalid","","Create an invalid Value-in-Reg.",222,[[]]],[11,"is_valid","","Is this Value-to-Reg mapping valid?",222,[[]]],[11,"is_invalid","","Is this Value-to-Reg mapping invalid?",222,[[]]],[11,"only_reg","","Return the single register used for this value, if any.",222,[[],["option",4]]],[11,"regs","","Return an iterator over the registers storing this value.",222,[[]]],[11,"one","","Create a Value-in-R location for a value stored in one…",222,[[]]],[11,"two","","Create a Value-in-R location for a value stored in two…",222,[[]]],[11,"len","","Return the number of registers used.",222,[[]]],[11,"map","","Map individual registers via a map function.",222,[[],["valueregs",3]]],[0,"debug","cranelift_codegen::machinst","Debug info analysis: computes value-label ranges from…",null,null],[8,"MachInst","","A machine instruction.",null,null],[10,"get_regs","","Return the registers referenced by this machine…",223,[[["regusagecollector",3]]]],[10,"map_regs","","Map virtual registers to physical registers using the…",223,[[]]],[10,"is_move","","If this is a simple move, return the (source, destination)…",223,[[],["option",4]]],[10,"is_term","","Is this a terminator (branch or ret)? If so, return its…",223,[[],["machterminator",4]]],[10,"is_epilogue_placeholder","","Returns true if the instruction is an epilogue placeholder.",223,[[]]],[11,"is_included_in_clobbers","","Should this instruction be included in the clobber-set?",223,[[]]],[11,"stack_op_info","","If this is a load or store to the stack, return that info.",223,[[],[["option",4],["machinststackopinfo",4]]]],[10,"gen_move","","Generate a move.",223,[[["type",3],["reg",3],["writable",3]]]],[10,"gen_constant","","Generate a constant into a reg.",223,[[["type",3],["fnmut",8],["writable",3],["valueregs",3]],["smallvec",3]]],[10,"gen_zero_len_nop","","Generate a zero-length no-op.",223,[[]]],[10,"maybe_direct_reload","","Possibly operate on a value directly in a spill-slot…",223,[[["virtualreg",3],["spillslot",3]],["option",4]]],[10,"rc_for_type","","Determine register class(es) to store the given Cranelift…",223,[[["type",3]],["codegenresult",6]]],[10,"gen_jump","","Generate a jump to another target. Used during lowering of…",223,[[["machlabel",3]]]],[10,"gen_nop","","Generate a NOP. The `preferred_size` parameter allows the…",223,[[]]],[10,"reg_universe","","Get the register universe for this backend.",223,[[["flags",3]],["realreguniverse",3]]],[11,"align_basic_block","","Align a basic block offset (from start of function). By…",223,[[["codeoffset",6]],["codeoffset",6]]],[10,"worst_case_size","","What is the worst-case instruction size emitted by this…",223,[[],["codeoffset",6]]],[10,"ref_type_regclass","","What is the register class used for reference types…",223,[[["flags",3]],["regclass",4]]],[11,"defines_value_label","","Does this instruction define a ValueLabel? Returns the…",223,[[],["option",4]]],[11,"gen_value_label_marker","","Create a marker instruction that defines a value label.",223,[[["valuelabel",3],["reg",3]]]],[16,"LabelUse","","A label-use kind: a type that describes the types of label…",223,null],[8,"MachInstLabelUse","","A descriptor of a label reference (use) in an instruction…",null,null],[18,"ALIGN","","Required alignment for any veneer. Usually the required…",224,null],[10,"max_pos_range","","What is the maximum PC-relative range (positive)? E.g., if…",224,[[],["codeoffset",6]]],[10,"max_neg_range","","What is the maximum PC-relative range (negative)? This is…",224,[[],["codeoffset",6]]],[10,"patch_size","","What is the size of code-buffer slice this label-use needs…",224,[[],["codeoffset",6]]],[10,"patch","","Perform a code-patch, given the offset into the buffer of…",224,[[["codeoffset",6]]]],[10,"supports_veneer","","Can the label-use be patched to a veneer that supports a…",224,[[]]],[10,"veneer_size","","How many bytes are needed for a veneer?",224,[[],["codeoffset",6]]],[10,"generate_veneer","","Generate a veneer. The given code-buffer slice is…",224,[[["codeoffset",6]]]],[4,"MachTerminator","","Describes a block terminator (not call) in the vcode, when…",null,null],[13,"None","","Not a terminator.",225,null],[13,"Ret","","A return instruction.",225,null],[13,"Uncond","","An unconditional branch to another block.",225,null],[13,"Cond","","A conditional branch to one of two other blocks.",225,null],[13,"Indirect","","An indirect branch with known possible targets.",225,null],[11,"get_succs","","Get the successor labels named in a `MachTerminator`.",225,[[],["smallvec",3]]],[11,"is_term","","Is this a terminator?",225,[[]]],[8,"MachInstEmit","","A trait describing the ability to encode a MachInst into…",null,null],[16,"State","","Persistent state carried across `emit` invocations.",226,null],[16,"Info","","Constant information used in `emit` invocations.",226,null],[16,"UnwindInfo","","Unwind info generator.",226,null],[10,"emit","","Emit the instruction.",226,[[["machbuffer",3]]]],[10,"pretty_print","","Pretty-print the instruction.",226,[[["option",4],["realreguniverse",3]],["string",3]]],[8,"MachInstEmitInfo","","Constant information used to emit an instruction.",null,null],[10,"flags","","Return the target-independent settings used for the…",227,[[],["flags",3]]],[8,"MachInstEmitState","","A trait describing the emission state carried between…",null,null],[10,"new","","Create a new emission state given the ABI object.",228,[[["abicallee",8]]]],[11,"pre_safepoint","","Update the emission state before emitting an instruction…",228,[[["stackmap",3]]]],[11,"pre_sourceloc","","Update the emission state to indicate instructions are…",228,[[["sourceloc",3]]]],[3,"MachCompileResult","","The result of a `MachBackend::compile_function()` call.…",null,null],[12,"buffer","","Machine code.",229,null],[12,"frame_size","","Size of stack frame, in bytes.",229,null],[12,"disasm","","Disassembly, if requested.",229,null],[12,"unwind_info","","Unwind info.",229,null],[12,"value_labels_ranges","","Debug info: value labels to registers/stackslots at code…",229,null],[11,"code_info","","Get a `CodeInfo` describing section sizes from this…",229,[[],["codeinfo",3]]],[8,"MachBackend","","Top-level machine backend trait, which wraps all…",null,null],[10,"compile_function","","Compile the given function.",230,[[["function",3]],[["codegenresult",6],["machcompileresult",3]]]],[10,"flags","","Return flags for this backend.",230,[[],["flags",3]]],[10,"hash_all_flags","","Hashes all flags, both ISA-independent and ISA-specific,…",230,[[["hasher",8]]]],[10,"triple","","Return triple for this backend.",230,[[],["triple",3]]],[10,"name","","Return name for this backend.",230,[[]]],[10,"reg_universe","","Return the register universe for this backend.",230,[[],["realreguniverse",3]]],[10,"unsigned_add_overflow_condition","","Machine-specific condcode info needed by TargetIsa.…",230,[[],["intcc",4]]],[10,"unsigned_sub_overflow_condition","","Machine-specific condcode info needed by TargetIsa.…",230,[[],["intcc",4]]],[11,"emit_unwind_info","","Produces unwind info based on backend results.",230,[[["machcompileresult",3],["unwindinfokind",4]],[["codegenresult",6],["option",4]]]],[11,"create_systemv_cie","","Creates a new System V Common Information Entry for the ISA.",230,[[],[["commoninformationentry",3],["option",4]]]],[11,"map_reg_to_dwarf","","Maps a regalloc::Reg to a DWARF register number.",230,[[["reg",3]],[["result",4],["registermappingerror",4]]]],[4,"UnwindInfoKind","","Expected unwind info type.",null,null],[13,"None","","No unwind info.",231,null],[13,"SystemV","","SystemV CIE/FDE unwind info.",231,null],[13,"Windows","","Windows X64 Unwind info",231,null],[3,"UnwindInfoContext","","Input data for UnwindInfoGenerator.",null,null],[12,"insts","","Function instructions.",232,null],[12,"insts_layout","","Instruction layout: end offsets",232,null],[12,"len","","Length of the function.",232,null],[12,"prologue","","Prologue range.",232,null],[12,"epilogues","","Epilogue ranges.",232,null],[8,"UnwindInfoGenerator","","UnwindInfo generator/helper.",null,null],[10,"create_unwind_info","","Creates unwind info based on function signature and…",233,[[["unwindinfocontext",3]],[["codegenresult",6],["option",4]]]],[4,"MachInstStackOpInfo","","Info about an operation that loads or stores from/to the…",null,null],[13,"LoadNomSPOff","","Load from an offset from the nominal stack pointer into…",234,null],[13,"StoreNomSPOff","","Store to an offset from the nominal stack pointer from the…",234,null],[13,"NomSPAdj","","Adjustment of nominal-SP up or down. This value is added…",234,null],[0,"print_errors","cranelift_codegen","Utility routines for pretty-printing error messages.",null,null],[5,"pretty_verifier_error","cranelift_codegen::print_errors","Pretty-print a verifier error.",null,[[["option",4],["function",3],["box",3],["option",4],["verifiererrors",3],["targetisa",8]],["string",3]]],[5,"pretty_error","","Pretty-print a Cranelift error.",null,[[["function",3],["codegenerror",4],["option",4],["targetisa",8]],["string",3]]],[0,"settings","cranelift_codegen","Shared settings module.",null,null],[0,"detail","cranelift_codegen::settings","Implementation details for generated code.",null,null],[3,"Template","cranelift_codegen::settings::detail","An instruction group template.",null,null],[12,"name","","Name of the instruction group.",235,null],[12,"descriptors","","List of setting descriptors.",235,null],[12,"enumerators","","Union of all enumerators.",235,null],[12,"hash_table","","Hash table of settings.",235,null],[12,"defaults","","Default values.",235,null],[12,"presets","","Pairs of (mask, value) for presets.",235,null],[11,"enums","","Get enumerators corresponding to a `Details::Enum`.",235,[[]]],[11,"format_toml_value","","Format a setting value as a TOML string. This is mostly…",235,[[["detail",4],["formatter",3]],["result",6]]],[3,"Descriptor","","A setting descriptor holds the information needed to…",null,null],[12,"name","","Lower snake-case name of setting as defined in meta.",236,null],[12,"offset","","Offset of byte containing this setting.",236,null],[12,"detail","","Additional details, depending on the kind of setting.",236,null],[4,"Detail","","The different kind of settings along with descriptor bits…",null,null],[13,"Bool","","A boolean setting only uses one bit, numbered from LSB.",237,null],[12,"bit","cranelift_codegen::settings::detail::Detail","0-7.",238,null],[13,"Num","cranelift_codegen::settings::detail","A numerical setting uses the whole byte.",237,null],[13,"Enum","","An Enum setting uses a range of enumerators.",237,null],[12,"last","cranelift_codegen::settings::detail::Detail","Numerical value of last enumerator, allowing for 1-256…",239,null],[12,"enumerators","","First enumerator in the ENUMERATORS table.",239,null],[13,"Preset","cranelift_codegen::settings::detail","A preset is not an individual setting, it is a collection…",237,null],[11,"is_preset","","Check if a detail is a Detail::Preset. Useful because the…",237,[[]]],[8,"Configurable","cranelift_codegen::settings","A string-based configurator for settings groups.",null,null],[10,"set","","Set the string value of any setting by name.",240,[[],["setresult",6]]],[10,"enable","","Enable a boolean setting or apply a preset.",240,[[],["setresult",6]]],[3,"Builder","","Collect settings values based on a template.",null,null],[11,"new","","Create a new builder with defaults and names from the…",241,[[["template",3]]]],[11,"state_for","","Extract contents of builder once everything is configured.",241,[[],["box",3]]],[4,"SetError","","An error produced when changing a setting.",null,null],[13,"BadName","","No setting by this name exists.",242,null],[13,"BadType","","Type mismatch for setting (e.g., setting an enum setting…",242,null],[13,"BadValue","","This is not a valid value for this setting.",242,null],[6,"SetResult","","A result returned when changing a setting.",null,null],[3,"PredicateView","","A reference to just the boolean predicates of a settings…",null,null],[11,"new","","Create a new view of a precomputed predicate vector.",243,[[]]],[11,"test","","Check a numbered predicate.",243,[[]]],[3,"Flags","","Flags group `shared`.",null,null],[11,"new","","Create flags shared settings group.",244,[[["builder",3]]]],[4,"Regalloc","","Values for `shared.regalloc`.",null,null],[13,"Backtracking","","`backtracking`.",245,null],[13,"BacktrackingChecked","","`backtracking_checked`.",245,null],[13,"ExperimentalLinearScan","","`experimental_linear_scan`.",245,null],[13,"ExperimentalLinearScanChecked","","`experimental_linear_scan_checked`.",245,null],[4,"OptLevel","","Values for `shared.opt_level`.",null,null],[13,"None","","`none`.",246,null],[13,"Speed","","`speed`.",246,null],[13,"SpeedAndSize","","`speed_and_size`.",246,null],[4,"TlsModel","","Values for `shared.tls_model`.",null,null],[13,"None","","`none`.",247,null],[13,"ElfGd","","`elf_gd`.",247,null],[13,"Macho","","`macho`.",247,null],[13,"Coff","","`coff`.",247,null],[4,"LibcallCallConv","","Values for `shared.libcall_call_conv`.",null,null],[13,"IsaDefault","","`isa_default`.",248,null],[13,"Fast","","`fast`.",248,null],[13,"Cold","","`cold`.",248,null],[13,"SystemV","","`system_v`.",248,null],[13,"WindowsFastcall","","`windows_fastcall`.",248,null],[13,"BaldrdashSystemV","","`baldrdash_system_v`.",248,null],[13,"BaldrdashWindows","","`baldrdash_windows`.",248,null],[13,"Baldrdash2020","","`baldrdash_2020`.",248,null],[13,"Probestack","","`probestack`.",248,null],[11,"predicate_view","","Get a view of the boolean predicates.",244,[[],["predicateview",3]]],[11,"regalloc","","Register allocator to use with the MachInst backend.",244,[[],["regalloc",4]]],[11,"opt_level","","Optimization level:",244,[[],["optlevel",4]]],[11,"tls_model","","Defines the model used to perform TLS accesses.",244,[[],["tlsmodel",4]]],[11,"libcall_call_conv","","Defines the calling convention to use for LibCalls call…",244,[[],["libcallcallconv",4]]],[11,"baldrdash_prologue_words","","Number of pointer-sized words pushed by the baldrdash…",244,[[]]],[11,"probestack_size_log2","","The log2 of the size of the stack guard region.",244,[[]]],[11,"enable_verifier","","Run the Cranelift IR verifier at strategic times during…",244,[[]]],[11,"is_pic","","Enable Position-Independent Code generation",244,[[]]],[11,"use_colocated_libcalls","","Use colocated libcalls.",244,[[]]],[11,"avoid_div_traps","","Generate explicit checks around native division…",244,[[]]],[11,"enable_float","","Enable the use of floating-point instructions",244,[[]]],[11,"enable_nan_canonicalization","","Enable NaN canonicalization",244,[[]]],[11,"enable_pinned_reg","","Enable the use of the pinned register.",244,[[]]],[11,"use_pinned_reg_as_heap_base","","Use the pinned register as the heap base.",244,[[]]],[11,"enable_simd","","Enable the use of SIMD instructions.",244,[[]]],[11,"enable_atomics","","Enable the use of atomic instructions",244,[[]]],[11,"enable_safepoints","","Enable safepoint instruction insertions.",244,[[]]],[11,"emit_all_ones_funcaddrs","","Emit not-yet-relocated function addresses as all-ones bit…",244,[[]]],[11,"enable_probestack","","Enable the use of stack probes, for calling conventions…",244,[[]]],[11,"probestack_func_adjusts_sp","","Set this to true of the stack probe function modifies the…",244,[[]]],[11,"enable_jump_tables","","Enable the use of jump tables in generated machine code.",244,[[]]],[11,"enable_heap_access_spectre_mitigation","","Enable Spectre mitigation on heap bounds checks.",244,[[]]],[5,"builder","","Create a `settings::Builder` for the shared settings group.",null,[[],["builder",3]]],[3,"FlagsOrIsa","","Wrapper containing flags and optionally a `TargetIsa`…",null,null],[12,"flags","","Flags are always present.",249,null],[12,"isa","","The ISA may not be present.",249,null],[0,"timing","cranelift_codegen","Pass timing.",null,null],[5,"add_to_current","cranelift_codegen::timing","Add `timings` to the accumulated timings for the current…",null,[[["passtimes",3]]]],[5,"take_current","","Take the current accumulated pass timings and reset the…",null,[[],["passtimes",3]]],[3,"PassTimes","","Accumulated timing for all passes.",null,null],[3,"TimingToken","","A timing token is responsible for timing the currently…",null,null],[5,"process_file","","Processing test file",null,[[],["timingtoken",3]]],[5,"parse_text","","Parsing textual Cranelift IR",null,[[],["timingtoken",3]]],[5,"wasm_translate_module","","Translate WASM module",null,[[],["timingtoken",3]]],[5,"wasm_translate_function","","Translate WASM function",null,[[],["timingtoken",3]]],[5,"verifier","","Verify Cranelift IR",null,[[],["timingtoken",3]]],[5,"verify_cssa","","Verify CSSA",null,[[],["timingtoken",3]]],[5,"verify_liveness","","Verify live ranges",null,[[],["timingtoken",3]]],[5,"verify_locations","","Verify value locations",null,[[],["timingtoken",3]]],[5,"verify_flags","","Verify CPU flags",null,[[],["timingtoken",3]]],[5,"compile","","Compilation passes",null,[[],["timingtoken",3]]],[5,"flowgraph","","Control flow graph",null,[[],["timingtoken",3]]],[5,"domtree","","Dominator tree",null,[[],["timingtoken",3]]],[5,"loop_analysis","","Loop analysis",null,[[],["timingtoken",3]]],[5,"postopt","","Post-legalization rewriting",null,[[],["timingtoken",3]]],[5,"preopt","","Pre-legalization rewriting",null,[[],["timingtoken",3]]],[5,"dce","","Dead code elimination",null,[[],["timingtoken",3]]],[5,"legalize","","Legalization",null,[[],["timingtoken",3]]],[5,"gvn","","Global value numbering",null,[[],["timingtoken",3]]],[5,"licm","","Loop invariant code motion",null,[[],["timingtoken",3]]],[5,"unreachable_code","","Remove unreachable blocks",null,[[],["timingtoken",3]]],[5,"remove_constant_phis","","Remove constant phi-nodes",null,[[],["timingtoken",3]]],[5,"vcode_lower","","VCode lowering",null,[[],["timingtoken",3]]],[5,"vcode_post_ra","","VCode post-register allocation finalization",null,[[],["timingtoken",3]]],[5,"vcode_emit","","VCode emission",null,[[],["timingtoken",3]]],[5,"vcode_emit_finish","","VCode emission finalization",null,[[],["timingtoken",3]]],[5,"regalloc","","Register allocation",null,[[],["timingtoken",3]]],[5,"ra_liveness","","RA liveness analysis",null,[[],["timingtoken",3]]],[5,"ra_cssa","","RA coalescing CSSA",null,[[],["timingtoken",3]]],[5,"ra_spilling","","RA spilling",null,[[],["timingtoken",3]]],[5,"ra_reload","","RA reloading",null,[[],["timingtoken",3]]],[5,"ra_coloring","","RA coloring",null,[[],["timingtoken",3]]],[5,"prologue_epilogue","","Prologue/epilogue insertion",null,[[],["timingtoken",3]]],[5,"shrink_instructions","","Instruction encoding shrinking",null,[[],["timingtoken",3]]],[5,"relax_branches","","Branch relaxation",null,[[],["timingtoken",3]]],[5,"binemit","","Binary machine code emission",null,[[],["timingtoken",3]]],[5,"layout_renumber","","Layout full renumbering",null,[[],["timingtoken",3]]],[5,"canonicalize_nans","","Canonicalization of NaNs",null,[[],["timingtoken",3]]],[0,"verifier","cranelift_codegen","A verifier for ensuring that functions are well formed. It…",null,null],[5,"verify_cssa","cranelift_codegen::verifier","Verify conventional SSA form for `func`.",null,[[["function",3],["dominatortree",3],["verifiererrors",3],["virtregs",3],["liveness",3],["controlflowgraph",3]],["verifierstepresult",6]]],[5,"verify_liveness","","Verify liveness information for `func`.",null,[[["liveness",3],["function",3],["verifiererrors",3],["targetisa",8],["controlflowgraph",3]],["verifierstepresult",6]]],[5,"verify_locations","","Verify value locations for `func`.",null,[[["verifiererrors",3],["function",3],["option",4],["targetisa",8],["liveness",3],["controlflowgraph",3]],["verifierstepresult",6]]],[3,"VerifierError","","A verifier error.",null,null],[12,"location","","The entity causing the verifier error.",250,null],[12,"context","","Optionally provide some context for the given location;…",250,null],[12,"message","","The error message.",250,null],[6,"VerifierStepResult","","Result of a step in the verification process.",null,null],[6,"VerifierResult","","Result of a verification operation.",null,null],[3,"VerifierErrors","","List of verifier errors.",null,null],[12,"0","","",251,null],[11,"new","","Return a new `VerifierErrors` struct.",251,[[]]],[11,"is_empty","","Return whether no errors were reported.",251,[[]]],[11,"has_error","","Return whether one or more errors were reported.",251,[[]]],[11,"as_result","","Return a `VerifierStepResult` that is fatal if at least…",251,[[],["verifierstepresult",6]]],[11,"report","","Report an error, adding it to the list of errors.",251,[[]]],[11,"fatal","","Report a fatal error and return `Err`.",251,[[],["verifierstepresult",6]]],[11,"nonfatal","","Report a non-fatal error and return `Ok`.",251,[[],["verifierstepresult",6]]],[5,"verify_function","","Verify `func`.",null,[[["flagsorisa",3],["function",3],["into",8]],["verifierresult",6]]],[5,"verify_context","","Verify `func` after checking the integrity of associated…",null,[[["flagsorisa",3],["function",3],["dominatortree",3],["into",8],["verifiererrors",3],["controlflowgraph",3]],["verifierstepresult",6]]],[0,"write","cranelift_codegen","Converting Cranelift IR to text.",null,null],[8,"FuncWriter","cranelift_codegen::write","A `FuncWriter` used to decorate functions during printing.",null,null],[10,"write_block_header","","Write the basic block header for the current function.",252,[[["write",8],["function",3],["option",4],["block",3],["targetisa",8]],["result",6]]],[10,"write_instruction","","Write the given `inst` to `w`.",252,[[["write",8],["secondarymap",3],["function",3],["option",4],["targetisa",8],["inst",3]],["result",6]]],[11,"write_preamble","","Write the preamble to `w`. By default, this uses…",252,[[["write",8],["function",3],["reginfo",3],["option",4]],[["result",4],["error",3]]]],[11,"super_preamble","","Default impl of `write_preamble`",252,[[["write",8],["function",3],["reginfo",3],["option",4]],[["result",4],["error",3]]]],[11,"write_entity_definition","","Write an entity definition defined in the preamble to `w`.",252,[[["write",8],["function",3],["anyentity",4],["display",8]],["result",6]]],[11,"super_entity_definition","","Default impl of `write_entity_definition`",252,[[["write",8],["function",3],["anyentity",4],["display",8]],["result",6]]],[3,"PlainWriter","","A `PlainWriter` that doesn\'t decorate the function.",null,null],[5,"write_function","","Write `func` to `w` as equivalent text. Use `isa` to emit…",null,[[["write",8],["function",3],["displayfunctionannotations",3]],["result",6]]],[5,"decorate_function","","Writes `func` to `w` as text. write_function_plain is…",null,[[["write",8],["function",3],["displayfunctionannotations",3]],["result",6]]],[5,"write_block_header","","Write out the basic block header, outdented:",null,[[["write",8],["function",3],["option",4],["block",3],["targetisa",8]],["result",6]]],[5,"write_operands","","Write the operands of `inst` to `w` with a prepended space.",null,[[["write",8],["dataflowgraph",3],["option",4],["targetisa",8],["inst",3]],["result",6]]],[11,"new","cranelift_codegen::binemit","Create a new empty diversion tracker.",253,[[]]],[11,"clear","","Clear the content of the diversions, to reset the state of…",253,[[]]],[11,"is_empty","","Are there any diversions?",253,[[]]],[11,"diversion","","Get the current diversion of `value`, if any.",253,[[["value",3]],[["diversion",3],["option",4]]]],[11,"iter","","Get all current diversions.",253,[[],[["iter",3],["value",3],["diversion",3]]]],[11,"get","","Get the current location for `value`. Fall back to the…",253,[[["value",3],["valuelocations",6]],["valueloc",4]]],[11,"reg","","Get the current register location for `value`, or panic if…",253,[[["value",3],["valuelocations",6]],["regunit",6]]],[11,"stack","","Get the current stack location for `value`, or panic if…",253,[[["value",3],["valuelocations",6]],["stackslot",3]]],[11,"regmove","","Record a register -> register move.",253,[[["value",3],["regunit",6]]]],[11,"regspill","","Record a register -> stack move.",253,[[["value",3],["regunit",6],["stackslot",3]]]],[11,"regfill","","Record a stack -> register move.",253,[[["value",3],["stackslot",3],["regunit",6]]]],[11,"apply","","Apply the effect of `inst`.",253,[[["instructiondata",4]]]],[11,"remove","","Drop any recorded move for `value`.",253,[[["value",3]],[["valueloc",4],["option",4]]]],[11,"at_block","","Resets the state of the current diversions to the recorded…",253,[[["entryregdiversions",3],["block",3]]]],[11,"save_for_block","","Copy the current state of the diversions, and save it for…",253,[[["block",3],["entryregdiversions",3]]]],[11,"check_block_entry","","Check that the recorded entry for a given `block` matches…",253,[[["entryregdiversions",3],["block",3]]]],[11,"display","","Return an object that can display the diversions.",253,[[["into",8],["option",4]],["displaydiversions",3]]],[3,"Context","cranelift_codegen","Persistent data structures and compilation pipeline.",null,null],[12,"func","","The function we\'re compiling.",254,null],[12,"cfg","","The control flow graph of `func`.",254,null],[12,"domtree","","Dominator tree for `func`.",254,null],[12,"regalloc","","Register allocation context.",254,null],[12,"loop_analysis","","Loop analysis of `func`.",254,null],[12,"redundant_reload_remover","","Redundant-reload remover context.",254,null],[12,"mach_compile_result","","Result of MachBackend compilation, if computed.",254,null],[12,"want_disasm","","Flag: do we want a disassembly with the MachCompileResult?",254,null],[5,"legalize_function","","Legalize `func` for `isa`.",null,[[["controlflowgraph",3],["targetisa",8],["function",3]]]],[6,"ValueLabelsRanges","","Resulting map of Value labels and their ranges/locations.",null,null],[3,"ValueLocRange","","Value location range.",null,null],[12,"loc","","The ValueLoc containing a ValueLabel during this range.",255,null],[12,"start","","The start of the range. It is an offset in the generated…",255,null],[12,"end","","The end of the range. It is an offset in the generated code.",255,null],[4,"CodegenError","","A compilation error.",null,null],[13,"Verifier","","A list of IR verifier errors.",256,null],[13,"ImplLimitExceeded","","An implementation limit was exceeded.",256,null],[13,"CodeTooLarge","","The code size for the function is too large.",256,null],[13,"Unsupported","","Something is not supported by the code generator. This…",256,null],[13,"RegisterMappingError","","A failure to map Cranelift register representation to a…",256,null],[6,"CodegenResult","","A convenient alias for a `Result` that uses `CodegenError`…",null,null],[17,"VERSION","","Version number of this crate.",null,null],[11,"from","cranelift_codegen::packed_option","",257,[[]]],[11,"from","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"into","","",257,[[]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"equivalent","","",257,[[]]],[11,"from","cranelift_codegen::binemit","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"into","","",258,[[]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"from","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"into","","",259,[[]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"from","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"into","","",260,[[]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"from","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"into","","",261,[[]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"equivalent","","",261,[[]]],[11,"from","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"into","","",253,[[]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"equivalent","","",5,[[]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","cranelift_codegen::cfg_printer","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_string","","",8,[[],["string",3]]],[11,"from","cranelift_codegen::cursor","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"equivalent","","",9,[[]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","cranelift_codegen::data_value","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_string","","",14,[[],["string",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_string","","",15,[[],["string",3]]],[11,"from","cranelift_codegen::dbg","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_string","","",16,[[],["string",3]]],[11,"from","cranelift_codegen::dominator_tree","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"into","","",262,[[]]],[11,"try_into","","",262,[[],["result",4]]],[11,"into_iter","","",262,[[]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"from","cranelift_codegen::flowgraph","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"equivalent","","",19,[[]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"into","","",263,[[]]],[11,"try_into","","",263,[[],["result",4]]],[11,"into_iter","","",263,[[]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"from","cranelift_codegen::ir::condcodes","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"equivalent","","",22,[[]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"equivalent","","",23,[[]]],[11,"from","cranelift_codegen::ir","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"to_string","","",121,[[],["string",3]]],[11,"equivalent","","",121,[[]]],[11,"from","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"into","","",264,[[]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"from","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"into","","",265,[[]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"from","cranelift_codegen::ir::constant","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"equivalent","","",24,[[]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"from","cranelift_codegen::ir::dfg","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"from","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"into","","",266,[[]]],[11,"try_into","","",266,[[],["result",4]]],[11,"into_iter","","",266,[[]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"equivalent","","",28,[[]]],[11,"from","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"into","","",267,[[]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"to_string","","",267,[[],["string",3]]],[11,"from","cranelift_codegen::ir::entities","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"key","","",29,[[]]],[11,"equivalent","","",29,[[]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"key","","",30,[[]]],[11,"equivalent","","",30,[[]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"key","","",31,[[]]],[11,"equivalent","","",31,[[]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"key","","",32,[[]]],[11,"equivalent","","",32,[[]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"key","","",33,[[]]],[11,"equivalent","","",33,[[]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"key","","",34,[[]]],[11,"equivalent","","",34,[[]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"key","","",35,[[]]],[11,"equivalent","","",35,[[]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"key","","",36,[[]]],[11,"equivalent","","",36,[[]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"key","","",37,[[]]],[11,"equivalent","","",37,[[]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"key","","",38,[[]]],[11,"equivalent","","",38,[[]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"key","","",39,[[]]],[11,"equivalent","","",39,[[]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"key","","",40,[[]]],[11,"equivalent","","",40,[[]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"equivalent","","",41,[[]]],[11,"from","cranelift_codegen::ir","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"to_string","","",129,[[],["string",3]]],[11,"equivalent","","",129,[[]]],[11,"from","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"to_string","","",125,[[],["string",3]]],[11,"equivalent","","",125,[[]]],[11,"from","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"equivalent","","",126,[[]]],[11,"from","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"to_string","","",127,[[],["string",3]]],[11,"equivalent","","",127,[[]]],[11,"from","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"to_string","","",128,[[],["string",3]]],[11,"from","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"to_string","","",130,[[],["string",3]]],[11,"equivalent","","",130,[[]]],[11,"from","cranelift_codegen::ir::function","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"into","","",268,[[]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"to_string","","",268,[[],["string",3]]],[11,"from","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"into","","",269,[[]]],[11,"try_into","","",269,[[],["result",4]]],[11,"into_iter","","",269,[[]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"from","cranelift_codegen::ir","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"to_string","","",133,[[],["string",3]]],[11,"from","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"to_string","","",137,[[],["string",3]]],[11,"from","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"from","cranelift_codegen::ir::immediates","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"equivalent","","",45,[[]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"equivalent","","",46,[[]]],[11,"from","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"into","","",270,[[]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"to_owned","","",270,[[]]],[11,"clone_into","","",270,[[]]],[11,"to_string","","",270,[[],["string",3]]],[11,"equivalent","","",270,[[]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"equivalent","","",47,[[]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"equivalent","","",48,[[]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"equivalent","","",49,[[]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"equivalent","","",50,[[]]],[11,"from","cranelift_codegen::ir::instructions","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"equivalent","","",51,[[]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"to_string","","",107,[[],["string",3]]],[11,"equivalent","","",107,[[]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"to_string","","",108,[[],["string",3]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"from","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"equivalent","","",112,[[]]],[11,"from","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"equivalent","","",113,[[]]],[11,"from","cranelift_codegen::ir::jumptable","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"to_string","","",114,[[],["string",3]]],[11,"from","cranelift_codegen::ir::layout","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"from","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"into","","",271,[[]]],[11,"try_into","","",271,[[],["result",4]]],[11,"into_iter","","",271,[[]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"from","","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"into","","",272,[[]]],[11,"try_into","","",272,[[],["result",4]]],[11,"into_iter","","",272,[[]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"from","cranelift_codegen::ir","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"to_string","","",141,[[],["string",3]]],[11,"equivalent","","",141,[[]]],[11,"from","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"equivalent","","",142,[[]]],[11,"from","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"into","","",273,[[]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"to_owned","","",273,[[]]],[11,"clone_into","","",273,[[]]],[11,"to_string","","",273,[[],["string",3]]],[11,"equivalent","","",273,[[]]],[11,"from","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"into","","",274,[[]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"to_owned","","",274,[[]]],[11,"clone_into","","",274,[[]]],[11,"to_string","","",274,[[],["string",3]]],[11,"equivalent","","",274,[[]]],[11,"from","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"to_string","","",143,[[],["string",3]]],[11,"equivalent","","",143,[[]]],[11,"from","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"into","","",275,[[]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"to_owned","","",275,[[]]],[11,"clone_into","","",275,[[]]],[11,"to_string","","",275,[[],["string",3]]],[11,"equivalent","","",275,[[]]],[11,"from","cranelift_codegen::ir::stackslot","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"to_string","","",116,[[],["string",3]]],[11,"equivalent","","",116,[[]]],[11,"from","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"to_string","","",117,[[],["string",3]]],[11,"equivalent","","",117,[[]]],[11,"from","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"equivalent","","",118,[[]]],[11,"from","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"equivalent","","",119,[[]]],[11,"from","cranelift_codegen::ir","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"to_string","","",145,[[],["string",3]]],[11,"from","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"to_string","","",146,[[],["string",3]]],[11,"equivalent","","",146,[[]]],[11,"from","cranelift_codegen::ir::types","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"to_string","","",120,[[],["string",3]]],[11,"equivalent","","",120,[[]]],[11,"from","cranelift_codegen::ir","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"equivalent","","",148,[[]]],[11,"from","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"equivalent","","",147,[[]]],[11,"from","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"equivalent","","",149,[[]]],[11,"from","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"to_string","","",150,[[],["string",3]]],[11,"key","","",150,[[]]],[11,"equivalent","","",150,[[]]],[11,"from","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"from","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"from","cranelift_codegen::isa::unwind::systemv","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"to_string","","",154,[[],["string",3]]],[11,"equivalent","","",154,[[]]],[11,"from","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"equivalent","","",155,[[]]],[11,"from","cranelift_codegen::isa::unwind::winx64","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"equivalent","","",156,[[]]],[11,"from","cranelift_codegen::isa::unwind::input","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"equivalent","","",157,[[]]],[11,"from","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"into","","",163,[[]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"equivalent","","",163,[[]]],[11,"from","cranelift_codegen::isa::unwind","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"equivalent","","",164,[[]]],[11,"from","cranelift_codegen::isa","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"into","","",168,[[]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"to_string","","",168,[[],["string",3]]],[11,"equivalent","","",168,[[]]],[11,"from","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"into","","",171,[[]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"into","","",170,[[]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"equivalent","","",170,[[]]],[11,"from","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"into","","",172,[[]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"from","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"into","","",169,[[]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"from","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"into","","",276,[[]]],[11,"try_into","","",276,[[],["result",4]]],[11,"into_iter","","",276,[[]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"from","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"into","","",277,[[]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"to_owned","","",277,[[]]],[11,"clone_into","","",277,[[]]],[11,"to_string","","",277,[[],["string",3]]],[11,"equivalent","","",277,[[]]],[11,"from","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"into","","",173,[[]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"from","cranelift_codegen::isa::registers","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"into","","",165,[[]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"into","","",166,[[]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"to_string","","",166,[[],["string",3]]],[11,"from","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"into","","",278,[[]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"to_owned","","",278,[[]]],[11,"clone_into","","",278,[[]]],[11,"to_string","","",278,[[],["string",3]]],[11,"key","","",278,[[]]],[11,"equivalent","","",278,[[]]],[11,"from","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"into","","",167,[[]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"from","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"into","","",279,[[]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"to_string","","",279,[[],["string",3]]],[11,"from","cranelift_codegen::isa","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"into","","",176,[[]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"from","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"into","","",174,[[]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"equivalent","","",174,[[]]],[11,"from","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"into","","",175,[[]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"equivalent","","",175,[[]]],[11,"from","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"into","","",177,[[]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"from","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"into","","",178,[[]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"to_string","","",178,[[],["string",3]]],[11,"equivalent","","",178,[[]]],[11,"from","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"into","","",179,[[]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"from","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"into","","",180,[[]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"from","cranelift_codegen::loop_analysis","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"into","","",182,[[]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"to_string","","",182,[[],["string",3]]],[11,"key","","",182,[[]]],[11,"equivalent","","",182,[[]]],[11,"from","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"into","","",183,[[]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from","cranelift_codegen::machinst::lower","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"into","","",185,[[]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"from","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"into","","",188,[[]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"into","","",187,[[]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"equivalent","","",187,[[]]],[11,"from","cranelift_codegen::machinst::vcode","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"into","","",190,[[]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"into","","",189,[[]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"into","","",191,[[]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"into","","",192,[[]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"key","","",192,[[]]],[11,"equivalent","","",192,[[]]],[11,"from","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"into","","",193,[[]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from","cranelift_codegen::machinst::blockorder","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"into","","",199,[[]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"from","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"into","","",194,[[]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"equivalent","","",194,[[]]],[11,"from","cranelift_codegen::machinst::abi_impl","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"into","","",202,[[]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"from","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"into","","",206,[[]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"equivalent","","",206,[[]]],[11,"from","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"into","","",207,[[]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"equivalent","","",207,[[]]],[11,"from","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"into","","",208,[[]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"from","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"into","","",210,[[]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"from","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"into","","",212,[[]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"from","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"into","","",211,[[]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"from","cranelift_codegen::machinst::buffer","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"into","","",216,[[]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"from","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"into","","",213,[[]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"from","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"into","","",214,[[]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"key","","",214,[[]]],[11,"equivalent","","",214,[[]]],[11,"from","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"into","","",215,[[]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"from","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"into","","",217,[[]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"from","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"into","","",218,[[]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"from","cranelift_codegen::machinst::adapter","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"into","","",219,[[]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"to_string","","",219,[[],["string",3]]],[11,"from","cranelift_codegen::machinst::inst_common","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"into","","",220,[[]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"equivalent","","",220,[[]]],[11,"from","cranelift_codegen::machinst::valueregs","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"into","","",222,[[]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"equivalent","","",222,[[]]],[11,"from","cranelift_codegen::machinst","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"into","","",225,[[]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"equivalent","","",225,[[]]],[11,"from","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"into","","",229,[[]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"from","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"into","","",231,[[]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"equivalent","","",231,[[]]],[11,"from","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"into","","",232,[[]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"from","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"into","","",234,[[]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"from","cranelift_codegen::settings::detail","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"into","","",235,[[]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"from","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"into","","",236,[[]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"from","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"into","","",237,[[]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"from","cranelift_codegen::settings","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"into","","",241,[[]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"from","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"into","","",242,[[]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"to_string","","",242,[[],["string",3]]],[11,"equivalent","","",242,[[]]],[11,"from","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"into","","",243,[[]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"from","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"into","","",244,[[]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"to_string","","",244,[[],["string",3]]],[11,"from","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"into","","",245,[[]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"to_string","","",245,[[],["string",3]]],[11,"equivalent","","",245,[[]]],[11,"from","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"into","","",246,[[]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"to_string","","",246,[[],["string",3]]],[11,"equivalent","","",246,[[]]],[11,"from","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"into","","",247,[[]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"to_string","","",247,[[],["string",3]]],[11,"equivalent","","",247,[[]]],[11,"from","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"into","","",248,[[]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"to_string","","",248,[[],["string",3]]],[11,"equivalent","","",248,[[]]],[11,"from","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"into","","",249,[[]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"from","cranelift_codegen::timing","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"into","","",280,[[]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"from","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"into","","",281,[[]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"to_string","","",281,[[],["string",3]]],[11,"from","cranelift_codegen::verifier","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"into","","",250,[[]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"to_string","","",250,[[],["string",3]]],[11,"equivalent","","",250,[[]]],[11,"from","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"into","","",251,[[]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"to_string","","",251,[[],["string",3]]],[11,"equivalent","","",251,[[]]],[11,"from","cranelift_codegen::write","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"into","","",282,[[]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"from","cranelift_codegen","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"into","","",254,[[]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"from","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"into","","",256,[[]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"to_string","","",256,[[],["string",3]]],[11,"equivalent","","",256,[[]]],[11,"from","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"into","","",255,[[]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"equivalent","","",255,[[]]],[11,"fmt","cranelift_codegen::packed_option","",257,[[["formatter",3]],[["result",4],["error",3]]]],[11,"into","","",257,[[],["option",4]]],[11,"from","","Convert `t` into a packed `Some(x)`.",257,[[],["packedoption",3]]],[11,"from","","Convert an option into its packed equivalent.",257,[[["option",4]],["packedoption",3]]],[11,"cmp","","",257,[[["packedoption",3]],["ordering",4]]],[11,"default","","Create a default packed option representing `None`.",257,[[],["packedoption",3]]],[11,"partial_cmp","","",257,[[["packedoption",3]],[["option",4],["ordering",4]]]],[11,"lt","","",257,[[["packedoption",3]]]],[11,"le","","",257,[[["packedoption",3]]]],[11,"gt","","",257,[[["packedoption",3]]]],[11,"ge","","",257,[[["packedoption",3]]]],[11,"eq","","",257,[[["packedoption",3]]]],[11,"ne","","",257,[[["packedoption",3]]]],[11,"clone","","",257,[[],["packedoption",3]]],[11,"hash","","",257,[[]]],[11,"eq","cranelift_codegen::ir::condcodes","",23,[[["floatcc",4]]]],[11,"eq","","",22,[[["intcc",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",23,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",22,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",23,[[["formatter",3]],[["result",4],["error",3]]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"from_str","","",22,[[],[["result",4],["intcc",4]]]],[11,"from_str","","",23,[[],[["floatcc",4],["result",4]]]],[11,"inverse","","",22,[[],["intcc",4]]],[11,"reverse","","",22,[[],["intcc",4]]],[11,"inverse","","",23,[[],["floatcc",4]]],[11,"reverse","","",23,[[],["floatcc",4]]],[11,"clone","","",23,[[],["floatcc",4]]],[11,"clone","","",22,[[],["intcc",4]]],[11,"reloc_external","cranelift_codegen::binemit","",258,[[["reloc",4],["sourceloc",3],["codeoffset",6],["addend",6],["externalname",4]]]],[11,"reloc_constant","","",258,[[["codeoffset",6],["reloc",4],["constantoffset",6]]]],[11,"reloc_jt","","",258,[[["codeoffset",6],["reloc",4],["jumptable",3]]]],[11,"trap","","",259,[[["codeoffset",6],["trapcode",4],["sourceloc",3]]]],[11,"add_stack_map","","",260,[[["codeoffset",6],["stackmap",3]]]],[11,"offset","","",1,[[],["codeoffset",6]]],[11,"put1","","",1,[[]]],[11,"put2","","",1,[[]]],[11,"put4","","",1,[[]]],[11,"put8","","",1,[[]]],[11,"reloc_external","","",1,[[["reloc",4],["sourceloc",3],["addend",6],["externalname",4]]]],[11,"reloc_constant","","",1,[[["constantoffset",6],["reloc",4]]]],[11,"reloc_jt","","",1,[[["reloc",4],["jumptable",3]]]],[11,"trap","","",1,[[["trapcode",4],["sourceloc",3]]]],[11,"begin_jumptables","","",1,[[]]],[11,"begin_rodata","","",1,[[]]],[11,"end_codegen","","",1,[[]]],[11,"add_stack_map","","",1,[[["function",3],["targetisa",8]]]],[11,"add_call_site","","",1,[[["sourceloc",3],["opcode",4]]]],[11,"position","cranelift_codegen::cursor","",11,[[],["cursorposition",4]]],[11,"set_position","","",11,[[["cursorposition",4]]]],[11,"srcloc","","",11,[[],["sourceloc",3]]],[11,"set_srcloc","","",11,[[["sourceloc",3]]]],[11,"layout","","",11,[[],["layout",3]]],[11,"layout_mut","","",11,[[],["layout",3]]],[11,"position","","",12,[[],["cursorposition",4]]],[11,"set_position","","",12,[[["cursorposition",4]]]],[11,"srcloc","","",12,[[],["sourceloc",3]]],[11,"set_srcloc","","",12,[[["sourceloc",3]]]],[11,"layout","","",12,[[],["layout",3]]],[11,"layout_mut","","",12,[[],["layout",3]]],[11,"data_flow_graph","cranelift_codegen::ir","",264,[[],["dataflowgraph",3]]],[11,"data_flow_graph_mut","","",264,[[],["dataflowgraph",3]]],[11,"build","","",264,[[["type",3],["instructiondata",4]]]],[11,"data_flow_graph","","",265,[[],["dataflowgraph",3]]],[11,"data_flow_graph_mut","","",265,[[],["dataflowgraph",3]]],[11,"build","","",265,[[["type",3],["instructiondata",4]]]],[11,"into_bytes","cranelift_codegen::ir::immediates","",45,[[],["vec",3]]],[11,"into_bytes","","",49,[[],["vec",3]]],[11,"into_bytes","","",50,[[],["vec",3]]],[11,"cmp","cranelift_codegen::ir::layout","",115,[[],["ordering",4]]],[11,"is_block_gap","","",115,[[["block",3],["inst",3]]]],[11,"name","cranelift_codegen::machinst::adapter","",219,[[]]],[11,"triple","","",219,[[],["triple",3]]],[11,"flags","","",219,[[],["flags",3]]],[11,"hash_all_flags","","",219,[[["hasher",8]]]],[11,"register_info","","",219,[[],["reginfo",3]]],[11,"legal_encodings","","",219,[[["instructiondata",4],["type",3],["function",3]],["encodings",3]]],[11,"encode","","",219,[[["type",3],["function",3],["instructiondata",4]],[["legalize",6],["encoding",3],["result",4]]]],[11,"encoding_info","","",219,[[],["encinfo",3]]],[11,"legalize_signature","","",219,[[["cow",4]]]],[11,"regclass_for_abi_type","","",219,[[["type",3]],["regclass",6]]],[11,"allocatable_registers","","",219,[[["function",3]],["registerset",3]]],[11,"prologue_epilogue","","",219,[[["function",3]],["codegenresult",6]]],[11,"emit_inst","","",219,[[["codesink",8],["function",3],["inst",3],["regdiversions",3]]]],[11,"emit_function_to_memory","","Emit a whole function into memory.",219,[[["memorycodesink",3],["function",3]]]],[11,"get_mach_backend","","",219,[[],[["machbackend",8],["option",4]]]],[11,"unsigned_add_overflow_condition","","",219,[[],["intcc",4]]],[11,"unsigned_sub_overflow_condition","","",219,[[],["intcc",4]]],[11,"create_systemv_cie","","",219,[[],[["commoninformationentry",3],["option",4]]]],[11,"map_regalloc_reg_to_dwarf","","",219,[[["reg",3]],[["result",4],["registermappingerror",4]]]],[11,"as_any","","",219,[[],["any",8]]],[11,"abi","cranelift_codegen::machinst::lower","",188,[[],["abicallee",8]]],[11,"retval","","",188,[[],[["valueregs",3],["writable",3]]]],[11,"get_vm_context","","",188,[[],[["option",4],["reg",3]]]],[11,"data","","",188,[[["inst",3]],["instructiondata",4]]],[11,"ty","","",188,[[["inst",3]],["type",3]]],[11,"call_target","","",188,[[["inst",3]],["option",4]]],[11,"call_sig","","",188,[[["inst",3]],[["option",4],["signature",3]]]],[11,"symbol_value","","",188,[[["inst",3]],["option",4]]],[11,"memflags","","",188,[[["inst",3]],[["option",4],["memflags",3]]]],[11,"srcloc","","",188,[[["inst",3]],["sourceloc",3]]],[11,"num_inputs","","",188,[[["inst",3]]]],[11,"num_outputs","","",188,[[["inst",3]]]],[11,"input_ty","","",188,[[["inst",3]],["type",3]]],[11,"output_ty","","",188,[[["inst",3]],["type",3]]],[11,"get_constant","","",188,[[["inst",3]],["option",4]]],[11,"get_input_as_source_or_const","","",188,[[["inst",3]],["nonreginput",3]]],[11,"put_input_in_regs","","",188,[[["inst",3]],[["valueregs",3],["reg",3]]]],[11,"get_output","","",188,[[["inst",3]],[["valueregs",3],["writable",3]]]],[11,"alloc_tmp","","",188,[[["type",3]],[["valueregs",3],["writable",3]]]],[11,"emit","","",188,[[]]],[11,"emit_safepoint","","",188,[[]]],[11,"sink_inst","","",188,[[["inst",3]]]],[11,"get_constant_data","","",188,[[["constant",3]],["constantdata",3]]],[11,"use_constant","","",188,[[["vcodeconstantdata",4]],["vcodeconstant",3]]],[11,"get_immediate","","",188,[[["inst",3]],[["option",4],["datavalue",4]]]],[11,"ensure_in_vreg","","",188,[[["type",3],["reg",3]],["reg",3]]],[11,"signature","cranelift_codegen::machinst::abi_impl","",210,[[],["signature",3]]],[11,"temp_needed","","",210,[[],[["type",3],["option",4]]]],[11,"init","","",210,[[["option",4],["writable",3]]]],[11,"accumulate_outgoing_args_size","","",210,[[]]],[11,"flags","","",210,[[],["flags",3]]],[11,"call_conv","","",210,[[],["callconv",4]]],[11,"liveins","","",210,[[],[["set",3],["realreg",3]]]],[11,"liveouts","","",210,[[],[["set",3],["realreg",3]]]],[11,"num_args","","",210,[[]]],[11,"num_retvals","","",210,[[]]],[11,"num_stackslots","","",210,[[]]],[11,"gen_copy_arg_to_regs","","",210,[[["valueregs",3],["writable",3]],["smallinstvec",6]]],[11,"arg_is_needed_in_body","","",210,[[]]],[11,"gen_copy_regs_to_retval","","",210,[[["valueregs",3],["writable",3]],["smallinstvec",6]]],[11,"gen_retval_area_setup","","",210,[[],["option",4]]],[11,"gen_ret","","",210,[[]]],[11,"gen_epilogue_placeholder","","",210,[[]]],[11,"set_num_spillslots","","",210,[[]]],[11,"set_clobbered","","",210,[[["writable",3],["set",3]]]],[11,"load_stackslot","","Load from a stackslot.",210,[[["type",3],["stackslot",3],["writable",3],["valueregs",3]],["smallinstvec",6]]],[11,"store_stackslot","","Store to a stackslot.",210,[[["type",3],["stackslot",3],["valueregs",3],["reg",3]],["smallinstvec",6]]],[11,"stackslot_addr","","Produce an instruction that computes a stackslot address.",210,[[["writable",3],["stackslot",3],["reg",3]]]],[11,"load_spillslot","","Load from a spillslot.",210,[[["type",3],["spillslot",3],["writable",3],["valueregs",3]],["smallinstvec",6]]],[11,"store_spillslot","","Store to a spillslot.",210,[[["type",3],["spillslot",3],["valueregs",3],["reg",3]],["smallinstvec",6]]],[11,"spillslots_to_stack_map","","",210,[[],["stackmap",3]]],[11,"gen_prologue","","",210,[[],["smallinstvec",6]]],[11,"gen_epilogue","","",210,[[],["smallinstvec",6]]],[11,"frame_size","","",210,[[]]],[11,"stack_args_size","","",210,[[]]],[11,"get_spillslot_size","","",210,[[["regclass",4],["type",3]]]],[11,"gen_spill","","",210,[[["type",3],["spillslot",3],["option",4],["realreg",3]]]],[11,"gen_reload","","",210,[[["type",3],["spillslot",3],["writable",3],["option",4],["realreg",3]]]],[11,"unwind_info_kind","","",210,[[],["unwindinfokind",4]]],[11,"signature","","",212,[[],["signature",3]]],[11,"num_args","","",212,[[]]],[11,"accumulate_outgoing_args_size","","",212,[[]]],[11,"emit_stack_pre_adjust","","",212,[[]]],[11,"emit_stack_post_adjust","","",212,[[]]],[11,"emit_copy_regs_to_arg","","",212,[[["valueregs",3],["reg",3]]]],[11,"get_copy_to_arg_order","","",212,[[],["smallvec",3]]],[11,"emit_copy_retval_to_regs","","",212,[[["valueregs",3],["writable",3]]]],[11,"emit_call","","",212,[[]]],[11,"set","cranelift_codegen::isa","",179,[[],["setresult",6]]],[11,"enable","","",179,[[],["setresult",6]]],[11,"enable","cranelift_codegen::settings","",241,[[],["setresult",6]]],[11,"set","","",241,[[],["setresult",6]]],[11,"write_instruction","cranelift_codegen::write","",282,[[["write",8],["secondarymap",3],["function",3],["option",4],["targetisa",8],["inst",3]],["result",6]]],[11,"write_block_header","","",282,[[["write",8],["function",3],["option",4],["block",3],["targetisa",8]],["result",6]]],[11,"deref","cranelift_codegen::ir::instructions","",108,[[]]],[11,"deref_mut","","",108,[[]]],[11,"from","cranelift_codegen::data_value","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[["ieee32",3]]]],[11,"from","","",13,[[["ieee64",3]]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[["offset32",3]]]],[11,"from","cranelift_codegen::ir::constant","",24,[[["vec",3]]]],[11,"from","","",24,[[]]],[11,"from","","",24,[[["v128imm",3]]]],[11,"from","cranelift_codegen::ir::entities","",41,[[["block",3]]]],[11,"from","","",41,[[["inst",3]]]],[11,"from","","",41,[[["value",3]]]],[11,"from","","",41,[[["stackslot",3]]]],[11,"from","","",41,[[["globalvalue",3]]]],[11,"from","","",41,[[["jumptable",3]]]],[11,"from","","",41,[[["constant",3]]]],[11,"from","","",41,[[["funcref",3]]]],[11,"from","","",41,[[["sigref",3]]]],[11,"from","","",41,[[["heap",3]]]],[11,"from","","",41,[[["table",3]]]],[11,"from","cranelift_codegen::ir::function","",43,[[["option",4],["targetisa",8]],["displayfunctionannotations",3]]],[11,"from","cranelift_codegen::ir::immediates","",45,[[]]],[11,"from","","",46,[[]]],[11,"from","","",270,[[]]],[11,"from","","",47,[[]]],[11,"from","","",48,[[]]],[11,"from","","",49,[[]]],[11,"from","","",50,[[]]],[11,"from","","",50,[[]]],[11,"from","cranelift_codegen::ir::instructions","",51,[[["instructiondata",4]]]],[11,"from","cranelift_codegen::ir","",274,[[["inst",3]]]],[11,"from","","",274,[[["block",3]]]],[11,"from","","",274,[[["valuedef",4]]]],[11,"from","","",143,[[["inst",3]]]],[11,"from","","",143,[[["block",3]]]],[11,"from","","",143,[[["valuedef",4]]]],[11,"from","","",143,[[["programpoint",3]]]],[11,"from","cranelift_codegen::isa::registers","",278,[[["regclass",6]]]],[11,"from","cranelift_codegen::settings","",249,[[["flags",3]],["flagsorisa",3]]],[11,"from","","",249,[[["targetisa",8]],["flagsorisa",3]]],[11,"from","cranelift_codegen::verifier","",250,[[]]],[11,"from","","",250,[[]]],[11,"from","","",251,[[["verifiererror",3],["vec",3]]]],[11,"from","cranelift_codegen","",256,[[["verifiererrors",3]]]],[11,"from","cranelift_codegen::ir","",149,[[["valueloc",4]]]],[11,"fmt","cranelift_codegen::binemit","",261,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::cursor","",9,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::data_value","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::flowgraph","",19,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir","",121,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir::constant","",24,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir::dfg","",28,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir::entities","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir::function","",42,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir::immediates","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",270,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir::instructions","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",273,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",274,[[["formatter",3]],["result",6]]],[11,"fmt","","",275,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir::stackslot","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir","",146,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir::types","",120,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::isa::unwind::systemv","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::isa::unwind::winx64","",156,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::isa::unwind","",164,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::isa::unwind::input","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::isa","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",170,[[["formatter",3]],["result",6]]],[11,"fmt","","",169,[[["formatter",3]],["result",6]]],[11,"fmt","","",277,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::isa::registers","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",278,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::isa","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::loop_analysis","",182,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::machinst::lower","",185,[[["formatter",3]],["result",6]]],[11,"fmt","","",187,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::machinst::vcode","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",192,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::machinst::blockorder","",199,[[["formatter",3]],["result",6]]],[11,"fmt","","",194,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::machinst::abi_impl","",202,[[["formatter",3]],["result",6]]],[11,"fmt","","",206,[[["formatter",3]],["result",6]]],[11,"fmt","","",207,[[["formatter",3]],["result",6]]],[11,"fmt","","",208,[[["formatter",3]],["result",6]]],[11,"fmt","","",211,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::machinst::buffer","",214,[[["formatter",3]],["result",6]]],[11,"fmt","","",217,[[["formatter",3]],["result",6]]],[11,"fmt","","",218,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::machinst::inst_common","",220,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::machinst::valueregs","",222,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::machinst","",225,[[["formatter",3]],["result",6]]],[11,"fmt","","",231,[[["formatter",3]],["result",6]]],[11,"fmt","","",234,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::settings","",242,[[["formatter",3]],["result",6]]],[11,"fmt","","",245,[[["formatter",3]],["result",6]]],[11,"fmt","","",246,[[["formatter",3]],["result",6]]],[11,"fmt","","",247,[[["formatter",3]],["result",6]]],[11,"fmt","","",248,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::verifier","",250,[[["formatter",3]],["result",6]]],[11,"fmt","","",251,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen","",256,[[["formatter",3]],["result",6]]],[11,"fmt","","",255,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir","",149,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::binemit","Display trait implementation drops the arch, since its…",5,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::cfg_printer","",8,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::data_value","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::dbg","",16,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir","",121,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir::constant","Print the constant data in hexadecimal format, e.g.…",24,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir::dfg","",267,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir::entities","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir::function","",268,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir::immediates","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",270,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir::instructions","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir::jumptable","",114,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",273,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",274,[[["formatter",3]],["result",6]]],[11,"fmt","","",275,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir::stackslot","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir::types","",120,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::ir","",150,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::isa::unwind::systemv","",154,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::isa","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",277,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::isa::registers","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",278,[[["formatter",3]],["result",6]]],[11,"fmt","","",279,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::isa","",178,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::loop_analysis","",182,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::machinst::adapter","",219,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::settings","",242,[[["formatter",3]],["result",6]]],[11,"fmt","","",245,[[["formatter",3]],["result",6]]],[11,"fmt","","",246,[[["formatter",3]],["result",6]]],[11,"fmt","","",247,[[["formatter",3]],["result",6]]],[11,"fmt","","",248,[[["formatter",3]],["result",6]]],[11,"fmt","","",244,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::timing","",281,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen::verifier","",250,[[["formatter",3]],["result",6]]],[11,"fmt","","",251,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen","",256,[[["formatter",3]],["result",6]]],[11,"eq","cranelift_codegen::binemit","",261,[[["stackmap",3]]]],[11,"ne","","",261,[[["stackmap",3]]]],[11,"eq","","",5,[[["reloc",4]]]],[11,"eq","","",6,[[["codeinfo",3]]]],[11,"ne","","",6,[[["codeinfo",3]]]],[11,"eq","cranelift_codegen::cursor","",9,[[["cursorposition",4]]]],[11,"ne","","",9,[[["cursorposition",4]]]],[11,"eq","cranelift_codegen::data_value","",13,[[["datavalue",4]]]],[11,"ne","","",13,[[["datavalue",4]]]],[11,"eq","","",14,[[["datavaluecastfailure",4]]]],[11,"ne","","",14,[[["datavaluecastfailure",4]]]],[11,"eq","cranelift_codegen::flowgraph","",19,[[["blockpredecessor",3]]]],[11,"ne","","",19,[[["blockpredecessor",3]]]],[11,"eq","cranelift_codegen::ir","",121,[[["atomicrmwop",4]]]],[11,"eq","cranelift_codegen::ir::constant","",24,[[["constantdata",3]]]],[11,"ne","","",24,[[["constantdata",3]]]],[11,"eq","cranelift_codegen::ir::dfg","",28,[[["valuedef",4]]]],[11,"ne","","",28,[[["valuedef",4]]]],[11,"eq","cranelift_codegen::ir::entities","",29,[[["block",3]]]],[11,"ne","","",29,[[["block",3]]]],[11,"eq","","",30,[[["value",3]]]],[11,"ne","","",30,[[["value",3]]]],[11,"eq","","",31,[[["inst",3]]]],[11,"ne","","",31,[[["inst",3]]]],[11,"eq","","",32,[[["stackslot",3]]]],[11,"ne","","",32,[[["stackslot",3]]]],[11,"eq","","",33,[[["globalvalue",3]]]],[11,"ne","","",33,[[["globalvalue",3]]]],[11,"eq","","",34,[[["constant",3]]]],[11,"ne","","",34,[[["constant",3]]]],[11,"eq","","",35,[[["immediate",3]]]],[11,"ne","","",35,[[["immediate",3]]]],[11,"eq","","",36,[[["jumptable",3]]]],[11,"ne","","",36,[[["jumptable",3]]]],[11,"eq","","",37,[[["funcref",3]]]],[11,"ne","","",37,[[["funcref",3]]]],[11,"eq","","",38,[[["sigref",3]]]],[11,"ne","","",38,[[["sigref",3]]]],[11,"eq","","",39,[[["heap",3]]]],[11,"ne","","",39,[[["heap",3]]]],[11,"eq","","",40,[[["table",3]]]],[11,"ne","","",40,[[["table",3]]]],[11,"eq","","",41,[[["anyentity",4]]]],[11,"ne","","",41,[[["anyentity",4]]]],[11,"eq","cranelift_codegen::ir","",129,[[["signature",3]]]],[11,"ne","","",129,[[["signature",3]]]],[11,"eq","","",125,[[["abiparam",3]]]],[11,"ne","","",125,[[["abiparam",3]]]],[11,"eq","","",126,[[["argumentextension",4]]]],[11,"eq","","",127,[[["argumentpurpose",4]]]],[11,"ne","","",127,[[["argumentpurpose",4]]]],[11,"eq","","",130,[[["externalname",4]]]],[11,"ne","","",130,[[["externalname",4]]]],[11,"eq","cranelift_codegen::ir::immediates","",45,[[["imm64",3]]]],[11,"ne","","",45,[[["imm64",3]]]],[11,"eq","","",46,[[["uimm64",3]]]],[11,"ne","","",46,[[["uimm64",3]]]],[11,"eq","","",270,[[["uimm32",3]]]],[11,"ne","","",270,[[["uimm32",3]]]],[11,"eq","","",47,[[["v128imm",3]]]],[11,"ne","","",47,[[["v128imm",3]]]],[11,"eq","","",48,[[["offset32",3]]]],[11,"ne","","",48,[[["offset32",3]]]],[11,"eq","","",49,[[["ieee32",3]]]],[11,"ne","","",49,[[["ieee32",3]]]],[11,"eq","","",50,[[["ieee64",3]]]],[11,"ne","","",50,[[["ieee64",3]]]],[11,"eq","cranelift_codegen::ir::instructions","",51,[[["instructionformat",4]]]],[11,"eq","","",107,[[["opcode",4]]]],[11,"eq","","",112,[[["valuetypeset",3]]]],[11,"ne","","",112,[[["valuetypeset",3]]]],[11,"eq","","",113,[[["resolvedconstraint",4]]]],[11,"ne","","",113,[[["resolvedconstraint",4]]]],[11,"eq","cranelift_codegen::ir","",141,[[["libcall",4]]]],[11,"eq","","",142,[[["endianness",4]]]],[11,"eq","","",273,[[["memflags",3]]]],[11,"ne","","",273,[[["memflags",3]]]],[11,"eq","","",274,[[["programpoint",3]]]],[11,"ne","","",274,[[["programpoint",3]]]],[11,"eq","","",143,[[["expandedprogrampoint",4]]]],[11,"ne","","",143,[[["expandedprogrampoint",4]]]],[11,"eq","","",275,[[["sourceloc",3]]]],[11,"ne","","",275,[[["sourceloc",3]]]],[11,"eq","cranelift_codegen::ir::stackslot","",116,[[["stackslotkind",4]]]],[11,"eq","","",117,[[["stackslotdata",3]]]],[11,"ne","","",117,[[["stackslotdata",3]]]],[11,"eq","","",118,[[["stacklayoutinfo",3]]]],[11,"ne","","",118,[[["stacklayoutinfo",3]]]],[11,"eq","","",119,[[["stackslots",3]]]],[11,"ne","","",119,[[["stackslots",3]]]],[11,"eq","cranelift_codegen::ir","",146,[[["trapcode",4]]]],[11,"ne","","",146,[[["trapcode",4]]]],[11,"eq","cranelift_codegen::ir::types","",120,[[["type",3]]]],[11,"ne","","",120,[[["type",3]]]],[11,"eq","cranelift_codegen::ir","",148,[[["valueloc",4]]]],[11,"ne","","",148,[[["valueloc",4]]]],[11,"eq","","",147,[[["argumentloc",4]]]],[11,"ne","","",147,[[["argumentloc",4]]]],[11,"eq","","",150,[[["valuelabel",3]]]],[11,"ne","","",150,[[["valuelabel",3]]]],[11,"eq","cranelift_codegen::isa::unwind::systemv","",154,[[["registermappingerror",4]]]],[11,"ne","","",154,[[["registermappingerror",4]]]],[11,"eq","","",155,[[["unwindinfo",3]]]],[11,"ne","","",155,[[["unwindinfo",3]]]],[11,"eq","cranelift_codegen::isa::unwind::winx64","",156,[[["unwindinfo",3]]]],[11,"ne","","",156,[[["unwindinfo",3]]]],[11,"eq","cranelift_codegen::isa::unwind","",164,[[["unwindinfo",4]]]],[11,"ne","","",164,[[["unwindinfo",4]]]],[11,"eq","cranelift_codegen::isa::unwind::input","",157,[[["unwindcode",4]]]],[11,"ne","","",157,[[["unwindcode",4]]]],[11,"eq","","",163,[[["unwindinfo",3]]]],[11,"ne","","",163,[[["unwindinfo",3]]]],[11,"eq","cranelift_codegen::isa","",168,[[["callconv",4]]]],[11,"eq","","",171,[[["operandconstraint",3]]]],[11,"ne","","",171,[[["operandconstraint",3]]]],[11,"eq","","",170,[[["constraintkind",4]]]],[11,"ne","","",170,[[["constraintkind",4]]]],[11,"eq","","",172,[[["recipeconstraints",3]]]],[11,"ne","","",172,[[["recipeconstraints",3]]]],[11,"eq","","",277,[[["encoding",3]]]],[11,"ne","","",277,[[["encoding",3]]]],[11,"eq","cranelift_codegen::isa::registers","",166,[[]]],[11,"eq","","",278,[[["regclassindex",3]]]],[11,"ne","","",278,[[["regclassindex",3]]]],[11,"eq","cranelift_codegen::isa","",174,[[["stackbase",4]]]],[11,"eq","","",175,[[["stackbasemask",3]]]],[11,"ne","","",175,[[["stackbasemask",3]]]],[11,"eq","","",178,[[["lookuperror",4]]]],[11,"eq","cranelift_codegen::loop_analysis","",182,[[["loop",3]]]],[11,"ne","","",182,[[["loop",3]]]],[11,"eq","cranelift_codegen::machinst::lower","",187,[[["relocdistance",4]]]],[11,"eq","cranelift_codegen::machinst::vcode","",192,[[["vcodeconstant",3]]]],[11,"ne","","",192,[[["vcodeconstant",3]]]],[11,"eq","cranelift_codegen::machinst::blockorder","",194,[[["loweredblock",4]]]],[11,"ne","","",194,[[["loweredblock",4]]]],[11,"eq","cranelift_codegen::machinst::abi_impl","",206,[[["argsorrets",4]]]],[11,"eq","","",207,[[["instissafepoint",4]]]],[11,"eq","cranelift_codegen::machinst::buffer","",214,[[["machlabel",3]]]],[11,"ne","","",214,[[["machlabel",3]]]],[11,"eq","cranelift_codegen::machinst::inst_common","",220,[[["atomicrmwop",4]]]],[11,"eq","cranelift_codegen::machinst::valueregs","",222,[[["valueregs",3]]]],[11,"ne","","",222,[[["valueregs",3]]]],[11,"eq","cranelift_codegen::machinst","",225,[[["machterminator",4]]]],[11,"ne","","",225,[[["machterminator",4]]]],[11,"eq","","",231,[[["unwindinfokind",4]]]],[11,"eq","cranelift_codegen::settings","",242,[[["seterror",4]]]],[11,"ne","","",242,[[["seterror",4]]]],[11,"eq","","",245,[[["regalloc",4]]]],[11,"eq","","",246,[[["optlevel",4]]]],[11,"eq","","",247,[[["tlsmodel",4]]]],[11,"eq","","",248,[[["libcallcallconv",4]]]],[11,"eq","cranelift_codegen::verifier","",250,[[["verifiererror",3]]]],[11,"ne","","",250,[[["verifiererror",3]]]],[11,"eq","","",251,[[["verifiererrors",3]]]],[11,"ne","","",251,[[["verifiererrors",3]]]],[11,"eq","cranelift_codegen","",256,[[["codegenerror",4]]]],[11,"ne","","",256,[[["codegenerror",4]]]],[11,"eq","","",255,[[["valuelocrange",3]]]],[11,"ne","","",255,[[["valuelocrange",3]]]],[11,"eq","cranelift_codegen::ir","",149,[[["labelvalueloc",4]]]],[11,"ne","","",149,[[["labelvalueloc",4]]]],[11,"cmp","cranelift_codegen::ir::entities","",29,[[["block",3]],["ordering",4]]],[11,"cmp","","",30,[[["value",3]],["ordering",4]]],[11,"cmp","","",31,[[["inst",3]],["ordering",4]]],[11,"cmp","","",32,[[["stackslot",3]],["ordering",4]]],[11,"cmp","","",33,[[["globalvalue",3]],["ordering",4]]],[11,"cmp","","",34,[[["constant",3]],["ordering",4]]],[11,"cmp","","",35,[[["immediate",3]],["ordering",4]]],[11,"cmp","","",36,[[["jumptable",3]],["ordering",4]]],[11,"cmp","","",37,[[["funcref",3]],["ordering",4]]],[11,"cmp","","",38,[[["sigref",3]],["ordering",4]]],[11,"cmp","","",39,[[["heap",3]],["ordering",4]]],[11,"cmp","","",40,[[["table",3]],["ordering",4]]],[11,"cmp","","",41,[[["anyentity",4]],["ordering",4]]],[11,"cmp","cranelift_codegen::machinst::buffer","",214,[[["machlabel",3]],["ordering",4]]],[11,"partial_cmp","cranelift_codegen::data_value","",13,[[["datavalue",4]],[["ordering",4],["option",4]]]],[11,"lt","","",13,[[["datavalue",4]]]],[11,"le","","",13,[[["datavalue",4]]]],[11,"gt","","",13,[[["datavalue",4]]]],[11,"ge","","",13,[[["datavalue",4]]]],[11,"partial_cmp","cranelift_codegen::ir::entities","",29,[[["block",3]],[["ordering",4],["option",4]]]],[11,"lt","","",29,[[["block",3]]]],[11,"le","","",29,[[["block",3]]]],[11,"gt","","",29,[[["block",3]]]],[11,"ge","","",29,[[["block",3]]]],[11,"partial_cmp","","",30,[[["value",3]],[["ordering",4],["option",4]]]],[11,"lt","","",30,[[["value",3]]]],[11,"le","","",30,[[["value",3]]]],[11,"gt","","",30,[[["value",3]]]],[11,"ge","","",30,[[["value",3]]]],[11,"partial_cmp","","",31,[[["inst",3]],[["ordering",4],["option",4]]]],[11,"lt","","",31,[[["inst",3]]]],[11,"le","","",31,[[["inst",3]]]],[11,"gt","","",31,[[["inst",3]]]],[11,"ge","","",31,[[["inst",3]]]],[11,"partial_cmp","","",32,[[["stackslot",3]],[["ordering",4],["option",4]]]],[11,"lt","","",32,[[["stackslot",3]]]],[11,"le","","",32,[[["stackslot",3]]]],[11,"gt","","",32,[[["stackslot",3]]]],[11,"ge","","",32,[[["stackslot",3]]]],[11,"partial_cmp","","",33,[[["globalvalue",3]],[["ordering",4],["option",4]]]],[11,"lt","","",33,[[["globalvalue",3]]]],[11,"le","","",33,[[["globalvalue",3]]]],[11,"gt","","",33,[[["globalvalue",3]]]],[11,"ge","","",33,[[["globalvalue",3]]]],[11,"partial_cmp","","",34,[[["constant",3]],[["ordering",4],["option",4]]]],[11,"lt","","",34,[[["constant",3]]]],[11,"le","","",34,[[["constant",3]]]],[11,"gt","","",34,[[["constant",3]]]],[11,"ge","","",34,[[["constant",3]]]],[11,"partial_cmp","","",35,[[["immediate",3]],[["ordering",4],["option",4]]]],[11,"lt","","",35,[[["immediate",3]]]],[11,"le","","",35,[[["immediate",3]]]],[11,"gt","","",35,[[["immediate",3]]]],[11,"ge","","",35,[[["immediate",3]]]],[11,"partial_cmp","","",36,[[["jumptable",3]],[["ordering",4],["option",4]]]],[11,"lt","","",36,[[["jumptable",3]]]],[11,"le","","",36,[[["jumptable",3]]]],[11,"gt","","",36,[[["jumptable",3]]]],[11,"ge","","",36,[[["jumptable",3]]]],[11,"partial_cmp","","",37,[[["funcref",3]],[["ordering",4],["option",4]]]],[11,"lt","","",37,[[["funcref",3]]]],[11,"le","","",37,[[["funcref",3]]]],[11,"gt","","",37,[[["funcref",3]]]],[11,"ge","","",37,[[["funcref",3]]]],[11,"partial_cmp","","",38,[[["sigref",3]],[["ordering",4],["option",4]]]],[11,"lt","","",38,[[["sigref",3]]]],[11,"le","","",38,[[["sigref",3]]]],[11,"gt","","",38,[[["sigref",3]]]],[11,"ge","","",38,[[["sigref",3]]]],[11,"partial_cmp","","",39,[[["heap",3]],[["ordering",4],["option",4]]]],[11,"lt","","",39,[[["heap",3]]]],[11,"le","","",39,[[["heap",3]]]],[11,"gt","","",39,[[["heap",3]]]],[11,"ge","","",39,[[["heap",3]]]],[11,"partial_cmp","","",40,[[["table",3]],[["ordering",4],["option",4]]]],[11,"lt","","",40,[[["table",3]]]],[11,"le","","",40,[[["table",3]]]],[11,"gt","","",40,[[["table",3]]]],[11,"ge","","",40,[[["table",3]]]],[11,"partial_cmp","","",41,[[["anyentity",4]],[["ordering",4],["option",4]]]],[11,"lt","","",41,[[["anyentity",4]]]],[11,"le","","",41,[[["anyentity",4]]]],[11,"gt","","",41,[[["anyentity",4]]]],[11,"ge","","",41,[[["anyentity",4]]]],[11,"partial_cmp","cranelift_codegen::ir::immediates","",49,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",50,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","cranelift_codegen::machinst::buffer","",214,[[["machlabel",3]],[["ordering",4],["option",4]]]],[11,"lt","","",214,[[["machlabel",3]]]],[11,"le","","",214,[[["machlabel",3]]]],[11,"gt","","",214,[[["machlabel",3]]]],[11,"ge","","",214,[[["machlabel",3]]]],[11,"drop","cranelift_codegen::timing","",280,[[]]],[11,"index","cranelift_codegen::ir::dfg","",27,[[["inst",3]],["instructiondata",4]]],[11,"index","cranelift_codegen::ir::stackslot","",119,[[["stackslot",3]],["stackslotdata",3]]],[11,"index_mut","cranelift_codegen::ir::dfg","",27,[[["inst",3]],["instructiondata",4]]],[11,"index_mut","cranelift_codegen::ir::stackslot","",119,[[["stackslot",3]],["stackslotdata",3]]],[11,"hash","cranelift_codegen::ir","",121,[[]]],[11,"hash","cranelift_codegen::ir::constant","",24,[[]]],[11,"hash","cranelift_codegen::ir::entities","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","cranelift_codegen::ir","",129,[[]]],[11,"hash","","",125,[[]]],[11,"hash","","",126,[[]]],[11,"hash","","",127,[[]]],[11,"hash","cranelift_codegen::ir::immediates","",45,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",270,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","cranelift_codegen::ir::instructions","",107,[[]]],[11,"hash","cranelift_codegen::ir","",141,[[]]],[11,"hash","","",142,[[]]],[11,"hash","","",273,[[]]],[11,"hash","","",146,[[]]],[11,"hash","cranelift_codegen::ir::types","",120,[[]]],[11,"hash","cranelift_codegen::ir","",147,[[]]],[11,"hash","","",150,[[]]],[11,"hash","cranelift_codegen::isa","",168,[[]]],[11,"hash","","",180,[[]]],[11,"hash","cranelift_codegen::loop_analysis","",182,[[]]],[11,"hash","cranelift_codegen::machinst::blockorder","",194,[[]]],[11,"hash","cranelift_codegen::machinst::buffer","",214,[[]]],[11,"hash","cranelift_codegen::settings","",241,[[]]],[11,"hash","","",243,[[]]],[11,"hash","cranelift_codegen::settings::detail","",235,[[]]],[11,"hash","","",236,[[]]],[11,"hash","","",237,[[]]],[11,"hash","cranelift_codegen::settings","",244,[[]]],[11,"hash","","",245,[[]]],[11,"hash","","",246,[[]]],[11,"hash","","",247,[[]]],[11,"hash","","",248,[[]]],[11,"try_from","cranelift_codegen::ir::instructions","",107,[[],["result",4]]],[11,"try_from","","",107,[[["nonzerou32",3]],["result",4]]],[11,"from_str","cranelift_codegen::ir","",121,[[],["result",4]]],[11,"from_str","cranelift_codegen::ir::constant","Parse a hexadecimal string to `ConstantData`. This is the…",24,[[],["result",4]]],[11,"from_str","cranelift_codegen::ir","",127,[[],["result",4]]],[11,"from_str","","",130,[[],["result",4]]],[11,"from_str","cranelift_codegen::ir::immediates","",45,[[],["result",4]]],[11,"from_str","","",46,[[],["result",4]]],[11,"from_str","","",270,[[],["result",4]]],[11,"from_str","","",48,[[],["result",4]]],[11,"from_str","","",49,[[],["result",4]]],[11,"from_str","","",50,[[],["result",4]]],[11,"from_str","cranelift_codegen::ir::instructions","Parse an Opcode name from a string.",107,[[],["result",4]]],[11,"from_str","cranelift_codegen::ir","",141,[[],["result",4]]],[11,"from_str","cranelift_codegen::ir::stackslot","",116,[[],["result",4]]],[11,"from_str","cranelift_codegen::ir","",146,[[],["result",4]]],[11,"from_str","cranelift_codegen::isa","",168,[[],["result",4]]],[11,"from_str","cranelift_codegen::settings","",245,[[],["result",4]]],[11,"from_str","","",246,[[],["result",4]]],[11,"from_str","","",247,[[],["result",4]]],[11,"from_str","","",248,[[],["result",4]]],[11,"from_iter","cranelift_codegen::ir::constant","",24,[[["intoiterator",8]]]],[11,"into","cranelift_codegen::ir::immediates","",45,[[]]],[11,"into","","",46,[[]]],[11,"into","","",270,[[]]],[11,"into","","",270,[[]]],[11,"into","","",48,[[]]],[11,"into","","",48,[[]]],[11,"into","cranelift_codegen::verifier","",251,[[],[["verifiererror",3],["vec",3]]]],[11,"into","","",251,[[],["verifierresult",6]]],[11,"try_into","cranelift_codegen::data_value","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],[["ieee32",3],["result",4]]]],[11,"try_into","","",13,[[],[["ieee64",3],["result",4]]]],[11,"try_into","","",13,[[],["result",4]]],[11,"next_back","cranelift_codegen::ir::layout","",272,[[],[["option",4],["inst",3]]]],[11,"next","cranelift_codegen::dominator_tree","",262,[[],[["block",3],["option",4]]]],[11,"next","cranelift_codegen::flowgraph","",263,[[],[["option",4],["blockpredecessor",3]]]],[11,"next","cranelift_codegen::ir::dfg","",266,[[],["option",4]]],[11,"next","cranelift_codegen::ir::function","",269,[[],["option",4]]],[11,"next","cranelift_codegen::ir::layout","",271,[[],[["block",3],["option",4]]]],[11,"next","","",272,[[],[["option",4],["inst",3]]]],[11,"next","cranelift_codegen::isa","",276,[[],[["option",4],["encoding",3]]]],[11,"clone","cranelift_codegen::binemit","",261,[[],["stackmap",3]]],[11,"clone","","",5,[[],["reloc",4]]],[11,"clone","cranelift_codegen::cursor","",9,[[],["cursorposition",4]]],[11,"clone","cranelift_codegen::data_value","",13,[[],["datavalue",4]]],[11,"clone","cranelift_codegen::ir","",121,[[],["atomicrmwop",4]]],[11,"clone","cranelift_codegen::ir::constant","",24,[[],["constantdata",3]]],[11,"clone","","",25,[[],["constantpoolentry",3]]],[11,"clone","","",26,[[],["constantpool",3]]],[11,"clone","cranelift_codegen::ir::dfg","",27,[[],["dataflowgraph",3]]],[11,"clone","","",28,[[],["valuedef",4]]],[11,"clone","cranelift_codegen::ir::entities","",29,[[],["block",3]]],[11,"clone","","",30,[[],["value",3]]],[11,"clone","","",31,[[],["inst",3]]],[11,"clone","","",32,[[],["stackslot",3]]],[11,"clone","","",33,[[],["globalvalue",3]]],[11,"clone","","",34,[[],["constant",3]]],[11,"clone","","",35,[[],["immediate",3]]],[11,"clone","","",36,[[],["jumptable",3]]],[11,"clone","","",37,[[],["funcref",3]]],[11,"clone","","",38,[[],["sigref",3]]],[11,"clone","","",39,[[],["heap",3]]],[11,"clone","","",40,[[],["table",3]]],[11,"clone","","",41,[[],["anyentity",4]]],[11,"clone","cranelift_codegen::ir","",129,[[],["signature",3]]],[11,"clone","","",125,[[],["abiparam",3]]],[11,"clone","","",126,[[],["argumentextension",4]]],[11,"clone","","",127,[[],["argumentpurpose",4]]],[11,"clone","","",128,[[],["extfuncdata",3]]],[11,"clone","","",130,[[],["externalname",4]]],[11,"clone","cranelift_codegen::ir::function","",42,[[],["function",3]]],[11,"clone","cranelift_codegen::ir","",133,[[],["globalvaluedata",4]]],[11,"clone","","",137,[[],["heapdata",3]]],[11,"clone","","",138,[[],["heapstyle",4]]],[11,"clone","cranelift_codegen::ir::immediates","",45,[[],["imm64",3]]],[11,"clone","","",46,[[],["uimm64",3]]],[11,"clone","","",270,[[],["uimm32",3]]],[11,"clone","","",47,[[],["v128imm",3]]],[11,"clone","","",48,[[],["offset32",3]]],[11,"clone","","",49,[[],["ieee32",3]]],[11,"clone","","",50,[[],["ieee64",3]]],[11,"clone","cranelift_codegen::ir::instructions","",51,[[],["instructionformat",4]]],[11,"clone","","",52,[[],["instructiondata",4]]],[11,"clone","","",107,[[],["opcode",4]]],[11,"clone","","",108,[[],["variableargs",3]]],[11,"clone","","",111,[[],["opcodeconstraints",3]]],[11,"clone","","",112,[[],["valuetypeset",3]]],[11,"clone","","",113,[[],["resolvedconstraint",4]]],[11,"clone","cranelift_codegen::ir::jumptable","",114,[[],["jumptabledata",3]]],[11,"clone","cranelift_codegen::ir::layout","",115,[[],["layout",3]]],[11,"clone","cranelift_codegen::ir","",141,[[],["libcall",4]]],[11,"clone","","",142,[[],["endianness",4]]],[11,"clone","","",273,[[],["memflags",3]]],[11,"clone","","",274,[[],["programpoint",3]]],[11,"clone","","",143,[[],["expandedprogrampoint",4]]],[11,"clone","","",275,[[],["sourceloc",3]]],[11,"clone","cranelift_codegen::ir::stackslot","",116,[[],["stackslotkind",4]]],[11,"clone","","",117,[[],["stackslotdata",3]]],[11,"clone","","",118,[[],["stacklayoutinfo",3]]],[11,"clone","","",119,[[],["stackslots",3]]],[11,"clone","cranelift_codegen::ir","",145,[[],["tabledata",3]]],[11,"clone","","",146,[[],["trapcode",4]]],[11,"clone","cranelift_codegen::ir::types","",120,[[],["type",3]]],[11,"clone","cranelift_codegen::ir","",148,[[],["valueloc",4]]],[11,"clone","","",147,[[],["argumentloc",4]]],[11,"clone","","",150,[[],["valuelabel",3]]],[11,"clone","","",151,[[],["valuelabelstart",3]]],[11,"clone","","",152,[[],["valuelabelassignments",4]]],[11,"clone","cranelift_codegen::isa::unwind::systemv","",155,[[],["unwindinfo",3]]],[11,"clone","cranelift_codegen::isa::unwind::winx64","",156,[[],["unwindinfo",3]]],[11,"clone","cranelift_codegen::isa::unwind","",164,[[],["unwindinfo",4]]],[11,"clone","cranelift_codegen::isa::unwind::input","",157,[[],["unwindcode",4]]],[11,"clone","","",163,[[],["unwindinfo",3]]],[11,"clone","cranelift_codegen::isa","",168,[[],["callconv",4]]],[11,"clone","","",170,[[],["constraintkind",4]]],[11,"clone","","",172,[[],["recipeconstraints",3]]],[11,"clone","","",169,[[],["branchrange",3]]],[11,"clone","","",277,[[],["encoding",3]]],[11,"clone","","",173,[[],["encinfo",3]]],[11,"clone","cranelift_codegen::isa::registers","",278,[[],["regclassindex",3]]],[11,"clone","","",167,[[],["reginfo",3]]],[11,"clone","cranelift_codegen::isa","",176,[[],["stackref",3]]],[11,"clone","","",174,[[],["stackbase",4]]],[11,"clone","","",175,[[],["stackbasemask",3]]],[11,"clone","","",177,[[],["backendvariant",4]]],[11,"clone","","",178,[[],["lookuperror",4]]],[11,"clone","","",179,[[],["builder",3]]],[11,"clone","","",180,[[],["targetfrontendconfig",3]]],[11,"clone","cranelift_codegen::loop_analysis","",182,[[],["loop",3]]],[11,"clone","cranelift_codegen::machinst::lower","",185,[[],["nonreginput",3]]],[11,"clone","","",187,[[],["relocdistance",4]]],[11,"clone","cranelift_codegen::machinst::vcode","",192,[[],["vcodeconstant",3]]],[11,"clone","cranelift_codegen::machinst::blockorder","",194,[[],["loweredblock",4]]],[11,"clone","cranelift_codegen::machinst::abi_impl","",202,[[],["abiarg",4]]],[11,"clone","","",206,[[],["argsorrets",4]]],[11,"clone","","",207,[[],["instissafepoint",4]]],[11,"clone","","",208,[[],["stackamode",4]]],[11,"clone","","",211,[[],["calldest",4]]],[11,"clone","cranelift_codegen::machinst::buffer","",214,[[],["machlabel",3]]],[11,"clone","","",217,[[],["machsrcloc",3]]],[11,"clone","","",218,[[],["machstackmap",3]]],[11,"clone","cranelift_codegen::machinst::inst_common","",220,[[],["atomicrmwop",4]]],[11,"clone","cranelift_codegen::machinst::valueregs","",222,[[],["valueregs",3]]],[11,"clone","cranelift_codegen::machinst","",225,[[],["machterminator",4]]],[11,"clone","","",231,[[],["unwindinfokind",4]]],[11,"clone","","",234,[[],["machinststackopinfo",4]]],[11,"clone","cranelift_codegen::settings","",241,[[],["builder",3]]],[11,"clone","","",243,[[],["predicateview",3]]],[11,"clone","cranelift_codegen::settings::detail","",237,[[],["detail",4]]],[11,"clone","cranelift_codegen::settings","",244,[[],["flags",3]]],[11,"clone","","",245,[[],["regalloc",4]]],[11,"clone","","",246,[[],["optlevel",4]]],[11,"clone","","",247,[[],["tlsmodel",4]]],[11,"clone","","",248,[[],["libcallcallconv",4]]],[11,"clone","","",249,[[],["flagsorisa",3]]],[11,"clone","cranelift_codegen::verifier","",250,[[],["verifiererror",3]]],[11,"clone","","",251,[[],["verifiererrors",3]]],[11,"clone","cranelift_codegen::binemit","",253,[[],["regdiversions",3]]],[11,"clone","cranelift_codegen","",255,[[],["valuelocrange",3]]],[11,"clone","cranelift_codegen::ir","",149,[[],["labelvalueloc",4]]],[11,"default","cranelift_codegen::binemit","",258,[[],["nullrelocsink",3]]],[11,"default","","",259,[[],["nulltrapsink",3]]],[11,"default","cranelift_codegen::ir::constant","",24,[[],["constantdata",3]]],[11,"default","cranelift_codegen::ir","",130,[[]]],[11,"default","cranelift_codegen::ir::function","",43,[[],["displayfunctionannotations",3]]],[11,"default","cranelift_codegen::ir::instructions","",108,[[]]],[11,"default","cranelift_codegen::ir","",275,[[]]],[11,"default","cranelift_codegen::ir::stackslot","",119,[[],["stackslots",3]]],[11,"default","cranelift_codegen::ir::types","",120,[[]]],[11,"default","cranelift_codegen::ir","",148,[[]]],[11,"default","","",147,[[]]],[11,"default","cranelift_codegen::isa","",277,[[]]],[11,"default","","",177,[[]]],[11,"default","cranelift_codegen::machinst::vcode","",191,[[],["vcodeconstants",3]]],[11,"default","cranelift_codegen::machinst::buffer","",214,[[]]],[11,"default","cranelift_codegen::timing","",281,[[]]],[11,"default","cranelift_codegen::verifier","",251,[[],["verifiererrors",3]]],[11,"source","cranelift_codegen","",256,[[],[["error",8],["option",4]]]],[11,"new","cranelift_codegen::ir::entities","",29,[[]]],[11,"index","","",29,[[]]],[11,"new","","",30,[[]]],[11,"index","","",30,[[]]],[11,"new","","",31,[[]]],[11,"index","","",31,[[]]],[11,"new","","",32,[[]]],[11,"index","","",32,[[]]],[11,"new","","",33,[[]]],[11,"index","","",33,[[]]],[11,"new","","",34,[[]]],[11,"index","","",34,[[]]],[11,"new","","",35,[[]]],[11,"index","","",35,[[]]],[11,"new","","",36,[[]]],[11,"index","","",36,[[]]],[11,"new","","",37,[[]]],[11,"index","","",37,[[]]],[11,"new","","",38,[[]]],[11,"index","","",38,[[]]],[11,"new","","",39,[[]]],[11,"index","","",39,[[]]],[11,"new","","",40,[[]]],[11,"index","","",40,[[]]],[11,"new","cranelift_codegen::ir","",150,[[]]],[11,"index","","",150,[[]]],[11,"new","cranelift_codegen::isa::registers","",278,[[]]],[11,"index","","",278,[[]]],[11,"new","cranelift_codegen::loop_analysis","",182,[[]]],[11,"index","","",182,[[]]],[11,"new","cranelift_codegen::machinst::vcode","",192,[[]]],[11,"index","","",192,[[]]],[11,"new","cranelift_codegen::machinst::buffer","",214,[[]]],[11,"index","","",214,[[]]],[11,"reserved_value","cranelift_codegen::ir::entities","",29,[[],["block",3]]],[11,"is_reserved_value","","",29,[[]]],[11,"reserved_value","","",30,[[],["value",3]]],[11,"is_reserved_value","","",30,[[]]],[11,"reserved_value","","",31,[[],["inst",3]]],[11,"is_reserved_value","","",31,[[]]],[11,"reserved_value","","",32,[[],["stackslot",3]]],[11,"is_reserved_value","","",32,[[]]],[11,"reserved_value","","",33,[[],["globalvalue",3]]],[11,"is_reserved_value","","",33,[[]]],[11,"reserved_value","","",34,[[],["constant",3]]],[11,"is_reserved_value","","",34,[[]]],[11,"reserved_value","","",35,[[],["immediate",3]]],[11,"is_reserved_value","","",35,[[]]],[11,"reserved_value","","",36,[[],["jumptable",3]]],[11,"is_reserved_value","","",36,[[]]],[11,"reserved_value","","",37,[[],["funcref",3]]],[11,"is_reserved_value","","",37,[[]]],[11,"reserved_value","","",38,[[],["sigref",3]]],[11,"is_reserved_value","","",38,[[]]],[11,"reserved_value","","",39,[[],["heap",3]]],[11,"is_reserved_value","","",39,[[]]],[11,"reserved_value","","",40,[[],["table",3]]],[11,"is_reserved_value","","",40,[[]]],[11,"reserved_value","cranelift_codegen::ir","",150,[[],["valuelabel",3]]],[11,"is_reserved_value","","",150,[[]]],[11,"reserved_value","cranelift_codegen::loop_analysis","",182,[[],["loop",3]]],[11,"is_reserved_value","","",182,[[]]],[11,"reserved_value","cranelift_codegen::machinst::vcode","",192,[[],["vcodeconstant",3]]],[11,"is_reserved_value","","",192,[[]]],[11,"reserved_value","cranelift_codegen::machinst::buffer","",214,[[],["machlabel",3]]],[11,"is_reserved_value","","",214,[[]]],[11,"deserialize","cranelift_codegen::binemit","",261,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","cranelift_codegen::ir","",121,[[],["result",4]]],[11,"deserialize","cranelift_codegen::ir::entities","",32,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"deserialize","cranelift_codegen::ir","",129,[[],["result",4]]],[11,"deserialize","","",125,[[],["result",4]]],[11,"deserialize","","",126,[[],["result",4]]],[11,"deserialize","","",127,[[],["result",4]]],[11,"deserialize","cranelift_codegen::ir::immediates","",47,[[],["result",4]]],[11,"deserialize","cranelift_codegen::ir","",141,[[],["result",4]]],[11,"deserialize","","",275,[[],["result",4]]],[11,"deserialize","cranelift_codegen::ir::stackslot","",116,[[],["result",4]]],[11,"deserialize","","",117,[[],["result",4]]],[11,"deserialize","","",118,[[],["result",4]]],[11,"deserialize","","",119,[[],["result",4]]],[11,"deserialize","cranelift_codegen::ir","",146,[[],["result",4]]],[11,"deserialize","cranelift_codegen::ir::types","",120,[[],["result",4]]],[11,"deserialize","cranelift_codegen::ir","",148,[[],["result",4]]],[11,"deserialize","","",147,[[],["result",4]]],[11,"deserialize","","",150,[[],["result",4]]],[11,"deserialize","cranelift_codegen::isa::unwind::systemv","",155,[[],["result",4]]],[11,"deserialize","cranelift_codegen::isa::unwind::winx64","",156,[[],["result",4]]],[11,"deserialize","cranelift_codegen::isa::unwind","",164,[[],["result",4]]],[11,"deserialize","cranelift_codegen::isa::unwind::input","",157,[[],["result",4]]],[11,"deserialize","","",163,[[],["result",4]]],[11,"deserialize","cranelift_codegen::isa","",168,[[],["result",4]]],[11,"deserialize","cranelift_codegen","",255,[[],["result",4]]],[11,"deserialize","cranelift_codegen::ir","",149,[[],["result",4]]],[11,"serialize","cranelift_codegen::binemit","",261,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","cranelift_codegen::ir","",121,[[],["result",4]]],[11,"serialize","cranelift_codegen::ir::entities","",32,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","cranelift_codegen::ir","",129,[[],["result",4]]],[11,"serialize","","",125,[[],["result",4]]],[11,"serialize","","",126,[[],["result",4]]],[11,"serialize","","",127,[[],["result",4]]],[11,"serialize","cranelift_codegen::ir::immediates","",47,[[],["result",4]]],[11,"serialize","cranelift_codegen::ir","",141,[[],["result",4]]],[11,"serialize","","",275,[[],["result",4]]],[11,"serialize","cranelift_codegen::ir::stackslot","",116,[[],["result",4]]],[11,"serialize","","",117,[[],["result",4]]],[11,"serialize","","",118,[[],["result",4]]],[11,"serialize","","",119,[[],["result",4]]],[11,"serialize","cranelift_codegen::ir","",146,[[],["result",4]]],[11,"serialize","cranelift_codegen::ir::types","",120,[[],["result",4]]],[11,"serialize","cranelift_codegen::ir","",148,[[],["result",4]]],[11,"serialize","","",147,[[],["result",4]]],[11,"serialize","","",150,[[],["result",4]]],[11,"serialize","cranelift_codegen::isa::unwind::systemv","",155,[[],["result",4]]],[11,"serialize","cranelift_codegen::isa::unwind::winx64","",156,[[],["result",4]]],[11,"serialize","cranelift_codegen::isa::unwind","",164,[[],["result",4]]],[11,"serialize","cranelift_codegen::isa::unwind::input","",157,[[],["result",4]]],[11,"serialize","","",163,[[],["result",4]]],[11,"serialize","cranelift_codegen::isa","",168,[[],["result",4]]],[11,"serialize","cranelift_codegen","",255,[[],["result",4]]],[11,"serialize","cranelift_codegen::ir","",149,[[],["result",4]]],[11,"insns","cranelift_codegen::machinst::vcode","",190,[[]]],[11,"insns_mut","","",190,[[]]],[11,"get_insn","","",190,[[["instix",4]]]],[11,"get_insn_mut","","",190,[[["instix",4]]]],[11,"blocks","","",190,[[],[["range",3],["blockix",4]]]],[11,"entry_block","","",190,[[],["blockix",4]]],[11,"block_insns","","",190,[[["blockix",4]],[["range",3],["instix",4]]]],[11,"block_succs","","",190,[[["blockix",4]],["cow",4]]],[11,"is_ret","","",190,[[["instix",4]]]],[11,"is_included_in_clobbers","","",190,[[]]],[11,"get_regs","","",190,[[["regusagecollector",3]]]],[11,"map_regs","","",190,[[]]],[11,"is_move","","",190,[[],["option",4]]],[11,"get_num_vregs","","",190,[[]]],[11,"get_spillslot_size","","",190,[[["regclass",4],["virtualreg",3]]]],[11,"gen_spill","","",190,[[["spillslot",3],["option",4],["virtualreg",3],["realreg",3]]]],[11,"gen_reload","","",190,[[["spillslot",3],["option",4],["writable",3],["virtualreg",3],["realreg",3]]]],[11,"gen_move","","",190,[[["writable",3],["virtualreg",3],["realreg",3]]]],[11,"gen_zero_len_nop","","",190,[[]]],[11,"maybe_direct_reload","","",190,[[["virtualreg",3],["spillslot",3]],["option",4]]],[11,"func_liveins","","",190,[[],[["regallocset",3],["realreg",3]]]],[11,"func_liveouts","","",190,[[],[["regallocset",3],["realreg",3]]]],[11,"show_rru","","",190,[[["option",4],["realreguniverse",3]],["string",3]]],[11,"is_none","cranelift_codegen::packed_option","Returns `true` if the packed option is a `None` value.",257,[[]]],[11,"is_some","","Returns `true` if the packed option is a `Some` value.",257,[[]]],[11,"expand","","Expand the packed option into a normal `Option`.",257,[[],["option",4]]],[11,"map","","Maps a `PackedOption<T>` to `Option<U>` by applying a…",257,[[],["option",4]]],[11,"unwrap","","Unwrap a packed `Some` value or panic.",257,[[]]],[11,"expect","","Unwrap a packed `Some` value or panic.",257,[[]]],[11,"take","","Takes the value out of the packed option, leaving a `None`…",257,[[],["option",4]]],[11,"new","cranelift_codegen::binemit","Create a new memory code sink that writes a function to…",1,[[["trapsink",8],["relocsink",8],["stackmapsink",8]]]],[11,"add_call_site","","Track a call site whose return address is the given…",2,[[["codeoffset",6],["sourceloc",3],["opcode",4]]]],[11,"from_values","","Create a `StackMap` based on where references are located…",261,[[["function",3],["targetisa",8]]]],[11,"from_slice","","Create a vec of Bitsets from a slice of bools.",261,[[]]],[11,"get_bit","","Returns a specified bit.",261,[[]]],[11,"as_slice","","Returns the raw bitmap that represents this stack map.",261,[[]]],[11,"mapped_words","","Returns the number of words represented by this stack map.",261,[[]]],[11,"without_equal","cranelift_codegen::ir::condcodes","Get the corresponding IntCC with the equal component…",22,[[],["intcc",4]]],[11,"unsigned","","Get the corresponding IntCC with the signed component…",22,[[],["intcc",4]]],[11,"to_static_str","","Get the corresponding string condition code for the IntCC…",22,[[]]],[11,"jump","cranelift_codegen::ir","Jump.",122,[[["block",3]],["inst",3]]],[11,"fallthrough","","Fall through to the next block.",122,[[["block",3]],["inst",3]]],[11,"brz","","Branch when zero.",122,[[["block",3],["value",3]],["inst",3]]],[11,"brnz","","Branch when non-zero.",122,[[["block",3],["value",3]],["inst",3]]],[11,"br_icmp","","Compare scalar integers and branch.",122,[[["block",3],["into",8],["value",3],["intcc",4]],["inst",3]]],[11,"brif","","Branch when condition is true in integer CPU flags.",122,[[["block",3],["into",8],["value",3],["intcc",4]],["inst",3]]],[11,"brff","","Branch when condition is true in floating point CPU flags.",122,[[["block",3],["floatcc",4],["value",3],["into",8]],["inst",3]]],[11,"br_table","","Indirect branch via jump table.",122,[[["block",3],["value",3],["jumptable",3]],["inst",3]]],[11,"jump_table_entry","","Get an entry from a jump table.",122,[[["jumptable",3],["into",8],["uimm8",6],["value",3]],["value",3]]],[11,"jump_table_base","","Get the absolute base address of a jump table.",122,[[["jumptable",3],["type",3]],["value",3]]],[11,"indirect_jump_table_br","","Branch indirectly via a jump table entry.",122,[[["jumptable",3],["value",3]],["inst",3]]],[11,"debugtrap","","Encodes an assembly debug trap.",122,[[],["inst",3]]],[11,"trap","","Terminate execution unconditionally.",122,[[["trapcode",4],["into",8]],["inst",3]]],[11,"trapz","","Trap when zero.",122,[[["value",3],["trapcode",4],["into",8]],["inst",3]]],[11,"resumable_trap","","A resumable trap.",122,[[["trapcode",4],["into",8]],["inst",3]]],[11,"trapnz","","Trap when non-zero.",122,[[["value",3],["trapcode",4],["into",8]],["inst",3]]],[11,"resumable_trapnz","","A resumable trap to be called when the passed condition is…",122,[[["value",3],["trapcode",4],["into",8]],["inst",3]]],[11,"trapif","","Trap when condition is true in integer CPU flags.",122,[[["into",8],["into",8],["value",3],["trapcode",4],["intcc",4]],["inst",3]]],[11,"trapff","","Trap when condition is true in floating point CPU flags.",122,[[["into",8],["floatcc",4],["value",3],["trapcode",4],["into",8]],["inst",3]]],[11,"return_","","Return from the function.",122,[[],["inst",3]]],[11,"fallthrough_return","","Return from the function by fallthrough.",122,[[],["inst",3]]],[11,"call","","Direct function call.",122,[[["funcref",3]],["inst",3]]],[11,"call_indirect","","Indirect function call.",122,[[["sigref",3],["value",3]],["inst",3]]],[11,"func_addr","","Get the address of a function.",122,[[["type",3],["funcref",3]],["value",3]]],[11,"splat","","Vector splat.",122,[[["value",3],["type",3]],["value",3]]],[11,"swizzle","","Vector swizzle.",122,[[["value",3],["type",3]],["value",3]]],[11,"insertlane","","Insert `y` as lane `Idx` in x.",122,[[["value",3],["into",8],["uimm8",6]],["value",3]]],[11,"extractlane","","Extract lane `Idx` from `x`.",122,[[["value",3],["into",8],["uimm8",6]],["value",3]]],[11,"imin","","Signed integer minimum.",122,[[["value",3]],["value",3]]],[11,"umin","","Unsigned integer minimum.",122,[[["value",3]],["value",3]]],[11,"imax","","Signed integer maximum.",122,[[["value",3]],["value",3]]],[11,"umax","","Unsigned integer maximum.",122,[[["value",3]],["value",3]]],[11,"avg_round","","Unsigned average with rounding: `a := (x + y + 1) // 2`",122,[[["value",3]],["value",3]]],[11,"load","","Load from memory at `p + Offset`.",122,[[["offset32",3],["type",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"load_complex","","Load from memory at `sum(args) + Offset`.",122,[[["type",3],["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"store","","Store `x` to memory at `p + Offset`.",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["inst",3]]],[11,"store_complex","","Store `x` to memory at `sum(args) + Offset`.",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["inst",3]]],[11,"uload8","","Load 8 bits from memory at `p + Offset` and zero-extend.",122,[[["offset32",3],["type",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"uload8_complex","","Load 8 bits from memory at `sum(args) + Offset` and…",122,[[["type",3],["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"sload8","","Load 8 bits from memory at `p + Offset` and sign-extend.",122,[[["offset32",3],["type",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"sload8_complex","","Load 8 bits from memory at `sum(args) + Offset` and…",122,[[["type",3],["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"istore8","","Store the low 8 bits of `x` to memory at `p + Offset`.",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["inst",3]]],[11,"istore8_complex","","Store the low 8 bits of `x` to memory at `sum(args) +…",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["inst",3]]],[11,"uload16","","Load 16 bits from memory at `p + Offset` and zero-extend.",122,[[["offset32",3],["type",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"uload16_complex","","Load 16 bits from memory at `sum(args) + Offset` and…",122,[[["type",3],["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"sload16","","Load 16 bits from memory at `p + Offset` and sign-extend.",122,[[["offset32",3],["type",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"sload16_complex","","Load 16 bits from memory at `sum(args) + Offset` and…",122,[[["type",3],["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"istore16","","Store the low 16 bits of `x` to memory at `p + Offset`.",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["inst",3]]],[11,"istore16_complex","","Store the low 16 bits of `x` to memory at `sum(args) +…",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["inst",3]]],[11,"uload32","","Load 32 bits from memory at `p + Offset` and zero-extend.",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"uload32_complex","","Load 32 bits from memory at `sum(args) + Offset` and…",122,[[["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"sload32","","Load 32 bits from memory at `p + Offset` and sign-extend.",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"sload32_complex","","Load 32 bits from memory at `sum(args) + Offset` and…",122,[[["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"istore32","","Store the low 32 bits of `x` to memory at `p + Offset`.",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["inst",3]]],[11,"istore32_complex","","Store the low 32 bits of `x` to memory at `sum(args) +…",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["inst",3]]],[11,"uload8x8","","Load an 8x8 vector (64 bits) from memory at `p + Offset`…",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"uload8x8_complex","","Load an 8x8 vector (64 bits) from memory at `sum(args) +…",122,[[["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"sload8x8","","Load an 8x8 vector (64 bits) from memory at `p + Offset`…",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"sload8x8_complex","","Load an 8x8 vector (64 bits) from memory at `sum(args) +…",122,[[["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"uload16x4","","Load a 16x4 vector (64 bits) from memory at `p + Offset`…",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"uload16x4_complex","","Load a 16x4 vector (64 bits) from memory at `sum(args) +…",122,[[["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"sload16x4","","Load a 16x4 vector (64 bits) from memory at `p + Offset`…",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"sload16x4_complex","","Load a 16x4 vector (64 bits) from memory at `sum(args) +…",122,[[["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"uload32x2","","Load an 32x2 vector (64 bits) from memory at `p + Offset`…",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"uload32x2_complex","","Load a 32x2 vector (64 bits) from memory at `sum(args) +…",122,[[["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"sload32x2","","Load a 32x2 vector (64 bits) from memory at `p + Offset`…",122,[[["offset32",3],["memflags",3],["into",8],["value",3],["into",8]],["value",3]]],[11,"sload32x2_complex","","Load a 32x2 vector (64 bits) from memory at `sum(args) +…",122,[[["memflags",3],["into",8],["into",8],["offset32",3]],["value",3]]],[11,"stack_load","","Load a value from a stack slot at the constant offset.",122,[[["type",3],["into",8],["offset32",3],["stackslot",3]],["value",3]]],[11,"stack_store","","Store a value to a stack slot at a constant offset.",122,[[["offset32",3],["value",3],["into",8],["stackslot",3]],["inst",3]]],[11,"stack_addr","","Get the address of a stack slot.",122,[[["type",3],["into",8],["offset32",3],["stackslot",3]],["value",3]]],[11,"global_value","","Compute the value of global GV.",122,[[["globalvalue",3],["type",3]],["value",3]]],[11,"symbol_value","","Compute the value of global GV, which is a symbolic value.",122,[[["globalvalue",3],["type",3]],["value",3]]],[11,"tls_value","","Compute the value of global GV, which is a TLS (thread…",122,[[["globalvalue",3],["type",3]],["value",3]]],[11,"heap_addr","","Bounds check and compute absolute address of heap memory.",122,[[["uimm32",3],["type",3],["heap",3],["value",3],["into",8]],["value",3]]],[11,"get_pinned_reg","","Gets the content of the pinned register, when it\'s enabled.",122,[[["type",3]],["value",3]]],[11,"set_pinned_reg","","Sets the content of the pinned register, when it\'s enabled.",122,[[["value",3]],["inst",3]]],[11,"table_addr","","Bounds check and compute absolute address of a table entry.",122,[[["offset32",3],["type",3],["value",3],["table",3],["into",8]],["value",3]]],[11,"iconst","","Integer constant.",122,[[["into",8],["type",3],["imm64",3]],["value",3]]],[11,"f32const","","Floating point constant.",122,[[["into",8],["ieee32",3]],["value",3]]],[11,"f64const","","Floating point constant.",122,[[["ieee64",3],["into",8]],["value",3]]],[11,"bconst","","Boolean constant.",122,[[["type",3],["into",8]],["value",3]]],[11,"vconst","","SIMD vector constant.",122,[[["constant",3],["type",3],["into",8]],["value",3]]],[11,"const_addr","","Calculate the base address of a value in the constant pool.",122,[[["constant",3],["type",3],["into",8]],["value",3]]],[11,"shuffle","","SIMD vector shuffle.",122,[[["value",3],["into",8],["immediate",3]],["value",3]]],[11,"null","","Null constant value for reference types.",122,[[["type",3]],["value",3]]],[11,"nop","","Just a dummy instruction.",122,[[],["inst",3]]],[11,"select","","Conditional select.",122,[[["value",3]],["value",3]]],[11,"selectif","","Conditional select, dependent on integer condition codes.",122,[[["type",3],["into",8],["value",3],["intcc",4]],["value",3]]],[11,"selectif_spectre_guard","","Conditional select intended for Spectre guards.",122,[[["type",3],["into",8],["value",3],["intcc",4]],["value",3]]],[11,"bitselect","","Conditional select of bits.",122,[[["value",3]],["value",3]]],[11,"copy","","Register-register copy.",122,[[["value",3]],["value",3]]],[11,"spill","","Spill a register value to a stack slot.",122,[[["value",3]],["value",3]]],[11,"fill","","Load a register value from a stack slot.",122,[[["value",3]],["value",3]]],[11,"fill_nop","","This is identical to `fill`, except it has no encoding,…",122,[[["value",3]],["value",3]]],[11,"dummy_sarg_t","","This creates a sarg_t",122,[[],["value",3]]],[11,"regmove","","Temporarily divert `x` from `src` to `dst`.",122,[[["regunit",6],["value",3],["into",8]],["inst",3]]],[11,"copy_special","","Copies the contents of \'\'src\'\' register to \'\'dst\'\' register.",122,[[["regunit",6],["into",8]],["inst",3]]],[11,"copy_to_ssa","","Copies the contents of \'\'src\'\' register to \'\'a\'\' SSA name.",122,[[["regunit",6],["type",3],["into",8]],["value",3]]],[11,"copy_nop","","Stack-slot-to-the-same-stack-slot copy, which is…",122,[[["value",3]],["value",3]]],[11,"adjust_sp_down","","Subtracts `delta` offset value from the stack pointer…",122,[[["value",3]],["inst",3]]],[11,"adjust_sp_up_imm","","Adds `Offset` immediate offset value to the stack pointer…",122,[[["into",8],["imm64",3]],["inst",3]]],[11,"adjust_sp_down_imm","","Subtracts `Offset` immediate offset value from the stack…",122,[[["into",8],["imm64",3]],["inst",3]]],[11,"ifcmp_sp","","Compare `addr` with the stack pointer and set the CPU flags.",122,[[["value",3]],["value",3]]],[11,"regspill","","Temporarily divert `x` from `src` to `SS`.",122,[[["stackslot",3],["regunit",6],["value",3],["into",8]],["inst",3]]],[11,"regfill","","Temporarily divert `x` from `SS` to `dst`.",122,[[["into",8],["regunit",6],["value",3],["stackslot",3]],["inst",3]]],[11,"safepoint","","This instruction will provide live reference values at a…",122,[[],["inst",3]]],[11,"vsplit","","Split a vector into two halves.",122,[[["value",3]]]],[11,"vconcat","","Vector concatenation.",122,[[["value",3]],["value",3]]],[11,"vselect","","Vector lane select.",122,[[["value",3]],["value",3]]],[11,"vany_true","","Reduce a vector to a scalar boolean.",122,[[["value",3]],["value",3]]],[11,"vall_true","","Reduce a vector to a scalar boolean.",122,[[["value",3]],["value",3]]],[11,"vhigh_bits","","Reduce a vector to a scalar integer.",122,[[["value",3],["type",3]],["value",3]]],[11,"icmp","","Integer comparison.",122,[[["into",8],["value",3],["intcc",4]],["value",3]]],[11,"icmp_imm","","Compare scalar integer to a constant.",122,[[["imm64",3],["into",8],["value",3],["into",8],["intcc",4]],["value",3]]],[11,"ifcmp","","Compare scalar integers and return flags.",122,[[["value",3]],["value",3]]],[11,"ifcmp_imm","","Compare scalar integer to a constant and return flags.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"iadd","","Wrapping integer addition: `a := x + y \\\\pmod{2^B}`.",122,[[["value",3]],["value",3]]],[11,"uadd_sat","","Add with unsigned saturation.",122,[[["value",3]],["value",3]]],[11,"sadd_sat","","Add with signed saturation.",122,[[["value",3]],["value",3]]],[11,"isub","","Wrapping integer subtraction: `a := x - y \\\\pmod{2^B}`.",122,[[["value",3]],["value",3]]],[11,"usub_sat","","Subtract with unsigned saturation.",122,[[["value",3]],["value",3]]],[11,"ssub_sat","","Subtract with signed saturation.",122,[[["value",3]],["value",3]]],[11,"ineg","","Integer negation: `a := -x \\\\pmod{2^B}`.",122,[[["value",3]],["value",3]]],[11,"iabs","","Integer absolute value with wrapping: `a := |x|`.",122,[[["value",3]],["value",3]]],[11,"imul","","Wrapping integer multiplication: `a := x y \\\\pmod{2^B}`.",122,[[["value",3]],["value",3]]],[11,"umulhi","","Unsigned integer multiplication, producing the high half…",122,[[["value",3]],["value",3]]],[11,"smulhi","","Signed integer multiplication, producing the high half of…",122,[[["value",3]],["value",3]]],[11,"udiv","","Unsigned integer division: `a := \\\\lfloor {x \\\\over y}…",122,[[["value",3]],["value",3]]],[11,"sdiv","","Signed integer division rounded toward zero: `a :=…",122,[[["value",3]],["value",3]]],[11,"urem","","Unsigned integer remainder.",122,[[["value",3]],["value",3]]],[11,"srem","","Signed integer remainder. The result has the sign of the…",122,[[["value",3]],["value",3]]],[11,"iadd_imm","","Add immediate integer.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"imul_imm","","Integer multiplication by immediate constant.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"udiv_imm","","Unsigned integer division by an immediate constant.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"sdiv_imm","","Signed integer division by an immediate constant.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"urem_imm","","Unsigned integer remainder with immediate divisor.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"srem_imm","","Signed integer remainder with immediate divisor.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"irsub_imm","","Immediate reverse wrapping subtraction: `a := Y - x…",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"iadd_cin","","Add integers with carry in.",122,[[["value",3]],["value",3]]],[11,"iadd_ifcin","","Add integers with carry in.",122,[[["value",3]],["value",3]]],[11,"iadd_cout","","Add integers with carry out.",122,[[["value",3]]]],[11,"iadd_ifcout","","Add integers with carry out.",122,[[["value",3]]]],[11,"iadd_carry","","Add integers with carry in and out.",122,[[["value",3]]]],[11,"iadd_ifcarry","","Add integers with carry in and out.",122,[[["value",3]]]],[11,"isub_bin","","Subtract integers with borrow in.",122,[[["value",3]],["value",3]]],[11,"isub_ifbin","","Subtract integers with borrow in.",122,[[["value",3]],["value",3]]],[11,"isub_bout","","Subtract integers with borrow out.",122,[[["value",3]]]],[11,"isub_ifbout","","Subtract integers with borrow out.",122,[[["value",3]]]],[11,"isub_borrow","","Subtract integers with borrow in and out.",122,[[["value",3]]]],[11,"isub_ifborrow","","Subtract integers with borrow in and out.",122,[[["value",3]]]],[11,"band","","Bitwise and.",122,[[["value",3]],["value",3]]],[11,"bor","","Bitwise or.",122,[[["value",3]],["value",3]]],[11,"bxor","","Bitwise xor.",122,[[["value",3]],["value",3]]],[11,"bnot","","Bitwise not.",122,[[["value",3]],["value",3]]],[11,"band_not","","Bitwise and not.",122,[[["value",3]],["value",3]]],[11,"bor_not","","Bitwise or not.",122,[[["value",3]],["value",3]]],[11,"bxor_not","","Bitwise xor not.",122,[[["value",3]],["value",3]]],[11,"band_imm","","Bitwise and with immediate.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"bor_imm","","Bitwise or with immediate.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"bxor_imm","","Bitwise xor with immediate.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"rotl","","Rotate left.",122,[[["value",3]],["value",3]]],[11,"rotr","","Rotate right.",122,[[["value",3]],["value",3]]],[11,"rotl_imm","","Rotate left by immediate.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"rotr_imm","","Rotate right by immediate.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"ishl","","Integer shift left. Shift the bits in `x` towards the MSB…",122,[[["value",3]],["value",3]]],[11,"ushr","","Unsigned shift right. Shift bits in `x` towards the LSB by…",122,[[["value",3]],["value",3]]],[11,"sshr","","Signed shift right. Shift bits in `x` towards the LSB by…",122,[[["value",3]],["value",3]]],[11,"ishl_imm","","Integer shift left by immediate.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"ushr_imm","","Unsigned shift right by immediate.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"sshr_imm","","Signed shift right by immediate.",122,[[["value",3],["into",8],["imm64",3]],["value",3]]],[11,"bitrev","","Reverse the bits of a integer.",122,[[["value",3]],["value",3]]],[11,"clz","","Count leading zero bits.",122,[[["value",3]],["value",3]]],[11,"cls","","Count leading sign bits.",122,[[["value",3]],["value",3]]],[11,"ctz","","Count trailing zeros.",122,[[["value",3]],["value",3]]],[11,"popcnt","","Population count",122,[[["value",3]],["value",3]]],[11,"fcmp","","Floating point comparison.",122,[[["floatcc",4],["value",3],["into",8]],["value",3]]],[11,"ffcmp","","Floating point comparison returning flags.",122,[[["value",3]],["value",3]]],[11,"fadd","","Floating point addition.",122,[[["value",3]],["value",3]]],[11,"fsub","","Floating point subtraction.",122,[[["value",3]],["value",3]]],[11,"fmul","","Floating point multiplication.",122,[[["value",3]],["value",3]]],[11,"fdiv","","Floating point division.",122,[[["value",3]],["value",3]]],[11,"sqrt","","Floating point square root.",122,[[["value",3]],["value",3]]],[11,"fma","","Floating point fused multiply-and-add.",122,[[["value",3]],["value",3]]],[11,"fneg","","Floating point negation.",122,[[["value",3]],["value",3]]],[11,"fabs","","Floating point absolute value.",122,[[["value",3]],["value",3]]],[11,"fcopysign","","Floating point copy sign.",122,[[["value",3]],["value",3]]],[11,"fmin","","Floating point minimum, propagating NaNs.",122,[[["value",3]],["value",3]]],[11,"fmin_pseudo","","Floating point pseudo-minimum, propagating NaNs. This…",122,[[["value",3]],["value",3]]],[11,"fmax","","Floating point maximum, propagating NaNs.",122,[[["value",3]],["value",3]]],[11,"fmax_pseudo","","Floating point pseudo-maximum, propagating NaNs. This…",122,[[["value",3]],["value",3]]],[11,"ceil","","Round floating point round to integral, towards positive…",122,[[["value",3]],["value",3]]],[11,"floor","","Round floating point round to integral, towards negative…",122,[[["value",3]],["value",3]]],[11,"trunc","","Round floating point round to integral, towards zero.",122,[[["value",3]],["value",3]]],[11,"nearest","","Round floating point round to integral, towards nearest…",122,[[["value",3]],["value",3]]],[11,"is_null","","Reference verification.",122,[[["value",3]],["value",3]]],[11,"is_invalid","","Reference verification.",122,[[["value",3]],["value",3]]],[11,"trueif","","Test integer CPU flags for a specific condition.",122,[[["intcc",4],["value",3],["into",8]],["value",3]]],[11,"trueff","","Test floating point CPU flags for a specific condition.",122,[[["floatcc",4],["value",3],["into",8]],["value",3]]],[11,"bitcast","","Reinterpret the bits in `x` as a different type.",122,[[["value",3],["type",3]],["value",3]]],[11,"raw_bitcast","","Cast the bits in `x` as a different type of the same bit…",122,[[["value",3],["type",3]],["value",3]]],[11,"scalar_to_vector","","Copies a scalar value to a vector value. The scalar is…",122,[[["value",3],["type",3]],["value",3]]],[11,"breduce","","Convert `x` to a smaller boolean type in the…",122,[[["value",3],["type",3]],["value",3]]],[11,"bextend","","Convert `x` to a larger boolean type in the…",122,[[["value",3],["type",3]],["value",3]]],[11,"bint","","Convert `x` to an integer.",122,[[["value",3],["type",3]],["value",3]]],[11,"bmask","","Convert `x` to an integer mask.",122,[[["value",3],["type",3]],["value",3]]],[11,"ireduce","","Convert `x` to a smaller integer type by dropping high bits.",122,[[["value",3],["type",3]],["value",3]]],[11,"snarrow","","Combine `x` and `y` into a vector with twice the lanes but…",122,[[["value",3]],["value",3]]],[11,"unarrow","","Combine `x` and `y` into a vector with twice the lanes but…",122,[[["value",3]],["value",3]]],[11,"swiden_low","","Widen the low lanes of `x` using signed extension.",122,[[["value",3]],["value",3]]],[11,"swiden_high","","Widen the high lanes of `x` using signed extension.",122,[[["value",3]],["value",3]]],[11,"uwiden_low","","Widen the low lanes of `x` using unsigned extension.",122,[[["value",3]],["value",3]]],[11,"uwiden_high","","Widen the high lanes of `x` using unsigned extension.",122,[[["value",3]],["value",3]]],[11,"widening_pairwise_dot_product_s","","Takes corresponding elements in `x` and `y`, performs a…",122,[[["value",3]],["value",3]]],[11,"uextend","","Convert `x` to a larger integer type by zero-extending.",122,[[["value",3],["type",3]],["value",3]]],[11,"sextend","","Convert `x` to a larger integer type by sign-extending.",122,[[["value",3],["type",3]],["value",3]]],[11,"fpromote","","Convert `x` to a larger floating point format.",122,[[["value",3],["type",3]],["value",3]]],[11,"fdemote","","Convert `x` to a smaller floating point format.",122,[[["value",3],["type",3]],["value",3]]],[11,"fcvt_to_uint","","Convert floating point to unsigned integer.",122,[[["value",3],["type",3]],["value",3]]],[11,"fcvt_to_uint_sat","","Convert floating point to unsigned integer as fcvt_to_uint…",122,[[["value",3],["type",3]],["value",3]]],[11,"fcvt_to_sint","","Convert floating point to signed integer.",122,[[["value",3],["type",3]],["value",3]]],[11,"fcvt_to_sint_sat","","Convert floating point to signed integer as fcvt_to_sint…",122,[[["value",3],["type",3]],["value",3]]],[11,"fcvt_from_uint","","Convert unsigned integer to floating point.",122,[[["value",3],["type",3]],["value",3]]],[11,"fcvt_from_sint","","Convert signed integer to floating point.",122,[[["value",3],["type",3]],["value",3]]],[11,"isplit","","Split an integer into low and high parts.",122,[[["value",3]]]],[11,"iconcat","","Concatenate low and high bits to form a larger integer type.",122,[[["value",3]],["value",3]]],[11,"atomic_rmw","","Atomically read-modify-write memory at `p`, with second…",122,[[["type",3],["memflags",3],["into",8],["into",8],["atomicrmwop",4],["value",3]],["value",3]]],[11,"atomic_cas","","Perform an atomic compare-and-swap operation on memory at…",122,[[["memflags",3],["into",8],["value",3]],["value",3]]],[11,"atomic_load","","Atomically load from memory at `p`.",122,[[["type",3],["memflags",3],["into",8],["value",3]],["value",3]]],[11,"atomic_store","","Atomically store `x` to memory at `p`.",122,[[["memflags",3],["into",8],["value",3]],["inst",3]]],[11,"fence","","A memory fence. This must provide ordering to ensure that,…",122,[[],["inst",3]]],[11,"x86_udivmodx","","Extended unsigned division.",122,[[["value",3]]]],[11,"x86_sdivmodx","","Extended signed division.",122,[[["value",3]]]],[11,"x86_umulx","","Unsigned integer multiplication, producing a double-length…",122,[[["value",3]]]],[11,"x86_smulx","","Signed integer multiplication, producing a double-length…",122,[[["value",3]]]],[11,"x86_cvtt2si","","Convert with truncation floating point to signed integer.",122,[[["value",3],["type",3]],["value",3]]],[11,"x86_vcvtudq2ps","","Convert unsigned integer to floating point.",122,[[["value",3]],["value",3]]],[11,"x86_fmin","","Floating point minimum with x86 semantics.",122,[[["value",3]],["value",3]]],[11,"x86_fmax","","Floating point maximum with x86 semantics.",122,[[["value",3]],["value",3]]],[11,"x86_push","","Pushes a value onto the stack.",122,[[["value",3]],["inst",3]]],[11,"x86_pop","","Pops a value from the stack.",122,[[["type",3]],["value",3]]],[11,"x86_bsr","","Bit Scan Reverse -- returns the bit-index of the most…",122,[[["value",3]]]],[11,"x86_bsf","","Bit Scan Forwards -- returns the bit-index of the least…",122,[[["value",3]]]],[11,"x86_pshufd","","Packed Shuffle Doublewords -- copies data from either…",122,[[["value",3],["into",8],["uimm8",6]],["value",3]]],[11,"x86_pshufb","","Packed Shuffle Bytes -- re-orders data in an extended…",122,[[["value",3]],["value",3]]],[11,"x86_pblendw","","Blend packed words using an immediate mask. Each bit of…",122,[[["value",3],["into",8],["uimm8",6]],["value",3]]],[11,"x86_pextr","","Extract lane `Idx` from `x`. The lane index, `Idx`, is an…",122,[[["value",3],["into",8],["uimm8",6]],["value",3]]],[11,"x86_pinsr","","Insert `y` into `x` at lane `Idx`. The lane index, `Idx`,…",122,[[["value",3],["into",8],["uimm8",6]],["value",3]]],[11,"x86_insertps","","Insert a lane of `y` into `x` at using `Idx` to encode…",122,[[["value",3],["into",8],["uimm8",6]],["value",3]]],[11,"x86_punpckh","","Unpack the high-order lanes of `x` and `y` and interleave…",122,[[["value",3]],["value",3]]],[11,"x86_punpckl","","Unpack the low-order lanes of `x` and `y` and interleave…",122,[[["value",3]],["value",3]]],[11,"x86_movsd","","Move the low 64 bits of the float vector `y` to the low 64…",122,[[["value",3]],["value",3]]],[11,"x86_movlhps","","Move the low 64 bits of the float vector `y` to the high…",122,[[["value",3]],["value",3]]],[11,"x86_psll","","Shift Packed Data Left Logical -- This implements the…",122,[[["value",3]],["value",3]]],[11,"x86_psrl","","Shift Packed Data Right Logical -- This implements the…",122,[[["value",3]],["value",3]]],[11,"x86_psra","","Shift Packed Data Right Arithmetic -- This implements the…",122,[[["value",3]],["value",3]]],[11,"x86_pmullq","","Multiply Packed Integers -- Multiply two 64x2 integers and…",122,[[["value",3]],["value",3]]],[11,"x86_pmuludq","","Multiply Packed Integers -- Using only the bottom 32 bits…",122,[[["value",3]],["value",3]]],[11,"x86_ptest","","Logical Compare -- PTEST will set the ZF flag if all bits…",122,[[["value",3]],["value",3]]],[11,"x86_pmaxs","","Maximum of Packed Signed Integers -- Compare signed…",122,[[["value",3]],["value",3]]],[11,"x86_pmaxu","","Maximum of Packed Unsigned Integers -- Compare unsigned…",122,[[["value",3]],["value",3]]],[11,"x86_pmins","","Minimum of Packed Signed Integers -- Compare signed…",122,[[["value",3]],["value",3]]],[11,"x86_pminu","","Minimum of Packed Unsigned Integers -- Compare unsigned…",122,[[["value",3]],["value",3]]],[11,"x86_palignr","","Concatenate destination and source operands, extracting a…",122,[[["value",3],["into",8],["uimm8",6]],["value",3]]],[11,"x86_elf_tls_get_addr","","Elf tls get addr -- This implements the GD TLS model for…",122,[[["globalvalue",3]],["value",3]]],[11,"x86_macho_tls_get_addr","","Mach-O tls get addr -- This implements TLS access for…",122,[[["globalvalue",3]],["value",3]]],[11,"AtomicCas","","AtomicCas(imms=(flags: ir::MemFlags), vals=3)",122,[[["type",3],["memflags",3],["opcode",4],["value",3]]]],[11,"AtomicRmw","","AtomicRmw(imms=(flags: ir::MemFlags, op: ir::AtomicRmwOp),…",122,[[["type",3],["atomicrmwop",4],["memflags",3],["opcode",4],["value",3]]]],[11,"Binary","","Binary(imms=(), vals=2)",122,[[["type",3],["opcode",4],["value",3]]]],[11,"BinaryImm64","","BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1)",122,[[["type",3],["opcode",4],["value",3],["imm64",3]]]],[11,"BinaryImm8","","BinaryImm8(imms=(imm: ir::immediates::Uimm8), vals=1)",122,[[["type",3],["uimm8",6],["opcode",4],["value",3]]]],[11,"Branch","","Branch(imms=(destination: ir::Block), vals=1)",122,[[["type",3],["block",3],["opcode",4],["valuelist",6]]]],[11,"BranchFloat","","BranchFloat(imms=(cond: ir::condcodes::FloatCC,…",122,[[["type",3],["block",3],["floatcc",4],["opcode",4],["valuelist",6]]]],[11,"BranchIcmp","","BranchIcmp(imms=(cond: ir::condcodes::IntCC, destination:…",122,[[["type",3],["block",3],["opcode",4],["valuelist",6],["intcc",4]]]],[11,"BranchInt","","BranchInt(imms=(cond: ir::condcodes::IntCC, destination:…",122,[[["type",3],["block",3],["opcode",4],["valuelist",6],["intcc",4]]]],[11,"BranchTable","","BranchTable(imms=(destination: ir::Block, table:…",122,[[["type",3],["block",3],["jumptable",3],["opcode",4],["value",3]]]],[11,"BranchTableBase","","BranchTableBase(imms=(table: ir::JumpTable), vals=0)",122,[[["type",3],["jumptable",3],["opcode",4]]]],[11,"BranchTableEntry","","BranchTableEntry(imms=(imm: ir::immediates::Uimm8, table:…",122,[[["type",3],["jumptable",3],["uimm8",6],["opcode",4],["value",3]]]],[11,"Call","","Call(imms=(func_ref: ir::FuncRef), vals=0)",122,[[["type",3],["funcref",3],["opcode",4],["valuelist",6]]]],[11,"CallIndirect","","CallIndirect(imms=(sig_ref: ir::SigRef), vals=1)",122,[[["type",3],["sigref",3],["opcode",4],["valuelist",6]]]],[11,"CondTrap","","CondTrap(imms=(code: ir::TrapCode), vals=1)",122,[[["type",3],["opcode",4],["value",3],["trapcode",4]]]],[11,"CopySpecial","","CopySpecial(imms=(src: isa::RegUnit, dst: isa::RegUnit),…",122,[[["type",3],["opcode",4],["regunit",6]]]],[11,"CopyToSsa","","CopyToSsa(imms=(src: isa::RegUnit), vals=0)",122,[[["type",3],["regunit",6],["opcode",4]]]],[11,"FloatCompare","","FloatCompare(imms=(cond: ir::condcodes::FloatCC), vals=2)",122,[[["type",3],["floatcc",4],["opcode",4],["value",3]]]],[11,"FloatCond","","FloatCond(imms=(cond: ir::condcodes::FloatCC), vals=1)",122,[[["type",3],["floatcc",4],["opcode",4],["value",3]]]],[11,"FloatCondTrap","","FloatCondTrap(imms=(cond: ir::condcodes::FloatCC, code:…",122,[[["type",3],["floatcc",4],["opcode",4],["trapcode",4],["value",3]]]],[11,"FuncAddr","","FuncAddr(imms=(func_ref: ir::FuncRef), vals=0)",122,[[["type",3],["funcref",3],["opcode",4]]]],[11,"HeapAddr","","HeapAddr(imms=(heap: ir::Heap, imm:…",122,[[["type",3],["uimm32",3],["heap",3],["opcode",4],["value",3]]]],[11,"IndirectJump","","IndirectJump(imms=(table: ir::JumpTable), vals=1)",122,[[["type",3],["jumptable",3],["opcode",4],["value",3]]]],[11,"IntCompare","","IntCompare(imms=(cond: ir::condcodes::IntCC), vals=2)",122,[[["type",3],["opcode",4],["value",3],["intcc",4]]]],[11,"IntCompareImm","","IntCompareImm(imms=(cond: ir::condcodes::IntCC, imm:…",122,[[["type",3],["imm64",3],["opcode",4],["value",3],["intcc",4]]]],[11,"IntCond","","IntCond(imms=(cond: ir::condcodes::IntCC), vals=1)",122,[[["type",3],["opcode",4],["value",3],["intcc",4]]]],[11,"IntCondTrap","","IntCondTrap(imms=(cond: ir::condcodes::IntCC, code:…",122,[[["type",3],["opcode",4],["value",3],["trapcode",4],["intcc",4]]]],[11,"IntSelect","","IntSelect(imms=(cond: ir::condcodes::IntCC), vals=3)",122,[[["type",3],["opcode",4],["value",3],["intcc",4]]]],[11,"Jump","","Jump(imms=(destination: ir::Block), vals=0)",122,[[["type",3],["block",3],["opcode",4],["valuelist",6]]]],[11,"Load","","Load(imms=(flags: ir::MemFlags, offset:…",122,[[["type",3],["memflags",3],["opcode",4],["offset32",3],["value",3]]]],[11,"LoadComplex","","LoadComplex(imms=(flags: ir::MemFlags, offset:…",122,[[["type",3],["memflags",3],["opcode",4],["offset32",3],["valuelist",6]]]],[11,"LoadNoOffset","","LoadNoOffset(imms=(flags: ir::MemFlags), vals=1)",122,[[["type",3],["memflags",3],["opcode",4],["value",3]]]],[11,"MultiAry","","MultiAry(imms=(), vals=0)",122,[[["type",3],["valuelist",6],["opcode",4]]]],[11,"NullAry","","NullAry(imms=(), vals=0)",122,[[["type",3],["opcode",4]]]],[11,"RegFill","","RegFill(imms=(src: ir::StackSlot, dst: isa::RegUnit),…",122,[[["type",3],["opcode",4],["regunit",6],["value",3],["stackslot",3]]]],[11,"RegMove","","RegMove(imms=(src: isa::RegUnit, dst: isa::RegUnit), vals=1)",122,[[["type",3],["opcode",4],["regunit",6],["value",3]]]],[11,"RegSpill","","RegSpill(imms=(src: isa::RegUnit, dst: ir::StackSlot),…",122,[[["type",3],["opcode",4],["regunit",6],["value",3],["stackslot",3]]]],[11,"Shuffle","","Shuffle(imms=(mask: ir::Immediate), vals=2)",122,[[["type",3],["immediate",3],["opcode",4],["value",3]]]],[11,"StackLoad","","StackLoad(imms=(stack_slot: ir::StackSlot, offset:…",122,[[["type",3],["opcode",4],["offset32",3],["stackslot",3]]]],[11,"StackStore","","StackStore(imms=(stack_slot: ir::StackSlot, offset:…",122,[[["type",3],["opcode",4],["value",3],["offset32",3],["stackslot",3]]]],[11,"Store","","Store(imms=(flags: ir::MemFlags, offset:…",122,[[["type",3],["memflags",3],["opcode",4],["offset32",3],["value",3]]]],[11,"StoreComplex","","StoreComplex(imms=(flags: ir::MemFlags, offset:…",122,[[["type",3],["memflags",3],["opcode",4],["offset32",3],["valuelist",6]]]],[11,"StoreNoOffset","","StoreNoOffset(imms=(flags: ir::MemFlags), vals=2)",122,[[["type",3],["memflags",3],["opcode",4],["value",3]]]],[11,"TableAddr","","TableAddr(imms=(table: ir::Table, offset:…",122,[[["type",3],["opcode",4],["value",3],["offset32",3],["table",3]]]],[11,"Ternary","","Ternary(imms=(), vals=3)",122,[[["type",3],["opcode",4],["value",3]]]],[11,"TernaryImm8","","TernaryImm8(imms=(imm: ir::immediates::Uimm8), vals=2)",122,[[["type",3],["uimm8",6],["opcode",4],["value",3]]]],[11,"Trap","","Trap(imms=(code: ir::TrapCode), vals=0)",122,[[["type",3],["trapcode",4],["opcode",4]]]],[11,"Unary","","Unary(imms=(), vals=1)",122,[[["type",3],["value",3],["opcode",4]]]],[11,"UnaryBool","","UnaryBool(imms=(imm: bool), vals=0)",122,[[["type",3],["opcode",4]]]],[11,"UnaryConst","","UnaryConst(imms=(constant_handle: ir::Constant), vals=0)",122,[[["type",3],["constant",3],["opcode",4]]]],[11,"UnaryGlobalValue","","UnaryGlobalValue(imms=(global_value: ir::GlobalValue),…",122,[[["type",3],["globalvalue",3],["opcode",4]]]],[11,"UnaryIeee32","","UnaryIeee32(imms=(imm: ir::immediates::Ieee32), vals=0)",122,[[["type",3],["ieee32",3],["opcode",4]]]],[11,"UnaryIeee64","","UnaryIeee64(imms=(imm: ir::immediates::Ieee64), vals=0)",122,[[["type",3],["ieee64",3],["opcode",4]]]],[11,"UnaryImm","","UnaryImm(imms=(imm: ir::immediates::Imm64), vals=0)",122,[[["type",3],["imm64",3],["opcode",4]]]],[11,"new","","Create a new builder which inserts instructions at `pos`.…",264,[[]]],[11,"with_results","","Reuse result values in `reuse`.",264,[[],["insertreusebuilder",3]]],[11,"with_result","","Reuse a single result value.",264,[[["value",3]],["insertreusebuilder",3]]],[11,"new","","Create a `ReplaceBuilder` that will overwrite `inst`.",265,[[["dataflowgraph",3],["inst",3]]]],[11,"new","","Create a new blank signature.",129,[[["callconv",4]]]],[11,"clear","","Clear the signature so it is identical to a fresh one…",129,[[["callconv",4]]]],[11,"display","","Return an object that can display `self` with correct…",129,[[["into",8],["option",4]],["displaysignature",3]]],[11,"special_param_index","","Find the index of a presumed unique special-purpose…",129,[[["argumentpurpose",4]],["option",4]]],[11,"special_return_index","","Find the index of a presumed unique special-purpose…",129,[[["argumentpurpose",4]],["option",4]]],[11,"uses_special_param","","Does this signature have a parameter whose…",129,[[["argumentpurpose",4]]]],[11,"uses_special_return","","Does this signature have a return whose `ArgumentPurpose`…",129,[[["argumentpurpose",4]]]],[11,"num_special_params","","How many special parameters does this function have?",129,[[]]],[11,"num_special_returns","","How many special returns does this function have?",129,[[]]],[11,"uses_struct_return_param","","Does this signature take an struct return pointer parameter?",129,[[]]],[11,"is_multi_return","","Does this return more than one normal value? (Pre-struct…",129,[[]]],[11,"new","","Create a parameter with default flags.",125,[[["type",3]]]],[11,"special","","Create a special-purpose parameter that is not (yet) bound…",125,[[["type",3],["argumentpurpose",4]]]],[11,"special_reg","","Create a parameter for a special-purpose register.",125,[[["type",3],["argumentpurpose",4],["regunit",6]]]],[11,"uext","","Convert `self` to a parameter with the `uext` flag set.",125,[[]]],[11,"sext","","Convert `self` to a parameter type with the `sext` flag set.",125,[[]]],[11,"display","","Return an object that can display `self` with correct…",125,[[["into",8],["option",4]],["displayabiparam",3]]],[11,"reloc_distance","","Return an estimate of the distance to the referred-to…",128,[[],["relocdistance",4]]],[11,"testcase","","Creates a new external name from a sequence of bytes.…",130,[[["asref",8]]]],[11,"user","","Create a new external name from user-provided integer…",130,[[]]],[11,"symbol_name","","Assume that `self` is an `GlobalValueData::Symbol` and…",133,[[],["externalname",4]]],[11,"global_type","","Return the type of this global.",133,[[["targetisa",8]],["type",3]]],[11,"maybe_reloc_distance","","If this global references a symbol, return an estimate of…",133,[[],[["option",4],["relocdistance",4]]]],[11,"for_inst","","Get the well-known library call name to use as a…",141,[[["type",3],["opcode",4]],["option",4]]],[11,"all_libcalls","","Get a list of all known `LibCall`\'s.",141,[[]]],[11,"new","","Create a new empty set of flags.",273,[[]]],[11,"trusted","","Create a set of flags representing an access from a…",273,[[]]],[11,"set_by_name","","Set a flag bit by name.",273,[[]]],[11,"endianness","","Return endianness of the memory access. This will return…",273,[[["endianness",4]],["endianness",4]]],[11,"set_endianness","","Set endianness of the memory access.",273,[[["endianness",4]]]],[11,"notrap","","Test if the `notrap` flag is set.",273,[[]]],[11,"set_notrap","","Set the `notrap` flag.",273,[[]]],[11,"aligned","","Test if the `aligned` flag is set.",273,[[]]],[11,"set_aligned","","Set the `aligned` flag.",273,[[]]],[11,"readonly","","Test if the `readonly` flag is set.",273,[[]]],[11,"set_readonly","","Set the `readonly` flag.",273,[[]]],[11,"unwrap_inst","","Get the instruction we know is inside.",143,[[],["inst",3]]],[11,"new","","Create a new source location with the given bits.",275,[[]]],[11,"is_default","","Is this the default source location?",275,[[]]],[11,"bits","","Read the bits of this source location.",275,[[]]],[11,"is_assigned","","Is this an assigned location? (That is, not `Unassigned`).",148,[[]]],[11,"unwrap_reg","","Get the register unit of this location, or panic.",148,[[],["regunit",6]]],[11,"unwrap_stack","","Get the stack slot of this location, or panic.",148,[[],["stackslot",3]]],[11,"display","","Return an object that can display this value location,…",148,[[["into",8],["option",4]],["displayvalueloc",3]]],[11,"is_assigned","","Is this an assigned location? (That is, not `Unassigned`).",147,[[]]],[11,"is_reg","","Is this a register location?",147,[[]]],[11,"is_stack","","Is this a stack location?",147,[[]]],[11,"display","","Return an object that can display this argument location,…",147,[[["into",8],["option",4]],["displayargumentloc",3]]],[11,"triple_default","cranelift_codegen::isa","Return the default calling convention for the given target…",168,[[["triple",3]]]],[11,"for_libcall","","Returns the calling convention used for libcalls according…",168,[[["callconv",4],["flags",3]]]],[11,"extends_windows_fastcall","","Is the calling convention extending the Windows Fastcall…",168,[[]]],[11,"extends_baldrdash","","Is the calling convention extending the Baldrdash ABI?",168,[[]]],[11,"satisfied","","Check if this operand constraint is satisfied by the given…",171,[[["valueloc",4]]]],[11,"satisfied","","Check that these constraints are satisfied by the operands…",172,[[["regdiversions",3],["function",3],["inst",3]]]],[11,"contains","","Determine if this branch range can represent the range…",169,[[["codeoffset",6]]]],[11,"new","","Creates a new instance of `Encodings`.",276,[[["instructiondata",4],["function",3],["predicateview",3]]]],[11,"legalize","","Get the legalization action that caused the enumeration of…",276,[[],["legalize",6]]],[11,"new","","Create a new `Encoding` containing `(recipe, bits)`.",277,[[]]],[11,"recipe","","Get the recipe number in this encoding.",277,[[]]],[11,"bits","","Get the recipe-specific encoding bits.",277,[[]]],[11,"is_legal","","Is this a legal encoding, or the default placeholder?",277,[[]]],[11,"operand_constraints","","Get the value operand constraints for `enc` if it is a…",173,[[["encoding",3]],[["recipeconstraints",3],["option",4]]]],[11,"display","","Create an object that can display an ISA-dependent…",173,[[["encoding",3]],["displayencoding",3]]],[11,"byte_size","","Get the size in bytes of `inst`, if it were encoded with…",173,[[["encoding",3],["regdiversions",3],["function",3],["inst",3]],["codeoffset",6]]],[11,"branch_range","","Get the branch range that is supported by `enc`, if any.",173,[[["encoding",3]],[["option",4],["branchrange",3]]]],[11,"masked","","Get a reference to the stack slot `ss` using one of the…",176,[[["stackslots",3],["stackslot",3],["stackbasemask",3]],["option",4]]],[11,"sp","","Get a reference to `ss` using the stack pointer as a base.",176,[[["stackslots",3],["stackslot",3]]]],[11,"contains","","Check if this mask contains the `base` variant.",175,[[["stackbase",4]]]],[11,"new","cranelift_codegen","Allocate a new compilation context.",254,[[]]],[11,"for_function","","Allocate a new compilation context with an existing…",254,[[["function",3]]]],[11,"clear","","Clear all data structures in this context.",254,[[]]],[11,"set_disasm","","Set the flag to request a disassembly when compiling with…",254,[[]]],[11,"compile_and_emit","","Compile the function, and emit machine code into a…",254,[[["vec",3],["stackmapsink",8],["trapsink",8],["relocsink",8],["targetisa",8]],[["codegenresult",6],["codeinfo",3]]]],[11,"compile","","Compile the function.",254,[[["targetisa",8]],[["codegenresult",6],["codeinfo",3]]]],[11,"emit_to_memory","","Emit machine code directly into raw memory.",254,[[["stackmapsink",8],["trapsink",8],["targetisa",8],["relocsink",8]],["codeinfo",3]]],[11,"create_unwind_info","","Creates unwind information for the function.",254,[[["targetisa",8]],[["codegenresult",6],["option",4]]]],[11,"verify","","Run the verifier on the function.",254,[[["flagsorisa",3],["into",8]],["verifierresult",6]]],[11,"verify_if","","Run the verifier only if the `enable_verifier` setting is…",254,[[["flagsorisa",3],["into",8]],["codegenresult",6]]],[11,"verify_locations","","Run the locations verifier on the function.",254,[[["targetisa",8]],["verifierresult",6]]],[11,"verify_locations_if","","Run the locations verifier only if the `enable_verifier`…",254,[[["targetisa",8]],["codegenresult",6]]],[11,"dce","","Perform dead-code elimination on the function.",254,[[["flagsorisa",3],["into",8]],["codegenresult",6]]],[11,"remove_constant_phis","","Perform constant-phi removal on the function.",254,[[["flagsorisa",3],["into",8]],["codegenresult",6]]],[11,"preopt","","Perform pre-legalization rewrites on the function.",254,[[["targetisa",8]],["codegenresult",6]]],[11,"canonicalize_nans","","Perform NaN canonicalizing rewrites on the function.",254,[[["targetisa",8]],["codegenresult",6]]],[11,"legalize","","Run the legalizer for `isa` on the function.",254,[[["targetisa",8]],["codegenresult",6]]],[11,"postopt","","Perform post-legalization rewrites on the function.",254,[[["targetisa",8]],["codegenresult",6]]],[11,"compute_cfg","","Compute the control flow graph.",254,[[]]],[11,"compute_domtree","","Compute dominator tree.",254,[[]]],[11,"compute_loop_analysis","","Compute the loop analysis.",254,[[]]],[11,"flowgraph","","Compute the control flow graph and dominator tree.",254,[[]]],[11,"simple_gvn","","Perform simple GVN on the function.",254,[[["flagsorisa",3],["into",8]],["codegenresult",6]]],[11,"licm","","Perform LICM on the function.",254,[[["targetisa",8]],["codegenresult",6]]],[11,"eliminate_unreachable_code","","Perform unreachable code elimination.",254,[[],["codegenresult",6]]],[11,"regalloc","","Run the register allocator.",254,[[["targetisa",8]],["codegenresult",6]]],[11,"prologue_epilogue","","Insert prologue and epilogues after computing the stack…",254,[[["targetisa",8]],["codegenresult",6]]],[11,"redundant_reload_remover","","Do redundant-reload removal after allocation of both…",254,[[["targetisa",8]],["codegenresult",6]]],[11,"shrink_instructions","","Run the instruction shrinking pass.",254,[[["targetisa",8]],["codegenresult",6]]],[11,"relax_branches","","Run the branch relaxation pass and return information…",254,[[["targetisa",8]],[["codegenresult",6],["codeinfo",3]]]],[11,"build_value_labels_ranges","","Builds ranges and location for specified value labels.",254,[[["targetisa",8]],[["valuelabelsranges",6],["codegenresult",6]]]],[11,"souper_harvest","","Harvest candidate left-hand sides for superoptimization…",254,[[["sender",3]],["codegenresult",6]]]],"p":[[8,"ReservedValue"],[3,"MemoryCodeSink"],[8,"RelocSink"],[8,"StackMapSink"],[8,"TrapSink"],[4,"Reloc"],[3,"CodeInfo"],[8,"CodeSink"],[3,"CFGPrinter"],[4,"CursorPosition"],[8,"Cursor"],[3,"FuncCursor"],[3,"EncCursor"],[4,"DataValue"],[4,"DataValueCastFailure"],[3,"DisplayDataValues"],[3,"DisplayList"],[3,"DominatorTree"],[3,"DominatorTreePreorder"],[3,"BlockPredecessor"],[3,"ControlFlowGraph"],[8,"CondCode"],[4,"IntCC"],[4,"FloatCC"],[3,"ConstantData"],[3,"ConstantPoolEntry"],[3,"ConstantPool"],[3,"DataFlowGraph"],[4,"ValueDef"],[3,"Block"],[3,"Value"],[3,"Inst"],[3,"StackSlot"],[3,"GlobalValue"],[3,"Constant"],[3,"Immediate"],[3,"JumpTable"],[3,"FuncRef"],[3,"SigRef"],[3,"Heap"],[3,"Table"],[4,"AnyEntity"],[3,"Function"],[3,"DisplayFunctionAnnotations"],[8,"IntoBytes"],[3,"Imm64"],[3,"Uimm64"],[3,"V128Imm"],[3,"Offset32"],[3,"Ieee32"],[3,"Ieee64"],[4,"InstructionFormat"],[4,"InstructionData"],[13,"AtomicCas"],[13,"AtomicRmw"],[13,"Binary"],[13,"BinaryImm64"],[13,"BinaryImm8"],[13,"Branch"],[13,"BranchFloat"],[13,"BranchIcmp"],[13,"BranchInt"],[13,"BranchTable"],[13,"BranchTableBase"],[13,"BranchTableEntry"],[13,"Call"],[13,"CallIndirect"],[13,"CondTrap"],[13,"CopySpecial"],[13,"CopyToSsa"],[13,"FloatCompare"],[13,"FloatCond"],[13,"FloatCondTrap"],[13,"FuncAddr"],[13,"HeapAddr"],[13,"IndirectJump"],[13,"IntCompare"],[13,"IntCompareImm"],[13,"IntCond"],[13,"IntCondTrap"],[13,"IntSelect"],[13,"Jump"],[13,"Load"],[13,"LoadComplex"],[13,"LoadNoOffset"],[13,"MultiAry"],[13,"NullAry"],[13,"RegFill"],[13,"RegMove"],[13,"RegSpill"],[13,"Shuffle"],[13,"StackLoad"],[13,"StackStore"],[13,"Store"],[13,"StoreComplex"],[13,"StoreNoOffset"],[13,"TableAddr"],[13,"Ternary"],[13,"TernaryImm8"],[13,"Trap"],[13,"Unary"],[13,"UnaryBool"],[13,"UnaryConst"],[13,"UnaryGlobalValue"],[13,"UnaryIeee32"],[13,"UnaryIeee64"],[13,"UnaryImm"],[4,"Opcode"],[3,"VariableArgs"],[4,"BranchInfo"],[4,"CallInfo"],[3,"OpcodeConstraints"],[3,"ValueTypeSet"],[4,"ResolvedConstraint"],[3,"JumpTableData"],[3,"Layout"],[4,"StackSlotKind"],[3,"StackSlotData"],[3,"StackLayoutInfo"],[3,"StackSlots"],[3,"Type"],[4,"AtomicRmwOp"],[8,"InstBuilder"],[8,"InstBuilderBase"],[8,"InstInserterBase"],[3,"AbiParam"],[4,"ArgumentExtension"],[4,"ArgumentPurpose"],[3,"ExtFuncData"],[3,"Signature"],[4,"ExternalName"],[13,"User"],[13,"TestCase"],[4,"GlobalValueData"],[13,"Load"],[13,"IAddImm"],[13,"Symbol"],[3,"HeapData"],[4,"HeapStyle"],[13,"Dynamic"],[13,"Static"],[4,"LibCall"],[4,"Endianness"],[4,"ExpandedProgramPoint"],[8,"ProgramOrder"],[3,"TableData"],[4,"TrapCode"],[4,"ArgumentLoc"],[4,"ValueLoc"],[4,"LabelValueLoc"],[3,"ValueLabel"],[3,"ValueLabelStart"],[4,"ValueLabelAssignments"],[13,"Alias"],[4,"RegisterMappingError"],[3,"UnwindInfo"],[3,"UnwindInfo"],[4,"UnwindCode"],[13,"SaveRegister"],[13,"RestoreRegister"],[13,"StackAlloc"],[13,"StackDealloc"],[13,"SetFramePointer"],[3,"UnwindInfo"],[4,"UnwindInfo"],[3,"RegBank"],[3,"RegClassData"],[3,"RegInfo"],[4,"CallConv"],[3,"BranchRange"],[4,"ConstraintKind"],[3,"OperandConstraint"],[3,"RecipeConstraints"],[3,"EncInfo"],[4,"StackBase"],[3,"StackBaseMask"],[3,"StackRef"],[4,"BackendVariant"],[4,"LookupError"],[3,"Builder"],[3,"TargetFrontendConfig"],[8,"TargetIsa"],[3,"Loop"],[3,"LoopAnalysis"],[8,"LowerCtx"],[3,"NonRegInput"],[8,"LowerBackend"],[4,"RelocDistance"],[3,"Lower"],[3,"VCodeBuilder"],[3,"VCode"],[3,"VCodeConstants"],[3,"VCodeConstant"],[4,"VCodeConstantData"],[4,"LoweredBlock"],[13,"Orig"],[13,"OrigAndEdge"],[13,"EdgeAndOrig"],[13,"Edge"],[3,"BlockLoweringOrder"],[8,"ABICallee"],[8,"ABICaller"],[4,"ABIArg"],[13,"Reg"],[13,"Stack"],[13,"StructArg"],[4,"ArgsOrRets"],[4,"InstIsSafepoint"],[4,"StackAMode"],[8,"ABIMachineSpec"],[3,"ABICalleeImpl"],[4,"CallDest"],[3,"ABICallerImpl"],[3,"MachBufferFinalized"],[3,"MachLabel"],[4,"StackMapExtent"],[3,"MachBuffer"],[3,"MachSrcLoc"],[3,"MachStackMap"],[3,"TargetIsaAdapter"],[4,"AtomicRmwOp"],[8,"InvalidSentinel"],[3,"ValueRegs"],[8,"MachInst"],[8,"MachInstLabelUse"],[4,"MachTerminator"],[8,"MachInstEmit"],[8,"MachInstEmitInfo"],[8,"MachInstEmitState"],[3,"MachCompileResult"],[8,"MachBackend"],[4,"UnwindInfoKind"],[3,"UnwindInfoContext"],[8,"UnwindInfoGenerator"],[4,"MachInstStackOpInfo"],[3,"Template"],[3,"Descriptor"],[4,"Detail"],[13,"Bool"],[13,"Enum"],[8,"Configurable"],[3,"Builder"],[4,"SetError"],[3,"PredicateView"],[3,"Flags"],[4,"Regalloc"],[4,"OptLevel"],[4,"TlsModel"],[4,"LibcallCallConv"],[3,"FlagsOrIsa"],[3,"VerifierError"],[3,"VerifierErrors"],[8,"FuncWriter"],[3,"RegDiversions"],[3,"Context"],[3,"ValueLocRange"],[4,"CodegenError"],[3,"PackedOption"],[3,"NullRelocSink"],[3,"NullTrapSink"],[3,"NullStackMapSink"],[3,"StackMap"],[3,"ChildIter"],[3,"PredIter"],[3,"InsertBuilder"],[3,"ReplaceBuilder"],[3,"Values"],[3,"DisplayInst"],[3,"DisplayFunction"],[3,"InstOffsetIter"],[3,"Uimm32"],[3,"Blocks"],[3,"Insts"],[3,"MemFlags"],[3,"ProgramPoint"],[3,"SourceLoc"],[3,"Encodings"],[3,"Encoding"],[3,"RegClassIndex"],[3,"DisplayRegUnit"],[3,"TimingToken"],[3,"PassTimes"],[3,"PlainWriter"]]},\
"cranelift_codegen_meta":{"doc":"This crate generates Rust sources for use by…","i":[[0,"cdsl","cranelift_codegen_meta","Cranelift DSL classes.",null,null],[0,"ast","cranelift_codegen_meta::cdsl","",null,null],[4,"Expr","cranelift_codegen_meta::cdsl::ast","",null,null],[13,"Var","","",0,null],[13,"Literal","","",0,null],[11,"maybe_literal","","",0,[[],[["option",4],["literal",4]]]],[11,"maybe_var","","",0,[[],[["varindex",3],["option",4]]]],[11,"unwrap_var","","",0,[[],["varindex",3]]],[11,"to_rust_code","","",0,[[["varpool",3]],["string",3]]],[3,"Def","","An AST definition associates a set of variables with the…",null,null],[12,"apply","","",1,null],[12,"defined_vars","","",1,null],[11,"to_comment_string","","",1,[[["varpool",3]],["string",3]]],[3,"DefPool","","",null,null],[12,"pool","","",2,null],[11,"new","","",2,[[]]],[11,"get","","",2,[[["defindex",3]],["def",3]]],[11,"next_index","","",2,[[],["defindex",3]]],[11,"create_inst","","",2,[[["varindex",3],["apply",3],["vec",3]],["defindex",3]]],[3,"DefIndex","","",null,null],[12,"0","","",3,null],[11,"from_u32","","Create a new instance from a `u32`.",3,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",3,[[]]],[3,"Block","","A definition which would lead to generate a block creation.",null,null],[12,"location","","Instruction index after which the block entry is set.",4,null],[12,"name","","Variable holding the new created block.",4,null],[3,"BlockPool","","",null,null],[12,"pool","","",5,null],[11,"new","","",5,[[]]],[11,"get","","",5,[[["defindex",3]],[["option",4],["block",3]]]],[11,"create_block","","",5,[[["varindex",3],["defindex",3]]]],[11,"is_empty","","",5,[[]]],[4,"Literal","","",null,null],[13,"Enumerator","","A value of an enumerated immediate operand.",6,null],[12,"rust_type","cranelift_codegen_meta::cdsl::ast::Literal","",7,null],[12,"value","","",7,null],[13,"Bits","cranelift_codegen_meta::cdsl::ast","A bitwise value of an immediate operand, used for bitwise…",6,null],[12,"rust_type","cranelift_codegen_meta::cdsl::ast::Literal","",8,null],[12,"value","","",8,null],[13,"Int","cranelift_codegen_meta::cdsl::ast","A value of an integer immediate operand.",6,null],[13,"EmptyVarArgs","","A empty list of variable set of arguments.",6,null],[11,"enumerator_for","","",6,[[["operandkind",3]]]],[11,"bits","","",6,[[["operandkind",3]]]],[11,"constant","","",6,[[["operandkind",3]]]],[11,"empty_vararg","","",6,[[]]],[11,"to_rust_code","","",6,[[],["string",3]]],[4,"PatternPosition","","",null,null],[13,"Source","","",9,null],[13,"Destination","","",9,null],[3,"Var","","A free variable.",null,null],[12,"name","","",10,null],[12,"src_def","","The `Def` defining this variable in a source pattern.",10,null],[12,"dst_def","","The `Def` defining this variable in a destination pattern.",10,null],[12,"type_var","","TypeVar representing the type of this variable.",10,null],[12,"is_original_type_var","","Is this the original type variable, or has it be redefined…",10,null],[11,"new","","",10,[[["string",3]]]],[11,"is_input","","Is this an input value to the src pattern?",10,[[]]],[11,"is_output","","Is this an output value, defined in both src and dst…",10,[[]]],[11,"is_intermediate","","Is this an intermediate value, defined only in the src…",10,[[]]],[11,"is_temp","","Is this a temp value, defined only in the dst pattern?",10,[[]]],[11,"get_def","","Get the def of this variable according to the position.",10,[[["patternposition",4]],[["option",4],["defindex",3]]]],[11,"set_def","","",10,[[["patternposition",4],["defindex",3]]]],[11,"get_or_create_typevar","","Get the type variable representing the type of this…",10,[[],["typevar",3]]],[11,"get_typevar","","",10,[[],[["typevar",3],["option",4]]]],[11,"set_typevar","","",10,[[["typevar",3]]]],[11,"has_free_typevar","","Check if this variable has a free type variable. If not,…",10,[[]]],[11,"to_rust_code","","",10,[[],["string",3]]],[11,"rust_type","","",10,[[],["string",3]]],[3,"VarIndex","","",null,null],[12,"0","","",11,null],[11,"from_u32","","Create a new instance from a `u32`.",11,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",11,[[]]],[3,"VarPool","","",null,null],[12,"pool","","",12,null],[11,"new","","",12,[[]]],[11,"get","","",12,[[["varindex",3]],["var",3]]],[11,"get_mut","","",12,[[["varindex",3]],["var",3]]],[11,"create","","",12,[[],["varindex",3]]],[3,"ConstPool","","Contains constants created in the AST that must be…",null,null],[12,"pool","","",13,null],[11,"new","","Create an empty constant pool.",13,[[]]],[11,"create_name","","Create a name for a constant from its position in the pool.",13,[[],["string",3]]],[11,"insert","","Insert constant data into the pool, returning the name of…",13,[[["vec",3]],["string",3]]],[11,"iter","","Iterate over the name/value pairs in the pool.",13,[[]]],[3,"Apply","","Apply an instruction to arguments.",null,null],[12,"inst","","",14,null],[12,"args","","",14,null],[12,"value_types","","",14,null],[11,"new","","",14,[[["expr",4],["vec",3],["instspec",4]]]],[11,"to_comment_string","","",14,[[["varpool",3]],["string",3]]],[11,"inst_predicate","","",14,[[["varpool",3]],["instructionpredicate",3]]],[11,"inst_predicate_with_ctrl_typevar","","Same as `inst_predicate()`, but also check the controlling…",14,[[["varpool",3]],["instructionpredicate",3]]],[11,"rust_builder","","",14,[[["varpool",3]],["string",3]]],[4,"DummyExpr","","",null,null],[13,"Var","","",15,null],[13,"Literal","","",15,null],[13,"Constant","","",15,null],[13,"Apply","","",15,null],[13,"Block","","",15,null],[3,"DummyVar","","",null,null],[12,"name","","",16,null],[3,"DummyConstant","","",null,null],[12,"0","","",17,null],[5,"constant","","",null,[[["vec",3]],["dummyconstant",3]]],[5,"var","","",null,[[],["dummyvar",3]]],[3,"DummyDef","","",null,null],[12,"expr","","",18,null],[12,"defined_vars","","",18,null],[3,"ExprBuilder","","",null,null],[12,"expr","","",19,null],[11,"apply","","",19,[[["dummyexpr",4],["vec",3],["instspec",4]]]],[11,"assign_to","","",19,[[["vec",3],["dummyvar",3]],["dummydef",3]]],[11,"block","","",19,[[["dummyvar",3]]]],[0,"cpu_modes","cranelift_codegen_meta::cdsl","",null,null],[3,"CpuMode","cranelift_codegen_meta::cdsl::cpu_modes","",null,null],[12,"name","","",20,null],[12,"default_legalize","","",20,null],[12,"monomorphic_legalize","","",20,null],[12,"typed_legalize","","",20,null],[12,"encodings","","",20,null],[11,"new","","",20,[[]]],[11,"set_encodings","","",20,[[["vec",3],["rc",3]]]],[11,"legalize_monomorphic","","",20,[[["transformgroup",3]]]],[11,"legalize_default","","",20,[[["transformgroup",3]]]],[11,"legalize_value_type","","",20,[[["transformgroup",3]]]],[11,"legalize_type","","",20,[[["transformgroup",3]]]],[11,"get_default_legalize_code","","",20,[[],["transformgroupindex",3]]],[11,"get_legalize_code_for","","",20,[[["option",4]],["transformgroupindex",3]]],[11,"get_legalized_types","","",20,[[],[["valuetype",4],["transformgroupindex",3],["keys",3]]]],[11,"direct_transform_groups","","Returns a deterministically ordered, deduplicated list of…",20,[[],[["transformgroupindex",3],["vec",3]]]],[0,"encodings","cranelift_codegen_meta::cdsl","",null,null],[3,"EncodingContent","cranelift_codegen_meta::cdsl::encodings","Encoding for a concrete instruction.",null,null],[12,"inst","","The `Instruction` or `BoundInstruction` being encoded.",21,null],[12,"recipe","","The `EncodingRecipe` to use.",21,null],[12,"encbits","","Additional encoding bits to be interpreted by `recipe`.",21,null],[12,"inst_predicate","","An instruction predicate that must be true to allow…",21,null],[12,"isa_predicate","","An ISA predicate that must be true to allow selecting this…",21,null],[12,"bound_type","","The value type this encoding has been bound to, for…",21,null],[11,"inst","","",21,[[],["rc",3]]],[11,"to_rust_comment","","",21,[[["primarymap",3]],["string",3]]],[6,"Encoding","","",null,null],[3,"EncodingBuilder","","",null,null],[12,"inst","","",22,null],[12,"recipe","","",22,null],[12,"encbits","","",22,null],[12,"inst_predicate","","",22,null],[12,"isa_predicate","","",22,null],[12,"bound_type","","",22,null],[11,"new","","",22,[[["encodingrecipenumber",3],["instspec",4]]]],[11,"inst_predicate","","",22,[[["instructionpredicatenode",4]]]],[11,"isa_predicate","","",22,[[]]],[11,"build","","",22,[[["instructionpredicateregistry",3],["primarymap",3]],[["rc",3],["encodingcontent",3]]]],[0,"formats","cranelift_codegen_meta::cdsl","",null,null],[3,"FormatField","cranelift_codegen_meta::cdsl::formats","An immediate field in an instruction format.",null,null],[12,"kind","","Immediate operand kind.",23,null],[12,"member","","Member name in InstructionData variant.",23,null],[3,"InstructionFormat","","Every instruction opcode has a corresponding instruction…",null,null],[12,"name","","Instruction format name in CamelCase. This is used as a…",24,null],[12,"num_value_operands","","",24,null],[12,"has_value_list","","",24,null],[12,"imm_fields","","",24,null],[12,"typevar_operand","","Index of the value input operand that is used to infer the…",24,null],[3,"FormatStructure","","A tuple serving as a key to deduplicate InstructionFormat.",null,null],[12,"num_value_operands","","",25,null],[12,"has_value_list","","",25,null],[12,"imm_field_names","","Tuples of (Rust field name / Rust type) for each immediate…",25,null],[11,"imm_by_name","","",24,[[],["formatfield",3]]],[11,"structure","","Returns a tuple that uniquely identifies the structure.",24,[[],["formatstructure",3]]],[3,"InstructionFormatBuilder","","",null,null],[12,"name","","",26,null],[12,"num_value_operands","","",26,null],[12,"has_value_list","","",26,null],[12,"imm_fields","","",26,null],[12,"typevar_operand","","",26,null],[11,"new","","",26,[[]]],[11,"value","","",26,[[]]],[11,"varargs","","",26,[[]]],[11,"imm","","",26,[[["operandkind",3]]]],[11,"imm_with_name","","",26,[[["operandkind",3]]]],[11,"typevar_operand","","",26,[[]]],[11,"build","","",26,[[],[["rc",3],["instructionformat",3]]]],[0,"instructions","cranelift_codegen_meta::cdsl","",null,null],[3,"OpcodeNumber","cranelift_codegen_meta::cdsl::instructions","",null,null],[12,"0","","",27,null],[11,"from_u32","","Create a new instance from a `u32`.",27,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",27,[[]]],[6,"AllInstructions","","",null,null],[3,"InstructionGroupBuilder","","",null,null],[12,"all_instructions","","",28,null],[12,"own_instructions","","",28,null],[11,"new","","",28,[[["primarymap",3]]]],[11,"push","","",28,[[["instructionbuilder",3]]]],[11,"build","","",28,[[],["instructiongroup",3]]],[3,"InstructionGroup","","Every instruction must belong to exactly one instruction…",null,null],[12,"instructions","","",29,null],[11,"by_name","","",29,[[],["rc",3]]],[8,"Bindable","","Instructions can have parameters bound to them to…",null,null],[10,"bind","","Bind a parameter to an instruction",30,[[],["boundinstruction",3]]],[3,"PolymorphicInfo","","",null,null],[12,"use_typevar_operand","","",31,null],[12,"ctrl_typevar","","",31,null],[12,"other_typevars","","",31,null],[3,"InstructionContent","","",null,null],[12,"name","","Instruction mnemonic, also becomes opcode name.",32,null],[12,"camel_name","","",32,null],[12,"opcode_number","","",32,null],[12,"doc","","Documentation string.",32,null],[12,"operands_in","","Input operands. This can be a mix of SSA value operands…",32,null],[12,"operands_out","","Output operands. The output operands must be SSA values or…",32,null],[12,"constraints","","Instruction-specific TypeConstraints.",32,null],[12,"format","","Instruction format, automatically derived from the input…",32,null],[12,"polymorphic_info","","One of the input or output operands is a free type…",32,null],[12,"value_opnums","","Indices in operands_in of input operands that are values.",32,null],[12,"imm_opnums","","Indices in operands_in of input operands that are…",32,null],[12,"value_results","","Indices in operands_out of output operands that are values.",32,null],[12,"is_terminator","","True for instructions that terminate the block.",32,null],[12,"is_branch","","True for all branch or jump instructions.",32,null],[12,"is_indirect_branch","","True for all indirect branch or jump instructions.\',",32,null],[12,"is_call","","Is this a call instruction?",32,null],[12,"is_return","","Is this a return instruction?",32,null],[12,"is_ghost","","Is this a ghost instruction?",32,null],[12,"can_load","","Can this instruction read from memory?",32,null],[12,"can_store","","Can this instruction write to memory?",32,null],[12,"can_trap","","Can this instruction cause a trap?",32,null],[12,"other_side_effects","","Does this instruction have other side effects besides…",32,null],[12,"writes_cpu_flags","","Does this instruction write to CPU flags?",32,null],[12,"clobbers_all_regs","","Should this opcode be considered to clobber all live…",32,null],[11,"snake_name","","",32,[[]]],[11,"all_typevars","","",32,[[],[["typevar",3],["vec",3]]]],[6,"Instruction","","",null,null],[3,"InstructionBuilder","","",null,null],[12,"name","","",33,null],[12,"doc","","",33,null],[12,"format","","",33,null],[12,"operands_in","","",33,null],[12,"operands_out","","",33,null],[12,"constraints","","",33,null],[12,"is_terminator","","",33,null],[12,"is_branch","","",33,null],[12,"is_indirect_branch","","",33,null],[12,"is_call","","",33,null],[12,"is_return","","",33,null],[12,"is_ghost","","",33,null],[12,"can_load","","",33,null],[12,"can_store","","",33,null],[12,"can_trap","","",33,null],[12,"other_side_effects","","",33,null],[12,"clobbers_all_regs","","",33,null],[11,"new","","",33,[[["rc",3],["into",8],["string",3]]]],[11,"operands_in","","",33,[[["vec",3],["operand",3]]]],[11,"operands_out","","",33,[[["vec",3],["operand",3]]]],[11,"constraints","","",33,[[["constraint",4],["vec",3]]]],[11,"is_terminator","","",33,[[]]],[11,"is_branch","","",33,[[]]],[11,"is_indirect_branch","","",33,[[]]],[11,"is_call","","",33,[[]]],[11,"is_return","","",33,[[]]],[11,"is_ghost","","",33,[[]]],[11,"can_load","","",33,[[]]],[11,"can_store","","",33,[[]]],[11,"can_trap","","",33,[[]]],[11,"other_side_effects","","",33,[[]]],[11,"clobbers_all_regs","","",33,[[]]],[11,"build","","",33,[[["opcodenumber",3]],[["instructioncontent",3],["rc",3]]]],[4,"ValueTypeOrAny","","A thin wrapper like Option, but with more precise semantics.",null,null],[13,"ValueType","","",34,null],[13,"Any","","",34,null],[11,"expect","","",34,[[],["valuetype",4]]],[6,"VectorBitWidth","","The number of bits in the vector",null,null],[4,"BindParameter","","An parameter used for binding instructions to specific…",null,null],[13,"Any","","",35,null],[13,"Lane","","",35,null],[13,"Vector","","",35,null],[13,"Reference","","",35,null],[13,"Immediate","","",35,null],[5,"vector","","Constructor for more easily building vector parameters…",null,[[],["bindparameter",4]]],[4,"Immediate","","",null,null],[13,"IntCC","","",36,null],[3,"BoundInstruction","","",null,null],[12,"inst","","",37,null],[12,"value_types","","",37,null],[12,"immediate_values","","",37,null],[11,"new","","Construct a new bound instruction (with nothing bound yet)…",37,[[["rc",3]]]],[11,"verify_bindings","","Verify that the bindings for a BoundInstruction are correct.",37,[[],[["result",4],["string",3]]]],[5,"verify_format","","Checks that the input operands actually match the given…",null,[[["instructionformat",3]]]],[5,"verify_polymorphic","","Check if this instruction is polymorphic, and verify its…",null,[[["instructionformat",3]],[["option",4],["polymorphicinfo",3]]]],[5,"is_ctrl_typevar_candidate","","Verify that the use of TypeVars is consistent with…",null,[[["typevar",3]],[["vec",3],["result",4],["string",3]]]],[4,"FormatPredicateKind","","",null,null],[13,"IsEqual","","Is the field member equal to the expected value (stored…",38,null],[13,"IsSignedInt","","Is the immediate instruction format field representable as…",38,null],[13,"IsUnsignedInt","","Is the immediate instruction format field representable as…",38,null],[13,"IsZeroInt","","Is the immediate format field member an integer equal to…",38,null],[13,"IsZero32BitFloat","","Is the immediate format field member equal to zero?…",38,null],[13,"IsZero64BitFloat","","Is the immediate format field member equal to zero?…",38,null],[13,"IsAllZeroes","","Is the immediate format field member equal zero in all…",38,null],[13,"IsAllOnes","","Does the immediate format field member have ones in all…",38,null],[13,"LengthEquals","","Has the value list (in member_name) the size specified in…",38,null],[13,"IsColocatedFunc","","Is the referenced function colocated?",38,null],[13,"IsColocatedData","","Is the referenced data object colocated?",38,null],[3,"FormatPredicateNode","","",null,null],[12,"format_name","","",39,null],[12,"member_name","","",39,null],[12,"kind","","",39,null],[11,"new","","",39,[[["formatpredicatekind",4],["instructionformat",3]]]],[11,"new_raw","","",39,[[["formatpredicatekind",4],["instructionformat",3]]]],[11,"destructuring_member_name","","",39,[[]]],[11,"rust_predicate","","",39,[[],["string",3]]],[4,"TypePredicateNode","","",null,null],[13,"TypeVarCheck","","Is the value argument (at the index designated by the…",40,null],[13,"CtrlTypeVarCheck","","Is the controlling type variable the same type as the one…",40,null],[11,"rust_predicate","","",40,[[],["string",3]]],[4,"InstructionPredicateNode","","A basic node in an instruction predicate: either an atom,…",null,null],[13,"FormatPredicate","","",41,null],[13,"TypePredicate","","",41,null],[13,"And","","An AND-combination of two or more other predicates.",41,null],[13,"Or","","An OR-combination of two or more other predicates.",41,null],[11,"rust_predicate","","",41,[[],["string",3]]],[11,"format_destructuring_member_name","","",41,[[]]],[11,"format_name","","",41,[[]]],[11,"is_type_predicate","","",41,[[]]],[11,"collect_leaves","","",41,[[],[["instructionpredicatenode",4],["vec",3]]]],[3,"InstructionPredicate","","",null,null],[12,"node","","",42,null],[11,"new","","",42,[[]]],[11,"unwrap","","",42,[[],["instructionpredicatenode",4]]],[11,"new_typevar_check","","",42,[[["valuetype",4],["rc",3],["typevar",3]],["instructionpredicatenode",4]]],[11,"new_ctrl_typevar_check","","",42,[[["valuetype",4]],["instructionpredicatenode",4]]],[11,"new_is_field_equal","","",42,[[["string",3],["instructionformat",3]],["instructionpredicatenode",4]]],[11,"new_is_field_equal_ast","","Used only for the AST module, which directly passes in the…",42,[[["string",3],["formatfield",3],["instructionformat",3]],["instructionpredicatenode",4]]],[11,"new_is_signed_int","","",42,[[["instructionformat",3]],["instructionpredicatenode",4]]],[11,"new_is_unsigned_int","","",42,[[["instructionformat",3]],["instructionpredicatenode",4]]],[11,"new_is_zero_int","","",42,[[["instructionformat",3]],["instructionpredicatenode",4]]],[11,"new_is_zero_32bit_float","","",42,[[["instructionformat",3]],["instructionpredicatenode",4]]],[11,"new_is_zero_64bit_float","","",42,[[["instructionformat",3]],["instructionpredicatenode",4]]],[11,"new_is_all_zeroes","","",42,[[["instructionformat",3]],["instructionpredicatenode",4]]],[11,"new_is_all_ones","","",42,[[["instructionformat",3]],["instructionpredicatenode",4]]],[11,"new_length_equals","","",42,[[["instructionformat",3]],["instructionpredicatenode",4]]],[11,"new_is_colocated_func","","",42,[[["instructionformat",3]],["instructionpredicatenode",4]]],[11,"new_is_colocated_data","","",42,[[["formats",3]],["instructionpredicatenode",4]]],[11,"and","","",42,[[["instructionpredicatenode",4]]]],[11,"or","","",42,[[["instructionpredicatenode",4]]]],[11,"rust_predicate","","",42,[[],[["option",4],["string",3]]]],[11,"type_predicate","","Returns the type predicate if this is one, or None…",42,[[],[["option",4],["string",3]]]],[11,"collect_leaves","","Returns references to all the nodes that are leaves in the…",42,[[],[["instructionpredicatenode",4],["vec",3]]]],[3,"InstructionPredicateNumber","","",null,null],[12,"0","","",43,null],[11,"from_u32","","Create a new instance from a `u32`.",43,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",43,[[]]],[6,"InstructionPredicateMap","","",null,null],[3,"InstructionPredicateRegistry","","A registry of predicates to help deduplicating them,…",null,null],[12,"map","","Maps a predicate number to its actual predicate.",44,null],[12,"inverted_map","","Inverse map: maps a predicate to its predicate number.…",44,null],[11,"new","","",44,[[]]],[11,"insert","","",44,[[["instructionpredicate",3]],["instructionpredicatenumber",3]]],[11,"extract","","",44,[[],[["primarymap",3],["instructionpredicate",3],["instructionpredicatenumber",3]]]],[4,"InstSpec","","An instruction specification, containing an instruction…",null,null],[13,"Inst","","",45,null],[13,"Bound","","",45,null],[11,"inst","","",45,[[],["rc",3]]],[0,"isa","cranelift_codegen_meta::cdsl","",null,null],[3,"TargetIsa","cranelift_codegen_meta::cdsl::isa","",null,null],[12,"name","","",46,null],[12,"instructions","","",46,null],[12,"settings","","",46,null],[12,"regs","","",46,null],[12,"recipes","","",46,null],[12,"cpu_modes","","",46,null],[12,"encodings_predicates","","",46,null],[12,"local_transform_groups","","TransformGroupIndex are global to all the ISAs, while we…",46,null],[11,"new","","",46,[[["instructionpredicate",3],["encodingrecipenumber",3],["isaregs",3],["settinggroup",3],["primarymap",3],["encodingrecipe",3],["instructionpredicatenumber",3],["vec",3],["primarymap",3],["instructiongroup",3],["cpumode",3]]]],[11,"transitive_transform_groups","","Returns a deterministically ordered, deduplicated list of…",46,[[["transformgroups",3]],[["transformgroupindex",3],["vec",3]]]],[11,"direct_transform_groups","","Returns a deterministically ordered, deduplicated list of…",46,[[],["vec",3]]],[11,"translate_group_index","","",46,[[["transformgroupindex",3]]]],[0,"operands","cranelift_codegen_meta::cdsl","",null,null],[3,"Operand","cranelift_codegen_meta::cdsl::operands","An instruction operand can be an immediate, an SSA value,…",null,null],[12,"name","","Name of the operand variable, as it appears in function…",47,null],[12,"kind","","Type of the operand.",47,null],[12,"doc","","",47,null],[11,"new","","",47,[[]]],[11,"with_doc","","",47,[[]]],[11,"doc","","",47,[[],["option",4]]],[11,"is_value","","",47,[[]]],[11,"type_var","","",47,[[],[["option",4],["typevar",3]]]],[11,"is_varargs","","",47,[[]]],[11,"is_immediate_or_entityref","","Returns true if the operand has an immediate kind or is an…",47,[[]]],[11,"is_immediate","","Returns true if the operand has an immediate kind.",47,[[]]],[11,"is_cpu_flags","","",47,[[]]],[6,"EnumValues","","",null,null],[4,"OperandKindFields","","",null,null],[13,"EntityRef","","",48,null],[13,"VariableArgs","","",48,null],[13,"ImmValue","","",48,null],[13,"ImmEnum","","",48,null],[13,"TypeVar","","",48,null],[3,"OperandKind","","",null,null],[12,"rust_type","","String representation of the Rust type mapping to this…",49,null],[12,"rust_field_name","","Name of this OperandKind in the format\'s member field.",49,null],[12,"fields","","Type-specific fields for this OperandKind.",49,null],[12,"doc","","",49,null],[11,"new","","",49,[[["operandkindfields",4]]]],[11,"with_doc","","",49,[[]]],[11,"doc","","",49,[[],["option",4]]],[0,"recipes","cranelift_codegen_meta::cdsl","",null,null],[3,"Register","cranelift_codegen_meta::cdsl::recipes","A specific register in a register class.",null,null],[12,"regclass","","",50,null],[12,"unit","","",50,null],[11,"new","","",50,[[["regclassindex",3]]]],[3,"Stack","","An operand that must be in a stack slot.",null,null],[12,"regclass","","",51,null],[11,"new","","",51,[[["regclassindex",3]]]],[11,"stack_base_mask","","",51,[[]]],[3,"BranchRange","","",null,null],[12,"inst_size","","",52,null],[12,"range","","",52,null],[4,"OperandConstraint","","",null,null],[13,"RegClass","","",53,null],[13,"FixedReg","","",53,null],[13,"TiedInput","","",53,null],[13,"Stack","","",53,null],[3,"EncodingRecipe","","A recipe for encoding instructions with a given format.",null,null],[12,"name","","Short mnemonic name for this recipe.",54,null],[12,"format","","Associated instruction format.",54,null],[12,"base_size","","Base number of bytes in the binary encoded instruction.",54,null],[12,"operands_in","","Tuple of register constraints for value operands.",54,null],[12,"operands_out","","Tuple of register constraints for results.",54,null],[12,"compute_size","","Function name to use when computing actual size.",54,null],[12,"branch_range","","`(origin, bits)` range for branches.",54,null],[12,"clobbers_flags","","This instruction clobbers `iflags` and `fflags`; true by…",54,null],[12,"inst_predicate","","Instruction predicate.",54,null],[12,"isa_predicate","","ISA predicate.",54,null],[12,"emit","","Rust code for binary emission.",54,null],[3,"EncodingRecipeNumber","","",null,null],[12,"0","","",55,null],[11,"from_u32","","Create a new instance from a `u32`.",55,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",55,[[]]],[6,"Recipes","","",null,null],[3,"EncodingRecipeBuilder","","",null,null],[12,"name","","",56,null],[12,"format","","",56,null],[12,"base_size","","",56,null],[12,"operands_in","","",56,null],[12,"operands_out","","",56,null],[12,"compute_size","","",56,null],[12,"branch_range","","",56,null],[12,"emit","","",56,null],[12,"clobbers_flags","","",56,null],[12,"inst_predicate","","",56,null],[12,"isa_predicate","","",56,null],[11,"new","","",56,[[["rc",3]]]],[11,"operands_in","","",56,[[["vec",3]]]],[11,"operands_out","","",56,[[["vec",3]]]],[11,"clobbers_flags","","",56,[[]]],[11,"emit","","",56,[[]]],[11,"branch_range","","",56,[[]]],[11,"isa_predicate","","",56,[[]]],[11,"inst_predicate","","",56,[[]]],[11,"compute_size","","",56,[[]]],[11,"build","","",56,[[],["encodingrecipe",3]]],[0,"regs","cranelift_codegen_meta::cdsl","",null,null],[3,"RegBankIndex","cranelift_codegen_meta::cdsl::regs","",null,null],[12,"0","","",57,null],[11,"from_u32","","Create a new instance from a `u32`.",57,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",57,[[]]],[3,"RegBank","","",null,null],[12,"name","","",58,null],[12,"first_unit","","",58,null],[12,"units","","",58,null],[12,"names","","",58,null],[12,"prefix","","",58,null],[12,"pressure_tracking","","",58,null],[12,"pinned_reg","","",58,null],[12,"toprcs","","",58,null],[12,"classes","","",58,null],[11,"new","","",58,[[["vec",3],["option",4]]]],[11,"unit_by_name","","",58,[[]]],[3,"RegClassIndex","","",null,null],[12,"0","","",59,null],[11,"from_u32","","Create a new instance from a `u32`.",59,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",59,[[]]],[3,"RegClass","","",null,null],[12,"name","","",60,null],[12,"index","","",60,null],[12,"width","","",60,null],[12,"bank","","",60,null],[12,"toprc","","",60,null],[12,"count","","",60,null],[12,"start","","",60,null],[12,"subclasses","","",60,null],[11,"new","","",60,[[["regclassindex",3],["regbankindex",3]]]],[11,"subclass_mask","","Compute a bit-mask of subclasses, including self.",60,[[]]],[11,"mask","","Compute a bit-mask of the register units allocated by this…",60,[[],["vec",3]]],[4,"RegClassProto","","",null,null],[13,"TopLevel","","",61,null],[13,"SubClass","","",61,null],[3,"RegClassBuilder","","",null,null],[12,"name","","",62,null],[12,"width","","",62,null],[12,"count","","",62,null],[12,"start","","",62,null],[12,"proto","","",62,null],[11,"new_toplevel","","",62,[[["regbankindex",3]]]],[11,"subclass_of","","",62,[[["regclassindex",3]]]],[11,"count","","",62,[[]]],[11,"width","","",62,[[]]],[3,"RegBankBuilder","","",null,null],[12,"name","","",63,null],[12,"units","","",63,null],[12,"names","","",63,null],[12,"prefix","","",63,null],[12,"pressure_tracking","","",63,null],[12,"pinned_reg","","",63,null],[11,"new","","",63,[[]]],[11,"units","","",63,[[]]],[11,"names","","",63,[[["vec",3]]]],[11,"track_pressure","","",63,[[]]],[11,"pinned_reg","","",63,[[]]],[3,"IsaRegsBuilder","","",null,null],[12,"banks","","",64,null],[12,"classes","","",64,null],[11,"new","","",64,[[]]],[11,"add_bank","","",64,[[["regbankbuilder",3]],["regbankindex",3]]],[11,"add_class","","",64,[[["regclassbuilder",3]],["regclassindex",3]]],[11,"build","","Checks that the set of register classes satisfies:",64,[[],["isaregs",3]]],[3,"IsaRegs","","",null,null],[12,"banks","","",65,null],[12,"classes","","",65,null],[11,"new","","",65,[[["primarymap",3],["regbank",3],["regclass",3],["primarymap",3],["regclassindex",3],["regbankindex",3]]]],[11,"class_by_name","","",65,[[],["regclassindex",3]]],[11,"regunit_by_name","","",65,[[["regclassindex",3]]]],[0,"settings","cranelift_codegen_meta::cdsl","",null,null],[3,"BoolSettingIndex","cranelift_codegen_meta::cdsl::settings","",null,null],[12,"0","","",66,null],[3,"BoolSetting","","",null,null],[12,"default","","",67,null],[12,"bit_offset","","",67,null],[12,"predicate_number","","",67,null],[4,"SpecificSetting","","",null,null],[13,"Bool","","",68,null],[13,"Enum","","",68,null],[13,"Num","","",68,null],[3,"Setting","","",null,null],[12,"name","","",69,null],[12,"comment","","",69,null],[12,"specific","","",69,null],[12,"byte_offset","","",69,null],[11,"default_byte","","",69,[[]]],[11,"byte_for_value","","",69,[[]]],[11,"byte_mask","","",69,[[]]],[3,"PresetIndex","","",null,null],[12,"0","","",70,null],[4,"PresetType","","",null,null],[13,"BoolSetting","","",71,null],[13,"OtherPreset","","",71,null],[3,"Preset","","",null,null],[12,"name","","",72,null],[12,"values","","",72,null],[11,"layout","","",72,[[["settinggroup",3]],["vec",3]]],[3,"SettingGroup","","",null,null],[12,"name","","",73,null],[12,"settings","","",73,null],[12,"bool_start_byte_offset","","",73,null],[12,"settings_size","","",73,null],[12,"presets","","",73,null],[12,"predicates","","",73,null],[11,"num_bool_settings","","",73,[[]]],[11,"byte_size","","",73,[[]]],[11,"get_bool","","",73,[[]]],[11,"predicate_by_name","","",73,[[]]],[4,"ProtoSpecificSetting","","This is the basic information needed to track the specific…",null,null],[13,"Bool","","",74,null],[13,"Enum","","",74,null],[13,"Num","","",74,null],[3,"ProtoSetting","","This is the information provided during building for a…",null,null],[12,"name","","",75,null],[12,"comment","","",75,null],[12,"specific","","",75,null],[4,"PredicateNode","","",null,null],[13,"OwnedBool","","",76,null],[13,"SharedBool","","",76,null],[13,"Not","","",76,null],[13,"And","","",76,null],[11,"render","","",76,[[["settinggroup",3]],["string",3]]],[3,"ProtoPredicate","","",null,null],[12,"name","","",77,null],[12,"node","","",77,null],[6,"SettingPredicateNumber","","",null,null],[3,"Predicate","","",null,null],[12,"name","","",78,null],[12,"node","","",78,null],[12,"number","","",78,null],[11,"render","","",78,[[["settinggroup",3]],["string",3]]],[3,"SettingGroupBuilder","","",null,null],[12,"name","","",79,null],[12,"settings","","",79,null],[12,"presets","","",79,null],[12,"predicates","","",79,null],[11,"new","","",79,[[]]],[11,"add_setting","","",79,[[["protospecificsetting",4]]]],[11,"add_bool","","",79,[[],["boolsettingindex",3]]],[11,"add_enum","","",79,[[["vec",3]]]],[11,"add_num","","",79,[[]]],[11,"add_predicate","","",79,[[["predicatenode",4]]]],[11,"add_preset","","",79,[[["presettype",4],["vec",3]],["presetindex",3]]],[11,"build","","Compute the layout of the byte vector used to represent…",79,[[],["settinggroup",3]]],[0,"type_inference","cranelift_codegen_meta::cdsl","",null,null],[4,"Constraint","cranelift_codegen_meta::cdsl::type_inference","",null,null],[13,"WiderOrEq","","Constraint specifying that a type var tv1 must be wider…",80,null],[13,"Eq","","Constraint specifying that two derived type vars must have…",80,null],[13,"InTypeset","","Constraint specifying that a type var must belong to some…",80,null],[11,"translate_with","","",80,[[["fn",8]],["constraint",4]]],[11,"translate_with_map","","Creates a new constraint by replacing type vars by their…",80,[[["hashmap",3]],["constraint",4]]],[11,"translate_with_env","","Creates a new constraint by replacing type vars by their…",80,[[["typeenvironment",3]],["constraint",4]]],[11,"is_trivial","","",80,[[]]],[11,"is_concrete","","Returns true iff all the referenced type vars are…",80,[[]]],[11,"typevar_args","","",80,[[],[["typevar",3],["vec",3]]]],[4,"TypeEnvRank","","",null,null],[13,"Singleton","","",81,null],[13,"Input","","",81,null],[13,"Intermediate","","",81,null],[13,"Output","","",81,null],[13,"Temp","","",81,null],[13,"Internal","","",81,null],[3,"TypeEnvironment","","Class encapsulating the necessary bookkeeping for type…",null,null],[12,"vars","","",82,null],[12,"ranks","","",82,null],[12,"equivalency_map","","",82,null],[12,"constraints","","",82,null],[11,"new","","",82,[[]]],[11,"register","","",82,[[["varindex",3],["var",3]]]],[11,"add_constraint","","",82,[[["constraint",4]]]],[11,"get_equivalent","","Returns the canonical representative of the equivalency…",82,[[["typevar",3]],["typevar",3]]],[11,"rank","","Get the rank of tv in the partial order:",82,[[["typevar",3]]]],[11,"record_equivalent","","Record the fact that the free tv1 is part of the same…",82,[[["typevar",3]]]],[11,"free_typevars","","Get the free typevars in the current type environment.",82,[[["varpool",3]],[["typevar",3],["vec",3]]]],[11,"normalize","","Normalize by collapsing any roots that don\'t correspond to…",82,[[["varpool",3]]]],[11,"extract","","Extract a clean type environment from self, that only…",82,[[["varpool",3]],["typeenvironment",3]]],[5,"substitute","","Replaces an external type variable according to the…",null,[[["typevar",3],["hashmap",3]],["typevar",3]]],[5,"canonicalize_derivations","","Normalize a (potentially derived) typevar using the…",null,[[["typevar",3]],["typevar",3]]],[5,"constrain_fixpoint","","Given typevars tv1 and tv2 (which could be derived from…",null,[[["typevar",3]]]],[5,"unify","","Unify tv1 and tv2 in the given type environment. tv1 must…",null,[[["typeenvironment",3],["typevar",3]],[["result",4],["string",3]]]],[5,"infer_definition","","Perform type inference on one Def in the current type…",null,[[["typeenvironment",3],["def",3],["varpool",3]],[["result",4],["typeenvironment",3],["string",3]]]],[5,"infer_transform","","Perform type inference on an transformation. Return an…",null,[[["defpool",3],["varpool",3],["defindex",3]],[["result",4],["typeenvironment",3],["string",3]]]],[0,"types","cranelift_codegen_meta::cdsl","Cranelift ValueType hierarchy",null,null],[7,"_RUST_NAME_PREFIX","cranelift_codegen_meta::cdsl::types","",null,null],[4,"ValueType","","A concrete SSA value type.",null,null],[13,"Lane","","",83,null],[13,"Reference","","",83,null],[13,"Special","","",83,null],[13,"Vector","","",83,null],[11,"all_lane_types","","Iterate through all of the lane types.",83,[[],["lanetypeiterator",3]]],[11,"all_special_types","","Iterate through all of the special types (neither lanes…",83,[[],["specialtypeiterator",3]]],[11,"all_reference_types","","",83,[[],["referencetypeiterator",3]]],[11,"doc","","Return a string containing the documentation comment for…",83,[[],["string",3]]],[11,"lane_bits","","Return the number of bits in a lane.",83,[[]]],[11,"lane_count","","Return the number of lanes.",83,[[]]],[11,"membytes","","Find the number of bytes that this type occupies in memory.",83,[[]]],[11,"number","","Find the unique number associated with this type.",83,[[],["option",4]]],[11,"rust_name","","Return the name of this type for generated Rust source…",83,[[],["string",3]]],[11,"_wider_or_equal","","Return true iff: 1. self and other have equal number of…",83,[[["valuetype",4]]]],[11,"width","","Return the total number of bits of an instance of this type.",83,[[]]],[4,"LaneType","","A concrete scalar type that can appear as a vector lane too.",null,null],[13,"Bool","","",84,null],[13,"Float","","",84,null],[13,"Int","","",84,null],[11,"doc","","Return a string containing the documentation comment for…",84,[[],["string",3]]],[11,"lane_bits","","Return the number of bits in a lane.",84,[[]]],[11,"number","","Find the unique number associated with this lane type.",84,[[]]],[11,"bool_from_bits","","",84,[[],["lanetype",4]]],[11,"int_from_bits","","",84,[[],["lanetype",4]]],[11,"float_from_bits","","",84,[[],["lanetype",4]]],[11,"by","","",84,[[],["valuetype",4]]],[11,"is_float","","",84,[[]]],[11,"is_int","","",84,[[]]],[3,"LaneTypeIterator","","An iterator for different lane types.",null,null],[12,"bool_iter","","",85,null],[12,"int_iter","","",85,null],[12,"float_iter","","",85,null],[11,"new","","Create a new lane type iterator.",85,[[]]],[3,"VectorType","","A concrete SIMD vector type.",null,null],[12,"base","","",86,null],[12,"lanes","","",86,null],[11,"new","","Initialize a new integer type with `n` bits.",86,[[["lanetype",4]]]],[11,"doc","","Return a string containing the documentation comment for…",86,[[],["string",3]]],[11,"lane_bits","","Return the number of bits in a lane.",86,[[]]],[11,"lane_count","","Return the number of lanes.",86,[[]]],[11,"lane_type","","Return the lane type.",86,[[],["lanetype",4]]],[11,"number","","Find the unique number associated with this vector type.",86,[[]]],[4,"SpecialType","","A concrete scalar type that is neither a vector nor a lane…",null,null],[13,"Flag","","",87,null],[13,"StructArgument","","",87,null],[11,"doc","","Return a string containing the documentation comment for…",87,[[],["string",3]]],[11,"lane_bits","","Return the number of bits in a lane.",87,[[]]],[11,"number","","Find the unique number associated with this special type.",87,[[]]],[3,"SpecialTypeIterator","","",null,null],[12,"flag_iter","","",88,null],[12,"done","","",88,null],[11,"new","","",88,[[]]],[3,"ReferenceType","","Reference type is scalar type, but not lane type.",null,null],[12,"0","","",89,null],[11,"doc","","Return a string containing the documentation comment for…",89,[[],["string",3]]],[11,"lane_bits","","Return the number of bits in a lane.",89,[[]]],[11,"number","","Find the unique number associated with this reference type.",89,[[]]],[11,"ref_from_bits","","",89,[[],["referencetype",3]]],[3,"ReferenceTypeIterator","","An iterator for different reference types.",null,null],[12,"reference_iter","","",90,null],[11,"new","","Create a new reference type iterator.",90,[[]]],[0,"typevar","cranelift_codegen_meta::cdsl","",null,null],[17,"MAX_LANES","cranelift_codegen_meta::cdsl::typevar","",null,null],[17,"MAX_BITS","","",null,null],[17,"MAX_FLOAT_BITS","","",null,null],[3,"TypeVarContent","","Type variables can be used in place of concrete types when…",null,null],[12,"name","","Short name of type variable used in instruction…",91,null],[12,"doc","","Documentation string.",91,null],[12,"type_set","","Type set associated to the type variable. This field must…",91,null],[12,"base","","",91,null],[3,"TypeVar","","",null,null],[12,"content","","",92,null],[11,"new","","",92,[[["typeset",3]]]],[11,"new_singleton","","",92,[[["valuetype",4]]]],[11,"copy_from","","Get a fresh copy of self, named after `name`. Can only be…",92,[[["typevar",3],["string",3]],["typevar",3]]],[11,"get_typeset","","Returns the typeset for this TV. If the TV is derived,…",92,[[],["typeset",3]]],[11,"get_raw_typeset","","Returns this typevar\'s type set, assuming this type var…",92,[[],["typeset",3]]],[11,"singleton_type","","If the associated typeset has a single type return it.…",92,[[],[["option",4],["valuetype",4]]]],[11,"free_typevar","","Get the free type variable controlling this one.",92,[[],[["typevar",3],["option",4]]]],[11,"derived","","Create a type variable that is a function of another.",92,[[["derivedfunc",4]],["typevar",3]]],[11,"lane_of","","",92,[[],["typevar",3]]],[11,"as_bool","","",92,[[],["typevar",3]]],[11,"half_width","","",92,[[],["typevar",3]]],[11,"double_width","","",92,[[],["typevar",3]]],[11,"half_vector","","",92,[[],["typevar",3]]],[11,"double_vector","","",92,[[],["typevar",3]]],[11,"split_lanes","","",92,[[],["typevar",3]]],[11,"merge_lanes","","",92,[[],["typevar",3]]],[11,"constrain_types_by_ts","","Constrain the range of types this variable can assume to a…",92,[[["typeset",3]]]],[11,"constrain_types","","Constrain the range of types this variable can assume to a…",92,[[["typevar",3]]]],[11,"to_rust_code","","Get a Rust expression that computes the type of this type…",92,[[],["string",3]]],[4,"DerivedFunc","","",null,null],[13,"LaneOf","","",93,null],[13,"AsBool","","",93,null],[13,"HalfWidth","","",93,null],[13,"DoubleWidth","","",93,null],[13,"HalfVector","","",93,null],[13,"DoubleVector","","",93,null],[13,"SplitLanes","","",93,null],[13,"MergeLanes","","",93,null],[11,"name","","",93,[[]]],[11,"inverse","","Returns the inverse function of this one, if it is a…",93,[[],[["derivedfunc",4],["option",4]]]],[3,"TypeVarParent","","",null,null],[12,"type_var","","",94,null],[12,"derived_func","","",94,null],[6,"RangeBound","","A set of types.",null,null],[6,"Range","","",null,null],[6,"NumSet","","",null,null],[3,"TypeSet","","",null,null],[12,"lanes","","",95,null],[12,"ints","","",95,null],[12,"floats","","",95,null],[12,"bools","","",95,null],[12,"refs","","",95,null],[12,"specials","","",95,null],[11,"new","","",95,[[["specialtype",4],["vec",3],["btreeset",3]]]],[11,"size","","Return the number of concrete types represented by this…",95,[[]]],[11,"image","","Return the image of self across the derived function func.",95,[[["derivedfunc",4]],["typeset",3]]],[11,"lane_of","","Return a TypeSet describing the image of self across…",95,[[],["typeset",3]]],[11,"as_bool","","Return a TypeSet describing the image of self across…",95,[[],["typeset",3]]],[11,"half_width","","Return a TypeSet describing the image of self across…",95,[[],["typeset",3]]],[11,"double_width","","Return a TypeSet describing the image of self across…",95,[[],["typeset",3]]],[11,"half_vector","","Return a TypeSet describing the image of self across…",95,[[],["typeset",3]]],[11,"double_vector","","Return a TypeSet describing the image of self across…",95,[[],["typeset",3]]],[11,"concrete_types","","",95,[[],[["valuetype",4],["vec",3]]]],[11,"get_singleton","","Return the singleton type represented by self. Can only…",95,[[],["valuetype",4]]],[11,"preimage","","Return the inverse image of self across the derived…",95,[[["derivedfunc",4]],["typeset",3]]],[11,"inplace_intersect_with","","",95,[[["typeset",3]]]],[11,"is_subset","","",95,[[["typeset",3]]]],[11,"is_wider_or_equal","","",95,[[["typeset",3]]]],[11,"is_narrower","","",95,[[["typeset",3]]]],[5,"set_wider_or_equal","","",null,[[["btreeset",3]]]],[5,"set_narrower","","",null,[[["btreeset",3]]]],[3,"TypeSetBuilder","","",null,null],[12,"ints","","",96,null],[12,"floats","","",96,null],[12,"bools","","",96,null],[12,"refs","","",96,null],[12,"includes_scalars","","",96,null],[12,"simd_lanes","","",96,null],[12,"specials","","",96,null],[11,"new","","",96,[[]]],[11,"ints","","",96,[[]]],[11,"floats","","",96,[[]]],[11,"bools","","",96,[[]]],[11,"refs","","",96,[[]]],[11,"includes_scalars","","",96,[[]]],[11,"simd_lanes","","",96,[[]]],[11,"specials","","",96,[[["specialtype",4],["vec",3]]]],[11,"build","","",96,[[],["typeset",3]]],[11,"all","","",96,[[],["typeset",3]]],[4,"Interval","","",null,null],[13,"None","","",97,null],[13,"All","","",97,null],[13,"Range","","",97,null],[11,"to_range","","",97,[[["range",3],["option",4]],[["option",4],["range",3]]]],[5,"legal_bool","","",null,[[]]],[5,"range_to_set","","Generates a set with all the powers of two included in the…",null,[[["option",4],["range",3]],["btreeset",3]]],[0,"xform","cranelift_codegen_meta::cdsl","",null,null],[3,"Transform","cranelift_codegen_meta::cdsl::xform","An instruction transformation consists of a source and…",null,null],[12,"src","","",98,null],[12,"dst","","",98,null],[12,"var_pool","","",98,null],[12,"def_pool","","",98,null],[12,"block_pool","","",98,null],[12,"const_pool","","",98,null],[12,"type_env","","",98,null],[6,"SymbolTable","","",null,null],[11,"new","","",98,[[["dummydef",3],["vec",3]]]],[11,"verify_legalize","","",98,[[]]],[5,"var_index","","Inserts, if not present, a name in the `symbol_table`.…",null,[[["varpool",3],["vec",3],["hashmap",3]],["varindex",3]]],[5,"rewrite_defined_vars","","Given a list of symbols defined in a Def, rewrite them to…",null,[[["patternposition",4],["dummydef",3],["vec",3],["hashmap",3],["varpool",3],["defindex",3]],[["varindex",3],["vec",3]]]],[5,"rewrite_expr","","Find all uses of variables in `expr` and replace them with…",null,[[["patternposition",4],["vec",3],["hashmap",3],["dummyexpr",4],["varpool",3],["constpool",3]],["apply",3]]],[5,"rewrite_def_list","","",null,[[["patternposition",4],["dummydef",3],["hashmap",3],["vec",3],["blockpool",3],["defpool",3],["varpool",3],["vec",3],["constpool",3]],[["vec",3],["defindex",3]]]],[3,"TransformGroup","","A group of related transformations.",null,null],[12,"name","","",99,null],[12,"doc","","",99,null],[12,"chain_with","","",99,null],[12,"isa_name","","",99,null],[12,"id","","",99,null],[12,"custom_legalizes","","Maps Instruction camel_case names to custom legalization…",99,null],[12,"transforms","","",99,null],[11,"rust_name","","",99,[[],["string",3]]],[3,"TransformGroupIndex","","",null,null],[12,"0","","",100,null],[11,"from_u32","","Create a new instance from a `u32`.",100,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",100,[[]]],[3,"TransformGroupBuilder","","",null,null],[12,"name","","",101,null],[12,"doc","","",101,null],[12,"chain_with","","",101,null],[12,"isa_name","","",101,null],[12,"custom_legalizes","","",101,null],[12,"transforms","","",101,null],[11,"new","","",101,[[]]],[11,"chain_with","","",101,[[["transformgroupindex",3]]]],[11,"isa","","",101,[[]]],[11,"custom_legalize","","Add a custom legalization action for `inst`.",101,[[["rc",3]]]],[11,"legalize","","Add a legalization pattern to this group.",101,[[["dummydef",3],["vec",3]]]],[11,"build_and_add_to","","",101,[[["transformgroups",3]],["transformgroupindex",3]]],[3,"TransformGroups","","",null,null],[12,"groups","","",102,null],[11,"new","","",102,[[]]],[11,"add","","",102,[[["transformgroup",3]],["transformgroupindex",3]]],[11,"get","","",102,[[["transformgroupindex",3]],["transformgroup",3]]],[11,"next_key","","",102,[[],["transformgroupindex",3]]],[11,"by_name","","",102,[[],["transformgroup",3]]],[5,"camel_case","cranelift_codegen_meta::cdsl","Convert the string `s` to CamelCase.",null,[[],["string",3]]],[0,"srcgen","cranelift_codegen_meta","Source code generator.",null,null],[7,"SHIFTWIDTH","cranelift_codegen_meta::srcgen","",null,null],[3,"Formatter","","",null,null],[12,"indent","","",103,null],[12,"lines","","",103,null],[11,"new","","Source code formatter class. Used to collect source code…",103,[[]]],[11,"indent_push","","Increase current indentation level by one.",103,[[]]],[11,"indent_pop","","Decrease indentation by one level.",103,[[]]],[11,"indent","","",103,[[["fnonce",8]]]],[11,"get_indent","","Get the current whitespace indentation in the form of a…",103,[[],["string",3]]],[11,"get_outdent","","Get a string containing whitespace outdented one level.…",103,[[],["string",3]]],[11,"line","","Add an indented line.",103,[[]]],[11,"empty_line","","Pushes an empty line.",103,[[]]],[11,"outdented_line","","Emit a line outdented one level.",103,[[]]],[11,"update_file","","Write `self.lines` to a file.",103,[[],[["result",4],["error",3]]]],[11,"multi_line","","Add one or more lines after stripping common indentation.",103,[[]]],[11,"comment","","Add a comment line.",103,[[]]],[11,"doc_comment","","Add a (multi-line) documentation comment.",103,[[]]],[11,"add_match","","Add a match expression.",103,[[["match",3]]]],[5,"_indent","","Compute the indentation of s, or None of an empty line.",null,[[],["option",4]]],[5,"parse_multiline","","Given a multi-line string, split it into a sequence of…",null,[[],[["vec",3],["string",3]]]],[3,"Match","","Match formatting class.",null,null],[12,"expr","","",104,null],[12,"arms","","",104,null],[12,"catch_all","","The clause for the placeholder pattern _.",104,null],[11,"new","","Create a new match statement on `expr`.",104,[[]]],[11,"set_catch_all","","",104,[[["string",3]]]],[11,"arm","","Add an arm that reads fields to the Match statement.",104,[[["into",8],["vec",3],["string",3]]]],[11,"arm_no_fields","","Adds an arm that doesn\'t read anythings from the fields to…",104,[[]]],[0,"error","cranelift_codegen_meta","Error returned during meta code-generation.",null,null],[3,"Error","cranelift_codegen_meta::error","An error that occurred when the cranelift_codegen_meta…",null,null],[12,"inner","","",105,null],[11,"with_msg","","Create a new error object with the given message.",105,[[["into",8],["string",3]],["error",3]]],[4,"ErrorInner","","",null,null],[13,"Msg","","",106,null],[13,"IoError","","",106,null],[0,"isa","cranelift_codegen_meta","Define supported ISAs; includes ISA-specific instructions,…",null,null],[0,"arm32","cranelift_codegen_meta::isa","",null,null],[5,"define_settings","cranelift_codegen_meta::isa::arm32","",null,[[["settinggroup",3]],["settinggroup",3]]],[5,"define_regs","","",null,[[],["isaregs",3]]],[5,"define","","",null,[[["shareddefinitions",3]],["targetisa",3]]],[0,"arm64","cranelift_codegen_meta::isa","",null,null],[5,"define_settings","cranelift_codegen_meta::isa::arm64","",null,[[["settinggroup",3]],["settinggroup",3]]],[5,"define_registers","","",null,[[],["isaregs",3]]],[5,"define","","",null,[[["shareddefinitions",3]],["targetisa",3]]],[0,"riscv","cranelift_codegen_meta::isa","",null,null],[0,"encodings","cranelift_codegen_meta::isa::riscv","",null,null],[3,"PerCpuModeEncodings","cranelift_codegen_meta::isa::riscv::encodings","",null,null],[12,"inst_pred_reg","","",107,null],[12,"enc32","","",107,null],[12,"enc64","","",107,null],[12,"recipes","","",107,null],[11,"new","","",107,[[["primarymap",3]]]],[11,"enc","","",107,[[["encodingrecipenumber",3]],["encodingbuilder",3]]],[11,"add32","","",107,[[["encodingbuilder",3]]]],[11,"add64","","",107,[[["encodingbuilder",3]]]],[5,"load_bits","","",null,[[]]],[5,"store_bits","","",null,[[]]],[5,"branch_bits","","",null,[[]]],[5,"jalr_bits","","",null,[[]]],[5,"jal_bits","","",null,[[]]],[5,"opimm_bits","","",null,[[]]],[5,"opimm32_bits","","",null,[[]]],[5,"op_bits","","",null,[[]]],[5,"op32_bits","","",null,[[]]],[5,"lui_bits","","",null,[[]]],[5,"define","","",null,[[["settinggroup",3],["recipegroup",3],["shareddefinitions",3]],["percpumodeencodings",3]]],[0,"recipes","cranelift_codegen_meta::isa::riscv","",null,null],[3,"RecipeGroup","cranelift_codegen_meta::isa::riscv::recipes","An helper to create recipes and use them when defining the…",null,null],[12,"recipes","","The actualy list of recipes explicitly created in this file.",108,null],[12,"name_to_recipe","","Provides fast lookup from a name to an encoding recipe.",108,null],[11,"new","","",108,[[]]],[11,"push","","",108,[[["encodingrecipebuilder",3]]]],[11,"by_name","","",108,[[],["encodingrecipenumber",3]]],[11,"collect","","",108,[[],[["encodingrecipenumber",3],["encodingrecipe",3],["primarymap",3]]]],[5,"define","","",null,[[["isaregs",3],["shareddefinitions",3]],["recipegroup",3]]],[5,"define_settings","cranelift_codegen_meta::isa::riscv","",null,[[["settinggroup",3]],["settinggroup",3]]],[5,"define_registers","","",null,[[],["isaregs",3]]],[5,"define","","",null,[[["shareddefinitions",3]],["targetisa",3]]],[0,"x86","cranelift_codegen_meta::isa","",null,null],[0,"encodings","cranelift_codegen_meta::isa::x86","",null,null],[3,"PerCpuModeEncodings","cranelift_codegen_meta::isa::x86::encodings","",null,null],[12,"enc32","","",109,null],[12,"enc64","","",109,null],[12,"recipes","","",109,null],[12,"recipes_by_name","","",109,null],[12,"inst_pred_reg","","",109,null],[11,"new","","",109,[[]]],[11,"add_recipe","","",109,[[["encodingrecipe",3]],["encodingrecipenumber",3]]],[11,"make_encoding","","",109,[[["template",3],["instspec",4]],[["rc",3],["encodingcontent",3]]]],[11,"enc32_func","","",109,[[["template",3]]]],[11,"enc32","","",109,[[["template",3]]]],[11,"enc32_isap","","",109,[[["template",3]]]],[11,"enc32_instp","","",109,[[["instructionpredicatenode",4],["template",3]]]],[11,"enc32_rec","","",109,[[["encodingrecipe",3]]]],[11,"enc64_func","","",109,[[["template",3]]]],[11,"enc64","","",109,[[["template",3]]]],[11,"enc64_isap","","",109,[[["template",3]]]],[11,"enc64_instp","","",109,[[["instructionpredicatenode",4],["template",3]]]],[11,"enc64_rec","","",109,[[["encodingrecipe",3]]]],[11,"enc_i32_i64","","Adds I32/I64 encodings as appropriate for a typed…",109,[[["template",3]]]],[11,"enc_i32_i64_explicit_rex","","Adds I32/I64 encodings as appropriate for a typed…",109,[[["template",3]]]],[11,"enc_b32_b64","","Adds B32/B64 encodings as appropriate for a typed…",109,[[["template",3]]]],[11,"enc_i32_i64_rex_only","","Add encodings for `inst.i32` to X86_32. Add encodings for…",109,[[["template",3]]]],[11,"enc_i32_i64_instp","","Add encodings for `inst.i32` to X86_32. Add encodings for…",109,[[["instructionpredicatenode",4],["rc",3],["template",3]]]],[11,"enc_r32_r64_instp","","Add encodings for `inst.r32` to X86_32. Add encodings for…",109,[[["instructionpredicatenode",4],["rc",3],["template",3]]]],[11,"enc_r32_r64_rex_only","","Add encodings for `inst.r32` to X86_32. Add encodings for…",109,[[["template",3]]]],[11,"enc_r32_r64_ld_st","","",109,[[["rc",3],["template",3]]]],[11,"enc_x86_64","","Add encodings for `inst` to X86_64 with and without a REX…",109,[[["template",3]]]],[11,"enc_x86_64_instp","","Add encodings for `inst` to X86_64 with and without a REX…",109,[[["instructionpredicatenode",4],["template",3]]]],[11,"enc_x86_64_isap","","",109,[[["template",3]]]],[11,"enc_both","","Add all three encodings for `inst`:",109,[[["template",3]]]],[11,"enc_both_isap","","",109,[[["template",3]]]],[11,"enc_both_instp","","",109,[[["instructionpredicatenode",4],["template",3]]]],[11,"enc_both_inferred","","Add two encodings for `inst`:",109,[[["template",3]]]],[11,"enc_both_inferred_maybe_isap","","",109,[[["option",4],["template",3]]]],[11,"enc_both_rex_only","","Add two encodings for `inst`:",109,[[["template",3]]]],[11,"enc_i32_i64_ld_st","","Add encodings for `inst.i32` to X86_32. Add encodings for…",109,[[["rc",3],["template",3]]]],[11,"enc_32_64_rec","","Add the same encoding/recipe pairing to both X86_32 and…",109,[[["encodingrecipe",3]]]],[11,"enc_32_64_func","","Add the same encoding to both X86_32 and X86_64; assumes…",109,[[["template",3]]]],[11,"enc_32_64_maybe_isap","","Add the same encoding to both X86_32 and X86_64; assumes…",109,[[["option",4],["template",3]]]],[11,"enc32_maybe_isap","","",109,[[["option",4],["template",3]]]],[11,"enc64_maybe_isap","","",109,[[["option",4],["template",3]]]],[5,"define_moves","","",null,[[["percpumodeencodings",3],["recipegroup",3],["shareddefinitions",3]]]],[5,"define_memory","","",null,[[["percpumodeencodings",3],["shareddefinitions",3],["recipegroup",3],["instructiongroup",3]]]],[5,"define_fpu_moves","","",null,[[["percpumodeencodings",3],["recipegroup",3],["shareddefinitions",3]]]],[5,"define_fpu_memory","","",null,[[["percpumodeencodings",3],["recipegroup",3],["shareddefinitions",3]]]],[5,"define_fpu_ops","","",null,[[["instructiongroup",3],["percpumodeencodings",3],["shareddefinitions",3],["recipegroup",3],["settinggroup",3]]]],[5,"define_alu","","",null,[[["instructiongroup",3],["percpumodeencodings",3],["shareddefinitions",3],["recipegroup",3],["settinggroup",3]]]],[5,"define_simd","","",null,[[["instructiongroup",3],["percpumodeencodings",3],["shareddefinitions",3],["recipegroup",3],["settinggroup",3]]]],[5,"define_entity_ref","","",null,[[["percpumodeencodings",3],["shareddefinitions",3],["recipegroup",3],["settinggroup",3]]]],[5,"define_control_flow","","Control flow opcodes.",null,[[["percpumodeencodings",3],["shareddefinitions",3],["recipegroup",3],["settinggroup",3]]]],[5,"define_reftypes","","Reference type instructions.",null,[[["percpumodeencodings",3],["recipegroup",3],["shareddefinitions",3]]]],[5,"define","","",null,[[["instructiongroup",3],["shareddefinitions",3],["recipegroup",3],["settinggroup",3]],["percpumodeencodings",3]]],[0,"instructions","cranelift_codegen_meta::isa::x86","",null,null],[5,"define","cranelift_codegen_meta::isa::x86::instructions","",null,[[["entityrefs",3],["immediates",3],["formats",3],["primarymap",3]],["instructiongroup",3]]],[0,"legalize","cranelift_codegen_meta::isa::x86","",null,null],[5,"define","cranelift_codegen_meta::isa::x86::legalize","",null,[[["shareddefinitions",3],["instructiongroup",3]]]],[5,"define_simd","","",null,[[["transformgroupbuilder",3],["shareddefinitions",3],["instructiongroup",3]]]],[0,"opcodes","cranelift_codegen_meta::isa::x86","Static, named definitions of instruction opcodes.",null,null],[7,"EMPTY","cranelift_codegen_meta::isa::x86::opcodes","Empty opcode for use as a default.",null,null],[7,"ADC","","Add with carry flag r{16,32,64} to r/m of the same size.",null,null],[7,"ADD","","Add r{16,32,64} to r/m of the same size.",null,null],[7,"ADD_IMM","","Add imm{16,32} to r/m{16,32,64}, possibly sign-extended.",null,null],[7,"ADD_IMM8_SIGN_EXTEND","","Add sign-extended imm8 to r/m{16,32,64}.",null,null],[7,"ADDPD","","Add packed double-precision floating-point values from…",null,null],[7,"ADDPS","","Add packed single-precision floating-point values from…",null,null],[7,"ADDSD","","Add the low double-precision floating-point value from…",null,null],[7,"ADDSS","","Add the low single-precision floating-point value from…",null,null],[7,"AND","","r/m{16,32,64} AND register of the same size (Intel docs…",null,null],[7,"AND_IMM","","imm{16,32} AND r/m{16,32,64}, possibly sign-extended.",null,null],[7,"AND_IMM8_SIGN_EXTEND","","r/m{16,32,64} AND sign-extended imm8.",null,null],[7,"ANDNPS","","Return the bitwise logical AND NOT of packed…",null,null],[7,"ANDPS","","Return the bitwise logical AND of packed single-precision…",null,null],[7,"BIT_SCAN_FORWARD","","Bit scan forward (stores index of first encountered 1 from…",null,null],[7,"BIT_SCAN_REVERSE","","Bit scan reverse (stores index of first encountered 1 from…",null,null],[7,"BLENDVPS","","Select packed single-precision floating-point values from…",null,null],[7,"BLENDVPD","","Select packed double-precision floating-point values from…",null,null],[7,"CALL_RELATIVE","","Call near, relative, displacement relative to next…",null,null],[7,"CMOV_OVERFLOW","","Move r/m{16,32,64} if overflow (OF=1).",null,null],[7,"CMP_IMM","","Compare imm{16,32} with r/m{16,32,64} (sign-extended if 64).",null,null],[7,"CMP_IMM8","","Compare imm8 with r/m{16,32,64}.",null,null],[7,"CMP_REG","","Compare r{16,32,64} with r/m of the same size.",null,null],[7,"CMPPD","","Compare packed double-precision floating-point value in…",null,null],[7,"CMPPS","","Compare packed single-precision floating-point value in…",null,null],[7,"CVTDQ2PS","","Convert four packed signed doubleword integers from…",null,null],[7,"CVTSD2SS","","Convert scalar double-precision floating-point value to…",null,null],[7,"CVTSI2SD","","Convert doubleword integer to scalar double-precision…",null,null],[7,"CVTSI2SS","","Convert doubleword integer to scalar single-precision…",null,null],[7,"CVTSS2SD","","Convert scalar single-precision floating-point value to…",null,null],[7,"CVTTPS2DQ","","Convert four packed single-precision floating-point values…",null,null],[7,"CVTTSD2SI","","Convert with truncation scalar double-precision…",null,null],[7,"CVTTSS2SI","","Convert with truncation scalar single-precision…",null,null],[7,"DIV","","Unsigned divide for {16,32,64}-bit.",null,null],[7,"DIVPD","","Divide packed double-precision floating-point values in…",null,null],[7,"DIVPS","","Divide packed single-precision floating-point values in…",null,null],[7,"DIVSD","","Divide low double-precision floating-point value in xmm1…",null,null],[7,"DIVSS","","Divide low single-precision floating-point value in xmm1…",null,null],[7,"IDIV","","Signed divide for {16,32,64}-bit.",null,null],[7,"IMUL","","Signed multiply for {16,32,64}-bit, generic registers.",null,null],[7,"IMUL_RDX_RAX","","Signed multiply for {16,32,64}-bit, storing into RDX:RAX.",null,null],[7,"INSERTPS","","Insert scalar single-precision floating-point value.",null,null],[7,"JUMP_ABSOLUTE","","Either:",null,null],[7,"JUMP_NEAR_RELATIVE","","Jump near, relative, RIP = RIP + 32-bit displacement sign…",null,null],[7,"JUMP_NEAR_IF_OVERFLOW","","Jump near (rel32) if overflow (OF=1).",null,null],[7,"JUMP_SHORT","","Jump short, relative, RIP = RIP + 8-bit displacement sign…",null,null],[7,"JUMP_SHORT_IF_EQUAL","","Jump short (rel8) if equal (ZF=1).",null,null],[7,"JUMP_SHORT_IF_NOT_EQUAL","","Jump short (rel8) if not equal (ZF=0).",null,null],[7,"JUMP_SHORT_IF_OVERFLOW","","Jump short (rel8) if overflow (OF=1).",null,null],[7,"LEA","","Store effective address for m in register r{16,32,64}.",null,null],[7,"LZCNT","","Count the number of leading zero bits.",null,null],[7,"MAXPD","","Return the maximum packed double-precision floating-point…",null,null],[7,"MAXPS","","Return the maximum packed single-precision floating-point…",null,null],[7,"MAXSD","","Return the maximum scalar double-precision floating-point…",null,null],[7,"MAXSS","","Return the maximum scalar single-precision floating-point…",null,null],[7,"MINPD","","Return the minimum packed double-precision floating-point…",null,null],[7,"MINPS","","Return the minimum packed single-precision floating-point…",null,null],[7,"MINSD","","Return the minimum scalar double-precision floating-point…",null,null],[7,"MINSS","","Return the minimum scalar single-precision floating-point…",null,null],[7,"MOV_BYTE_STORE","","Move r8 to r/m8.",null,null],[7,"MOV_IMM","","Move imm{16,32,64} to same-sized register.",null,null],[7,"MOV_IMM_SIGNEXTEND","","Move imm{16,32} to r{16,32,64}, sign-extended if 64-bit…",null,null],[7,"MOV_LOAD","","Move {r/m16, r/m32, r/m64} to same-sized register.",null,null],[7,"MOV_STORE_16","","Move r16 to r/m16.",null,null],[7,"MOV_STORE","","Move {r16, r32, r64} to same-sized register or memory.",null,null],[7,"MOVAPS_LOAD","","Move aligned packed single-precision floating-point values…",null,null],[7,"MOVD_LOAD_XMM","","Move doubleword from r/m32 to xmm (SSE2). Quadword with…",null,null],[7,"MOVD_STORE_XMM","","Move doubleword from xmm to r/m32 (SSE2). Quadword with…",null,null],[7,"MOVLHPS","","Move packed single-precision floating-point values low to…",null,null],[7,"MOVSD_LOAD","","Move scalar double-precision floating-point value (from…",null,null],[7,"MOVSD_STORE","","Move scalar double-precision floating-point value (from…",null,null],[7,"MOVSS_STORE","","Move scalar single-precision floating-point value (from…",null,null],[7,"MOVSS_LOAD","","Move scalar single-precision floating-point-value (from…",null,null],[7,"MOVSX_BYTE","","Move byte to register with sign-extension.",null,null],[7,"MOVSX_WORD","","Move word to register with sign-extension.",null,null],[7,"MOVSXD","","Move doubleword to register with sign-extension.",null,null],[7,"MOVUPS_LOAD","","Move unaligned packed single-precision floating-point from…",null,null],[7,"MOVUPS_STORE","","Move unaligned packed single-precision floating-point…",null,null],[7,"MOVZX_BYTE","","Move byte to register with zero-extension.",null,null],[7,"MOVZX_WORD","","Move word to register with zero-extension.",null,null],[7,"MUL","","Unsigned multiply for {16,32,64}-bit.",null,null],[7,"MULPD","","Multiply packed double-precision floating-point values…",null,null],[7,"MULPS","","Multiply packed single-precision floating-point values…",null,null],[7,"MULSD","","Multiply the low double-precision floating-point value in…",null,null],[7,"MULSS","","Multiply the low single-precision floating-point value in…",null,null],[7,"NOT","","Reverse each bit of r/m{16,32,64}.",null,null],[7,"OR","","r{16,32,64} OR register of same size.",null,null],[7,"OR_IMM","","imm{16,32} OR r/m{16,32,64}, possibly sign-extended.",null,null],[7,"OR_IMM8_SIGN_EXTEND","","r/m{16,32,64} OR sign-extended imm8.",null,null],[7,"ORPS","","Return the bitwise logical OR of packed single-precision…",null,null],[7,"PABSB","","Compute the absolute value of bytes in xmm2/m128 and store…",null,null],[7,"PABSD","","Compute the absolute value of 32-bit integers in xmm2/m128…",null,null],[7,"PABSW","","Compute the absolute value of 16-bit integers in xmm2/m128…",null,null],[7,"PACKSSWB","","Converts 8 packed signed word integers from xmm1 and from…",null,null],[7,"PACKSSDW","","Converts 4 packed signed doubleword integers from xmm1 and…",null,null],[7,"PACKUSWB","","Converts 8 packed signed word integers from xmm1 and from…",null,null],[7,"PACKUSDW","","Converts 4 packed signed doubleword integers from xmm1 and…",null,null],[7,"PADDB","","Add packed byte integers from xmm2/m128 and xmm1 (SSE2).",null,null],[7,"PADDD","","Add packed doubleword integers from xmm2/m128 and xmm1…",null,null],[7,"PADDQ","","Add packed quadword integers from xmm2/m128 and xmm1 (SSE2).",null,null],[7,"PADDW","","Add packed word integers from xmm2/m128 and xmm1 (SSE2).",null,null],[7,"PADDSB","","Add packed signed byte integers from xmm2/m128 and xmm1…",null,null],[7,"PADDSW","","Add packed signed word integers from xmm2/m128 and xmm1…",null,null],[7,"PADDUSB","","Add packed unsigned byte integers from xmm2/m128 and xmm1…",null,null],[7,"PADDUSW","","Add packed unsigned word integers from xmm2/m128 and xmm1…",null,null],[7,"PALIGNR","","Concatenate destination and source operands, extract a…",null,null],[7,"PAND","","Bitwise AND of xmm2/m128 and xmm1 (SSE2).",null,null],[7,"PANDN","","Bitwise AND NOT of xmm2/m128 and xmm1 (SSE2).",null,null],[7,"PAVGB","","Average packed unsigned byte integers from xmm2/m128 and…",null,null],[7,"PAVGW","","Average packed unsigned word integers from xmm2/m128 and…",null,null],[7,"PBLENDVB","","Select byte values from xmm1 and xmm2/m128 from mask…",null,null],[7,"PBLENDW","","Select words from xmm1 and xmm2/m128 from mask specified…",null,null],[7,"PCMPEQB","","Compare packed data for equal (SSE2).",null,null],[7,"PCMPEQD","","Compare packed data for equal (SSE2).",null,null],[7,"PCMPEQQ","","Compare packed data for equal (SSE4.1).",null,null],[7,"PCMPEQW","","Compare packed data for equal (SSE2).",null,null],[7,"PCMPGTB","","Compare packed signed byte integers for greater than (SSE2).",null,null],[7,"PCMPGTD","","Compare packed signed doubleword integers for greater than…",null,null],[7,"PCMPGTQ","","Compare packed signed quadword integers for greater than…",null,null],[7,"PCMPGTW","","Compare packed signed word integers for greater than (SSE2).",null,null],[7,"PEXTR","","Extract doubleword or quadword, depending on REX.W (SSE4.1).",null,null],[7,"PEXTRB","","Extract byte (SSE4.1).",null,null],[7,"PEXTRW","","Extract word (SSE4.1). There is a 3-byte SSE2 variant that…",null,null],[7,"PINSR","","Insert doubleword or quadword, depending on REX.W (SSE4.1).",null,null],[7,"PINSRB","","Insert byte (SSE4.1).",null,null],[7,"PINSRW","","Insert word (SSE2).",null,null],[7,"PMAXSB","","Compare packed signed byte integers in xmm1 and xmm2/m128…",null,null],[7,"PMAXSD","","Compare packed signed doubleword integers in xmm1 and…",null,null],[7,"PMAXSW","","Compare packed signed word integers in xmm1 and xmm2/m128…",null,null],[7,"PMAXUB","","Compare packed unsigned byte integers in xmm1 and…",null,null],[7,"PMAXUD","","Compare packed unsigned doubleword integers in xmm1 and…",null,null],[7,"PMAXUW","","Compare packed unsigned word integers in xmm1 and…",null,null],[7,"PMINSB","","Compare packed signed byte integers in xmm1 and xmm2/m128…",null,null],[7,"PMINSD","","Compare packed signed doubleword integers in xmm1 and…",null,null],[7,"PMINSW","","Compare packed signed word integers in xmm1 and xmm2/m128…",null,null],[7,"PMINUB","","Compare packed unsigned byte integers in xmm1 and…",null,null],[7,"PMINUD","","Compare packed unsigned doubleword integers in xmm1 and…",null,null],[7,"PMINUW","","Compare packed unsigned word integers in xmm1 and…",null,null],[7,"PMOVSXBW","","Sign extend 8 packed 8-bit integers in the low 8 bytes of…",null,null],[7,"PMOVSXWD","","Sign extend 4 packed 16-bit integers in the low 8 bytes of…",null,null],[7,"PMOVSXDQ","","Sign extend 2 packed 32-bit integers in the low 8 bytes of…",null,null],[7,"PMOVZXBW","","Zero extend 8 packed 8-bit integers in the low 8 bytes of…",null,null],[7,"PMOVZXWD","","Zero extend 4 packed 16-bit integers in the low 8 bytes of…",null,null],[7,"PMOVZXDQ","","Zero extend 2 packed 32-bit integers in the low 8 bytes of…",null,null],[7,"PMULLW","","Multiply the packed signed word integers in xmm1 and…",null,null],[7,"PMULLD","","Multiply the packed doubleword signed integers in xmm1 and…",null,null],[7,"VPMULLQ","","Multiply the packed quadword signed integers in xmm2 and…",null,null],[7,"PMULUDQ","","Multiply packed unsigned doubleword integers in xmm1 by…",null,null],[7,"PMADDWD","","Multiply the packed word integers, add adjacent doubleword…",null,null],[7,"POP_REG","","Pop top of stack into r{16,32,64}; increment stack pointer.",null,null],[7,"POPCNT","","Returns the count of number of bits set to 1.",null,null],[7,"POR","","Bitwise OR of xmm2/m128 and xmm1 (SSE2).",null,null],[7,"PSHUFB","","Shuffle bytes in xmm1 according to contents of xmm2/m128…",null,null],[7,"PSHUFD","","Shuffle the doublewords in xmm2/m128 based on the encoding…",null,null],[7,"PS_W_IMM","","Shift words in xmm1 by imm8; the direction and sign-bit…",null,null],[7,"PS_D_IMM","","Shift doublewords in xmm1 by imm8; the direction and…",null,null],[7,"PS_Q_IMM","","Shift quadwords in xmm1 by imm8; the direction and…",null,null],[7,"PSLLW","","Shift words in xmm1 left by xmm2/m128 while shifting in 0s…",null,null],[7,"PSLLD","","Shift doublewords in xmm1 left by xmm2/m128 while shifting…",null,null],[7,"PSLLQ","","Shift quadwords in xmm1 left by xmm2/m128 while shifting…",null,null],[7,"PSRLW","","Shift words in xmm1 right by xmm2/m128 while shifting in…",null,null],[7,"PSRLD","","Shift doublewords in xmm1 right by xmm2/m128 while…",null,null],[7,"PSRLQ","","Shift quadwords in xmm1 right by xmm2/m128 while shifting…",null,null],[7,"PSRAW","","Shift words in xmm1 right by xmm2/m128 while shifting in…",null,null],[7,"PSRAD","","Shift doublewords in xmm1 right by xmm2/m128 while…",null,null],[7,"PSUBB","","Subtract packed byte integers in xmm2/m128 from packed…",null,null],[7,"PSUBW","","Subtract packed word integers in xmm2/m128 from packed…",null,null],[7,"PSUBD","","Subtract packed doubleword integers in xmm2/m128 from…",null,null],[7,"PSUBQ","","Subtract packed quadword integers in xmm2/m128 from xmm1…",null,null],[7,"PSUBSB","","Subtract packed signed byte integers in xmm2/m128 from…",null,null],[7,"PSUBSW","","Subtract packed signed word integers in xmm2/m128 from…",null,null],[7,"PSUBUSB","","Subtract packed unsigned byte integers in xmm2/m128 from…",null,null],[7,"PSUBUSW","","Subtract packed unsigned word integers in xmm2/m128 from…",null,null],[7,"PTEST","","Set ZF if xmm2/m128 AND xmm1 result is all 0s; set CF if…",null,null],[7,"PUNPCKHBW","","Unpack and interleave high-order bytes from xmm1 and…",null,null],[7,"PUNPCKHWD","","Unpack and interleave high-order words from xmm1 and…",null,null],[7,"PUNPCKHDQ","","Unpack and interleave high-order doublewords from xmm1 and…",null,null],[7,"PUNPCKHQDQ","","Unpack and interleave high-order quadwords from xmm1 and…",null,null],[7,"PUNPCKLBW","","Unpack and interleave low-order bytes from xmm1 and…",null,null],[7,"PUNPCKLWD","","Unpack and interleave low-order words from xmm1 and…",null,null],[7,"PUNPCKLDQ","","Unpack and interleave low-order doublewords from xmm1 and…",null,null],[7,"PUNPCKLQDQ","","Unpack and interleave low-order quadwords from xmm1 and…",null,null],[7,"PUSH_REG","","Push r{16,32,64}.",null,null],[7,"PXOR","","Logical exclusive OR (SSE2).",null,null],[7,"RET_NEAR","","Near return to calling procedure.",null,null],[7,"ROTATE_CL","","General rotation opcode. Kind of rotation depends on…",null,null],[7,"ROTATE_IMM8","","General rotation opcode. Kind of rotation depends on…",null,null],[7,"ROUNDSD","","Round scalar doubl-precision floating-point values.",null,null],[7,"ROUNDSS","","Round scalar single-precision floating-point values.",null,null],[7,"SBB","","Subtract with borrow r{16,32,64} from r/m of the same size.",null,null],[7,"SET_BYTE_IF_OVERFLOW","","Set byte if overflow (OF=1).",null,null],[7,"SQRTPD","","Compute the square root of the packed double-precision…",null,null],[7,"SQRTPS","","Compute the square root of the packed double-precision…",null,null],[7,"SQRTSD","","Compute square root of scalar double-precision…",null,null],[7,"SQRTSS","","Compute square root of scalar single-precision value.",null,null],[7,"SUB","","Subtract r{16,32,64} from r/m of same size.",null,null],[7,"SUBPD","","Subtract packed double-precision floating-point values in…",null,null],[7,"SUBPS","","Subtract packed single-precision floating-point values in…",null,null],[7,"SUBSD","","Subtract the low double-precision floating-point value in…",null,null],[7,"SUBSS","","Subtract the low single-precision floating-point value in…",null,null],[7,"TEST_BYTE_REG","","AND r8 with r/m8; set SF, ZF, PF according to result.",null,null],[7,"TEST_REG","","AND {r16, r32, r64} with r/m of the same size; set SF, ZF,…",null,null],[7,"TZCNT","","Count the number of trailing zero bits.",null,null],[7,"UCOMISD","","Compare low double-precision floating-point values in xmm1…",null,null],[7,"UCOMISS","","Compare low single-precision floating-point values in xmm1…",null,null],[7,"UNDEFINED2","","Raise invalid opcode instruction.",null,null],[7,"VCVTUDQ2PS","","Convert four packed unsigned doubleword integers from…",null,null],[7,"XOR_IMM","","imm{16,32} XOR r/m{16,32,64}, possibly sign-extended.",null,null],[7,"XOR_IMM8_SIGN_EXTEND","","r/m{16,32,64} XOR sign-extended imm8.",null,null],[7,"XOR","","r/m{16,32,64} XOR register of the same size.",null,null],[7,"XORPD","","Bitwise logical XOR of packed double-precision…",null,null],[7,"XORPS","","Bitwise logical XOR of packed single-precision…",null,null],[0,"recipes","cranelift_codegen_meta::isa::x86","Encoding recipes for x86/x86_64.",null,null],[3,"RecipeGroup","cranelift_codegen_meta::isa::x86::recipes","Helper data structure to create recipes and template…",null,null],[12,"regs","","Memoized registers description, to pass it to builders…",110,null],[12,"recipes","","All the recipes explicitly created in this file. This is…",110,null],[12,"templates","","All the recipe templates created in this file.",110,null],[11,"new","","",110,[[["isaregs",3]]]],[11,"add_recipe","","",110,[[["encodingrecipebuilder",3]]]],[11,"add_template_recipe","","",110,[[["encodingrecipebuilder",3]],[["rc",3],["template",3]]]],[11,"add_template_inferred","","",110,[[["encodingrecipebuilder",3]],[["rc",3],["template",3]]]],[11,"add_template","","",110,[[["template",3]],[["rc",3],["template",3]]]],[11,"recipe","","",110,[[],["encodingrecipe",3]]],[11,"template","","",110,[[],["template",3]]],[5,"decode_opcodes","","Given a sequence of opcode bytes, compute the recipe name…",null,[[]]],[5,"replace_put_op","","Given a snippet of Rust code (or None), replace the…",null,[[["option",4],["string",3]],[["option",4],["string",3]]]],[5,"replace_nonrex_constraints","","Replaces constraints to a REX-prefixed register class by…",null,[[["operandconstraint",4],["isaregs",3],["vec",3]],[["operandconstraint",4],["vec",3]]]],[5,"replace_evex_constraints","","",null,[[["operandconstraint",4],["isaregs",3],["vec",3]],[["operandconstraint",4],["vec",3]]]],[4,"RecipePrefixKind","","Specifies how the prefix (e.g. REX) is emitted by a Recipe.",null,null],[13,"Unspecified","","The REX emission behavior is not hardcoded for the Recipe…",111,null],[13,"NeverEmitRex","","The Recipe must hardcode the non-emission of the REX prefix.",111,null],[13,"AlwaysEmitRex","","The Recipe must hardcode the emission of the REX prefix.",111,null],[13,"InferRex","","The Recipe should infer the emission of the REX.RXB bits…",111,null],[13,"Evex","","The Recipe must hardcode the emission of an EVEX prefix.",111,null],[3,"Template","","Previously called a TailRecipe in the Python meta…",null,null],[12,"regs","","Description of registers, used in the build() method.",112,null],[12,"recipe","","The recipe template, which is to be specialized (by copy).",112,null],[12,"rex_kind","","How is the REX prefix emitted?",112,null],[12,"inferred_rex_compute_size","","Function for `compute_size()` when REX is inferrable.",112,null],[12,"when_prefixed","","Other recipe to use when REX-prefixed.",112,null],[12,"w_bit","","Value of the W bit (0 or 1), stored in the EncodingBits.",112,null],[12,"rrr_bits","","Value of the RRR bits (between 0 and 0b111).",112,null],[12,"op_bytes","","Opcode bytes.",112,null],[11,"new","","",112,[[["isaregs",3],["encodingrecipebuilder",3]]]],[11,"name","","",112,[[]]],[11,"rex_kind","","",112,[[["recipeprefixkind",4]]]],[11,"inferred_rex_compute_size","","",112,[[]]],[11,"when_prefixed","","",112,[[["rc",3],["template",3]]]],[11,"opcodes","","",112,[[]]],[11,"w","","",112,[[]]],[11,"rrr","","",112,[[]]],[11,"nonrex","","",112,[[]]],[11,"rex","","",112,[[]]],[11,"infer_rex","","",112,[[]]],[11,"build","","",112,[[]]],[5,"supported_floatccs_predicate","","Returns a predicate checking that the \\\"cond\\\" field of the…",null,[[["instructionformat",3]],["instructionpredicate",3]]],[5,"valid_scale","","Return an instruction predicate that checks if `iform.imm`…",null,[[["instructionformat",3]],["instructionpredicate",3]]],[5,"define","","",null,[[["isaregs",3],["shareddefinitions",3],["settinggroup",3]],["recipegroup",3]]],[0,"registers","cranelift_codegen_meta::isa::x86","",null,null],[5,"define","cranelift_codegen_meta::isa::x86::registers","",null,[[],["isaregs",3]]],[0,"settings","cranelift_codegen_meta::isa::x86","",null,null],[5,"define","cranelift_codegen_meta::isa::x86::settings","",null,[[["settinggroup",3]],["settinggroup",3]]],[5,"define","cranelift_codegen_meta::isa::x86","",null,[[["shareddefinitions",3]],["targetisa",3]]],[4,"Isa","cranelift_codegen_meta::isa","Represents known ISA target.",null,null],[13,"Riscv","","",113,null],[13,"X86","","",113,null],[13,"Arm32","","",113,null],[13,"Arm64","","",113,null],[11,"from_name","","Creates isa target using name.",113,[[],["option",4]]],[11,"from_arch","","Creates isa target from arch.",113,[[],["option",4]]],[11,"all","","Returns all supported isa targets.",113,[[]]],[5,"define","","",null,[[["shareddefinitions",3]],[["vec",3],["targetisa",3]]]],[0,"gen_binemit","cranelift_codegen_meta","Generate binary emission code for each ISA.",null,null],[5,"gen_recipe","cranelift_codegen_meta::gen_binemit","Generate code to handle a single recipe.",null,[[["encodingrecipe",3],["formatter",3]]]],[5,"unwrap_values","","Emit code that unwraps values living in registers or stack…",null,[[["formatter",3]],["string",3]]],[5,"gen_isa","","",null,[[["formatter",3],["primarymap",3]]]],[5,"generate","","",null,[[["primarymap",3]],[["result",4],["error",3]]]],[0,"gen_encodings","cranelift_codegen_meta","Generate sources for instruction encoding.",null,null],[5,"emit_instp","cranelift_codegen_meta::gen_encodings","Emit code for matching an instruction predicate against an…",null,[[["formatter",3],["instructionpredicate",3]]]],[5,"emit_recipe_predicates","","Emit private functions for checking recipe predicates as…",null,[[["targetisa",3],["formatter",3]]]],[5,"emit_inst_predicates","","Emit private functions for matching instruction predicates…",null,[[["targetisa",3],["formatter",3]]]],[5,"emit_recipe_names","","Emit a table of encoding recipe names keyed by recipe…",null,[[["targetisa",3],["formatter",3]]]],[5,"get_fixed_registers","","Returns a set of all the registers involved in fixed…",null,[[],[["hashset",3],["register",3]]]],[5,"emit_operand_constraints","","Emit a struct field initializer for an array of operand…",null,[[["hashmap",3],["encodingrecipe",3],["formatter",3],["isaregs",3],["hashset",3]]]],[5,"emit_recipe_constraints","","Emit a table of encoding recipe operand constraints keyed…",null,[[["targetisa",3],["formatter",3]]]],[5,"emit_recipe_sizing","","Emit a table of encoding recipe code size information.",null,[[["targetisa",3],["formatter",3]]]],[3,"Level1Table","","Level 1 table mapping types to `Level2` objects.",null,null],[12,"cpu_mode","","",114,null],[12,"legalize_code","","",114,null],[12,"table_map","","",114,null],[12,"table_vec","","",114,null],[11,"new","","",114,[[["cpumode",3]]]],[11,"l2table_for","","Returns the level2 table for the given type; None means…",114,[[["option",4],["valuetype",4]],["level2table",3]]],[11,"l2tables","","",114,[[],[["vec",3],["level2table",3]]]],[3,"Level2HashTableEntry","","",null,null],[12,"inst_name","","",115,null],[12,"offset","","",115,null],[3,"Level2Table","","Level 2 table mapping instruction opcodes to `EncList`…",null,null],[12,"typ","","",116,null],[12,"legalize_code","","",116,null],[12,"inst_to_encodings","","",116,null],[12,"hash_table_offset","","",116,null],[12,"hash_table_len","","",116,null],[11,"new","","",116,[[["option",4],["valuetype",4],["transformgroupindex",3]]]],[11,"enclist_for","","",116,[[["rc",3]],["encodinglist",3]]],[11,"enclists","","",116,[[],[["valuesmut",3],["string",3],["encodinglist",3]]]],[11,"is_empty","","",116,[[]]],[11,"layout_hashtable","","",116,[[["hashmap",3],["vec",3]]]],[17,"CODE_BITS","","The u16 values in an encoding list entry are interpreted…",null,null],[17,"PRED_START","","Beginning of the predicate code words.",null,null],[17,"PRED_BITS","","Number of bits used to hold a predicate number…",null,null],[17,"PRED_MASK","","Mask for extracting the predicate number.",null,null],[3,"Encoder","","Encoder for the list format above.",null,null],[12,"num_instruction_predicates","","",117,null],[12,"words","","u16 encoding list words.",117,null],[12,"docs","","Documentation comments: Index into `words` + comment.",117,null],[11,"new","","",117,[[]]],[11,"recipe","","Add a recipe+bits entry to the list.",117,[[["rc",3],["primarymap",3]]]],[11,"pred","","Add a predicate entry.",117,[[["string",3]]]],[11,"inst_predicate","","Add an instruction predicate entry.",117,[[["instructionpredicatenumber",3]]]],[11,"isa_predicate","","Add an ISA predicate entry.",117,[[]]],[3,"EncodingList","","List of instructions for encoding a given type + opcode…",null,null],[12,"inst","","",118,null],[12,"typ","","",118,null],[12,"encodings","","",118,null],[12,"offset","","",118,null],[11,"new","","",118,[[["option",4],["valuetype",4],["rc",3]]]],[11,"encode","","Encode this list as a sequence of u16 numbers.",118,[[["uniqueseqtable",3],["targetisa",3],["cpumode",3],["hashmap",3]]]],[5,"make_tables","","",null,[[["cpumode",3]],["level1table",3]]],[5,"encode_enclists","","Compute encodings and doc comments for encoding lists in…",null,[[["hashmap",3],["uniqueseqtable",3],["targetisa",3],["level1table",3],["cpumode",3]]]],[5,"encode_level2_hashtables","","",null,[[["level1table",3],["hashmap",3],["vec",3]]]],[5,"emit_encoding_tables","","",null,[[["formatter",3],["targetisa",3],["shareddefinitions",3]]]],[5,"gen_isa","","",null,[[["formatter",3],["targetisa",3],["shareddefinitions",3]]]],[5,"generate","","",null,[[["targetisa",3],["shareddefinitions",3]],[["result",4],["error",3]]]],[0,"gen_inst","cranelift_codegen_meta","Generate instruction data (including opcodes, formats,…",null,null],[17,"TYPESET_LIMIT","cranelift_codegen_meta::gen_inst","",null,null],[5,"gen_formats","","Generate an instruction format enumeration.",null,[[["formatter",3]]]],[5,"gen_instruction_data","","Generate the InstructionData enum.",null,[[["formatter",3]]]],[5,"gen_arguments_method","","",null,[[["formatter",3]]]],[5,"gen_instruction_data_impl","","Generate the boring parts of the InstructionData…",null,[[["formatter",3]]]],[5,"gen_bool_accessor","","",null,[[["primarymap",3],["fn",8],["formatter",3]]]],[5,"gen_opcodes","","",null,[[["primarymap",3],["formatter",3]]]],[5,"gen_try_from","","",null,[[["primarymap",3],["formatter",3]]]],[5,"get_constraint","","Get the value type constraint for an SSA value operand,…",null,[[["uniquetable",3],["operand",3],["typevar",3],["option",4]],["string",3]]],[5,"gen_bitset","","",null,[[["intoiterator",8],["formatter",3]]]],[5,"iterable_to_string","","",null,[[["intoiterator",8]],["string",3]]],[5,"typeset_to_string","","",null,[[["typeset",3]],["string",3]]],[5,"gen_typesets_table","","Generate the table of ValueTypeSets described by type_sets.",null,[[["uniquetable",3],["formatter",3]]]],[5,"gen_type_constraints","","Generate value type constraints for all instructions.",null,[[["primarymap",3],["formatter",3]]]],[5,"gen_member_inits","","Emit member initializers for an instruction format.",null,[[["formatter",3],["instructionformat",3]]]],[5,"gen_format_constructor","","Emit a method for creating and inserting an instruction…",null,[[["formatter",3],["instructionformat",3]]]],[5,"gen_inst_builder","","Emit a method for generating the instruction `inst`.",null,[[["formatter",3],["rc",3],["instructionformat",3]]]],[5,"gen_builder","","Generate a Builder trait with methods for all instructions.",null,[[["primarymap",3],["formatter",3]]]],[5,"generate","","",null,[[["primarymap",3],["vec",3],["instructionformat",3]],[["result",4],["error",3]]]],[0,"gen_legalizer","cranelift_codegen_meta","Generate transformations to legalize instructions without…",null,null],[5,"unwrap_inst","cranelift_codegen_meta::gen_legalizer","Given a `Def` node, emit code that extracts all the…",null,[[["transform",3],["formatter",3]]]],[5,"build_derived_expr","","",null,[[["typevar",3]],["string",3]]],[5,"emit_runtime_typecheck","","Emit rust code for the given check.",null,[[["constraint",4],["uniquetable",3],["formatter",3]]]],[5,"is_value_split","","Determine if `node` represents one of the value splitting…",null,[[["def",3]]]],[5,"emit_dst_inst","","",null,[[["varpool",3],["defpool",3],["def",3],["formatter",3]]]],[5,"gen_transform","","Emit code for `transform`, assuming that the opcode of…",null,[[["uniquetable",3],["transform",3],["formatter",3]]]],[5,"gen_transform_group","","",null,[[["uniquetable",3],["transformgroups",3],["formatter",3],["transformgroup",3]]]],[5,"gen_isa","","Generate legalization functions for `isa` and add any…",null,[[["hashset",3],["targetisa",3],["transformgroups",3],["formatter",3]]]],[5,"generate","","Generate the legalizer files.",null,[[["transformgroups",3]],[["result",4],["error",3]]]],[0,"gen_registers","cranelift_codegen_meta","Generate the ISA-specific registers.",null,null],[5,"gen_regbank","cranelift_codegen_meta::gen_registers","",null,[[["formatter",3],["regbank",3]]]],[5,"gen_regclass","","",null,[[["formatter",3],["targetisa",3],["regclass",3]]]],[5,"gen_regbank_units","","",null,[[["regbank",3],["formatter",3]]]],[5,"gen_isa","","",null,[[["targetisa",3],["formatter",3]]]],[5,"generate","","",null,[[["targetisa",3]],[["result",4],["error",3]]]],[0,"gen_settings","cranelift_codegen_meta","Generate the ISA-specific settings.",null,null],[4,"ParentGroup","cranelift_codegen_meta::gen_settings","",null,null],[13,"None","","",119,null],[13,"Shared","","",119,null],[5,"gen_constructor","","Emits the constructor of the Flags structure.",null,[[["parentgroup",4],["formatter",3],["settinggroup",3]]]],[5,"gen_to_and_from_str","","Emit Display and FromStr implementations for enum settings.",null,[[["formatter",3]]]],[5,"gen_enum_types","","Emit real enum for the Enum settings.",null,[[["formatter",3],["settinggroup",3]]]],[5,"gen_getter","","Emit a getter function for `setting`.",null,[[["setting",3],["formatter",3]]]],[5,"gen_pred_getter","","",null,[[["predicate",3],["formatter",3],["settinggroup",3]]]],[5,"gen_getters","","Emits getters for each setting value.",null,[[["formatter",3],["settinggroup",3]]]],[4,"SettingOrPreset","","",null,null],[13,"Setting","","",120,null],[13,"Preset","","",120,null],[11,"name","","",120,[[]]],[5,"gen_descriptors","","Emits DESCRIPTORS, ENUMERATORS, HASH_TABLE and PRESETS.",null,[[["formatter",3],["settinggroup",3]]]],[5,"gen_template","","",null,[[["formatter",3],["settinggroup",3]]]],[5,"gen_display","","",null,[[["formatter",3],["settinggroup",3]]]],[5,"gen_group","","",null,[[["parentgroup",4],["formatter",3],["settinggroup",3]]]],[5,"generate","","",null,[[["parentgroup",4],["settinggroup",3]],[["result",4],["error",3]]]],[0,"gen_types","cranelift_codegen_meta","Generate sources with type info.",null,null],[5,"emit_type","cranelift_codegen_meta::gen_types","Emit a constant definition of a single value type.",null,[[["formatter",3],["valuetype",4]],[["result",4],["error",3]]]],[5,"emit_vectors","","Emit definition for all vector types with `bits` total size.",null,[[["formatter",3]],[["result",4],["error",3]]]],[5,"emit_types","","Emit types using the given formatter object.",null,[[["formatter",3]],[["result",4],["error",3]]]],[5,"generate","","Generate the types file.",null,[[],[["result",4],["error",3]]]],[0,"default_map","cranelift_codegen_meta","Trait for extending `HashMap` with `get_or_default`.",null,null],[8,"MapWithDefault","cranelift_codegen_meta::default_map","",null,null],[10,"get_or_default","","",121,[[]]],[0,"shared","cranelift_codegen_meta","Shared definitions for the Cranelift intermediate language.",null,null],[0,"entities","cranelift_codegen_meta::shared","",null,null],[5,"new","cranelift_codegen_meta::shared::entities","Small helper to initialize an OperandBuilder with the…",null,[[],["operandkind",3]]],[3,"EntityRefs","","",null,null],[12,"block","","A reference to a basic block in the same function. This is…",122,null],[12,"stack_slot","","A reference to a stack slot declared in the function…",122,null],[12,"global_value","","A reference to a global value.",122,null],[12,"sig_ref","","A reference to a function signature declared in the…",122,null],[12,"func_ref","","A reference to an external function declared in the…",122,null],[12,"jump_table","","A reference to a jump table declared in the function…",122,null],[12,"heap","","A reference to a heap declared in the function preamble.",122,null],[12,"table","","A reference to a table declared in the function preamble.",122,null],[12,"varargs","","A variable-sized list of value operands. Use for Block and…",122,null],[11,"new","","",122,[[]]],[0,"formats","cranelift_codegen_meta::shared","",null,null],[3,"Formats","cranelift_codegen_meta::shared::formats","",null,null],[12,"atomic_cas","","",123,null],[12,"atomic_rmw","","",123,null],[12,"binary","","",123,null],[12,"binary_imm8","","",123,null],[12,"binary_imm64","","",123,null],[12,"branch","","",123,null],[12,"branch_float","","",123,null],[12,"branch_icmp","","",123,null],[12,"branch_int","","",123,null],[12,"branch_table","","",123,null],[12,"branch_table_base","","",123,null],[12,"branch_table_entry","","",123,null],[12,"call","","",123,null],[12,"call_indirect","","",123,null],[12,"cond_trap","","",123,null],[12,"copy_special","","",123,null],[12,"copy_to_ssa","","",123,null],[12,"float_compare","","",123,null],[12,"float_cond","","",123,null],[12,"float_cond_trap","","",123,null],[12,"func_addr","","",123,null],[12,"heap_addr","","",123,null],[12,"indirect_jump","","",123,null],[12,"int_compare","","",123,null],[12,"int_compare_imm","","",123,null],[12,"int_cond","","",123,null],[12,"int_cond_trap","","",123,null],[12,"int_select","","",123,null],[12,"jump","","",123,null],[12,"load","","",123,null],[12,"load_complex","","",123,null],[12,"load_no_offset","","",123,null],[12,"multiary","","",123,null],[12,"nullary","","",123,null],[12,"reg_fill","","",123,null],[12,"reg_move","","",123,null],[12,"reg_spill","","",123,null],[12,"shuffle","","",123,null],[12,"stack_load","","",123,null],[12,"stack_store","","",123,null],[12,"store","","",123,null],[12,"store_complex","","",123,null],[12,"store_no_offset","","",123,null],[12,"table_addr","","",123,null],[12,"ternary","","",123,null],[12,"ternary_imm8","","",123,null],[12,"trap","","",123,null],[12,"unary","","",123,null],[12,"unary_bool","","",123,null],[12,"unary_const","","",123,null],[12,"unary_global_value","","",123,null],[12,"unary_ieee32","","",123,null],[12,"unary_ieee64","","",123,null],[12,"unary_imm","","",123,null],[11,"new","","",123,[[["entityrefs",3],["immediates",3]]]],[0,"immediates","cranelift_codegen_meta::shared","",null,null],[3,"Immediates","cranelift_codegen_meta::shared::immediates","",null,null],[12,"imm64","","A 64-bit immediate integer operand.",124,null],[12,"uimm8","","An unsigned 8-bit immediate integer operand.",124,null],[12,"uimm32","","An unsigned 32-bit immediate integer operand.",124,null],[12,"uimm128","","An unsigned 128-bit immediate integer operand.",124,null],[12,"pool_constant","","A constant stored in the constant pool.",124,null],[12,"offset32","","A 32-bit immediate signed offset.",124,null],[12,"ieee32","","A 32-bit immediate floating point operand.",124,null],[12,"ieee64","","A 64-bit immediate floating point operand.",124,null],[12,"boolean","","An immediate boolean operand.",124,null],[12,"intcc","","A condition code for comparing integer values.",124,null],[12,"floatcc","","A condition code for comparing floating point values.",124,null],[12,"memflags","","Flags for memory operations like `load` and `store`.",124,null],[12,"regunit","","A register unit in the current target ISA.",124,null],[12,"trapcode","","A trap code indicating the reason for trapping.",124,null],[12,"atomic_rmw_op","","A code indicating the arithmetic operation to perform in…",124,null],[5,"new_imm","","",null,[[],["operandkind",3]]],[5,"new_enum","","",null,[[["hashmap",3]],["operandkind",3]]],[11,"new","","",124,[[]]],[0,"instructions","cranelift_codegen_meta::shared","",null,null],[5,"define_control_flow","cranelift_codegen_meta::shared::instructions","",null,[[["entityrefs",3],["immediates",3],["instructiongroupbuilder",3],["formats",3]]]],[5,"define_simd_lane_access","","",null,[[["entityrefs",3],["immediates",3],["instructiongroupbuilder",3],["formats",3]]]],[5,"define_simd_arithmetic","","",null,[[["entityrefs",3],["immediates",3],["instructiongroupbuilder",3],["formats",3]]]],[5,"define","","",null,[[["entityrefs",3],["immediates",3],["formats",3],["primarymap",3]],["instructiongroup",3]]],[0,"legalize","cranelift_codegen_meta::shared","",null,null],[5,"define","cranelift_codegen_meta::shared::legalize","",null,[[["immediates",3],["instructiongroup",3]],["transformgroups",3]]],[0,"settings","cranelift_codegen_meta::shared","",null,null],[5,"define","cranelift_codegen_meta::shared::settings","",null,[[],["settinggroup",3]]],[0,"types","cranelift_codegen_meta::shared","This module predefines all the Cranelift scalar types.",null,null],[4,"Bool","cranelift_codegen_meta::shared::types","",null,null],[13,"B1","","1-bit bool.",125,null],[13,"B8","","8-bit bool.",125,null],[13,"B16","","16-bit bool.",125,null],[13,"B32","","32-bit bool.",125,null],[13,"B64","","64-bit bool.",125,null],[13,"B128","","128-bit bool.",125,null],[3,"BoolIterator","","This provides an iterator through all of the supported…",null,null],[12,"index","","",126,null],[11,"new","","",126,[[]]],[4,"Int","","",null,null],[13,"I8","","8-bit int.",127,null],[13,"I16","","16-bit int.",127,null],[13,"I32","","32-bit int.",127,null],[13,"I64","","64-bit int.",127,null],[13,"I128","","128-bit int.",127,null],[3,"IntIterator","","This provides an iterator through all of the supported int…",null,null],[12,"index","","",128,null],[11,"new","","",128,[[]]],[4,"Float","","",null,null],[13,"F32","","",129,null],[13,"F64","","",129,null],[3,"FloatIterator","","Iterator through the variants of the Float enum.",null,null],[12,"index","","",130,null],[11,"new","","",130,[[]]],[4,"Flag","","A type representing CPU flags.",null,null],[13,"IFlags","","CPU flags from an integer comparison.",131,null],[13,"FFlags","","CPU flags from a floating point comparison.",131,null],[3,"FlagIterator","","Iterator through the variants of the Flag enum.",null,null],[12,"index","","",132,null],[11,"new","","",132,[[]]],[4,"Reference","","",null,null],[13,"R32","","32-bit reference.",133,null],[13,"R64","","64-bit reference.",133,null],[3,"ReferenceIterator","","This provides an iterator through all of the supported…",null,null],[12,"index","","",134,null],[11,"new","","",134,[[]]],[3,"Definitions","cranelift_codegen_meta::shared","",null,null],[12,"settings","","",135,null],[12,"all_instructions","","",135,null],[12,"instructions","","",135,null],[12,"imm","","",135,null],[12,"formats","","",135,null],[12,"transform_groups","","",135,null],[12,"entities","","",135,null],[5,"define","","",null,[[],["definitions",3]]],[11,"verify_instruction_formats","","Verifies certain properties of formats.",135,[[],[["vec",3],["instructionformat",3]]]],[0,"unique_table","cranelift_codegen_meta","An index-accessed table implementation that avoids…",null,null],[3,"UniqueTable","cranelift_codegen_meta::unique_table","Collect items into the `table` list, removing duplicates.",null,null],[12,"table","","",136,null],[12,"map","","",136,null],[11,"new","","",136,[[]]],[11,"add","","",136,[[]]],[11,"len","","",136,[[]]],[11,"get","","",136,[[]]],[11,"iter","","",136,[[],["iter",3]]],[3,"UniqueSeqTable","","A table of sequences which tries to avoid common…",null,null],[12,"table","","",137,null],[11,"new","","",137,[[]]],[11,"add","","",137,[[]]],[11,"len","","",137,[[]]],[11,"iter","","",137,[[],["iter",3]]],[5,"find_subsequence","","Try to find the subsequence `sub` in the `whole` sequence.…",null,[[],["option",4]]],[5,"isa_from_arch","cranelift_codegen_meta","Generate an ISA from an architecture string (e.g. \\\"x86_64\\\").",null,[[],[["result",4],["string",3],["isa",4]]]],[5,"generate","","Generates all the Rust source files used in Cranelift from…",null,[[],[["result",4],["error",3]]]],[14,"predicate","","A macro that converts boolean settings into predicates to…",null,null],[14,"preset","","A macro that joins boolean settings into a list (e.g.…",null,null],[11,"from","cranelift_codegen_meta::cdsl::ast","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"key","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"key","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::cdsl::cpu_modes","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::cdsl::encodings","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::cdsl::formats","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::cdsl::instructions","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"key","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"key","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::cdsl::isa","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::cdsl::operands","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::cdsl::recipes","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"key","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::cdsl::regs","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"key","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"key","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::cdsl::settings","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::cdsl::type_inference","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::cdsl::types","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"to_string","","",84,[[],["string",3]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"into_iter","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"to_string","","",86,[[],["string",3]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"to_string","","",87,[[],["string",3]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"into_iter","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"to_string","","",89,[[],["string",3]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"into_iter","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::cdsl::typevar","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::cdsl::xform","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"key","","",100,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::srcgen","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::error","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_string","","",105,[[],["string",3]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_string","","",106,[[],["string",3]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::isa::riscv::encodings","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::isa::riscv::recipes","",108,[[]]],[11,"into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::isa::x86::encodings","",109,[[]]],[11,"into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::isa::x86::recipes","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::isa","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"to_string","","",113,[[],["string",3]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::gen_encodings","",114,[[]]],[11,"into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::gen_settings","",119,[[]]],[11,"into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::shared::entities","",122,[[]]],[11,"into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::shared::formats","",123,[[]]],[11,"into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::shared::immediates","",124,[[]]],[11,"into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::shared::types","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"into_iter","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"into_iter","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"into_iter","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"into_iter","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"into_iter","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::shared","",135,[[]]],[11,"into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","cranelift_codegen_meta::unique_table","",136,[[]]],[11,"into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"bind","cranelift_codegen_meta::cdsl::instructions","",37,[[],["boundinstruction",3]]],[11,"bind","","",45,[[],["boundinstruction",3]]],[11,"from","","",35,[[["int",4]]]],[11,"from","","",35,[[["bool",4]]]],[11,"from","","",35,[[["float",4]]]],[11,"from","","",35,[[["lanetype",4]]]],[11,"from","","",35,[[["reference",4]]]],[11,"from","","",35,[[["immediate",4]]]],[11,"from","cranelift_codegen_meta::cdsl::types","",83,[[["lanetype",4]]]],[11,"from","","",83,[[["referencetype",3]]]],[11,"from","","",83,[[["specialtype",4]]]],[11,"from","","",83,[[["vectortype",3]]]],[11,"from","","",84,[[["bool",4]]]],[11,"from","","",84,[[["float",4]]]],[11,"from","","",84,[[["int",4]]]],[11,"from","","",87,[[["flag",4]]]],[11,"from","","",89,[[["reference",4]]]],[11,"from","cranelift_codegen_meta::error","",105,[[["error",3]]]],[11,"into","cranelift_codegen_meta::cdsl::ast","",16,[[],["dummyexpr",4]]],[11,"into","","",6,[[],["dummyexpr",4]]],[11,"into","","",17,[[],["dummyexpr",4]]],[11,"into","cranelift_codegen_meta::cdsl::instructions","",41,[[],["instructionpredicate",3]]],[11,"into","","",37,[[],["instspec",4]]],[11,"into","cranelift_codegen_meta::cdsl::regs","",59,[[],["operandconstraint",4]]],[11,"into","cranelift_codegen_meta::cdsl::recipes","",50,[[],["operandconstraint",4]]],[11,"into","","",51,[[],["operandconstraint",4]]],[11,"into","cranelift_codegen_meta::cdsl::settings","",66,[[],["presettype",4]]],[11,"into","","",70,[[],["presettype",4]]],[11,"into","","",66,[[],["predicatenode",4]]],[11,"into","cranelift_codegen_meta::cdsl::types","",83,[[],["typevar",3]]],[11,"next","","",85,[[],["option",4]]],[11,"next","","",88,[[],["option",4]]],[11,"next","","",90,[[],["option",4]]],[11,"next","cranelift_codegen_meta::shared::types","",126,[[],["option",4]]],[11,"next","","",128,[[],["option",4]]],[11,"next","","",130,[[],["option",4]]],[11,"next","","",132,[[],["option",4]]],[11,"next","","",134,[[],["option",4]]],[11,"clone","cranelift_codegen_meta::cdsl::ast","",3,[[],["defindex",3]]],[11,"clone","","",4,[[],["block",3]]],[11,"clone","","",6,[[],["literal",4]]],[11,"clone","","",9,[[],["patternposition",4]]],[11,"clone","","",11,[[],["varindex",3]]],[11,"clone","","",16,[[],["dummyvar",3]]],[11,"clone","","",17,[[],["dummyconstant",3]]],[11,"clone","cranelift_codegen_meta::cdsl::instructions","",27,[[],["opcodenumber",3]]],[11,"clone","","",34,[[],["valuetypeorany",4]]],[11,"clone","","",36,[[],["immediate",4]]],[11,"clone","","",37,[[],["boundinstruction",3]]],[11,"clone","","",38,[[],["formatpredicatekind",4]]],[11,"clone","","",39,[[],["formatpredicatenode",3]]],[11,"clone","","",40,[[],["typepredicatenode",4]]],[11,"clone","","",41,[[],["instructionpredicatenode",4]]],[11,"clone","","",42,[[],["instructionpredicate",3]]],[11,"clone","","",43,[[],["instructionpredicatenumber",3]]],[11,"clone","cranelift_codegen_meta::cdsl::operands","",47,[[],["operand",3]]],[11,"clone","","",48,[[],["operandkindfields",4]]],[11,"clone","","",49,[[],["operandkind",3]]],[11,"clone","cranelift_codegen_meta::cdsl::recipes","",50,[[],["register",3]]],[11,"clone","","",51,[[],["stack",3]]],[11,"clone","","",52,[[],["branchrange",3]]],[11,"clone","","",53,[[],["operandconstraint",4]]],[11,"clone","","",54,[[],["encodingrecipe",3]]],[11,"clone","","",55,[[],["encodingrecipenumber",3]]],[11,"clone","","",56,[[],["encodingrecipebuilder",3]]],[11,"clone","cranelift_codegen_meta::cdsl::regs","",57,[[],["regbankindex",3]]],[11,"clone","","",59,[[],["regclassindex",3]]],[11,"clone","cranelift_codegen_meta::cdsl::settings","",66,[[],["boolsettingindex",3]]],[11,"clone","cranelift_codegen_meta::cdsl::type_inference","",81,[[],["typeenvrank",4]]],[11,"clone","cranelift_codegen_meta::cdsl::types","",83,[[],["valuetype",4]]],[11,"clone","","",84,[[],["lanetype",4]]],[11,"clone","","",86,[[],["vectortype",3]]],[11,"clone","","",87,[[],["specialtype",4]]],[11,"clone","","",89,[[],["referencetype",3]]],[11,"clone","cranelift_codegen_meta::cdsl::typevar","",92,[[],["typevar",3]]],[11,"clone","","",93,[[],["derivedfunc",4]]],[11,"clone","","",95,[[],["typeset",3]]],[11,"clone","cranelift_codegen_meta::cdsl::xform","",100,[[],["transformgroupindex",3]]],[11,"clone","cranelift_codegen_meta::isa::x86::recipes","",111,[[],["recipeprefixkind",4]]],[11,"clone","","",112,[[],["template",3]]],[11,"clone","cranelift_codegen_meta::isa","",113,[[],["isa",4]]],[11,"clone","cranelift_codegen_meta::shared::types","",125,[[],["bool",4]]],[11,"clone","","",127,[[],["int",4]]],[11,"clone","","",129,[[],["float",4]]],[11,"clone","","",131,[[],["flag",4]]],[11,"clone","","",133,[[],["reference",4]]],[11,"default","cranelift_codegen_meta::isa::x86::recipes","",111,[[]]],[11,"cmp","cranelift_codegen_meta::cdsl::ast","",3,[[["defindex",3]],["ordering",4]]],[11,"cmp","","",11,[[["varindex",3]],["ordering",4]]],[11,"cmp","cranelift_codegen_meta::cdsl::instructions","",27,[[["opcodenumber",3]],["ordering",4]]],[11,"cmp","","",43,[[["instructionpredicatenumber",3]],["ordering",4]]],[11,"cmp","cranelift_codegen_meta::cdsl::recipes","",55,[[["encodingrecipenumber",3]],["ordering",4]]],[11,"cmp","cranelift_codegen_meta::cdsl::regs","",57,[[["regbankindex",3]],["ordering",4]]],[11,"cmp","","",59,[[["regclassindex",3]],["ordering",4]]],[11,"cmp","cranelift_codegen_meta::cdsl::xform","",100,[[["transformgroupindex",3]],["ordering",4]]],[11,"eq","cranelift_codegen_meta::cdsl::ast","",3,[[["defindex",3]]]],[11,"ne","","",3,[[["defindex",3]]]],[11,"eq","","",11,[[["varindex",3]]]],[11,"ne","","",11,[[["varindex",3]]]],[11,"eq","cranelift_codegen_meta::cdsl::formats","",25,[[["formatstructure",3]]]],[11,"ne","","",25,[[["formatstructure",3]]]],[11,"eq","cranelift_codegen_meta::cdsl::instructions","",27,[[["opcodenumber",3]]]],[11,"ne","","",27,[[["opcodenumber",3]]]],[11,"eq","","",38,[[["formatpredicatekind",4]]]],[11,"ne","","",38,[[["formatpredicatekind",4]]]],[11,"eq","","",39,[[["formatpredicatenode",3]]]],[11,"ne","","",39,[[["formatpredicatenode",3]]]],[11,"eq","","",40,[[["typepredicatenode",4]]]],[11,"ne","","",40,[[["typepredicatenode",4]]]],[11,"eq","","",41,[[["instructionpredicatenode",4]]]],[11,"ne","","",41,[[["instructionpredicatenode",4]]]],[11,"eq","","",42,[[["instructionpredicate",3]]]],[11,"ne","","",42,[[["instructionpredicate",3]]]],[11,"eq","","",43,[[["instructionpredicatenumber",3]]]],[11,"ne","","",43,[[["instructionpredicatenumber",3]]]],[11,"eq","cranelift_codegen_meta::cdsl::recipes","",50,[[["register",3]]]],[11,"ne","","",50,[[["register",3]]]],[11,"eq","","",51,[[["stack",3]]]],[11,"ne","","",51,[[["stack",3]]]],[11,"eq","","",52,[[["branchrange",3]]]],[11,"ne","","",52,[[["branchrange",3]]]],[11,"eq","","",53,[[["operandconstraint",4]]]],[11,"ne","","",53,[[["operandconstraint",4]]]],[11,"eq","","",54,[[]]],[11,"eq","","",55,[[["encodingrecipenumber",3]]]],[11,"ne","","",55,[[["encodingrecipenumber",3]]]],[11,"eq","cranelift_codegen_meta::cdsl::regs","",57,[[["regbankindex",3]]]],[11,"ne","","",57,[[["regbankindex",3]]]],[11,"eq","","",59,[[["regclassindex",3]]]],[11,"ne","","",59,[[["regclassindex",3]]]],[11,"eq","cranelift_codegen_meta::cdsl::settings","",66,[[["boolsettingindex",3]]]],[11,"ne","","",66,[[["boolsettingindex",3]]]],[11,"eq","","",67,[[["boolsetting",3]]]],[11,"ne","","",67,[[["boolsetting",3]]]],[11,"eq","","",68,[[["specificsetting",4]]]],[11,"ne","","",68,[[["specificsetting",4]]]],[11,"eq","","",69,[[["setting",3]]]],[11,"ne","","",69,[[["setting",3]]]],[11,"eq","","",70,[[["presetindex",3]]]],[11,"ne","","",70,[[["presetindex",3]]]],[11,"eq","","",71,[[["presettype",4]]]],[11,"ne","","",71,[[["presettype",4]]]],[11,"eq","","",72,[[["preset",3]]]],[11,"ne","","",72,[[["preset",3]]]],[11,"eq","","",76,[[["predicatenode",4]]]],[11,"ne","","",76,[[["predicatenode",4]]]],[11,"eq","cranelift_codegen_meta::cdsl::type_inference","",80,[[["constraint",4]]]],[11,"ne","","",80,[[["constraint",4]]]],[11,"eq","cranelift_codegen_meta::cdsl::types","",83,[[["valuetype",4]]]],[11,"ne","","",83,[[["valuetype",4]]]],[11,"eq","","",84,[[["lanetype",4]]]],[11,"ne","","",84,[[["lanetype",4]]]],[11,"eq","","",86,[[["vectortype",3]]]],[11,"ne","","",86,[[["vectortype",3]]]],[11,"eq","","",87,[[["specialtype",4]]]],[11,"ne","","",87,[[["specialtype",4]]]],[11,"eq","","",89,[[["referencetype",3]]]],[11,"ne","","",89,[[["referencetype",3]]]],[11,"eq","cranelift_codegen_meta::cdsl::typevar","",92,[[["typevar",3]]]],[11,"eq","","",93,[[["derivedfunc",4]]]],[11,"eq","","",95,[[["typeset",3]]]],[11,"ne","","",95,[[["typeset",3]]]],[11,"eq","","",97,[[["interval",4]]]],[11,"ne","","",97,[[["interval",4]]]],[11,"eq","cranelift_codegen_meta::cdsl::xform","",100,[[["transformgroupindex",3]]]],[11,"ne","","",100,[[["transformgroupindex",3]]]],[11,"eq","cranelift_codegen_meta::isa::x86::recipes","",111,[[["recipeprefixkind",4]]]],[11,"eq","cranelift_codegen_meta::isa","",113,[[["isa",4]]]],[11,"eq","cranelift_codegen_meta::gen_settings","",120,[[["settingorpreset",4]]]],[11,"ne","","",120,[[["settingorpreset",4]]]],[11,"eq","cranelift_codegen_meta::shared::types","",125,[[["bool",4]]]],[11,"eq","","",127,[[["int",4]]]],[11,"eq","","",129,[[["float",4]]]],[11,"eq","","",131,[[["flag",4]]]],[11,"eq","","",133,[[["reference",4]]]],[11,"partial_cmp","cranelift_codegen_meta::cdsl::ast","",3,[[["defindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["defindex",3]]]],[11,"le","","",3,[[["defindex",3]]]],[11,"gt","","",3,[[["defindex",3]]]],[11,"ge","","",3,[[["defindex",3]]]],[11,"partial_cmp","","",11,[[["varindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",11,[[["varindex",3]]]],[11,"le","","",11,[[["varindex",3]]]],[11,"gt","","",11,[[["varindex",3]]]],[11,"ge","","",11,[[["varindex",3]]]],[11,"partial_cmp","cranelift_codegen_meta::cdsl::instructions","",27,[[["opcodenumber",3]],[["ordering",4],["option",4]]]],[11,"lt","","",27,[[["opcodenumber",3]]]],[11,"le","","",27,[[["opcodenumber",3]]]],[11,"gt","","",27,[[["opcodenumber",3]]]],[11,"ge","","",27,[[["opcodenumber",3]]]],[11,"partial_cmp","","",43,[[["instructionpredicatenumber",3]],[["ordering",4],["option",4]]]],[11,"lt","","",43,[[["instructionpredicatenumber",3]]]],[11,"le","","",43,[[["instructionpredicatenumber",3]]]],[11,"gt","","",43,[[["instructionpredicatenumber",3]]]],[11,"ge","","",43,[[["instructionpredicatenumber",3]]]],[11,"partial_cmp","cranelift_codegen_meta::cdsl::recipes","",55,[[["encodingrecipenumber",3]],[["ordering",4],["option",4]]]],[11,"lt","","",55,[[["encodingrecipenumber",3]]]],[11,"le","","",55,[[["encodingrecipenumber",3]]]],[11,"gt","","",55,[[["encodingrecipenumber",3]]]],[11,"ge","","",55,[[["encodingrecipenumber",3]]]],[11,"partial_cmp","cranelift_codegen_meta::cdsl::regs","",57,[[["regbankindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",57,[[["regbankindex",3]]]],[11,"le","","",57,[[["regbankindex",3]]]],[11,"gt","","",57,[[["regbankindex",3]]]],[11,"ge","","",57,[[["regbankindex",3]]]],[11,"partial_cmp","","",59,[[["regclassindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",59,[[["regclassindex",3]]]],[11,"le","","",59,[[["regclassindex",3]]]],[11,"gt","","",59,[[["regclassindex",3]]]],[11,"ge","","",59,[[["regclassindex",3]]]],[11,"partial_cmp","cranelift_codegen_meta::cdsl::xform","",100,[[["transformgroupindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",100,[[["transformgroupindex",3]]]],[11,"le","","",100,[[["transformgroupindex",3]]]],[11,"gt","","",100,[[["transformgroupindex",3]]]],[11,"ge","","",100,[[["transformgroupindex",3]]]],[11,"deref","cranelift_codegen_meta::cdsl::typevar","",92,[[]]],[11,"fmt","cranelift_codegen_meta::cdsl::ast","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen_meta::cdsl::formats","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen_meta::cdsl::instructions","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen_meta::cdsl::operands","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen_meta::cdsl::regs","",59,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen_meta::cdsl::type_inference","",80,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen_meta::cdsl::types","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen_meta::cdsl::typevar","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift_codegen_meta::error","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen_meta::shared::types","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen_meta::cdsl::formats","",24,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","cranelift_codegen_meta::cdsl::instructions","",32,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","cranelift_codegen_meta::cdsl::types","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen_meta::error","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen_meta::isa","",113,[[["formatter",3]],["result",6]]],[11,"hash","cranelift_codegen_meta::cdsl::ast","",3,[[]]],[11,"hash","","",11,[[]]],[11,"hash","cranelift_codegen_meta::cdsl::formats","",25,[[]]],[11,"hash","cranelift_codegen_meta::cdsl::instructions","",27,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","cranelift_codegen_meta::cdsl::recipes","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",55,[[]]],[11,"hash","cranelift_codegen_meta::cdsl::regs","",57,[[]]],[11,"hash","","",59,[[]]],[11,"hash","cranelift_codegen_meta::cdsl::settings","",66,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",68,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",70,[[]]],[11,"hash","","",71,[[]]],[11,"hash","","",72,[[]]],[11,"hash","","",76,[[]]],[11,"hash","cranelift_codegen_meta::cdsl::type_inference","",80,[[]]],[11,"hash","cranelift_codegen_meta::cdsl::types","",83,[[]]],[11,"hash","","",84,[[]]],[11,"hash","","",86,[[]]],[11,"hash","","",87,[[]]],[11,"hash","","",89,[[]]],[11,"hash","cranelift_codegen_meta::cdsl::typevar","",92,[[]]],[11,"hash","","",93,[[]]],[11,"hash","","",94,[[]]],[11,"hash","","",95,[[]]],[11,"hash","cranelift_codegen_meta::cdsl::xform","",100,[[]]],[11,"hash","cranelift_codegen_meta::gen_settings","",120,[[]]],[11,"hash","cranelift_codegen_meta::shared::types","",125,[[]]],[11,"hash","","",127,[[]]],[11,"hash","","",129,[[]]],[11,"hash","","",131,[[]]],[11,"hash","","",133,[[]]],[11,"new","cranelift_codegen_meta::cdsl::ast","",3,[[]]],[11,"index","","",3,[[]]],[11,"new","","",11,[[]]],[11,"index","","",11,[[]]],[11,"new","cranelift_codegen_meta::cdsl::instructions","",27,[[]]],[11,"index","","",27,[[]]],[11,"new","","",43,[[]]],[11,"index","","",43,[[]]],[11,"new","cranelift_codegen_meta::cdsl::recipes","",55,[[]]],[11,"index","","",55,[[]]],[11,"new","cranelift_codegen_meta::cdsl::regs","",57,[[]]],[11,"index","","",57,[[]]],[11,"new","","",59,[[]]],[11,"index","","",59,[[]]],[11,"new","cranelift_codegen_meta::cdsl::xform","",100,[[]]],[11,"index","","",100,[[]]],[11,"reserved_value","cranelift_codegen_meta::cdsl::ast","",3,[[],["defindex",3]]],[11,"is_reserved_value","","",3,[[]]],[11,"reserved_value","","",11,[[],["varindex",3]]],[11,"is_reserved_value","","",11,[[]]],[11,"reserved_value","cranelift_codegen_meta::cdsl::instructions","",27,[[],["opcodenumber",3]]],[11,"is_reserved_value","","",27,[[]]],[11,"reserved_value","","",43,[[],["instructionpredicatenumber",3]]],[11,"is_reserved_value","","",43,[[]]],[11,"reserved_value","cranelift_codegen_meta::cdsl::recipes","",55,[[],["encodingrecipenumber",3]]],[11,"is_reserved_value","","",55,[[]]],[11,"reserved_value","cranelift_codegen_meta::cdsl::regs","",57,[[],["regbankindex",3]]],[11,"is_reserved_value","","",57,[[]]],[11,"reserved_value","","",59,[[],["regclassindex",3]]],[11,"is_reserved_value","","",59,[[]]],[11,"reserved_value","cranelift_codegen_meta::cdsl::xform","",100,[[],["transformgroupindex",3]]],[11,"is_reserved_value","","",100,[[]]],[11,"key","cranelift_codegen_meta::cdsl::ast","",4,[[],["defindex",3]]]],"p":[[4,"Expr"],[3,"Def"],[3,"DefPool"],[3,"DefIndex"],[3,"Block"],[3,"BlockPool"],[4,"Literal"],[13,"Enumerator"],[13,"Bits"],[4,"PatternPosition"],[3,"Var"],[3,"VarIndex"],[3,"VarPool"],[3,"ConstPool"],[3,"Apply"],[4,"DummyExpr"],[3,"DummyVar"],[3,"DummyConstant"],[3,"DummyDef"],[3,"ExprBuilder"],[3,"CpuMode"],[3,"EncodingContent"],[3,"EncodingBuilder"],[3,"FormatField"],[3,"InstructionFormat"],[3,"FormatStructure"],[3,"InstructionFormatBuilder"],[3,"OpcodeNumber"],[3,"InstructionGroupBuilder"],[3,"InstructionGroup"],[8,"Bindable"],[3,"PolymorphicInfo"],[3,"InstructionContent"],[3,"InstructionBuilder"],[4,"ValueTypeOrAny"],[4,"BindParameter"],[4,"Immediate"],[3,"BoundInstruction"],[4,"FormatPredicateKind"],[3,"FormatPredicateNode"],[4,"TypePredicateNode"],[4,"InstructionPredicateNode"],[3,"InstructionPredicate"],[3,"InstructionPredicateNumber"],[3,"InstructionPredicateRegistry"],[4,"InstSpec"],[3,"TargetIsa"],[3,"Operand"],[4,"OperandKindFields"],[3,"OperandKind"],[3,"Register"],[3,"Stack"],[3,"BranchRange"],[4,"OperandConstraint"],[3,"EncodingRecipe"],[3,"EncodingRecipeNumber"],[3,"EncodingRecipeBuilder"],[3,"RegBankIndex"],[3,"RegBank"],[3,"RegClassIndex"],[3,"RegClass"],[4,"RegClassProto"],[3,"RegClassBuilder"],[3,"RegBankBuilder"],[3,"IsaRegsBuilder"],[3,"IsaRegs"],[3,"BoolSettingIndex"],[3,"BoolSetting"],[4,"SpecificSetting"],[3,"Setting"],[3,"PresetIndex"],[4,"PresetType"],[3,"Preset"],[3,"SettingGroup"],[4,"ProtoSpecificSetting"],[3,"ProtoSetting"],[4,"PredicateNode"],[3,"ProtoPredicate"],[3,"Predicate"],[3,"SettingGroupBuilder"],[4,"Constraint"],[4,"TypeEnvRank"],[3,"TypeEnvironment"],[4,"ValueType"],[4,"LaneType"],[3,"LaneTypeIterator"],[3,"VectorType"],[4,"SpecialType"],[3,"SpecialTypeIterator"],[3,"ReferenceType"],[3,"ReferenceTypeIterator"],[3,"TypeVarContent"],[3,"TypeVar"],[4,"DerivedFunc"],[3,"TypeVarParent"],[3,"TypeSet"],[3,"TypeSetBuilder"],[4,"Interval"],[3,"Transform"],[3,"TransformGroup"],[3,"TransformGroupIndex"],[3,"TransformGroupBuilder"],[3,"TransformGroups"],[3,"Formatter"],[3,"Match"],[3,"Error"],[4,"ErrorInner"],[3,"PerCpuModeEncodings"],[3,"RecipeGroup"],[3,"PerCpuModeEncodings"],[3,"RecipeGroup"],[4,"RecipePrefixKind"],[3,"Template"],[4,"Isa"],[3,"Level1Table"],[3,"Level2HashTableEntry"],[3,"Level2Table"],[3,"Encoder"],[3,"EncodingList"],[4,"ParentGroup"],[4,"SettingOrPreset"],[8,"MapWithDefault"],[3,"EntityRefs"],[3,"Formats"],[3,"Immediates"],[4,"Bool"],[3,"BoolIterator"],[4,"Int"],[3,"IntIterator"],[4,"Float"],[3,"FloatIterator"],[4,"Flag"],[3,"FlagIterator"],[4,"Reference"],[3,"ReferenceIterator"],[3,"Definitions"],[3,"UniqueTable"],[3,"UniqueSeqTable"]]},\
"cranelift_codegen_shared":{"doc":"This library contains code that is common to both the…","i":[[0,"condcodes","cranelift_codegen_shared","Condition codes for the Cranelift code generator.",null,null],[8,"CondCode","cranelift_codegen_shared::condcodes","Common traits of condition codes.",null,null],[10,"inverse","","Get the inverse condition code of `self`.",0,[[]]],[10,"reverse","","Get the reversed condition code for `self`.",0,[[]]],[4,"IntCC","","Condition code for comparing integers.",null,null],[13,"Equal","","`==`.",1,null],[13,"NotEqual","","`!=`.",1,null],[13,"SignedLessThan","","Signed `<`.",1,null],[13,"SignedGreaterThanOrEqual","","Signed `>=`.",1,null],[13,"SignedGreaterThan","","Signed `>`.",1,null],[13,"SignedLessThanOrEqual","","Signed `<=`.",1,null],[13,"UnsignedLessThan","","Unsigned `<`.",1,null],[13,"UnsignedGreaterThanOrEqual","","Unsigned `>=`.",1,null],[13,"UnsignedGreaterThan","","Unsigned `>`.",1,null],[13,"UnsignedLessThanOrEqual","","Unsigned `<=`.",1,null],[13,"Overflow","","Signed Overflow.",1,null],[13,"NotOverflow","","Signed No Overflow.",1,null],[11,"without_equal","","Get the corresponding IntCC with the equal component…",1,[[]]],[11,"unsigned","","Get the corresponding IntCC with the signed component…",1,[[]]],[11,"to_static_str","","Get the corresponding string condition code for the IntCC…",1,[[]]],[4,"FloatCC","","Condition code for comparing floating point numbers.",null,null],[13,"Ordered","","EQ | LT | GT",2,null],[13,"Unordered","","UN",2,null],[13,"Equal","","EQ",2,null],[13,"NotEqual","","The C \'!=\' operator is the inverse of \'==\': `NotEqual`. UN…",2,null],[13,"OrderedNotEqual","","LT | GT",2,null],[13,"UnorderedOrEqual","","UN | EQ",2,null],[13,"LessThan","","LT",2,null],[13,"LessThanOrEqual","","LT | EQ",2,null],[13,"GreaterThan","","GT",2,null],[13,"GreaterThanOrEqual","","GT | EQ",2,null],[13,"UnorderedOrLessThan","","UN | LT",2,null],[13,"UnorderedOrLessThanOrEqual","","UN | LT | EQ",2,null],[13,"UnorderedOrGreaterThan","","UN | GT",2,null],[13,"UnorderedOrGreaterThanOrEqual","","UN | GT | EQ",2,null],[0,"constant_hash","cranelift_codegen_shared","Build support for precomputed constant hash tables.",null,null],[5,"simple_hash","cranelift_codegen_shared::constant_hash","A primitive hash function for matching opcodes.",null,[[]]],[5,"generate_table","","Compute an open addressed, quadratically probed hash table…",null,[[["fn",8],["iterator",8]],[["vec",3],["option",4]]]],[0,"constants","cranelift_codegen_shared","This module contains constants that are shared between the…",null,null],[17,"LANE_BASE","cranelift_codegen_shared::constants","Start of the lane types.",null,null],[17,"REFERENCE_BASE","","Base for reference types.",null,null],[17,"VECTOR_BASE","","Start of the 2-lane vector types.",null,null],[17,"MAX_TRACKED_TOP_RCS","","Guaranteed maximum number of top-level register classes…",null,null],[17,"MAX_NUM_REG_CLASSES","","Guaranteed maximum number of register classes in any ISA.",null,null],[0,"isa","cranelift_codegen_shared","Shared ISA-specific definitions.",null,null],[0,"x86","cranelift_codegen_shared::isa","Shared x86-specific definitions.",null,null],[3,"EncodingBits","cranelift_codegen_shared::isa::x86","Named interface to the `u16` Encoding bits, representing…",null,null],[4,"OpcodePrefix","","Opcode prefix representation.",null,null],[13,"Op1","","",3,null],[13,"Mp1_66","","",3,null],[13,"Mp1_f3","","",3,null],[13,"Mp1_f2","","",3,null],[13,"Op2_0f","","",3,null],[13,"Mp2_66_0f","","",3,null],[13,"Mp2_f3_0f","","",3,null],[13,"Mp2_f2_0f","","",3,null],[13,"Op3_0f_38","","",3,null],[13,"Mp3_66_0f_38","","",3,null],[13,"Mp3_f3_0f_38","","",3,null],[13,"Mp3_f2_0f_38","","",3,null],[13,"Op3_0f_3a","","",3,null],[13,"Mp3_66_0f_3a","","",3,null],[13,"Mp3_f3_0f_3a","","",3,null],[13,"Mp3_f2_0f_3a","","",3,null],[17,"VERSION","cranelift_codegen_shared","Version number of this crate.",null,null],[11,"from","cranelift_codegen_shared::condcodes","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","cranelift_codegen_shared::isa::x86","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"inverse","cranelift_codegen_shared::condcodes","",1,[[]]],[11,"reverse","","",1,[[]]],[11,"inverse","","",2,[[]]],[11,"reverse","","",2,[[]]],[11,"from","cranelift_codegen_shared::isa::x86","",4,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"clone","cranelift_codegen_shared::condcodes","",1,[[],["intcc",4]]],[11,"clone","","",2,[[],["floatcc",4]]],[11,"clone","cranelift_codegen_shared::isa::x86","",4,[[],["encodingbits",3]]],[11,"clone","","",3,[[],["opcodeprefix",4]]],[11,"eq","cranelift_codegen_shared::condcodes","",1,[[["intcc",4]]]],[11,"eq","","",2,[[["floatcc",4]]]],[11,"eq","cranelift_codegen_shared::isa::x86","",4,[[["encodingbits",3]]]],[11,"ne","","",4,[[["encodingbits",3]]]],[11,"eq","","",3,[[["opcodeprefix",4]]]],[11,"fmt","cranelift_codegen_shared::condcodes","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen_shared::isa::x86","",3,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_codegen_shared::condcodes","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"from_str","","",1,[[],["result",4]]],[11,"from_str","","",2,[[],["result",4]]],[11,"new","cranelift_codegen_shared::isa::x86","Constructs a new EncodingBits from parts.",4,[[]]],[11,"with_rrr","","Returns a copy of the EncodingBits with the RRR bits set.",4,[[]]],[11,"with_rex_w","","Returns a copy of the EncodingBits with the REX.W bit set.",4,[[]]],[11,"bits","","Returns the raw bits.",4,[[]]],[11,"opcode_byte","","Instruction opcode byte, without the prefix.",4,[[]]],[11,"prefix","","Prefix kind for the instruction, as an enum.",4,[[],["opcodeprefix",4]]],[11,"pp","","Extracts the PP bits of the OpcodePrefix.",4,[[]]],[11,"mm","","Extracts the MM bits of the OpcodePrefix.",4,[[]]],[11,"rrr","","Bits for the ModR/M byte for certain opcodes.",4,[[]]],[11,"rex_w","","REX.W bit (or VEX.W/E).",4,[[]]],[11,"from_opcode","","Extracts the OpcodePrefix from the opcode.",3,[[]]],[11,"recipe_name_prefix","","Returns the recipe name prefix.",3,[[]]]],"p":[[8,"CondCode"],[4,"IntCC"],[4,"FloatCC"],[4,"OpcodePrefix"],[3,"EncodingBits"]]},\
"cranelift_entity":{"doc":"Array-based data structures using densely numbered entity…","i":[[0,"packed_option","cranelift_entity","Compact representation of `Option<T>` for types with a…",null,null],[8,"ReservedValue","cranelift_entity::packed_option","Types that have a reserved value which can\'t be created…",null,null],[10,"reserved_value","","Create an instance of the reserved value.",0,[[]]],[10,"is_reserved_value","","Checks whether value is the reserved one.",0,[[]]],[3,"PackedOption","","Packed representation of `Option<T>`.",null,null],[11,"is_none","","Returns `true` if the packed option is a `None` value.",1,[[]]],[11,"is_some","","Returns `true` if the packed option is a `Some` value.",1,[[]]],[11,"expand","","Expand the packed option into a normal `Option`.",1,[[],["option",4]]],[11,"map","","Maps a `PackedOption<T>` to `Option<U>` by applying a…",1,[[],["option",4]]],[11,"unwrap","","Unwrap a packed `Some` value or panic.",1,[[]]],[11,"expect","","Unwrap a packed `Some` value or panic.",1,[[]]],[11,"take","","Takes the value out of the packed option, leaving a `None`…",1,[[],["option",4]]],[8,"EntityRef","cranelift_entity","A type wrapping a small integer index should implement…",null,null],[10,"new","","Create a new entity reference from a small integer. This…",2,[[]]],[10,"index","","Get the index that was used to create this entity reference.",2,[[]]],[3,"BoxedSlice","","A slice mapping `K -> V` allocating dense entity references.",null,null],[3,"Iter","","Iterate over all keys in order.",null,null],[3,"IterMut","","Iterate over all keys in order.",null,null],[3,"Keys","","Iterate over all keys in order.",null,null],[3,"EntityList","","A small list of entity references allocated from a pool.",null,null],[3,"ListPool","","A memory pool for storing lists of `T`.",null,null],[3,"SecondaryMap","","A mapping `K -> V` for densely indexed entity references.",null,null],[3,"PrimaryMap","","A primary mapping `K -> V` allocating dense entity…",null,null],[3,"EntitySet","","A set of `K` for densely indexed entity references.",null,null],[3,"SparseMap","","A sparse mapping of entity references.",null,null],[8,"SparseMapValue","","Trait for extracting keys from values stored in a…",null,null],[10,"key","","Get the key of this sparse map value. This key is not…",3,[[]]],[6,"SparseSet","","A sparse set of entity references.",null,null],[14,"entity_impl","","Macro which provides the common implementation of a 32-bit…",null,null],[11,"from","cranelift_entity::packed_option","",1,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","cranelift_entity","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"into_iter","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"into_iter","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"into_iter","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","cranelift_entity::packed_option","Convert `t` into a packed `Some(x)`.",1,[[]]],[11,"from","","Convert an option into its packed equivalent.",1,[[["option",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_entity","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"eq","cranelift_entity::packed_option","",1,[[["packedoption",3]]]],[11,"ne","","",1,[[["packedoption",3]]]],[11,"eq","cranelift_entity","",10,[[]]],[11,"eq","","",11,[[["primarymap",3]]]],[11,"ne","","",11,[[["primarymap",3]]]],[11,"cmp","cranelift_entity::packed_option","",1,[[["packedoption",3]],["ordering",4]]],[11,"partial_cmp","","",1,[[["packedoption",3]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["packedoption",3]]]],[11,"le","","",1,[[["packedoption",3]]]],[11,"gt","","",1,[[["packedoption",3]]]],[11,"ge","","",1,[[["packedoption",3]]]],[11,"index","cranelift_entity","",4,[[]]],[11,"index","","",10,[[]]],[11,"index","","",11,[[]]],[11,"index_mut","","",4,[[]]],[11,"index_mut","","",10,[[]]],[11,"index_mut","","",11,[[]]],[11,"hash","cranelift_entity::packed_option","",1,[[]]],[11,"hash","cranelift_entity","",11,[[]]],[11,"from_iter","","",11,[[]]],[11,"into","cranelift_entity::packed_option","",1,[[],["option",4]]],[11,"next_back","cranelift_entity","",5,[[],["option",4]]],[11,"next_back","","",6,[[],["option",4]]],[11,"next_back","","",7,[[],["option",4]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"into_iter","","",11,[[]]],[11,"clone","cranelift_entity::packed_option","",1,[[],["packedoption",3]]],[11,"clone","cranelift_entity","",4,[[],["boxedslice",3]]],[11,"clone","","",8,[[],["entitylist",3]]],[11,"clone","","",9,[[],["listpool",3]]],[11,"clone","","",10,[[],["secondarymap",3]]],[11,"clone","","",11,[[],["primarymap",3]]],[11,"clone","","",12,[[],["entityset",3]]],[11,"default","cranelift_entity::packed_option","Create a default packed option representing `None`.",1,[[]]],[11,"default","cranelift_entity","",8,[[]]],[11,"default","","",10,[[],["secondarymap",3]]],[11,"default","","",11,[[],["primarymap",3]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"from_raw","","Create a new slice from a raw pointer. A safer way to…",4,[[]]],[11,"is_valid","","Check if `k` is a valid key in the map.",4,[[]]],[11,"get","","Get the element at `k` if it exists.",4,[[],["option",4]]],[11,"get_mut","","Get the element at `k` if it exists, mutable version.",4,[[],["option",4]]],[11,"is_empty","","Is this map completely empty?",4,[[]]],[11,"len","","Get the total number of entity references created.",4,[[]]],[11,"keys","","Iterate over all the keys in this map.",4,[[],["keys",3]]],[11,"values","","Iterate over all the values in this map.",4,[[],["iter",3]]],[11,"values_mut","","Iterate over all the values in this map, mutable edition.",4,[[],["itermut",3]]],[11,"iter","","Iterate over all the keys and values in this map.",4,[[],["iter",3]]],[11,"iter_mut","","Iterate over all the keys and values in this map, mutable…",4,[[],["itermut",3]]],[11,"last","","Returns the last element that was inserted in the map.",4,[[],["option",4]]],[11,"new","","Create an `Iter` iterator that visits the `PrimaryMap`…",5,[[["iter",3]]]],[11,"new","","Create an `IterMut` iterator that visits the `PrimaryMap`…",6,[[["itermut",3]]]],[11,"with_len","","Create a `Keys` iterator that visits `len` entities…",7,[[]]],[11,"new","","Create a new list pool.",9,[[]]],[11,"clear","","Clear the pool, forgetting about all lists that use it.",9,[[]]],[11,"new","","Create a new empty list.",8,[[]]],[11,"from_slice","","Create a new list with the contents initialized from a…",8,[[["listpool",3]]]],[11,"is_empty","","Returns `true` if the list has a length of 0.",8,[[]]],[11,"len","","Get the number of elements in the list.",8,[[["listpool",3]]]],[11,"is_valid","","Returns `true` if the list is valid",8,[[["listpool",3]]]],[11,"as_slice","","Get the list as a slice.",8,[[["listpool",3]]]],[11,"get","","Get a single element from the list.",8,[[["listpool",3]],["option",4]]],[11,"first","","Get the first element from the list.",8,[[["listpool",3]],["option",4]]],[11,"as_mut_slice","","Get the list as a mutable slice.",8,[[["listpool",3]]]],[11,"get_mut","","Get a mutable reference to a single element from the list.",8,[[["listpool",3]],["option",4]]],[11,"clear","","Removes all elements from the list.",8,[[["listpool",3]]]],[11,"take","","Take all elements from this list and return them as a new…",8,[[]]],[11,"push","","Appends an element to the back of the list. Returns the…",8,[[["listpool",3]]]],[11,"extend","","Appends multiple elements to the back of the list.",8,[[["listpool",3]]]],[11,"insert","","Inserts an element as position `index` in the list,…",8,[[["listpool",3]]]],[11,"remove","","Removes the element at position `index` from the list.…",8,[[["listpool",3]]]],[11,"swap_remove","","Removes the element at `index` in constant time by…",8,[[["listpool",3]]]],[11,"grow_at","","Grow the list by inserting `count` elements at `index`.",8,[[["listpool",3]]]],[11,"new","","Create a new empty map.",10,[[]]],[11,"with_capacity","","Create a new, empty map with the specified capacity.",10,[[]]],[11,"with_default","","Create a new empty map with a specified default value.",10,[[]]],[11,"capacity","","Returns the number of elements the map can hold without…",10,[[]]],[11,"get","","Get the element at `k` if it exists.",10,[[],["option",4]]],[11,"is_empty","","Is this map completely empty?",10,[[]]],[11,"clear","","Remove all entries from this map.",10,[[]]],[11,"iter","","Iterate over all the keys and values in this map.",10,[[],["iter",3]]],[11,"iter_mut","","Iterate over all the keys and values in this map, mutable…",10,[[],["itermut",3]]],[11,"keys","","Iterate over all the keys in this map.",10,[[],["keys",3]]],[11,"values","","Iterate over all the values in this map.",10,[[],["iter",3]]],[11,"values_mut","","Iterate over all the values in this map, mutable edition.",10,[[],["itermut",3]]],[11,"resize","","Resize the map to have `n` entries by adding default…",10,[[]]],[11,"new","","Create a new empty map.",11,[[]]],[11,"with_capacity","","Create a new empty map with the given capacity.",11,[[]]],[11,"is_valid","","Check if `k` is a valid key in the map.",11,[[]]],[11,"get","","Get the element at `k` if it exists.",11,[[],["option",4]]],[11,"get_mut","","Get the element at `k` if it exists, mutable version.",11,[[],["option",4]]],[11,"is_empty","","Is this map completely empty?",11,[[]]],[11,"len","","Get the total number of entity references created.",11,[[]]],[11,"keys","","Iterate over all the keys in this map.",11,[[],["keys",3]]],[11,"values","","Iterate over all the values in this map.",11,[[],["iter",3]]],[11,"values_mut","","Iterate over all the values in this map, mutable edition.",11,[[],["itermut",3]]],[11,"iter","","Iterate over all the keys and values in this map.",11,[[],["iter",3]]],[11,"iter_mut","","Iterate over all the keys and values in this map, mutable…",11,[[],["itermut",3]]],[11,"clear","","Remove all entries from this map.",11,[[]]],[11,"next_key","","Get the key that will be assigned to the next pushed value.",11,[[]]],[11,"push","","Append `v` to the mapping, assigning a new key which is…",11,[[]]],[11,"last","","Returns the last element that was inserted in the map.",11,[[],["option",4]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",11,[[]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional`…",11,[[]]],[11,"shrink_to_fit","","Shrinks the capacity of the `PrimaryMap` as much as…",11,[[]]],[11,"into_boxed_slice","","Consumes this `PrimaryMap` and produces a `BoxedSlice`.",11,[[],["boxedslice",3]]],[11,"new","","Create a new empty set.",12,[[]]],[11,"with_capacity","","Creates a new empty set with the specified capacity.",12,[[]]],[11,"contains","","Get the element at `k` if it exists.",12,[[]]],[11,"is_empty","","Is this set completely empty?",12,[[]]],[11,"cardinality","","Returns the cardinality of the set. More precisely, it…",12,[[]]],[11,"clear","","Remove all entries from this set.",12,[[]]],[11,"keys","","Iterate over all the keys in this set.",12,[[],["keys",3]]],[11,"resize","","Resize the set to have `n` entries by adding default…",12,[[]]],[11,"insert","","Insert the element at `k`.",12,[[]]],[11,"pop","","Removes and returns the entity from the set if it exists.",12,[[],["option",4]]],[11,"new","","Create a new empty mapping.",13,[[]]],[11,"len","","Returns the number of elements in the map.",13,[[]]],[11,"is_empty","","Returns true is the map contains no elements.",13,[[]]],[11,"clear","","Remove all elements from the mapping.",13,[[]]],[11,"get","","Returns a reference to the value corresponding to the key.",13,[[],["option",4]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",13,[[],["option",4]]],[11,"contains_key","","Return `true` if the map contains a value corresponding to…",13,[[]]],[11,"insert","","Insert a value into the map.",13,[[],["option",4]]],[11,"remove","","Remove a value from the map and return it.",13,[[],["option",4]]],[11,"pop","","Remove the last value from the map.",13,[[],["option",4]]],[11,"values","","Get an iterator over the values in the map.",13,[[],["iter",3]]],[11,"as_slice","","Get the values as a slice.",13,[[]]]],"p":[[8,"ReservedValue"],[3,"PackedOption"],[8,"EntityRef"],[8,"SparseMapValue"],[3,"BoxedSlice"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"EntityList"],[3,"ListPool"],[3,"SecondaryMap"],[3,"PrimaryMap"],[3,"EntitySet"],[3,"SparseMap"]]},\
"cranelift_filetests":{"doc":"File tests.","i":[[3,"SingleFunctionCompiler","cranelift_filetests","Compile a single function.",null,null],[5,"run","","Main entry point for `clif-util test`.",null,[[],[["duration",3],["result",6]]]],[5,"run_passes","","Used for \'pass\' subcommand. Commands are interpreted as…",null,[[],[["duration",3],["result",6]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"new","","Build a [SingleFunctionCompiler] from a [TargetIsa]. For…",0,[[["box",3],["targetisa",8]]]],[11,"with_host_isa","","Build a [SingleFunctionCompiler] using the host machine\'s…",0,[[["flags",3]]]],[11,"with_default_host_isa","","Build a [SingleFunctionCompiler] using the host machine\'s…",0,[[]]],[11,"compile","","Compile the passed [Function] to a `CompiledFunction`.…",0,[[["function",3]],[["compiledfunction",3],["result",4],["compilationerror",4]]]]],"p":[[3,"SingleFunctionCompiler"]]},\
"cranelift_frontend":{"doc":"Cranelift IR builder library.","i":[[3,"FunctionBuilder","cranelift_frontend","Temporary object used to build a single Cranelift IR…",null,null],[12,"func","","The function currently being built. This field is public…",0,null],[3,"FunctionBuilderContext","","Structure used for translating a series of functions into…",null,null],[3,"Switch","","Unlike with `br_table`, `Switch` cases may be sparse or…",null,null],[3,"Variable","","! An opaque reference to a variable.",null,null],[17,"VERSION","","Version number of this crate.",null,null],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"key","","",3,[[]]],[11,"equivalent","","",3,[[]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"eq","","",3,[[["variable",3]]]],[11,"ne","","",3,[[["variable",3]]]],[11,"clone","","",3,[[],["variable",3]]],[11,"default","","",2,[[],["switch",3]]],[11,"new","","",3,[[]]],[11,"index","","",3,[[]]],[11,"new","","Creates a FunctionBuilderContext structure. The structure…",1,[[]]],[11,"new","","Creates a new FunctionBuilder structure that will operate…",0,[[["functionbuildercontext",3],["function",3]]]],[11,"current_block","","Get the block that this builder is currently at.",0,[[],[["option",4],["block",3]]]],[11,"set_srcloc","","Set the source location that should be assigned to all new…",0,[[["sourceloc",3]]]],[11,"create_block","","Creates a new `Block` and returns its reference.",0,[[],["block",3]]],[11,"insert_block_after","","Insert `block` in the layout after the existing block…",0,[[["block",3]]]],[11,"switch_to_block","","After the call to this function, new instructions will be…",0,[[["block",3]]]],[11,"seal_block","","Declares that all the predecessors of this block are known.",0,[[["block",3]]]],[11,"seal_all_blocks","","Effectively calls seal_block on all unsealed blocks in the…",0,[[]]],[11,"declare_var","","In order to use a variable in a `use_var`, you need to…",0,[[["type",3],["variable",3]]]],[11,"use_var","","Returns the Cranelift IR value corresponding to the…",0,[[["variable",3]],["value",3]]],[11,"def_var","","Register a new definition of a user variable. The type of…",0,[[["value",3],["variable",3]]]],[11,"set_val_label","","Set label for Value",0,[[["value",3],["valuelabel",3]]]],[11,"create_jump_table","","Creates a jump table in the function, to be used by…",0,[[["jumptabledata",3]],["jumptable",3]]],[11,"create_stack_slot","","Creates a stack slot in the function, to be used by…",0,[[["stackslotdata",3]],["stackslot",3]]],[11,"import_signature","","Adds a signature which can later be used to declare an…",0,[[["signature",3]],["sigref",3]]],[11,"import_function","","Declare an external function import.",0,[[["extfuncdata",3]],["funcref",3]]],[11,"create_global_value","","Declares a global value accessible to the function.",0,[[["globalvaluedata",4]],["globalvalue",3]]],[11,"create_heap","","Declares a heap accessible to the function.",0,[[["heapdata",3]],["heap",3]]],[11,"ins","","Returns an object with the `InstBuilder` trait that allows…",0,[[],["funcinstbuilder",3]]],[11,"ensure_inserted_block","","Make sure that the current block is inserted in the layout.",0,[[]]],[11,"cursor","","Returns a `FuncCursor` pointed at the current position…",0,[[],["funccursor",3]]],[11,"append_block_params_for_function_params","","Append parameters to the given `Block` corresponding to…",0,[[["block",3]]]],[11,"append_block_params_for_function_returns","","Append parameters to the given `Block` corresponding to…",0,[[["block",3]]]],[11,"finalize","","Declare that translation of the current function is…",0,[[]]],[11,"block_params","","Retrieves all the parameters for a `Block` currently…",0,[[["block",3]]]],[11,"signature","","Retrieves the signature with reference `sigref` previously…",0,[[["sigref",3]],[["signature",3],["option",4]]]],[11,"append_block_param","","Creates a parameter for a specific `Block` by appending it…",0,[[["block",3],["type",3]],["value",3]]],[11,"inst_results","","Returns the result values of an instruction.",0,[[["inst",3]]]],[11,"change_jump_destination","","Changes the destination of a jump instruction after…",0,[[["inst",3],["block",3]]]],[11,"is_unreachable","","Returns `true` if and only if the current `Block` is…",0,[[]]],[11,"is_pristine","","Returns `true` if and only if no instructions have been…",0,[[]]],[11,"is_filled","","Returns `true` if and only if a terminator instruction has…",0,[[]]],[11,"display","","Returns a displayable object for the function as it is.",0,[[["option",4],["into",8]],["displayfunction",3]]],[11,"call_memcpy","","Calls libc.memcpy",0,[[["value",3],["targetfrontendconfig",3]]]],[11,"emit_small_memory_copy","","Optimised memcpy or memmove for small copies.",0,[[["value",3],["targetfrontendconfig",3]]]],[11,"call_memset","","Calls libc.memset",0,[[["value",3],["targetfrontendconfig",3]]]],[11,"emit_small_memset","","Calls libc.memset",0,[[["value",3],["targetfrontendconfig",3]]]],[11,"call_memmove","","Calls libc.memmove",0,[[["value",3],["targetfrontendconfig",3]]]],[11,"new","","Create a new empty switch",2,[[]]],[11,"set_entry","","Set a switch entry",2,[[["block",3]]]],[11,"entries","","Get a reference to all existing entries",2,[[],["hashmap",3]]],[11,"emit","","Build the switch",2,[[["value",3],["functionbuilder",3],["block",3]]]],[11,"with_u32","","Create a new Variable with the given index.",3,[[]]]],"p":[[3,"FunctionBuilder"],[3,"FunctionBuilderContext"],[3,"Switch"],[3,"Variable"]]},\
"cranelift_interpreter":{"doc":"Cranelift IR interpreter.","i":[[0,"environment","cranelift_interpreter","Implements the function environment (e.g. a…",null,null],[3,"FunctionStore","cranelift_interpreter::environment","A function store contains all of the functions that are…",null,null],[3,"FuncIndex","","An opaque reference to a `Function` stored in the…",null,null],[11,"from_u32","","Create a new instance from a `u32`.",0,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",0,[[]]],[11,"add","","Add a function by name.",1,[[["string",3],["function",3]]]],[11,"index_of","","Retrieve the index of a function in the function store by…",1,[[],[["option",4],["funcindex",3]]]],[11,"get_by_index","","Retrieve a function by its index in the function store.",1,[[["funcindex",3]],[["option",4],["function",3]]]],[11,"get_by_name","","Retrieve a function by its name.",1,[[],[["option",4],["function",3]]]],[11,"get_from_func_ref","","Retrieve a function from a [FuncRef] within a [Function].…",1,[[["function",3],["funcref",3]],[["option",4],["function",3]]]],[0,"frame","cranelift_interpreter","Implements a call frame (activation record) for the…",null,null],[3,"Frame","cranelift_interpreter::frame","Holds the mutable elements of an interpreted function call.",null,null],[11,"new","","Construct a new [Frame] for a function. This allocates a…",2,[[["function",3]]]],[11,"get","","Retrieve the actual value associated with an SSA reference.",2,[[["valueref",3]],["datavalue",4]]],[11,"get_all","","Retrieve multiple SSA references; see `get`.",2,[[],[["datavalue",4],["vec",3]]]],[11,"set","","Assign `value` to the SSA reference `name`.",2,[[["datavalue",4],["valueref",3]],[["datavalue",4],["option",4]]]],[11,"set_all","","Assign to multiple SSA references; see `set`.",2,[[["datavalue",4],["vec",3]]]],[11,"rename","","Rename all of the SSA references in `old_names` to those…",2,[[]]],[11,"entries_mut","","Accessor for the current entries in the frame.",2,[[]]],[0,"instruction","cranelift_interpreter","The [InstructionContext] trait describes a Cranelift…",null,null],[8,"InstructionContext","cranelift_interpreter::instruction","Exposes the necessary information for understanding a…",null,null],[10,"data","","",3,[[],["instructiondata",4]]],[10,"args","","",3,[[]]],[10,"type_of","","",3,[[["value",3]],[["option",4],["type",3]]]],[10,"controlling_type","","",3,[[],[["option",4],["type",3]]]],[3,"DfgInstructionContext","","Since [InstructionContext] is likely used within a…",null,null],[11,"new","","",4,[[["dataflowgraph",3],["inst",3]]]],[0,"interpreter","cranelift_interpreter","Cranelift IR interpreter.",null,null],[3,"Interpreter","cranelift_interpreter::interpreter","The Cranelift interpreter; this contains some high-level…",null,null],[11,"new","","",5,[[["interpreterstate",3]]]],[11,"call_by_name","","Call a function by name; this is a helpful proxy for…",5,[[],[["result",4],["controlflow",4],["interpretererror",4]]]],[11,"call_by_index","","Call a function by its index in the [FunctionStore]; this…",5,[[["funcindex",3]],[["result",4],["controlflow",4],["interpretererror",4]]]],[4,"InterpreterError","","The ways interpretation can fail.",null,null],[13,"StepError","","",6,null],[13,"Unreachable","","",6,null],[13,"UnknownFunctionIndex","","",6,null],[13,"UnknownFunctionName","","",6,null],[13,"ValueError","","",6,null],[3,"InterpreterState","","Maintains the [Interpreter]\'s state, implementing the…",null,null],[12,"functions","","",7,null],[12,"frame_stack","","",7,null],[12,"heap","","",7,null],[12,"iflags","","",7,null],[12,"fflags","","",7,null],[11,"with_function_store","","",7,[[["functionstore",3]]]],[0,"state","cranelift_interpreter","Cranelift instructions modify the state of the machine;…",null,null],[8,"State","cranelift_interpreter::state","This trait manages the state necessary to interpret a…",null,null],[10,"get_function","","Retrieve a reference to a [Function].",8,[[["funcref",3]],[["option",4],["function",3]]]],[10,"push_frame","","Record that an interpreter has called into a new [Function].",8,[[["function",3]]]],[10,"pop_frame","","Record that an interpreter has returned from a called…",8,[[]]],[10,"get_value","","Retrieve a value `V` by its value reference from the…",8,[[["value",3]],["option",4]]],[10,"set_value","","Assign a value `V` to its value reference in the virtual…",8,[[["value",3]],["option",4]]],[11,"collect_values","","Collect a list of values `V` by their value references;…",8,[[],[["smallvec",3],["value",3],["result",4]]]],[10,"has_iflag","","Check if an [IntCC] flag has been set.",8,[[["intcc",4]]]],[10,"set_iflag","","Set an [IntCC] flag.",8,[[["intcc",4]]]],[10,"has_fflag","","Check if a [FloatCC] flag has been set.",8,[[["floatcc",4]]]],[10,"set_fflag","","Set a [FloatCC] flag.",8,[[["floatcc",4]]]],[10,"clear_flags","","Clear all [IntCC] and [FloatCC] flags.",8,[[]]],[10,"load_heap","","Retrieve a value `V` from the heap at the given `offset`;…",8,[[["type",3]],[["result",4],["memoryerror",4]]]],[10,"store_heap","","Store a value `V` into the heap at the given `offset`. The…",8,[[],[["result",4],["memoryerror",4]]]],[10,"load_stack","","Retrieve a value `V` from the stack at the given `offset`;…",8,[[["type",3]],[["result",4],["memoryerror",4]]]],[10,"store_stack","","Store a value `V` on the stack at the given `offset`. The…",8,[[],[["result",4],["memoryerror",4]]]],[4,"MemoryError","","",null,null],[13,"InsufficientMemory","","",9,null],[3,"ImmutableRegisterState","","This dummy state allows interpretation over an immutable…",null,null],[11,"new","","",10,[[["primarymap",3]]]],[0,"step","cranelift_interpreter","The [step] function interprets a single Cranelift…",null,null],[5,"step","cranelift_interpreter::step","Interpret a single Cranelift instruction. Note that…",null,[[["state",8]],[["controlflow",4],["result",4],["steperror",4]]]],[4,"StepError","","",null,null],[13,"UnknownValue","","",11,null],[13,"UnknownFunction","","",11,null],[13,"ValueError","","",11,null],[13,"MemoryError","","",11,null],[4,"ControlFlow","","Enumerate the ways in which the control flow can change…",null,null],[13,"Assign","","Return one or more values from an instruction to be…",12,null],[13,"Continue","","Continue to the next available instruction, e.g.: in…",12,null],[13,"ContinueAt","","Jump to another block with the given parameters, e.g.: in…",12,null],[13,"Call","","Indicates a call the given [Function] with the supplied…",12,null],[13,"Return","","Return from the current function with the given…",12,null],[13,"Trap","","Stop with a program-generated trap; note that these are…",12,null],[11,"unwrap_return","","For convenience, we can unwrap the [ControlFlow] state…",12,[[],["vec",3]]],[4,"CraneliftTrap","","",null,null],[13,"User","","",13,null],[13,"Debug","","",13,null],[13,"Resumable","","",13,null],[0,"value","cranelift_interpreter","The [Value] trait describes what operations can be…",null,null],[6,"ValueResult","cranelift_interpreter::value","",null,null],[8,"Value","","",null,null],[10,"ty","","",14,[[],["type",3]]],[10,"int","","",14,[[["type",3]],["valueresult",6]]],[10,"into_int","","",14,[[],["valueresult",6]]],[10,"float","","",14,[[["type",3]],["valueresult",6]]],[10,"into_float","","",14,[[],["valueresult",6]]],[10,"is_nan","","",14,[[],["valueresult",6]]],[10,"bool","","",14,[[["type",3]],["valueresult",6]]],[10,"into_bool","","",14,[[],["valueresult",6]]],[10,"vector","","",14,[[["type",3]],["valueresult",6]]],[10,"convert","","",14,[[["valueconversionkind",4]],["valueresult",6]]],[10,"eq","","",14,[[],["valueresult",6]]],[10,"gt","","",14,[[],["valueresult",6]]],[11,"ge","","",14,[[],["valueresult",6]]],[11,"lt","","",14,[[],["valueresult",6]]],[11,"le","","",14,[[],["valueresult",6]]],[10,"uno","","",14,[[],["valueresult",6]]],[10,"add","","",14,[[],["valueresult",6]]],[10,"sub","","",14,[[],["valueresult",6]]],[10,"mul","","",14,[[],["valueresult",6]]],[10,"div","","",14,[[],["valueresult",6]]],[10,"rem","","",14,[[],["valueresult",6]]],[10,"shl","","",14,[[],["valueresult",6]]],[10,"ushr","","",14,[[],["valueresult",6]]],[10,"ishr","","",14,[[],["valueresult",6]]],[10,"rotl","","",14,[[],["valueresult",6]]],[10,"rotr","","",14,[[],["valueresult",6]]],[10,"and","","",14,[[],["valueresult",6]]],[10,"or","","",14,[[],["valueresult",6]]],[10,"xor","","",14,[[],["valueresult",6]]],[10,"not","","",14,[[],["valueresult",6]]],[4,"ValueError","","",null,null],[13,"InvalidType","","",15,null],[13,"InvalidValue","","",15,null],[13,"InvalidInteger","","",15,null],[4,"ValueTypeClass","","",null,null],[13,"Integer","","",16,null],[13,"Boolean","","",16,null],[13,"Float","","",16,null],[4,"ValueConversionKind","","",null,null],[13,"Exact","","Throw a [ValueError] if an exact conversion to [Type] is…",17,null],[13,"Truncate","","Truncate the value to fit into the specified [Type]; e.g.…",17,null],[13,"SignExtend","","Convert to a larger integer type, extending the sign bit;…",17,null],[13,"ZeroExtend","","Convert to a larger integer type, extending with zeroes;…",17,null],[13,"ToUnsigned","","Convert a signed integer to its unsigned value of the same…",17,null],[13,"ToSigned","","Convert an unsigned integer to its signed value of the…",17,null],[13,"RoundNearestEven","","Convert a floating point number by rounding to the nearest…",17,null],[11,"from","cranelift_interpreter::environment","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"key","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"from","cranelift_interpreter::frame","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","cranelift_interpreter::instruction","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","cranelift_interpreter::interpreter","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","cranelift_interpreter::state","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","cranelift_interpreter::step","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","cranelift_interpreter::value","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"data","cranelift_interpreter::instruction","",4,[[],["instructiondata",4]]],[11,"args","","",4,[[]]],[11,"type_of","","",4,[[["value",3]],[["option",4],["type",3]]]],[11,"controlling_type","","",4,[[],[["option",4],["type",3]]]],[11,"get_function","cranelift_interpreter::interpreter","",7,[[["funcref",3]],[["option",4],["function",3]]]],[11,"push_frame","","",7,[[["function",3]]]],[11,"pop_frame","","",7,[[]]],[11,"get_value","","",7,[[["valueref",3]],[["datavalue",4],["option",4]]]],[11,"set_value","","",7,[[["datavalue",4],["valueref",3]],[["datavalue",4],["option",4]]]],[11,"has_iflag","","",7,[[["intcc",4]]]],[11,"has_fflag","","",7,[[["floatcc",4]]]],[11,"set_iflag","","",7,[[["intcc",4]]]],[11,"set_fflag","","",7,[[["floatcc",4]]]],[11,"clear_flags","","",7,[[]]],[11,"load_heap","","",7,[[["type",3]],[["datavalue",4],["result",4],["memoryerror",4]]]],[11,"store_heap","","",7,[[["datavalue",4]],[["result",4],["memoryerror",4]]]],[11,"load_stack","","",7,[[["type",3]],[["datavalue",4],["result",4],["memoryerror",4]]]],[11,"store_stack","","",7,[[["datavalue",4]],[["result",4],["memoryerror",4]]]],[11,"get_function","cranelift_interpreter::state","",10,[[["funcref",3]],[["option",4],["function",3]]]],[11,"push_frame","","",10,[[["function",3]]]],[11,"pop_frame","","",10,[[]]],[11,"get_value","","",10,[[["value",3]],["option",4]]],[11,"set_value","","",10,[[["value",3]],["option",4]]],[11,"has_iflag","","",10,[[["intcc",4]]]],[11,"has_fflag","","",10,[[["floatcc",4]]]],[11,"set_iflag","","",10,[[["intcc",4]]]],[11,"set_fflag","","",10,[[["floatcc",4]]]],[11,"clear_flags","","",10,[[]]],[11,"load_heap","","",10,[[["type",3]],[["result",4],["memoryerror",4]]]],[11,"store_heap","","",10,[[],[["result",4],["memoryerror",4]]]],[11,"load_stack","","",10,[[["type",3]],[["result",4],["memoryerror",4]]]],[11,"store_stack","","",10,[[],[["result",4],["memoryerror",4]]]],[11,"from","cranelift_interpreter::environment","",1,[[["function",3]]]],[11,"from","cranelift_interpreter::interpreter","",6,[[["steperror",4]]]],[11,"from","","",6,[[["valueerror",4]]]],[11,"from","cranelift_interpreter::step","",11,[[["valueerror",4]]]],[11,"from","","",11,[[["memoryerror",4]]]],[11,"from","cranelift_interpreter::value","",15,[[["tryfrominterror",3]]]],[11,"clone","cranelift_interpreter::environment","",1,[[],["functionstore",3]]],[11,"clone","","",0,[[],["funcindex",3]]],[11,"default","","",1,[[],["functionstore",3]]],[11,"default","cranelift_interpreter::interpreter","",7,[[]]],[11,"cmp","cranelift_interpreter::environment","",0,[[["funcindex",3]],["ordering",4]]],[11,"eq","","",0,[[["funcindex",3]]]],[11,"ne","","",0,[[["funcindex",3]]]],[11,"partial_cmp","","",0,[[["funcindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["funcindex",3]]]],[11,"le","","",0,[[["funcindex",3]]]],[11,"gt","","",0,[[["funcindex",3]]]],[11,"ge","","",0,[[["funcindex",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_interpreter::frame","",2,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_interpreter::interpreter","",6,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_interpreter::state","",9,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_interpreter::step","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_interpreter::value","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_interpreter::environment","",0,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_interpreter::interpreter","",6,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_interpreter::state","",9,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_interpreter::step","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","cranelift_interpreter::value","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"hash","cranelift_interpreter::environment","",0,[[]]],[11,"source","cranelift_interpreter::interpreter","",6,[[],[["error",8],["option",4]]]],[11,"source","cranelift_interpreter::step","",11,[[],[["error",8],["option",4]]]],[11,"source","cranelift_interpreter::value","",15,[[],[["error",8],["option",4]]]],[11,"new","cranelift_interpreter::environment","",0,[[]]],[11,"index","","",0,[[]]],[11,"reserved_value","","",0,[[],["funcindex",3]]],[11,"is_reserved_value","","",0,[[]]]],"p":[[3,"FuncIndex"],[3,"FunctionStore"],[3,"Frame"],[8,"InstructionContext"],[3,"DfgInstructionContext"],[3,"Interpreter"],[4,"InterpreterError"],[3,"InterpreterState"],[8,"State"],[4,"MemoryError"],[3,"ImmutableRegisterState"],[4,"StepError"],[4,"ControlFlow"],[4,"CraneliftTrap"],[8,"Value"],[4,"ValueError"],[4,"ValueTypeClass"],[4,"ValueConversionKind"]]},\
"cranelift_jit":{"doc":"Top-level lib.rs for `cranelift_jit`.","i":[[3,"JITBuilder","cranelift_jit","A builder for `JITModule`.",null,null],[3,"JITModule","","A `JITModule` implements `Module` and emits code and data…",null,null],[17,"VERSION","","Version number of this crate.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"isa","","",1,[[],["targetisa",8]]],[11,"declarations","","",1,[[],["moduledeclarations",3]]],[11,"declare_function","","",1,[[["linkage",4],["signature",3]],[["moduleresult",6],["funcid",3]]]],[11,"declare_data","","",1,[[["linkage",4]],[["dataid",3],["moduleresult",6]]]],[11,"declare_func_in_func","","Use this when you\'re building the IR of a function to…",1,[[["function",3],["funcid",3]],["funcref",3]]],[11,"declare_data_in_func","","Use this when you\'re building the IR of a function to…",1,[[["dataid",3],["function",3]],["globalvalue",3]]],[11,"declare_func_in_data","","TODO: Same as above.",1,[[["datacontext",3],["funcid",3]],["funcref",3]]],[11,"declare_data_in_data","","TODO: Same as above.",1,[[["datacontext",3],["dataid",3]],["globalvalue",3]]],[11,"define_function","","",1,[[["context",3],["funcid",3]],[["modulecompiledfunction",3],["moduleresult",6]]]],[11,"define_function_bytes","","",1,[[["funcid",3]],[["modulecompiledfunction",3],["moduleresult",6]]]],[11,"define_data","","",1,[[["datacontext",3],["dataid",3]],["moduleresult",6]]],[11,"new","","Create a new `JITBuilder`.",0,[[["fn",8],["box",3]]]],[11,"with_isa","","Create a new `JITBuilder` with an arbitrary target. This…",0,[[["targetisa",8],["box",3],["fn",8],["box",3]]]],[11,"symbol","","Define a symbol in the internal symbol table.",0,[[]]],[11,"symbols","","Define multiple symbols in the internal symbol table.",0,[[]]],[11,"hotswap","","Enable or disable hotswap support. See…",0,[[]]],[11,"free_memory","","Free memory allocated for code and data segments of…",1,[[]]],[11,"get_finalized_function","","Returns the address of a finalized function.",1,[[["funcid",3]]]],[11,"get_finalized_data","","Returns the address and size of a finalized data object.",1,[[["dataid",3]]]],[11,"finalize_definitions","","Finalize all functions and data objects that are defined…",1,[[]]],[11,"new","","Create a new `JITModule`.",1,[[["jitbuilder",3]]]],[11,"prepare_for_function_redefine","","Allow a single future `define_function` on a previously…",1,[[["funcid",3]],["moduleresult",6]]]],"p":[[3,"JITBuilder"],[3,"JITModule"]]},\
"cranelift_module":{"doc":"Top-level lib.rs for `cranelift_module`.","i":[[3,"DataContext","cranelift_module","This is to data objects what cranelift_codegen::Context is…",null,null],[3,"DataDescription","","A description of a data object.",null,null],[12,"init","","How the data should be initialized.",0,null],[12,"function_decls","","External function declarations.",0,null],[12,"data_decls","","External data object declarations.",0,null],[12,"function_relocs","","Function addresses to write at specified offsets.",0,null],[12,"data_relocs","","Data addresses to write at specified offsets.",0,null],[12,"custom_segment_section","","Object file section",0,null],[12,"align","","Alignment in bytes. `None` means that the default…",0,null],[4,"Init","","This specifies how data is to be initialized.",null,null],[13,"Uninitialized","","This indicates that no initialization has been specified…",1,null],[13,"Zeros","","Initialize the data with all zeros.",1,null],[12,"size","cranelift_module::Init","The size of the data.",2,null],[13,"Bytes","cranelift_module","Initialize the data with the specified contents.",1,null],[12,"contents","cranelift_module::Init","The contents, which also implies the size of the data.",3,null],[3,"DataId","cranelift_module","A data object identifier for use in the `Module` interface.",null,null],[3,"FuncId","","A function identifier for use in the `Module` interface.",null,null],[4,"FuncOrDataId","","A declared name may refer to either a function or data…",null,null],[13,"Func","","When it\'s a FuncId",4,null],[13,"Data","","When it\'s a DataId",4,null],[4,"Linkage","","Linkage refers to where an entity is defined and who can…",null,null],[13,"Import","","Defined outside of a module.",5,null],[13,"Local","","Defined inside the module, but not visible outside it.",5,null],[13,"Preemptible","","Defined inside the module, visible outside it, and may be…",5,null],[13,"Hidden","","Defined inside the module, visible inside the current…",5,null],[13,"Export","","Defined inside the module, and visible outside it.",5,null],[8,"Module","","A `Module` is a utility for collecting functions and data…",null,null],[10,"isa","","Return the `TargetIsa` to compile for.",6,[[],["targetisa",8]]],[10,"declarations","","Get all declarations in this module.",6,[[],["moduledeclarations",3]]],[11,"get_name","","Get the module identifier for a given name, if that name…",6,[[],[["option",4],["funcordataid",4]]]],[11,"target_config","","Return the target information needed by frontends to…",6,[[],["targetfrontendconfig",3]]],[11,"make_context","","Create a new `Context` initialized for use with this…",6,[[],["context",3]]],[11,"clear_context","","Clear the given `Context` and reset it for use with a new…",6,[[["context",3]]]],[11,"make_signature","","Create a new empty `Signature` with the default calling…",6,[[],["signature",3]]],[11,"clear_signature","","Clear the given `Signature` and reset for use with a new…",6,[[["signature",3]]]],[10,"declare_function","","Declare a function in this module.",6,[[["linkage",4],["signature",3]],[["moduleresult",6],["funcid",3]]]],[10,"declare_data","","Declare a data object in this module.",6,[[["linkage",4]],[["moduleresult",6],["dataid",3]]]],[11,"declare_func_in_func","","Use this when you\'re building the IR of a function to…",6,[[["function",3],["funcid",3]],["funcref",3]]],[11,"declare_data_in_func","","Use this when you\'re building the IR of a function to…",6,[[["function",3],["dataid",3]],["globalvalue",3]]],[11,"declare_func_in_data","","TODO: Same as above.",6,[[["datacontext",3],["funcid",3]],["funcref",3]]],[11,"declare_data_in_data","","TODO: Same as above.",6,[[["datacontext",3],["dataid",3]],["globalvalue",3]]],[10,"define_function","","Define a function, producing the function body from the…",6,[[["context",3],["funcid",3]],[["moduleresult",6],["modulecompiledfunction",3]]]],[10,"define_function_bytes","","Define a function, taking the function body from the given…",6,[[["funcid",3]],[["moduleresult",6],["modulecompiledfunction",3]]]],[10,"define_data","","Define a data object, producing the data contents from the…",6,[[["datacontext",3],["dataid",3]],["moduleresult",6]]],[3,"ModuleCompiledFunction","","Information about the compiled function.",null,null],[12,"size","","The size of the compiled function.",7,null],[3,"ModuleDeclarations","","This provides a view to the state of a module which allows…",null,null],[4,"ModuleError","","Error messages for all `Module` methods",null,null],[13,"Undeclared","","Indicates an identifier was used before it was declared",8,null],[13,"IncompatibleDeclaration","","Indicates an identifier was used as data/function first,…",8,null],[13,"IncompatibleSignature","","Indicates a function identifier was declared with a…",8,null],[13,"DuplicateDefinition","","Indicates an identifier was defined more than once",8,null],[13,"InvalidImportDefinition","","Indicates an identifier was defined, but was declared as…",8,null],[13,"Compilation","","Wraps a `cranelift-codegen` error",8,null],[13,"Backend","","Wraps a generic error from a backend",8,null],[6,"ModuleResult","","A convenient alias for a `Result` that uses `ModuleError`…",null,null],[3,"RelocRecord","","A record of a relocation to perform.",null,null],[12,"offset","","Where in the generated code this relocation is to be…",9,null],[12,"reloc","","The kind of relocation this represents.",9,null],[12,"name","","What symbol we\'re relocating against.",9,null],[12,"addend","","The offset to add to the relocation.",9,null],[3,"TrapSite","","Record of the arguments cranelift passes to…",null,null],[12,"offset","","Offset into function.",10,null],[12,"srcloc","","Source location given to cranelift.",10,null],[12,"code","","Trap code, as determined by cranelift.",10,null],[17,"VERSION","","Version number of this crate.",null,null],[5,"default_libcall_names","","Default names for `ir::LibCall`s. A function by this name…",null,[[],[["fn",8],["box",3]]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"key","","",12,[[]]],[11,"equivalent","","",12,[[]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"key","","",13,[[]]],[11,"equivalent","","",13,[[]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"equivalent","","",5,[[]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"equivalent","","",4,[[]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_string","","",8,[[],["string",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"from","","",8,[[["codegenerror",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"eq","","",1,[[["init",4]]]],[11,"ne","","",1,[[["init",4]]]],[11,"eq","","",12,[[["funcid",3]]]],[11,"ne","","",12,[[["funcid",3]]]],[11,"eq","","",13,[[["dataid",3]]]],[11,"ne","","",13,[[["dataid",3]]]],[11,"eq","","",5,[[["linkage",4]]]],[11,"eq","","",4,[[["funcordataid",4]]]],[11,"ne","","",4,[[["funcordataid",4]]]],[11,"cmp","","",12,[[["funcid",3]],["ordering",4]]],[11,"cmp","","",13,[[["dataid",3]],["ordering",4]]],[11,"cmp","","",4,[[["funcordataid",4]],["ordering",4]]],[11,"partial_cmp","","",12,[[["funcid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",12,[[["funcid",3]]]],[11,"le","","",12,[[["funcid",3]]]],[11,"gt","","",12,[[["funcid",3]]]],[11,"ge","","",12,[[["funcid",3]]]],[11,"partial_cmp","","",13,[[["dataid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",13,[[["dataid",3]]]],[11,"le","","",13,[[["dataid",3]]]],[11,"gt","","",13,[[["dataid",3]]]],[11,"ge","","",13,[[["dataid",3]]]],[11,"partial_cmp","","",4,[[["funcordataid",4]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["funcordataid",4]]]],[11,"le","","",4,[[["funcordataid",4]]]],[11,"gt","","",4,[[["funcordataid",4]]]],[11,"ge","","",4,[[["funcordataid",4]]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",4,[[]]],[11,"clone","","",12,[[],["funcid",3]]],[11,"clone","","",13,[[],["dataid",3]]],[11,"clone","","",5,[[],["linkage",4]]],[11,"clone","","",4,[[],["funcordataid",4]]],[11,"clone","","",9,[[],["relocrecord",3]]],[11,"clone","","",10,[[],["trapsite",3]]],[11,"default","","",14,[[],["moduledeclarations",3]]],[11,"source","","",8,[[],[["error",8],["option",4]]]],[11,"new","","",12,[[]]],[11,"index","","",12,[[]]],[11,"new","","",13,[[]]],[11,"index","","",13,[[]]],[11,"reserved_value","","",12,[[],["funcid",3]]],[11,"is_reserved_value","","",12,[[]]],[11,"reserved_value","","",13,[[],["dataid",3]]],[11,"is_reserved_value","","",13,[[]]],[11,"size","","Return the size of the data to be initialized.",1,[[]]],[11,"all_relocs","","An iterator over all relocations of the data object.",0,[[["reloc",4]]]],[11,"new","","Allocate a new context.",11,[[]]],[11,"clear","","Clear all data structures in this context.",11,[[]]],[11,"define_zeroinit","","Define a zero-initialized object with the given size.",11,[[]]],[11,"define","","Define an object initialized with the given contents.",11,[[["box",3]]]],[11,"set_segment_section","","Override the segment/section for data, only supported on…",11,[[]]],[11,"set_align","","Set the alignment for data. The alignment must be a power…",11,[[]]],[11,"import_function","","Declare an external function import.",11,[[["externalname",4]],["funcref",3]]],[11,"import_global_value","","Declares a global value import.",11,[[["externalname",4]],["globalvalue",3]]],[11,"write_function_addr","","Write the address of `func` into the data at offset…",11,[[["codeoffset",6],["funcref",3]]]],[11,"write_data_addr","","Write the address of `data` into the data at offset…",11,[[["codeoffset",6],["addend",6],["globalvalue",3]]]],[11,"description","","Reference the initializer data.",11,[[],["datadescription",3]]],[11,"from_u32","","Create a new instance from a `u32`.",12,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",12,[[]]],[11,"from_name","","Get the `FuncId` for the function named by `name`.",12,[[["externalname",4]],["funcid",3]]],[11,"from_u32","","Create a new instance from a `u32`.",13,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",13,[[]]],[11,"from_name","","Get the `DataId` for the data object named by `name`.",13,[[["externalname",4]],["dataid",3]]],[11,"is_definable","","Test whether this linkage can have a definition.",5,[[]]],[11,"is_final","","Test whether this linkage will have a definition that…",5,[[]]],[11,"get_name","","Get the module identifier for a given name, if that name…",14,[[],[["option",4],["funcordataid",4]]]],[11,"get_functions","","Get an iterator of all function declarations",14,[[]]],[11,"is_function","","Return whether `name` names a function, rather than a data…",14,[[["externalname",4]]]],[11,"get_function_decl","","Get the `FunctionDeclaration` for the function named by…",14,[[["funcid",3]],["functiondeclaration",3]]],[11,"get_data_objects","","Get an iterator of all data declarations",14,[[]]],[11,"get_data_decl","","Get the `DataDeclaration` for the data object named by…",14,[[["dataid",3]],["datadeclaration",3]]],[11,"declare_function","","Declare a function in this module.",14,[[["linkage",4],["signature",3]],["moduleresult",6]]],[11,"declare_data","","Declare a data object in this module.",14,[[["linkage",4]],["moduleresult",6]]],[11,"get_name","","Get the module identifier for a given name, if that name…",6,[[],[["option",4],["funcordataid",4]]]],[11,"target_config","","Return the target information needed by frontends to…",6,[[],["targetfrontendconfig",3]]],[11,"make_context","","Create a new `Context` initialized for use with this…",6,[[],["context",3]]],[11,"clear_context","","Clear the given `Context` and reset it for use with a new…",6,[[["context",3]]]],[11,"make_signature","","Create a new empty `Signature` with the default calling…",6,[[],["signature",3]]],[11,"clear_signature","","Clear the given `Signature` and reset for use with a new…",6,[[["signature",3]]]],[11,"declare_func_in_func","","Use this when you\'re building the IR of a function to…",6,[[["function",3],["funcid",3]],["funcref",3]]],[11,"declare_data_in_func","","Use this when you\'re building the IR of a function to…",6,[[["function",3],["dataid",3]],["globalvalue",3]]],[11,"declare_func_in_data","","TODO: Same as above.",6,[[["datacontext",3],["funcid",3]],["funcref",3]]],[11,"declare_data_in_data","","TODO: Same as above.",6,[[["datacontext",3],["dataid",3]],["globalvalue",3]]]],"p":[[3,"DataDescription"],[4,"Init"],[13,"Zeros"],[13,"Bytes"],[4,"FuncOrDataId"],[4,"Linkage"],[8,"Module"],[3,"ModuleCompiledFunction"],[4,"ModuleError"],[3,"RelocRecord"],[3,"TrapSite"],[3,"DataContext"],[3,"FuncId"],[3,"DataId"],[3,"ModuleDeclarations"]]},\
"cranelift_native":{"doc":"Performs autodetection of the host for the purposes of…","i":[[5,"builder","cranelift_native","Return an `isa` builder configured for the current host…",null,[[],[["result",4],["builder",3]]]],[5,"builder_with_options","","Return an `isa` builder configured for the current host…",null,[[["backendvariant",4]],[["result",4],["builder",3]]]],[17,"VERSION","","Version number of this crate.",null,null]],"p":[]},\
"cranelift_object":{"doc":"Top-level lib.rs for `cranelift_object`.","i":[[3,"ObjectBuilder","cranelift_object","A builder for `ObjectModule`.",null,null],[3,"ObjectModule","","An `ObjectModule` implements `Module` and emits \\\".o\\\" files…",null,null],[3,"ObjectProduct","","This is the output of `Module`\'s `finish` function. It…",null,null],[12,"object","","Object artifact with all functions and data from the…",0,null],[12,"functions","","Symbol IDs for functions (both declared and defined).",0,null],[12,"data_objects","","Symbol IDs for data objects (both declared and defined).",0,null],[17,"VERSION","","Version number of this crate.",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"isa","","",2,[[],["targetisa",8]]],[11,"declarations","","",2,[[],["moduledeclarations",3]]],[11,"declare_function","","",2,[[["signature",3],["linkage",4]],[["funcid",3],["moduleresult",6]]]],[11,"declare_data","","",2,[[["linkage",4]],[["moduleresult",6],["dataid",3]]]],[11,"define_function","","",2,[[["funcid",3],["context",3]],[["modulecompiledfunction",3],["moduleresult",6]]]],[11,"define_function_bytes","","",2,[[["funcid",3]],[["modulecompiledfunction",3],["moduleresult",6]]]],[11,"define_data","","",2,[[["dataid",3],["datacontext",3]],["moduleresult",6]]],[11,"new","","Create a new `ObjectBuilder` using the given Cranelift…",1,[[["targetisa",8],["box",3],["into",8],["vec",3],["fn",8],["box",3]],["moduleresult",6]]],[11,"function_alignment","","Set the alignment used for functions.",1,[[]]],[11,"per_function_section","","Set if every function should end up in their own section.",1,[[]]],[11,"new","","Create a new `ObjectModule` using the given Cranelift…",2,[[["objectbuilder",3]]]],[11,"finish","","Finalize all relocations and output an object.",2,[[],["objectproduct",3]]],[11,"function_symbol","","Return the `SymbolId` for the given function.",0,[[["funcid",3]],["symbolid",3]]],[11,"data_symbol","","Return the `SymbolId` for the given data object.",0,[[["dataid",3]],["symbolid",3]]],[11,"emit","","Write the object bytes in memory.",0,[[],[["error",3],["vec",3],["result",4]]]]],"p":[[3,"ObjectProduct"],[3,"ObjectBuilder"],[3,"ObjectModule"]]},\
"cranelift_preopt":{"doc":"Performs early-stage optimizations on Cranelift IR.","i":[[5,"optimize","cranelift_preopt","Optimize the function with available optimizations.",null,[[["context",3],["targetisa",8]],["codegenresult",6]]],[5,"fold_constants","","Fold constants",null,[[["context",3]],["codegenresult",6]]]],"p":[]},\
"cranelift_reader":{"doc":"Cranelift file reader library.","i":[[3,"Location","cranelift_reader","The location of a `Token` or `Error`.",null,null],[12,"line_number","","Line number. Command-line arguments are line 0 and source…",0,null],[3,"ParseError","","A parse error is returned when the parse failed.",null,null],[12,"location","","Location of the error.",1,null],[12,"message","","Error message.",1,null],[12,"is_warning","","Whether it\'s a warning or a plain error.",1,null],[6,"ParseResult","","Result of a parser operation. The `ParseError` variant…",null,null],[5,"parse_options","","Parse an iterator of command line options and apply them…",null,[[["location",3],["configurable",8]],[["result",4],["parseoptionerror",4]]]],[4,"IsaSpec","","The ISA specifications in a `.clif` file.",null,null],[13,"None","","The parsed file does not contain any `isa` commands, but…",2,null],[13,"Some","","The parsed file does contain `isa` commands. Each `isa`…",2,null],[4,"ParseOptionError","","An error type returned by `parse_options`.",null,null],[13,"Generic","","A generic ParseError.",3,null],[13,"UnknownFlag","","An unknown flag was used, with the given name at the given…",3,null],[12,"loc","cranelift_reader::ParseOptionError","Location where the flag was given.",4,null],[12,"name","","Name of the unknown flag.",4,null],[5,"parse_functions","cranelift_reader","Parse the entire `text` into a list of functions.",null,[[],[["vec",3],["parseresult",6]]]],[5,"parse_run_command","","Parse a CLIF comment `text` as a run command.",null,[[["signature",3]],[["parseresult",6],["option",4]]]],[5,"parse_test","","Parse the entire `text` as a test case file.",null,[[["parseoptions",3]],[["parseresult",6],["testfile",3]]]],[3,"ParseOptions","","Options for configuring the parsing of filetests.",null,null],[12,"passes","","Compiler passes to run on the parsed functions.",5,null],[12,"target","","Target ISA for compiling the parsed functions, e.g.…",5,null],[12,"default_calling_convention","","Default calling convention used when none is specified for…",5,null],[4,"Comparison","","A CLIF comparison operation; e.g. `==`.",null,null],[13,"Equals","","",6,null],[13,"NotEquals","","",6,null],[3,"Invocation","","Represent a function call; [RunCommand]s invoke a CLIF…",null,null],[12,"func","","The name of the function to call. Note: this field is for…",7,null],[12,"args","","The arguments to be passed to the function when invoked.",7,null],[4,"RunCommand","","A run command appearing in a test file.",null,null],[13,"Print","","Invoke a function and print its result.",8,null],[13,"Run","","Invoke a function and compare its result to a value…",8,null],[3,"SourceMap","","Mapping from entity names to source locations.",null,null],[3,"TestCommand","","A command appearing in a test file.",null,null],[12,"command","","The command name as a string.",9,null],[12,"options","","The options following the command name.",9,null],[4,"TestOption","","An option on a test command.",null,null],[13,"Flag","","Single identifier flag: `foo`.",10,null],[13,"Value","","A value assigned to an identifier: `foo=bar`.",10,null],[3,"Comment","","A comment in a parsed function.",null,null],[12,"entity","","The entity this comment is attached to. Comments always…",11,null],[12,"text","","Text of the comment, including the leading `;`.",11,null],[3,"Details","","Additional details about a function parsed from a text…",null,null],[12,"location","","Location of the `function` keyword that begins this…",12,null],[12,"comments","","Annotation comments that appeared inside or after the…",12,null],[12,"map","","Mapping of entity numbers to source locations.",12,null],[4,"Feature","","A cranelift feature in a test file preamble.",null,null],[13,"With","","`feature \\\"...\\\"` lines",13,null],[13,"Without","","`feature ! \\\"...\\\"` lines.",13,null],[3,"TestFile","","A parsed test case.",null,null],[12,"commands","","`test foo ...` lines.",14,null],[12,"isa_spec","","`isa bar ...` lines.",14,null],[12,"features","","`feature ...` lines",14,null],[12,"preamble_comments","","Comments appearing before the first function. These are…",14,null],[12,"functions","","Parsed functions and additional details about each function.",14,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"equivalent","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"equivalent","","",10,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"equivalent","","",11,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"equivalent","","",13,[[]]],[11,"from","","",1,[[["parseoptionerror",4]]]],[11,"clone","","",0,[[],["location",3]]],[11,"clone","","",9,[[],["testcommand",3]]],[11,"clone","","",10,[[],["testoption",4]]],[11,"clone","","",11,[[],["comment",3]]],[11,"default","","",0,[[],["location",3]]],[11,"default","","",5,[[]]],[11,"default","","",15,[[],["sourcemap",3]]],[11,"eq","","",0,[[["location",3]]]],[11,"ne","","",0,[[["location",3]]]],[11,"eq","","",8,[[["runcommand",4]]]],[11,"ne","","",8,[[["runcommand",4]]]],[11,"eq","","",7,[[["invocation",3]]]],[11,"ne","","",7,[[["invocation",3]]]],[11,"eq","","",6,[[["comparison",4]]]],[11,"eq","","",9,[[["testcommand",3]]]],[11,"ne","","",9,[[["testcommand",3]]]],[11,"eq","","",10,[[["testoption",4]]]],[11,"ne","","",10,[[["testoption",4]]]],[11,"eq","","",11,[[["comment",3]]]],[11,"ne","","",11,[[["comment",3]]]],[11,"eq","","",13,[[["feature",4]]]],[11,"ne","","",13,[[["feature",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"unique_isa","","If the `IsaSpec` contains exactly 1 `TargetIsa` we return…",2,[[],[["option",4],["targetisa",8]]]],[11,"run","","Run the [RunCommand]:",8,[[],[["result",4],["string",3]]]],[11,"contains_value","","Look up a value entity.",15,[[["value",3]]]],[11,"contains_block","","Look up a block entity.",15,[[["block",3]]]],[11,"contains_ss","","Look up a stack slot entity.",15,[[["stackslot",3]]]],[11,"contains_gv","","Look up a global value entity.",15,[[["globalvalue",3]]]],[11,"contains_heap","","Look up a heap entity.",15,[[["heap",3]]]],[11,"contains_table","","Look up a table entity.",15,[[["table",3]]]],[11,"contains_sig","","Look up a signature entity.",15,[[["sigref",3]]]],[11,"contains_fn","","Look up a function entity.",15,[[["funcref",3]]]],[11,"contains_jt","","Look up a jump table entity.",15,[[["jumptable",3]]]],[11,"contains_constant","","Look up a constant entity.",15,[[["constant",3]]]],[11,"lookup_str","","Look up an entity by source name. Returns the entity…",15,[[],[["option",4],["anyentity",4]]]],[11,"location","","Get the source location where an entity was defined.",15,[[["anyentity",4]],[["location",3],["option",4]]]],[11,"new","","Create a new empty `SourceMap`.",15,[[]]],[11,"def_value","","Define the value `entity`.",15,[[["location",3],["value",3]],["parseresult",6]]],[11,"def_block","","Define the block `entity`.",15,[[["location",3],["block",3]],["parseresult",6]]],[11,"def_ss","","Define the stack slot `entity`.",15,[[["location",3],["stackslot",3]],["parseresult",6]]],[11,"def_gv","","Define the global value `entity`.",15,[[["globalvalue",3],["location",3]],["parseresult",6]]],[11,"def_heap","","Define the heap `entity`.",15,[[["location",3],["heap",3]],["parseresult",6]]],[11,"def_table","","Define the table `entity`.",15,[[["location",3],["table",3]],["parseresult",6]]],[11,"def_sig","","Define the signature `entity`.",15,[[["location",3],["sigref",3]],["parseresult",6]]],[11,"def_fn","","Define the external function `entity`.",15,[[["location",3],["funcref",3]],["parseresult",6]]],[11,"def_jt","","Define the jump table `entity`.",15,[[["jumptable",3],["location",3]],["parseresult",6]]],[11,"def_constant","","Define the jump table `entity`.",15,[[["location",3],["constant",3]],["parseresult",6]]],[11,"def_entity","","Define an entity. This can be used for instructions whose…",15,[[["location",3],["anyentity",4]],["parseresult",6]]],[11,"new","","Create a new TestCommand by parsing `s`. The returned…",9,[[]]],[11,"new","","Create a new TestOption by parsing `s`. The returned…",10,[[]]]],"p":[[3,"Location"],[3,"ParseError"],[4,"IsaSpec"],[4,"ParseOptionError"],[13,"UnknownFlag"],[3,"ParseOptions"],[4,"Comparison"],[3,"Invocation"],[4,"RunCommand"],[3,"TestCommand"],[4,"TestOption"],[3,"Comment"],[3,"Details"],[4,"Feature"],[3,"TestFile"],[3,"SourceMap"]]},\
"cranelift_wasm":{"doc":"Performs translation from a wasm module in binary format…","i":[[3,"FunctionBuilder","cranelift_wasm","Temporary object used to build a single Cranelift IR…",null,null],[12,"func","","The function currently being built. This field is public…",0,null],[4,"Alias","","An entry in the alias section of a wasm module (from the…",null,null],[13,"OuterModule","","An outer module\'s module is being aliased into our own…",1,null],[12,"relative_depth","cranelift_wasm::Alias","The number of modules above us that we\'re referencing.",2,null],[12,"index","","The module index in the outer module\'s index space we\'re…",2,null],[13,"OuterType","cranelift_wasm","An outer module\'s type is being aliased into our own index…",1,null],[12,"relative_depth","cranelift_wasm::Alias","The number of modules above us that we\'re referencing.",3,null],[12,"index","","The type index in the outer module\'s index space we\'re…",3,null],[13,"InstanceExport","cranelift_wasm","A previously created instance is having one of its exports…",1,null],[12,"instance","cranelift_wasm::Alias","The index we\'re aliasing.",4,null],[12,"export","","The nth export that we\'re inserting into our own index…",4,null],[3,"DummyEnvironment","cranelift_wasm","This `ModuleEnvironment` implementation is a \\\"naïve\\\" one,…",null,null],[12,"info","","Module information.",5,null],[12,"func_bytecode_sizes","","Vector of wasm bytecode size for each function.",5,null],[12,"module_name","","Name of the module from the wasm file.",5,null],[8,"FuncEnvironment","","Environment affecting the translation of a single…",null,null],[11,"is_wasm_parameter","","Is the given parameter of the given function a wasm-level…",6,[[["signature",3]]]],[11,"is_wasm_return","","Is the given return of the given function a wasm-level…",6,[[["signature",3]]]],[11,"return_mode","","Should the code be structured to use a single…",6,[[],["returnmode",4]]],[10,"make_global","","Set up the necessary preamble definitions in `func` to…",6,[[["globalindex",3],["function",3]],[["globalvariable",4],["wasmresult",6]]]],[10,"make_heap","","Set up the necessary preamble definitions in `func` to…",6,[[["function",3],["memoryindex",3]],[["wasmresult",6],["heap",3]]]],[10,"make_table","","Set up the necessary preamble definitions in `func` to…",6,[[["function",3],["tableindex",3]],[["wasmresult",6],["table",3]]]],[10,"make_indirect_sig","","Set up a signature definition in the preamble of `func`…",6,[[["function",3],["typeindex",3]],[["wasmresult",6],["sigref",3]]]],[10,"make_direct_func","","Set up an external function definition in the preamble of…",6,[[["funcindex",3],["function",3]],[["wasmresult",6],["funcref",3]]]],[10,"translate_call_indirect","","Translate a `call_indirect` WebAssembly instruction at…",6,[[["funccursor",3],["typeindex",3],["sigref",3],["value",3],["tableindex",3],["table",3]],[["inst",3],["wasmresult",6]]]],[11,"translate_call","","Translate a `call` WebAssembly instruction at `pos`.",6,[[["funcindex",3],["funcref",3],["funccursor",3]],[["inst",3],["wasmresult",6]]]],[10,"translate_memory_grow","","Translate a `memory.grow` WebAssembly instruction.",6,[[["value",3],["memoryindex",3],["heap",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[10,"translate_memory_size","","Translates a `memory.size` WebAssembly instruction.",6,[[["memoryindex",3],["heap",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[10,"translate_memory_copy","","Translate a `memory.copy` WebAssembly instruction.",6,[[["value",3],["memoryindex",3],["heap",3],["funccursor",3]],["wasmresult",6]]],[10,"translate_memory_fill","","Translate a `memory.fill` WebAssembly instruction.",6,[[["value",3],["memoryindex",3],["heap",3],["funccursor",3]],["wasmresult",6]]],[10,"translate_memory_init","","Translate a `memory.init` WebAssembly instruction.",6,[[["value",3],["memoryindex",3],["heap",3],["funccursor",3]],["wasmresult",6]]],[10,"translate_data_drop","","Translate a `data.drop` WebAssembly instruction.",6,[[["funccursor",3]],["wasmresult",6]]],[10,"translate_table_size","","Translate a `table.size` WebAssembly instruction.",6,[[["table",3],["tableindex",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[10,"translate_table_grow","","Translate a `table.grow` WebAssembly instruction.",6,[[["funccursor",3],["value",3],["tableindex",3],["table",3]],[["wasmresult",6],["value",3]]]],[10,"translate_table_get","","Translate a `table.get` WebAssembly instruction.",6,[[["functionbuilder",3],["value",3],["tableindex",3],["table",3]],[["wasmresult",6],["value",3]]]],[10,"translate_table_set","","Translate a `table.set` WebAssembly instruction.",6,[[["functionbuilder",3],["value",3],["tableindex",3],["table",3]],["wasmresult",6]]],[10,"translate_table_copy","","Translate a `table.copy` WebAssembly instruction.",6,[[["funccursor",3],["value",3],["tableindex",3],["table",3]],["wasmresult",6]]],[10,"translate_table_fill","","Translate a `table.fill` WebAssembly instruction.",6,[[["value",3],["tableindex",3],["funccursor",3]],["wasmresult",6]]],[10,"translate_table_init","","Translate a `table.init` WebAssembly instruction.",6,[[["funccursor",3],["value",3],["tableindex",3],["table",3]],["wasmresult",6]]],[10,"translate_elem_drop","","Translate a `elem.drop` WebAssembly instruction.",6,[[["funccursor",3]],["wasmresult",6]]],[11,"translate_ref_null","","Translate a `ref.null T` WebAssembly instruction.",6,[[["wasmtype",4],["funccursor",3]],[["wasmresult",6],["value",3]]]],[11,"translate_ref_is_null","","Translate a `ref.is_null` WebAssembly instruction.",6,[[["value",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[10,"translate_ref_func","","Translate a `ref.func` WebAssembly instruction.",6,[[["funcindex",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[10,"translate_custom_global_get","","Translate a `global.get` WebAssembly instruction at `pos`…",6,[[["globalindex",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[10,"translate_custom_global_set","","Translate a `global.set` WebAssembly instruction at `pos`…",6,[[["globalindex",3],["value",3],["funccursor",3]],["wasmresult",6]]],[10,"translate_atomic_wait","","Translate an `i32.atomic.wait` or `i64.atomic.wait`…",6,[[["value",3],["memoryindex",3],["heap",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[10,"translate_atomic_notify","","Translate an `atomic.notify` WebAssembly instruction. The…",6,[[["value",3],["memoryindex",3],["heap",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[11,"translate_loop_header","","Emit code at the beginning of every wasm loop.",6,[[["funccursor",3]],["wasmresult",6]]],[11,"before_translate_operator","","Optional callback for the `FunctionEnvironment` performing…",6,[[["operator",4],["functionbuilder",3],["functranslationstate",3]],["wasmresult",6]]],[11,"after_translate_operator","","Optional callback for the `FunctionEnvironment` performing…",6,[[["operator",4],["functionbuilder",3],["functranslationstate",3]],["wasmresult",6]]],[11,"before_translate_function","","Optional callback for the `FunctionEnvironment` performing…",6,[[["functionbuilder",3],["functranslationstate",3]],["wasmresult",6]]],[11,"after_translate_function","","Optional callback for the `FunctionEnvironment` performing…",6,[[["functionbuilder",3],["functranslationstate",3]],["wasmresult",6]]],[4,"GlobalVariable","","The value of a WebAssembly global variable.",null,null],[13,"Const","","This is a constant global with a value known at compile…",7,null],[13,"Memory","","This is a variable in memory that should be referenced…",7,null],[12,"gv","cranelift_wasm::GlobalVariable","The address of the global variable storage.",8,null],[12,"offset","","An offset to add to the address.",8,null],[12,"ty","","The global variable\'s type.",8,null],[13,"Custom","cranelift_wasm","This is a global variable that needs to be handled by the…",7,null],[8,"ModuleEnvironment","","An object satisfying the `ModuleEnvironment` trait can be…",null,null],[11,"reserve_types","","Provides the number of types up front. By default this…",9,[[],["wasmresult",6]]],[10,"declare_type_func","","Declares a function signature to the environment.",9,[[["wasmfunctype",3],["signature",3]],["wasmresult",6]]],[11,"declare_type_module","","Declares a module type signature to the environment.",9,[[],["wasmresult",6]]],[11,"declare_type_instance","","Declares an instance type signature to the environment.",9,[[],["wasmresult",6]]],[11,"type_to_signature","","Translates a type index to its signature index, only…",9,[[["typeindex",3]],[["wasmresult",6],["signatureindex",3]]]],[11,"type_to_module_type","","Translates a type index to its module type index, only…",9,[[["typeindex",3]],[["moduletypeindex",3],["wasmresult",6]]]],[11,"type_to_instance_type","","Translates a type index to its instance type index, only…",9,[[["typeindex",3]],[["instancetypeindex",3],["wasmresult",6]]]],[11,"reserve_imports","","Provides the number of imports up front. By default this…",9,[[],["wasmresult",6]]],[10,"declare_func_import","","Declares a function import to the environment.",9,[[["option",4],["typeindex",3]],["wasmresult",6]]],[10,"declare_table_import","","Declares a table import to the environment.",9,[[["table",3],["option",4]],["wasmresult",6]]],[10,"declare_memory_import","","Declares a memory import to the environment.",9,[[["memory",3],["option",4]],["wasmresult",6]]],[11,"declare_event_import","","Declares an event import to the environment.",9,[[["option",4],["event",3]],["wasmresult",6]]],[10,"declare_global_import","","Declares a global import to the environment.",9,[[["option",4],["global",3]],["wasmresult",6]]],[11,"declare_module_import","","Declares a module import to the environment.",9,[[["option",4],["typeindex",3]],["wasmresult",6]]],[11,"declare_instance_import","","Declares an instance import to the environment.",9,[[["option",4],["typeindex",3]],["wasmresult",6]]],[11,"finish_imports","","Notifies the implementation that all imports have been…",9,[[],["wasmresult",6]]],[11,"reserve_func_types","","Provides the number of defined functions up front. By…",9,[[],["wasmresult",6]]],[10,"declare_func_type","","Declares the type (signature) of a local function in the…",9,[[["typeindex",3]],["wasmresult",6]]],[11,"reserve_tables","","Provides the number of defined tables up front. By default…",9,[[],["wasmresult",6]]],[10,"declare_table","","Declares a table to the environment.",9,[[["table",3]],["wasmresult",6]]],[11,"reserve_memories","","Provides the number of defined memories up front. By…",9,[[],["wasmresult",6]]],[10,"declare_memory","","Declares a memory to the environment",9,[[["memory",3]],["wasmresult",6]]],[11,"reserve_events","","Provides the number of defined events up front. By default…",9,[[],["wasmresult",6]]],[11,"declare_event","","Declares an event to the environment",9,[[["event",3]],["wasmresult",6]]],[11,"reserve_globals","","Provides the number of defined globals up front. By…",9,[[],["wasmresult",6]]],[10,"declare_global","","Declares a global to the environment.",9,[[["global",3]],["wasmresult",6]]],[11,"reserve_exports","","Provides the number of exports up front. By default this…",9,[[],["wasmresult",6]]],[10,"declare_func_export","","Declares a function export to the environment.",9,[[["funcindex",3]],["wasmresult",6]]],[10,"declare_table_export","","Declares a table export to the environment.",9,[[["tableindex",3]],["wasmresult",6]]],[10,"declare_memory_export","","Declares a memory export to the environment.",9,[[["memoryindex",3]],["wasmresult",6]]],[11,"declare_event_export","","Declares an event export to the environment.",9,[[["eventindex",3]],["wasmresult",6]]],[10,"declare_global_export","","Declares a global export to the environment.",9,[[["globalindex",3]],["wasmresult",6]]],[11,"declare_instance_export","","Declares an instance export to the environment.",9,[[["instanceindex",3]],["wasmresult",6]]],[11,"declare_module_export","","Declares an instance export to the environment.",9,[[["moduleindex",3]],["wasmresult",6]]],[11,"finish_exports","","Notifies the implementation that all exports have been…",9,[[],["wasmresult",6]]],[10,"declare_start_func","","Declares the optional start function.",9,[[["funcindex",3]],["wasmresult",6]]],[11,"reserve_table_elements","","Provides the number of element initializers up front. By…",9,[[],["wasmresult",6]]],[10,"declare_table_elements","","Fills a declared table with references to functions in the…",9,[[["globalindex",3],["option",4],["box",3],["tableindex",3]],["wasmresult",6]]],[10,"declare_passive_element","","Declare a passive element segment.",9,[[["box",3],["elemindex",3]],["wasmresult",6]]],[11,"reserve_passive_data","","Provides the number of passive data segments up front.",9,[[],["wasmresult",6]]],[10,"declare_passive_data","","Declare a passive data segment.",9,[[["dataindex",3]],["wasmresult",6]]],[11,"reserve_function_bodies","","Indicates how many functions the code section reports and…",9,[[]]],[10,"define_function_body","","Provides the contents of a function body.",9,[[["validatorresources",3],["functionbody",3],["funcvalidator",3]],["wasmresult",6]]],[11,"reserve_data_initializers","","Provides the number of data initializers up front. By…",9,[[],["wasmresult",6]]],[10,"declare_data_initialization","","Fills a declared memory with bytes at module instantiation.",9,[[["globalindex",3],["memoryindex",3],["option",4]],["wasmresult",6]]],[11,"declare_module_name","","Declares the name of a module to the environment.",9,[[]]],[11,"declare_func_name","","Declares the name of a function to the environment.",9,[[["funcindex",3]]]],[11,"declare_local_name","","Declares the name of a function\'s local to the environment.",9,[[["funcindex",3]]]],[11,"custom_section","","Indicates that a custom section has been found in the wasm…",9,[[],["wasmresult",6]]],[11,"wasm_features","","Returns the list of enabled wasm features this translation…",9,[[],["wasmfeatures",3]]],[11,"reserve_modules","","Indicates that this module will have `amount` submodules.",9,[[]]],[11,"module_start","","Called at the beginning of translating a module.",9,[[]]],[11,"module_end","","Called at the end of translating a module.",9,[[]]],[11,"reserve_instances","","Indicates that this module will have `amount` instances.",9,[[]]],[11,"declare_instance","","Declares a new instance which this module will instantiate…",9,[[["vec",3],["moduleindex",3]],["wasmresult",6]]],[11,"declare_alias","","Declares a new alias being added to this module.",9,[[["alias",4]],["wasmresult",6]]],[4,"ReturnMode","","How to return from functions.",null,null],[13,"NormalReturns","","Use normal return instructions as needed.",10,null],[13,"FallthroughReturn","","Use a single fallthrough return at the end of the function.",10,null],[8,"TargetEnvironment","","Environment affecting the translation of a WebAssembly.",null,null],[10,"target_config","","Get the information needed to produce Cranelift IR for the…",11,[[],["targetfrontendconfig",3]]],[11,"pointer_type","","Get the Cranelift integer type to use for native pointers.",11,[[],["type",3]]],[11,"pointer_bytes","","Get the size of a native pointer, in bytes.",11,[[]]],[11,"reference_type","","Get the Cranelift reference type to use for the given Wasm…",11,[[["wasmtype",4]],["type",3]]],[4,"WasmError","","A WebAssembly translation error.",null,null],[13,"InvalidWebAssembly","","The input WebAssembly code is invalid.",12,null],[12,"message","cranelift_wasm::WasmError","A string describing the validation error.",13,null],[12,"offset","","The bytecode offset where the error occurred.",13,null],[13,"Unsupported","cranelift_wasm","A feature used by the WebAssembly code is not supported by…",12,null],[13,"ImplLimitExceeded","","An implementation limit was exceeded.",12,null],[13,"User","","Any user-defined error.",12,null],[3,"WasmFuncType","","WebAssembly function type -- equivalent of `wasmparser`\'s…",null,null],[12,"params","","Function params types.",14,null],[12,"returns","","Returns params types.",14,null],[6,"WasmResult","","A convenient alias for a `Result` that uses `WasmError` as…",null,null],[4,"WasmType","","WebAssembly value type -- equivalent of `wasmparser`\'s Type.",null,null],[13,"I32","","I32 type",15,null],[13,"I64","","I64 type",15,null],[13,"F32","","F32 type",15,null],[13,"F64","","F64 type",15,null],[13,"V128","","V128 type",15,null],[13,"FuncRef","","FuncRef type",15,null],[13,"ExternRef","","ExternRef type",15,null],[13,"ExnRef","","ExnRef type",15,null],[3,"FuncTranslator","","WebAssembly to Cranelift IR function translator.",null,null],[5,"translate_module","","Translate a sequence of bytes forming a valid Wasm binary…",null,[[["moduleenvironment",8]],[["moduletranslationstate",3],["wasmresult",6]]]],[3,"FuncTranslationState","","Contains information passed along during a function\'s…",null,null],[3,"ModuleTranslationState","","Contains information decoded from the Wasm module that…",null,null],[3,"FuncIndex","","Index type of a function (imported or defined) inside the…",null,null],[3,"DefinedFuncIndex","","Index type of a defined function inside the WebAssembly…",null,null],[3,"DefinedTableIndex","","Index type of a defined table inside the WebAssembly module.",null,null],[3,"DefinedMemoryIndex","","Index type of a defined memory inside the WebAssembly…",null,null],[3,"DefinedGlobalIndex","","Index type of a defined global inside the WebAssembly…",null,null],[3,"TableIndex","","Index type of a table (imported or defined) inside the…",null,null],[3,"GlobalIndex","","Index type of a global variable (imported or defined)…",null,null],[3,"MemoryIndex","","Index type of a linear memory (imported or defined) inside…",null,null],[3,"SignatureIndex","","Index type of a signature (imported or defined) inside the…",null,null],[3,"DataIndex","","Index type of a passive data segment inside the…",null,null],[3,"ElemIndex","","Index type of a passive element segment inside the…",null,null],[3,"TypeIndex","","Index type of a type inside the WebAssembly module.",null,null],[3,"ModuleIndex","","Index type of a module inside the WebAssembly module.",null,null],[3,"InstanceIndex","","Index type of an instance inside the WebAssembly module.",null,null],[3,"EventIndex","","Index type of an event inside the WebAssembly module.",null,null],[3,"ModuleTypeIndex","","Specialized index for just module types.",null,null],[3,"InstanceTypeIndex","","Specialized index for just instance types.",null,null],[4,"EntityIndex","","An index of an entity.",null,null],[13,"Function","","Function index.",16,null],[13,"Table","","Table index.",16,null],[13,"Memory","","Memory index.",16,null],[13,"Global","","Global index.",16,null],[13,"Module","","Module index.",16,null],[13,"Instance","","Instance index.",16,null],[4,"EntityType","","A type of an item in a wasm module where an item is…",null,null],[13,"Global","","A global variable with the specified content type",17,null],[13,"Memory","","A linear memory with the specified limits",17,null],[13,"Event","","An event definition.",17,null],[13,"Table","","A table with the specified element type and limits",17,null],[13,"Function","","A function type where the index points to the type section…",17,null],[13,"Instance","","An instance where the index points to the type section and…",17,null],[13,"Module","","A module where the index points to the type section and…",17,null],[3,"Global","","A WebAssembly global.",null,null],[12,"wasm_ty","","The Wasm type of the value stored in the global.",18,null],[12,"ty","","The Cranelift IR type of the value stored in the global.",18,null],[12,"mutability","","A flag indicating whether the value may change at runtime.",18,null],[12,"initializer","","The source of the initial value.",18,null],[4,"GlobalInit","","Globals are initialized via the `const` operators or by…",null,null],[13,"I32Const","","An `i32.const`.",19,null],[13,"I64Const","","An `i64.const`.",19,null],[13,"F32Const","","An `f32.const`.",19,null],[13,"F64Const","","An `f64.const`.",19,null],[13,"V128Const","","A `vconst`.",19,null],[13,"GetGlobal","","A `global.get` of another global.",19,null],[13,"RefNullConst","","A `ref.null`.",19,null],[13,"RefFunc","","A `ref.func <index>`.",19,null],[13,"Import","","< The global is imported from, and thus initialized by, a…",19,null],[3,"Table","","WebAssembly table.",null,null],[12,"wasm_ty","","The table elements\' Wasm type.",20,null],[12,"ty","","The table elements\' Cranelift type.",20,null],[12,"minimum","","The minimum number of elements in the table.",20,null],[12,"maximum","","The maximum number of elements in the table.",20,null],[4,"TableElementType","","WebAssembly table element. Can be a function or a scalar…",null,null],[13,"Val","","A scalar type.",21,null],[13,"Func","","A function.",21,null],[3,"Memory","","WebAssembly linear memory.",null,null],[12,"minimum","","The minimum number of pages in the memory.",22,null],[12,"maximum","","The maximum number of pages in the memory.",22,null],[12,"shared","","Whether the memory may be shared between multiple threads.",22,null],[3,"Event","","WebAssembly event.",null,null],[12,"ty","","The event signature type.",23,null],[5,"type_to_type","","Helper function translating wasmparser types to Cranelift…",null,[[["type",4]],[["type",3],["wasmresult",6]]]],[5,"tabletype_to_type","","Helper function translating wasmparser possible table…",null,[[["type",4]],[["wasmresult",6],["option",4]]]],[5,"blocktype_params_results","","Get the parameter and result types for the given Wasm…",null,[[["typeorfunctype",4],["funcvalidator",3]],["wasmresult",6]]],[5,"block_with_params","","Create a `Block` with the given Wasm parameters.",null,[[["functionbuilder",3]],[["block",3],["wasmresult",6]]]],[5,"f32_translation","","Turns a `wasmparser` `f32` into a `Cranelift` one.",null,[[["ieee32",3]],["ieee32",3]]],[5,"f64_translation","","Turns a `wasmparser` `f64` into a `Cranelift` one.",null,[[["ieee64",3]],["ieee64",3]]],[5,"get_vmctx_value_label","","Special VMContext value label. It is tracked as…",null,[[],["valuelabel",3]]],[17,"VERSION","","Version number of this crate.",null,null],[14,"wasm_unsupported","","Return an `Err(WasmError::Unsupported(msg))` where `msg`…",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"equivalent","","",15,[[]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"equivalent","","",14,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_string","","",12,[[],["string",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"equivalent","","",10,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"key","","",27,[[]]],[11,"equivalent","","",27,[[]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"key","","",28,[[]]],[11,"equivalent","","",28,[[]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"key","","",29,[[]]],[11,"equivalent","","",29,[[]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"key","","",30,[[]]],[11,"equivalent","","",30,[[]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"key","","",31,[[]]],[11,"equivalent","","",31,[[]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"key","","",32,[[]]],[11,"equivalent","","",32,[[]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"key","","",33,[[]]],[11,"equivalent","","",33,[[]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"key","","",34,[[]]],[11,"equivalent","","",34,[[]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"key","","",35,[[]]],[11,"equivalent","","",35,[[]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"key","","",36,[[]]],[11,"equivalent","","",36,[[]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"key","","",37,[[]]],[11,"equivalent","","",37,[[]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"key","","",38,[[]]],[11,"equivalent","","",38,[[]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"key","","",39,[[]]],[11,"equivalent","","",39,[[]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"key","","",40,[[]]],[11,"equivalent","","",40,[[]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"key","","",41,[[]]],[11,"equivalent","","",41,[[]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"key","","",42,[[]]],[11,"equivalent","","",42,[[]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"key","","",43,[[]]],[11,"equivalent","","",43,[[]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"equivalent","","",16,[[]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"equivalent","","",18,[[]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"equivalent","","",19,[[]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"equivalent","","",20,[[]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"equivalent","","",21,[[]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"equivalent","","",22,[[]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"equivalent","","",23,[[]]],[11,"target_config","","",5,[[],["targetfrontendconfig",3]]],[11,"declare_type_func","","",5,[[["wasmfunctype",3],["signature",3]],["wasmresult",6]]],[11,"declare_func_import","","",5,[[["option",4],["typeindex",3]],["wasmresult",6]]],[11,"declare_func_type","","",5,[[["typeindex",3]],["wasmresult",6]]],[11,"declare_global","","",5,[[["global",3]],["wasmresult",6]]],[11,"declare_global_import","","",5,[[["option",4],["global",3]],["wasmresult",6]]],[11,"declare_table","","",5,[[["table",3]],["wasmresult",6]]],[11,"declare_table_import","","",5,[[["table",3],["option",4]],["wasmresult",6]]],[11,"declare_table_elements","","",5,[[["globalindex",3],["option",4],["box",3],["tableindex",3]],["wasmresult",6]]],[11,"declare_passive_element","","",5,[[["box",3],["elemindex",3]],["wasmresult",6]]],[11,"declare_passive_data","","",5,[[["dataindex",3]],["wasmresult",6]]],[11,"declare_memory","","",5,[[["memory",3]],["wasmresult",6]]],[11,"declare_memory_import","","",5,[[["memory",3],["option",4]],["wasmresult",6]]],[11,"declare_data_initialization","","",5,[[["globalindex",3],["memoryindex",3],["option",4]],["wasmresult",6]]],[11,"declare_func_export","","",5,[[["funcindex",3]],["wasmresult",6]]],[11,"declare_table_export","","",5,[[["tableindex",3]],["wasmresult",6]]],[11,"declare_memory_export","","",5,[[["memoryindex",3]],["wasmresult",6]]],[11,"declare_global_export","","",5,[[["globalindex",3]],["wasmresult",6]]],[11,"declare_start_func","","",5,[[["funcindex",3]],["wasmresult",6]]],[11,"define_function_body","","",5,[[["validatorresources",3],["functionbody",3],["funcvalidator",3]],["wasmresult",6]]],[11,"declare_module_name","","",5,[[]]],[11,"declare_func_name","","",5,[[["funcindex",3]]]],[11,"wasm_features","","",5,[[],["wasmfeatures",3]]],[11,"from","","Convert from a `BinaryReaderError` to a `WasmError`.",12,[[["binaryreadererror",3]]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"eq","","",15,[[["wasmtype",4]]]],[11,"eq","","",14,[[["wasmfunctype",3]]]],[11,"ne","","",14,[[["wasmfunctype",3]]]],[11,"eq","","",10,[[["returnmode",4]]]],[11,"eq","","",27,[[["funcindex",3]]]],[11,"ne","","",27,[[["funcindex",3]]]],[11,"eq","","",28,[[["definedfuncindex",3]]]],[11,"ne","","",28,[[["definedfuncindex",3]]]],[11,"eq","","",29,[[["definedtableindex",3]]]],[11,"ne","","",29,[[["definedtableindex",3]]]],[11,"eq","","",30,[[["definedmemoryindex",3]]]],[11,"ne","","",30,[[["definedmemoryindex",3]]]],[11,"eq","","",31,[[["definedglobalindex",3]]]],[11,"ne","","",31,[[["definedglobalindex",3]]]],[11,"eq","","",32,[[["tableindex",3]]]],[11,"ne","","",32,[[["tableindex",3]]]],[11,"eq","","",33,[[["globalindex",3]]]],[11,"ne","","",33,[[["globalindex",3]]]],[11,"eq","","",34,[[["memoryindex",3]]]],[11,"ne","","",34,[[["memoryindex",3]]]],[11,"eq","","",35,[[["signatureindex",3]]]],[11,"ne","","",35,[[["signatureindex",3]]]],[11,"eq","","",36,[[["dataindex",3]]]],[11,"ne","","",36,[[["dataindex",3]]]],[11,"eq","","",37,[[["elemindex",3]]]],[11,"ne","","",37,[[["elemindex",3]]]],[11,"eq","","",38,[[["typeindex",3]]]],[11,"ne","","",38,[[["typeindex",3]]]],[11,"eq","","",39,[[["moduleindex",3]]]],[11,"ne","","",39,[[["moduleindex",3]]]],[11,"eq","","",40,[[["instanceindex",3]]]],[11,"ne","","",40,[[["instanceindex",3]]]],[11,"eq","","",41,[[["eventindex",3]]]],[11,"ne","","",41,[[["eventindex",3]]]],[11,"eq","","",42,[[["moduletypeindex",3]]]],[11,"ne","","",42,[[["moduletypeindex",3]]]],[11,"eq","","",43,[[["instancetypeindex",3]]]],[11,"ne","","",43,[[["instancetypeindex",3]]]],[11,"eq","","",16,[[["entityindex",4]]]],[11,"ne","","",16,[[["entityindex",4]]]],[11,"eq","","",18,[[["global",3]]]],[11,"ne","","",18,[[["global",3]]]],[11,"eq","","",19,[[["globalinit",4]]]],[11,"ne","","",19,[[["globalinit",4]]]],[11,"eq","","",20,[[["table",3]]]],[11,"ne","","",20,[[["table",3]]]],[11,"eq","","",21,[[["tableelementtype",4]]]],[11,"ne","","",21,[[["tableelementtype",4]]]],[11,"eq","","",22,[[["memory",3]]]],[11,"ne","","",22,[[["memory",3]]]],[11,"eq","","",23,[[["event",3]]]],[11,"ne","","",23,[[["event",3]]]],[11,"cmp","","",27,[[["funcindex",3]],["ordering",4]]],[11,"cmp","","",28,[[["definedfuncindex",3]],["ordering",4]]],[11,"cmp","","",29,[[["definedtableindex",3]],["ordering",4]]],[11,"cmp","","",30,[[["definedmemoryindex",3]],["ordering",4]]],[11,"cmp","","",31,[[["definedglobalindex",3]],["ordering",4]]],[11,"cmp","","",32,[[["tableindex",3]],["ordering",4]]],[11,"cmp","","",33,[[["globalindex",3]],["ordering",4]]],[11,"cmp","","",34,[[["memoryindex",3]],["ordering",4]]],[11,"cmp","","",35,[[["signatureindex",3]],["ordering",4]]],[11,"cmp","","",36,[[["dataindex",3]],["ordering",4]]],[11,"cmp","","",37,[[["elemindex",3]],["ordering",4]]],[11,"cmp","","",38,[[["typeindex",3]],["ordering",4]]],[11,"cmp","","",39,[[["moduleindex",3]],["ordering",4]]],[11,"cmp","","",40,[[["instanceindex",3]],["ordering",4]]],[11,"cmp","","",41,[[["eventindex",3]],["ordering",4]]],[11,"cmp","","",42,[[["moduletypeindex",3]],["ordering",4]]],[11,"cmp","","",43,[[["instancetypeindex",3]],["ordering",4]]],[11,"cmp","","",16,[[["entityindex",4]],["ordering",4]]],[11,"partial_cmp","","",27,[[["funcindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",27,[[["funcindex",3]]]],[11,"le","","",27,[[["funcindex",3]]]],[11,"gt","","",27,[[["funcindex",3]]]],[11,"ge","","",27,[[["funcindex",3]]]],[11,"partial_cmp","","",28,[[["definedfuncindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",28,[[["definedfuncindex",3]]]],[11,"le","","",28,[[["definedfuncindex",3]]]],[11,"gt","","",28,[[["definedfuncindex",3]]]],[11,"ge","","",28,[[["definedfuncindex",3]]]],[11,"partial_cmp","","",29,[[["definedtableindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",29,[[["definedtableindex",3]]]],[11,"le","","",29,[[["definedtableindex",3]]]],[11,"gt","","",29,[[["definedtableindex",3]]]],[11,"ge","","",29,[[["definedtableindex",3]]]],[11,"partial_cmp","","",30,[[["definedmemoryindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",30,[[["definedmemoryindex",3]]]],[11,"le","","",30,[[["definedmemoryindex",3]]]],[11,"gt","","",30,[[["definedmemoryindex",3]]]],[11,"ge","","",30,[[["definedmemoryindex",3]]]],[11,"partial_cmp","","",31,[[["definedglobalindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",31,[[["definedglobalindex",3]]]],[11,"le","","",31,[[["definedglobalindex",3]]]],[11,"gt","","",31,[[["definedglobalindex",3]]]],[11,"ge","","",31,[[["definedglobalindex",3]]]],[11,"partial_cmp","","",32,[[["tableindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",32,[[["tableindex",3]]]],[11,"le","","",32,[[["tableindex",3]]]],[11,"gt","","",32,[[["tableindex",3]]]],[11,"ge","","",32,[[["tableindex",3]]]],[11,"partial_cmp","","",33,[[["globalindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",33,[[["globalindex",3]]]],[11,"le","","",33,[[["globalindex",3]]]],[11,"gt","","",33,[[["globalindex",3]]]],[11,"ge","","",33,[[["globalindex",3]]]],[11,"partial_cmp","","",34,[[["memoryindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",34,[[["memoryindex",3]]]],[11,"le","","",34,[[["memoryindex",3]]]],[11,"gt","","",34,[[["memoryindex",3]]]],[11,"ge","","",34,[[["memoryindex",3]]]],[11,"partial_cmp","","",35,[[["signatureindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",35,[[["signatureindex",3]]]],[11,"le","","",35,[[["signatureindex",3]]]],[11,"gt","","",35,[[["signatureindex",3]]]],[11,"ge","","",35,[[["signatureindex",3]]]],[11,"partial_cmp","","",36,[[["dataindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",36,[[["dataindex",3]]]],[11,"le","","",36,[[["dataindex",3]]]],[11,"gt","","",36,[[["dataindex",3]]]],[11,"ge","","",36,[[["dataindex",3]]]],[11,"partial_cmp","","",37,[[["elemindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",37,[[["elemindex",3]]]],[11,"le","","",37,[[["elemindex",3]]]],[11,"gt","","",37,[[["elemindex",3]]]],[11,"ge","","",37,[[["elemindex",3]]]],[11,"partial_cmp","","",38,[[["typeindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",38,[[["typeindex",3]]]],[11,"le","","",38,[[["typeindex",3]]]],[11,"gt","","",38,[[["typeindex",3]]]],[11,"ge","","",38,[[["typeindex",3]]]],[11,"partial_cmp","","",39,[[["moduleindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",39,[[["moduleindex",3]]]],[11,"le","","",39,[[["moduleindex",3]]]],[11,"gt","","",39,[[["moduleindex",3]]]],[11,"ge","","",39,[[["moduleindex",3]]]],[11,"partial_cmp","","",40,[[["instanceindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",40,[[["instanceindex",3]]]],[11,"le","","",40,[[["instanceindex",3]]]],[11,"gt","","",40,[[["instanceindex",3]]]],[11,"ge","","",40,[[["instanceindex",3]]]],[11,"partial_cmp","","",41,[[["eventindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",41,[[["eventindex",3]]]],[11,"le","","",41,[[["eventindex",3]]]],[11,"gt","","",41,[[["eventindex",3]]]],[11,"ge","","",41,[[["eventindex",3]]]],[11,"partial_cmp","","",42,[[["moduletypeindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",42,[[["moduletypeindex",3]]]],[11,"le","","",42,[[["moduletypeindex",3]]]],[11,"gt","","",42,[[["moduletypeindex",3]]]],[11,"ge","","",42,[[["moduletypeindex",3]]]],[11,"partial_cmp","","",43,[[["instancetypeindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",43,[[["instancetypeindex",3]]]],[11,"le","","",43,[[["instancetypeindex",3]]]],[11,"gt","","",43,[[["instancetypeindex",3]]]],[11,"ge","","",43,[[["instancetypeindex",3]]]],[11,"partial_cmp","","",16,[[["entityindex",4]],[["ordering",4],["option",4]]]],[11,"lt","","",16,[[["entityindex",4]]]],[11,"le","","",16,[[["entityindex",4]]]],[11,"gt","","",16,[[["entityindex",4]]]],[11,"ge","","",16,[[["entityindex",4]]]],[11,"hash","","",15,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"try_from","","",15,[[["type",4]],["result",4]]],[11,"try_from","","",14,[[["functype",3]],["result",4]]],[11,"clone","","",15,[[],["wasmtype",4]]],[11,"clone","","",14,[[],["wasmfunctype",3]]],[11,"clone","","",7,[[],["globalvariable",4]]],[11,"clone","","",10,[[],["returnmode",4]]],[11,"clone","","",27,[[],["funcindex",3]]],[11,"clone","","",28,[[],["definedfuncindex",3]]],[11,"clone","","",29,[[],["definedtableindex",3]]],[11,"clone","","",30,[[],["definedmemoryindex",3]]],[11,"clone","","",31,[[],["definedglobalindex",3]]],[11,"clone","","",32,[[],["tableindex",3]]],[11,"clone","","",33,[[],["globalindex",3]]],[11,"clone","","",34,[[],["memoryindex",3]]],[11,"clone","","",35,[[],["signatureindex",3]]],[11,"clone","","",36,[[],["dataindex",3]]],[11,"clone","","",37,[[],["elemindex",3]]],[11,"clone","","",38,[[],["typeindex",3]]],[11,"clone","","",39,[[],["moduleindex",3]]],[11,"clone","","",40,[[],["instanceindex",3]]],[11,"clone","","",41,[[],["eventindex",3]]],[11,"clone","","",42,[[],["moduletypeindex",3]]],[11,"clone","","",43,[[],["instancetypeindex",3]]],[11,"clone","","",16,[[],["entityindex",4]]],[11,"clone","","",17,[[],["entitytype",4]]],[11,"clone","","",18,[[],["global",3]]],[11,"clone","","",19,[[],["globalinit",4]]],[11,"clone","","",20,[[],["table",3]]],[11,"clone","","",21,[[],["tableelementtype",4]]],[11,"clone","","",22,[[],["memory",3]]],[11,"clone","","",23,[[],["event",3]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","","",14,[[],["result",4]]],[11,"deserialize","","",27,[[],["result",4]]],[11,"deserialize","","",32,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","","",35,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"deserialize","","",37,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"deserialize","","",39,[[],["result",4]]],[11,"deserialize","","",40,[[],["result",4]]],[11,"deserialize","","",41,[[],["result",4]]],[11,"deserialize","","",42,[[],["result",4]]],[11,"deserialize","","",43,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","","",17,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]],[11,"deserialize","","",20,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",22,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","","",32,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","","",35,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"serialize","","",40,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","","",42,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",22,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"new","","",27,[[]]],[11,"index","","",27,[[]]],[11,"new","","",28,[[]]],[11,"index","","",28,[[]]],[11,"new","","",29,[[]]],[11,"index","","",29,[[]]],[11,"new","","",30,[[]]],[11,"index","","",30,[[]]],[11,"new","","",31,[[]]],[11,"index","","",31,[[]]],[11,"new","","",32,[[]]],[11,"index","","",32,[[]]],[11,"new","","",33,[[]]],[11,"index","","",33,[[]]],[11,"new","","",34,[[]]],[11,"index","","",34,[[]]],[11,"new","","",35,[[]]],[11,"index","","",35,[[]]],[11,"new","","",36,[[]]],[11,"index","","",36,[[]]],[11,"new","","",37,[[]]],[11,"index","","",37,[[]]],[11,"new","","",38,[[]]],[11,"index","","",38,[[]]],[11,"new","","",39,[[]]],[11,"index","","",39,[[]]],[11,"new","","",40,[[]]],[11,"index","","",40,[[]]],[11,"new","","",41,[[]]],[11,"index","","",41,[[]]],[11,"new","","",42,[[]]],[11,"index","","",42,[[]]],[11,"new","","",43,[[]]],[11,"index","","",43,[[]]],[11,"reserved_value","","",27,[[],["funcindex",3]]],[11,"is_reserved_value","","",27,[[]]],[11,"reserved_value","","",28,[[],["definedfuncindex",3]]],[11,"is_reserved_value","","",28,[[]]],[11,"reserved_value","","",29,[[],["definedtableindex",3]]],[11,"is_reserved_value","","",29,[[]]],[11,"reserved_value","","",30,[[],["definedmemoryindex",3]]],[11,"is_reserved_value","","",30,[[]]],[11,"reserved_value","","",31,[[],["definedglobalindex",3]]],[11,"is_reserved_value","","",31,[[]]],[11,"reserved_value","","",32,[[],["tableindex",3]]],[11,"is_reserved_value","","",32,[[]]],[11,"reserved_value","","",33,[[],["globalindex",3]]],[11,"is_reserved_value","","",33,[[]]],[11,"reserved_value","","",34,[[],["memoryindex",3]]],[11,"is_reserved_value","","",34,[[]]],[11,"reserved_value","","",35,[[],["signatureindex",3]]],[11,"is_reserved_value","","",35,[[]]],[11,"reserved_value","","",36,[[],["dataindex",3]]],[11,"is_reserved_value","","",36,[[]]],[11,"reserved_value","","",37,[[],["elemindex",3]]],[11,"is_reserved_value","","",37,[[]]],[11,"reserved_value","","",38,[[],["typeindex",3]]],[11,"is_reserved_value","","",38,[[]]],[11,"reserved_value","","",39,[[],["moduleindex",3]]],[11,"is_reserved_value","","",39,[[]]],[11,"reserved_value","","",40,[[],["instanceindex",3]]],[11,"is_reserved_value","","",40,[[]]],[11,"reserved_value","","",41,[[],["eventindex",3]]],[11,"is_reserved_value","","",41,[[]]],[11,"reserved_value","","",42,[[],["moduletypeindex",3]]],[11,"is_reserved_value","","",42,[[]]],[11,"reserved_value","","",43,[[],["instancetypeindex",3]]],[11,"is_reserved_value","","",43,[[]]],[11,"new","","Creates a new FunctionBuilder structure that will operate…",0,[[["function",3],["functionbuildercontext",3]],["functionbuilder",3]]],[11,"current_block","","Get the block that this builder is currently at.",0,[[],[["block",3],["option",4]]]],[11,"set_srcloc","","Set the source location that should be assigned to all new…",0,[[["sourceloc",3]]]],[11,"create_block","","Creates a new `Block` and returns its reference.",0,[[],["block",3]]],[11,"insert_block_after","","Insert `block` in the layout after the existing block…",0,[[["block",3]]]],[11,"switch_to_block","","After the call to this function, new instructions will be…",0,[[["block",3]]]],[11,"seal_block","","Declares that all the predecessors of this block are known.",0,[[["block",3]]]],[11,"seal_all_blocks","","Effectively calls seal_block on all unsealed blocks in the…",0,[[]]],[11,"declare_var","","In order to use a variable in a `use_var`, you need to…",0,[[["variable",3],["type",3]]]],[11,"use_var","","Returns the Cranelift IR value corresponding to the…",0,[[["variable",3]],["value",3]]],[11,"def_var","","Register a new definition of a user variable. The type of…",0,[[["variable",3],["value",3]]]],[11,"set_val_label","","Set label for Value",0,[[["valuelabel",3],["value",3]]]],[11,"create_jump_table","","Creates a jump table in the function, to be used by…",0,[[["jumptabledata",3]],["jumptable",3]]],[11,"create_stack_slot","","Creates a stack slot in the function, to be used by…",0,[[["stackslotdata",3]],["stackslot",3]]],[11,"import_signature","","Adds a signature which can later be used to declare an…",0,[[["signature",3]],["sigref",3]]],[11,"import_function","","Declare an external function import.",0,[[["extfuncdata",3]],["funcref",3]]],[11,"create_global_value","","Declares a global value accessible to the function.",0,[[["globalvaluedata",4]],["globalvalue",3]]],[11,"create_heap","","Declares a heap accessible to the function.",0,[[["heapdata",3]],["heap",3]]],[11,"ins","","Returns an object with the `InstBuilder` trait that allows…",0,[[],["funcinstbuilder",3]]],[11,"ensure_inserted_block","","Make sure that the current block is inserted in the layout.",0,[[]]],[11,"cursor","","Returns a `FuncCursor` pointed at the current position…",0,[[],["funccursor",3]]],[11,"append_block_params_for_function_params","","Append parameters to the given `Block` corresponding to…",0,[[["block",3]]]],[11,"append_block_params_for_function_returns","","Append parameters to the given `Block` corresponding to…",0,[[["block",3]]]],[11,"finalize","","Declare that translation of the current function is…",0,[[]]],[11,"block_params","","Retrieves all the parameters for a `Block` currently…",0,[[["block",3]]]],[11,"signature","","Retrieves the signature with reference `sigref` previously…",0,[[["sigref",3]],[["option",4],["signature",3]]]],[11,"append_block_param","","Creates a parameter for a specific `Block` by appending it…",0,[[["block",3],["type",3]],["value",3]]],[11,"inst_results","","Returns the result values of an instruction.",0,[[["inst",3]]]],[11,"change_jump_destination","","Changes the destination of a jump instruction after…",0,[[["inst",3],["block",3]]]],[11,"is_unreachable","","Returns `true` if and only if the current `Block` is…",0,[[]]],[11,"is_pristine","","Returns `true` if and only if no instructions have been…",0,[[]]],[11,"is_filled","","Returns `true` if and only if a terminator instruction has…",0,[[]]],[11,"display","","Returns a displayable object for the function as it is.",0,[[],["displayfunction",3]]],[11,"call_memcpy","","Calls libc.memcpy",0,[[["targetfrontendconfig",3],["value",3]]]],[11,"emit_small_memory_copy","","Optimised memcpy or memmove for small copies.",0,[[["targetfrontendconfig",3],["value",3]]]],[11,"call_memset","","Calls libc.memset",0,[[["targetfrontendconfig",3],["value",3]]]],[11,"emit_small_memset","","Calls libc.memset",0,[[["targetfrontendconfig",3],["value",3]]]],[11,"call_memmove","","Calls libc.memmove",0,[[["targetfrontendconfig",3],["value",3]]]],[11,"new","","Creates a new `DummyEnvironment` instance.",5,[[["targetfrontendconfig",3],["returnmode",4]]]],[11,"func_env","","Return a `DummyFuncEnvironment` for translating functions…",5,[[],["dummyfuncenvironment",3]]],[11,"get_num_func_imports","","Return the number of imported functions within this…",5,[[]]],[11,"get_func_name","","Return the name of the function, if a name for the…",5,[[["funcindex",3]],["option",4]]],[11,"test_expected_reachability","","Test reachability bits before and after every opcode…",5,[[["vec",3]]]],[11,"pointer_type","","Get the Cranelift integer type to use for native pointers.",11,[[],["type",3]]],[11,"pointer_bytes","","Get the size of a native pointer, in bytes.",11,[[]]],[11,"reference_type","","Get the Cranelift reference type to use for the given Wasm…",11,[[["wasmtype",4]],["type",3]]],[11,"is_wasm_parameter","","Is the given parameter of the given function a wasm-level…",6,[[["signature",3]]]],[11,"is_wasm_return","","Is the given return of the given function a wasm-level…",6,[[["signature",3]]]],[11,"return_mode","","Should the code be structured to use a single…",6,[[],["returnmode",4]]],[11,"translate_call","","Translate a `call` WebAssembly instruction at `pos`.",6,[[["funcindex",3],["funcref",3],["funccursor",3]],[["inst",3],["wasmresult",6]]]],[11,"translate_ref_null","","Translate a `ref.null T` WebAssembly instruction.",6,[[["wasmtype",4],["funccursor",3]],[["wasmresult",6],["value",3]]]],[11,"translate_ref_is_null","","Translate a `ref.is_null` WebAssembly instruction.",6,[[["value",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[11,"translate_loop_header","","Emit code at the beginning of every wasm loop.",6,[[["funccursor",3]],["wasmresult",6]]],[11,"before_translate_operator","","Optional callback for the `FunctionEnvironment` performing…",6,[[["operator",4],["functionbuilder",3],["functranslationstate",3]],["wasmresult",6]]],[11,"after_translate_operator","","Optional callback for the `FunctionEnvironment` performing…",6,[[["operator",4],["functionbuilder",3],["functranslationstate",3]],["wasmresult",6]]],[11,"before_translate_function","","Optional callback for the `FunctionEnvironment` performing…",6,[[["functionbuilder",3],["functranslationstate",3]],["wasmresult",6]]],[11,"after_translate_function","","Optional callback for the `FunctionEnvironment` performing…",6,[[["functionbuilder",3],["functranslationstate",3]],["wasmresult",6]]],[11,"reserve_types","","Provides the number of types up front. By default this…",9,[[],["wasmresult",6]]],[11,"declare_type_module","","Declares a module type signature to the environment.",9,[[],["wasmresult",6]]],[11,"declare_type_instance","","Declares an instance type signature to the environment.",9,[[],["wasmresult",6]]],[11,"type_to_signature","","Translates a type index to its signature index, only…",9,[[["typeindex",3]],[["wasmresult",6],["signatureindex",3]]]],[11,"type_to_module_type","","Translates a type index to its module type index, only…",9,[[["typeindex",3]],[["moduletypeindex",3],["wasmresult",6]]]],[11,"type_to_instance_type","","Translates a type index to its instance type index, only…",9,[[["typeindex",3]],[["instancetypeindex",3],["wasmresult",6]]]],[11,"reserve_imports","","Provides the number of imports up front. By default this…",9,[[],["wasmresult",6]]],[11,"declare_event_import","","Declares an event import to the environment.",9,[[["option",4],["event",3]],["wasmresult",6]]],[11,"declare_module_import","","Declares a module import to the environment.",9,[[["option",4],["typeindex",3]],["wasmresult",6]]],[11,"declare_instance_import","","Declares an instance import to the environment.",9,[[["option",4],["typeindex",3]],["wasmresult",6]]],[11,"finish_imports","","Notifies the implementation that all imports have been…",9,[[],["wasmresult",6]]],[11,"reserve_func_types","","Provides the number of defined functions up front. By…",9,[[],["wasmresult",6]]],[11,"reserve_tables","","Provides the number of defined tables up front. By default…",9,[[],["wasmresult",6]]],[11,"reserve_memories","","Provides the number of defined memories up front. By…",9,[[],["wasmresult",6]]],[11,"reserve_events","","Provides the number of defined events up front. By default…",9,[[],["wasmresult",6]]],[11,"declare_event","","Declares an event to the environment",9,[[["event",3]],["wasmresult",6]]],[11,"reserve_globals","","Provides the number of defined globals up front. By…",9,[[],["wasmresult",6]]],[11,"reserve_exports","","Provides the number of exports up front. By default this…",9,[[],["wasmresult",6]]],[11,"declare_event_export","","Declares an event export to the environment.",9,[[["eventindex",3]],["wasmresult",6]]],[11,"declare_instance_export","","Declares an instance export to the environment.",9,[[["instanceindex",3]],["wasmresult",6]]],[11,"declare_module_export","","Declares an instance export to the environment.",9,[[["moduleindex",3]],["wasmresult",6]]],[11,"finish_exports","","Notifies the implementation that all exports have been…",9,[[],["wasmresult",6]]],[11,"reserve_table_elements","","Provides the number of element initializers up front. By…",9,[[],["wasmresult",6]]],[11,"reserve_passive_data","","Provides the number of passive data segments up front.",9,[[],["wasmresult",6]]],[11,"reserve_function_bodies","","Indicates how many functions the code section reports and…",9,[[]]],[11,"reserve_data_initializers","","Provides the number of data initializers up front. By…",9,[[],["wasmresult",6]]],[11,"declare_module_name","","Declares the name of a module to the environment.",9,[[]]],[11,"declare_func_name","","Declares the name of a function to the environment.",9,[[["funcindex",3]]]],[11,"declare_local_name","","Declares the name of a function\'s local to the environment.",9,[[["funcindex",3]]]],[11,"custom_section","","Indicates that a custom section has been found in the wasm…",9,[[],["wasmresult",6]]],[11,"wasm_features","","Returns the list of enabled wasm features this translation…",9,[[],["wasmfeatures",3]]],[11,"reserve_modules","","Indicates that this module will have `amount` submodules.",9,[[]]],[11,"module_start","","Called at the beginning of translating a module.",9,[[]]],[11,"module_end","","Called at the end of translating a module.",9,[[]]],[11,"reserve_instances","","Indicates that this module will have `amount` instances.",9,[[]]],[11,"declare_instance","","Declares a new instance which this module will instantiate…",9,[[["vec",3],["moduleindex",3]],["wasmresult",6]]],[11,"declare_alias","","Declares a new alias being added to this module.",9,[[["alias",4]],["wasmresult",6]]],[11,"new","","Create a new translator.",24,[[]]],[11,"translate","","Translate a binary WebAssembly function.",24,[[["funcvalidator",3],["function",3]],["wasmresult",6]]],[11,"translate_body","","Translate a binary WebAssembly function from a…",24,[[["funcvalidator",3],["function",3],["functionbody",3]],["wasmresult",6]]],[11,"reachable","","True if the current translation state expresses reachable…",25,[[]]],[11,"new","","Creates a new empty ModuleTranslationState.",26,[[]]],[11,"from_func_sigs","","Create a new ModuleTranslationState with the given…",26,[[],["wasmresult",6]]],[11,"from_u32","","Create a new instance from a `u32`.",27,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",27,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",28,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",28,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",29,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",29,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",30,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",30,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",31,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",31,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",32,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",32,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",33,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",33,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",34,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",34,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",35,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",35,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",36,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",36,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",37,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",37,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",38,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",38,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",39,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",39,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",40,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",40,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",41,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",41,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",42,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",42,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",43,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",43,[[]]]],"p":[[3,"FunctionBuilder"],[4,"Alias"],[13,"OuterModule"],[13,"OuterType"],[13,"InstanceExport"],[3,"DummyEnvironment"],[8,"FuncEnvironment"],[4,"GlobalVariable"],[13,"Memory"],[8,"ModuleEnvironment"],[4,"ReturnMode"],[8,"TargetEnvironment"],[4,"WasmError"],[13,"InvalidWebAssembly"],[3,"WasmFuncType"],[4,"WasmType"],[4,"EntityIndex"],[4,"EntityType"],[3,"Global"],[4,"GlobalInit"],[3,"Table"],[4,"TableElementType"],[3,"Memory"],[3,"Event"],[3,"FuncTranslator"],[3,"FuncTranslationState"],[3,"ModuleTranslationState"],[3,"FuncIndex"],[3,"DefinedFuncIndex"],[3,"DefinedTableIndex"],[3,"DefinedMemoryIndex"],[3,"DefinedGlobalIndex"],[3,"TableIndex"],[3,"GlobalIndex"],[3,"MemoryIndex"],[3,"SignatureIndex"],[3,"DataIndex"],[3,"ElemIndex"],[3,"TypeIndex"],[3,"ModuleIndex"],[3,"InstanceIndex"],[3,"EventIndex"],[3,"ModuleTypeIndex"],[3,"InstanceTypeIndex"]]},\
"fib":{"doc":"","i":[[5,"fib","fib","",null,[[]]]],"p":[]},\
"lightbeam":{"doc":"","i":[[0,"microwasm","lightbeam","",null,null],[0,"sint","lightbeam::microwasm","",null,null],[17,"I32","lightbeam::microwasm::sint","",null,null],[17,"I64","","",null,null],[17,"U32","","",null,null],[17,"U64","","",null,null],[5,"dis","lightbeam::microwasm","",null,[[],["result",6]]],[3,"Ieee32","","",null,null],[3,"Ieee64","","",null,null],[11,"to_bits","","",0,[[]]],[11,"from_bits","","",0,[[]]],[11,"to_bits","","",1,[[]]],[11,"from_bits","","",1,[[]]],[4,"Value","","A constant value embedded in the instructions",null,null],[13,"I32","","",2,null],[13,"I64","","",2,null],[13,"F32","","",2,null],[13,"F64","","",2,null],[11,"as_int","","",2,[[],["option",4]]],[11,"as_bytes","","",2,[[]]],[11,"as_i32","","",2,[[],["option",4]]],[11,"as_i64","","",2,[[],["option",4]]],[11,"as_f32","","",2,[[],[["ieee32",3],["option",4]]]],[11,"as_f64","","",2,[[],[["ieee64",3],["option",4]]]],[11,"type_","","",2,[[],["signlesstype",6]]],[4,"Signedness","","Whether to interpret an integer as signed or unsigned",null,null],[13,"Signed","","",3,null],[13,"Unsigned","","",3,null],[4,"Size","","",null,null],[13,"_32","","",4,null],[13,"_64","","",4,null],[3,"SignfulInt","","",null,null],[12,"0","","",5,null],[12,"1","","",5,null],[4,"Type","","",null,null],[13,"Int","","",6,null],[13,"Float","","",6,null],[8,"IntoType","","",null,null],[10,"into_type","","",7,[[]]],[11,"for_","","",6,[[]]],[6,"SignlessType","","",null,null],[6,"SignfulType","","",null,null],[17,"I32","","",null,null],[17,"I64","","",null,null],[17,"F32","","",null,null],[17,"F64","","",null,null],[17,"SI32","","",null,null],[17,"SI64","","",null,null],[17,"SU32","","",null,null],[17,"SU64","","",null,null],[17,"SF32","","",null,null],[17,"SF64","","",null,null],[11,"from_wasm_block","","",6,[[["type",4]],[["error",4],["result",4],["option",4]]]],[11,"from_wasm","","",6,[[["type",4]],[["error",4],["result",4]]]],[11,"from_wasm_block","","",8,[[["type",4]],[["error",4],["result",4],["option",4]]]],[11,"from_wasm","","",8,[[["type",4]],[["error",4],["result",4]]]],[3,"BrTable","","",null,null],[12,"targets","","",9,null],[12,"default","","",9,null],[4,"NameTag","","",null,null],[13,"Header","","",10,null],[13,"Else","","",10,null],[13,"End","","",10,null],[6,"WasmLabel","","",null,null],[6,"OperatorFromWasm","","",null,null],[4,"BrTarget","","",null,null],[13,"Return","","",11,null],[13,"Label","","",11,null],[11,"label","","",11,[[],["option",4]]],[3,"BrTargetDrop","","",null,null],[12,"target","","",12,null],[12,"to_drop","","",12,null],[3,"MemoryImmediate","","",null,null],[12,"flags","","",13,null],[12,"offset","","",13,null],[4,"Operator","","",null,null],[13,"Unreachable","","Explicit trap instruction",14,null],[13,"Block","","Define metadata for a block - its label, its signature,…",14,null],[12,"label","lightbeam::microwasm::Operator","",15,null],[12,"params","","",15,null],[12,"has_backwards_callers","","",15,null],[12,"num_callers","","",15,null],[13,"Label","lightbeam::microwasm","Start a new block. It is an error if the previous block…",14,null],[13,"Br","","Unconditionally break to a new block. This the parameters…",14,null],[12,"target","lightbeam::microwasm::Operator","Returning from the function is just calling the \\\"return\\\"…",16,null],[13,"BrIf","lightbeam::microwasm","Pop a value off the top of the stack, jump to the `else_`…",14,null],[12,"then","lightbeam::microwasm::Operator","Label to jump to if the value at the top of the stack is…",17,null],[12,"else_","","Label to jump to if the value at the top of the stack is…",17,null],[13,"BrTable","lightbeam::microwasm","Pop a value off the top of the stack, jump to…",14,null],[13,"Call","","Call a function",14,null],[12,"function_index","lightbeam::microwasm::Operator","",18,null],[13,"CallIndirect","lightbeam::microwasm","Pop an `i32` off the top of the stack, index into the…",14,null],[12,"type_index","lightbeam::microwasm::Operator","",19,null],[12,"table_index","","",19,null],[13,"Drop","lightbeam::microwasm","Pop an element off of the stack and discard it.",14,null],[13,"Select","","Pop an `i32` off of the stack and 2 elements off of the…",14,null],[13,"Pick","","Duplicate the element at depth `depth` to the top of the…",14,null],[13,"Swap","","Swap the top element of the stack with the element at…",14,null],[13,"GlobalGet","","",14,null],[13,"GlobalSet","","",14,null],[13,"Load","","",14,null],[12,"ty","lightbeam::microwasm::Operator","",20,null],[12,"memarg","","",20,null],[13,"Load8","lightbeam::microwasm","",14,null],[12,"ty","lightbeam::microwasm::Operator","",21,null],[12,"memarg","","",21,null],[13,"Load16","lightbeam::microwasm","",14,null],[12,"ty","lightbeam::microwasm::Operator","",22,null],[12,"memarg","","",22,null],[13,"Load32","lightbeam::microwasm","",14,null],[12,"sign","lightbeam::microwasm::Operator","",23,null],[12,"memarg","","",23,null],[13,"Store","lightbeam::microwasm","",14,null],[12,"ty","lightbeam::microwasm::Operator","",24,null],[12,"memarg","","",24,null],[13,"Store8","lightbeam::microwasm","",14,null],[12,"ty","lightbeam::microwasm::Operator","`ty` on integers",25,null],[12,"memarg","","",25,null],[13,"Store16","lightbeam::microwasm","",14,null],[12,"ty","lightbeam::microwasm::Operator","`ty` on integers",26,null],[12,"memarg","","",26,null],[13,"Store32","lightbeam::microwasm","",14,null],[12,"memarg","lightbeam::microwasm::Operator","",27,null],[13,"MemorySize","lightbeam::microwasm","",14,null],[13,"MemoryGrow","","",14,null],[13,"Const","","",14,null],[13,"Eq","","",14,null],[13,"Ne","","",14,null],[13,"Eqz","","`eqz` on integers",14,null],[13,"Lt","","",14,null],[13,"Gt","","",14,null],[13,"Le","","",14,null],[13,"Ge","","",14,null],[13,"Add","","",14,null],[13,"Sub","","",14,null],[13,"Mul","","",14,null],[13,"Clz","","`clz` on integers",14,null],[13,"Ctz","","`ctz` on integers",14,null],[13,"Popcnt","","`popcnt` on integers",14,null],[13,"Div","","",14,null],[13,"Rem","","",14,null],[13,"And","","",14,null],[13,"Or","","",14,null],[13,"Xor","","",14,null],[13,"Shl","","",14,null],[13,"Shr","","",14,null],[13,"Rotl","","",14,null],[13,"Rotr","","",14,null],[13,"Abs","","",14,null],[13,"Neg","","",14,null],[13,"Ceil","","",14,null],[13,"Floor","","",14,null],[13,"Trunc","","",14,null],[13,"Nearest","","",14,null],[13,"Sqrt","","",14,null],[13,"Min","","",14,null],[13,"Max","","",14,null],[13,"Copysign","","",14,null],[13,"I32WrapFromI64","","",14,null],[13,"ITruncFromF","","",14,null],[12,"input_ty","lightbeam::microwasm::Operator","",28,null],[12,"output_ty","","",28,null],[13,"FConvertFromI","lightbeam::microwasm","",14,null],[12,"input_ty","lightbeam::microwasm::Operator","",29,null],[12,"output_ty","","",29,null],[13,"F32DemoteFromF64","lightbeam::microwasm","",14,null],[13,"F64PromoteFromF32","","",14,null],[13,"I32ReinterpretFromF32","","",14,null],[13,"I64ReinterpretFromF64","","",14,null],[13,"F32ReinterpretFromI32","","",14,null],[13,"F64ReinterpretFromI64","","",14,null],[13,"Extend","","",14,null],[12,"sign","lightbeam::microwasm::Operator","",30,null],[11,"is_label","lightbeam::microwasm","",14,[[]]],[11,"is_block","","",14,[[]]],[11,"end","","",14,[[["signlesstype",6],["vec",3]]]],[11,"block","","",14,[[["signlesstype",6],["vec",3]]]],[11,"loop_","","",14,[[["signlesstype",6],["vec",3]]]],[8,"MicrowasmReceiver","","WIP: Trait to abstract over either producing a stream of…",null,null],[16,"Item","","",31,null],[10,"unreachable","","",31,[[]]],[10,"block","","",31,[[["option",4]]]],[10,"label","","",31,[[]]],[10,"br","","",31,[[["brtarget",4]]]],[10,"br_if","","",31,[[["brtargetdrop",3]]]],[10,"br_table","","",31,[[["brtable",3]]]],[10,"call","","",31,[[]]],[10,"call_indirect","","",31,[[]]],[10,"drop","","",31,[[["rangeinclusive",3]]]],[10,"select","","",31,[[]]],[10,"pick","","",31,[[]]],[10,"swap","","",31,[[]]],[10,"get_global","","",31,[[]]],[10,"set_global","","",31,[[]]],[10,"load","","",31,[[["signlesstype",6],["memoryimmediate",3]]]],[10,"load8","","",31,[[["memoryimmediate",3],["signfulint",3]]]],[10,"load16","","",31,[[["memoryimmediate",3],["signfulint",3]]]],[10,"load32","","",31,[[["memoryimmediate",3],["signedness",4]]]],[10,"store","","",31,[[["signlesstype",6],["memoryimmediate",3]]]],[10,"store8","","",31,[[["memoryimmediate",3],["size",4]]]],[10,"store16","","",31,[[["memoryimmediate",3],["size",4]]]],[10,"store32","","",31,[[["memoryimmediate",3]]]],[10,"memory_size","","",31,[[]]],[10,"memory_grow","","",31,[[]]],[10,"const_","","",31,[[["value",4]]]],[10,"ref_null","","",31,[[]]],[10,"ref_is_null","","",31,[[]]],[10,"eq","","",31,[[["signlesstype",6]]]],[10,"ne","","",31,[[["signlesstype",6]]]],[10,"eqz","","",31,[[["size",4]]]],[10,"lt","","",31,[[["signfultype",6]]]],[10,"gt","","",31,[[["signfultype",6]]]],[10,"le","","",31,[[["signfultype",6]]]],[10,"ge","","",31,[[["signfultype",6]]]],[10,"add","","",31,[[["signlesstype",6]]]],[10,"sub","","",31,[[["signlesstype",6]]]],[10,"mul","","",31,[[["signlesstype",6]]]],[10,"clz","","",31,[[["size",4]]]],[10,"ctz","","",31,[[["size",4]]]],[10,"popcnt","","",31,[[["size",4]]]],[10,"div","","",31,[[["signfultype",6]]]],[10,"rem","","",31,[[["signfulint",3]]]],[10,"and","","",31,[[["size",4]]]],[10,"or","","",31,[[["size",4]]]],[10,"xor","","",31,[[["size",4]]]],[10,"shl","","",31,[[["size",4]]]],[10,"shr","","",31,[[["signfulint",3]]]],[10,"rotl","","",31,[[["size",4]]]],[10,"rotr","","",31,[[["size",4]]]],[10,"abs","","",31,[[["size",4]]]],[10,"neg","","",31,[[["size",4]]]],[10,"ceil","","",31,[[["size",4]]]],[10,"floor","","",31,[[["size",4]]]],[10,"trunc","","",31,[[["size",4]]]],[10,"nearest","","",31,[[["size",4]]]],[10,"sqrt","","",31,[[["size",4]]]],[10,"min","","",31,[[["size",4]]]],[10,"max","","",31,[[["size",4]]]],[10,"copysign","","",31,[[["size",4]]]],[10,"i32_wrap_from_i64","","",31,[[]]],[10,"i_trunc_from_f","","",31,[[["size",4],["signfulint",3]]]],[10,"f_convert_from_i","","",31,[[["size",4],["signfulint",3]]]],[10,"f32_demote_from_f64","","",31,[[]]],[10,"f64_promote_from_f32","","",31,[[]]],[10,"i32_reinterpret_from_f32","","",31,[[]]],[10,"i64_reinterpret_from_f64","","",31,[[]]],[10,"f32_reinterpret_from_i32","","",31,[[]]],[10,"f64_reinterpret_from_i64","","",31,[[]]],[10,"extend","","",31,[[["signedness",4]]]],[10,"i_sat_trunc_from_f","","",31,[[["size",4],["signfulint",3]]]],[10,"memory_init","","",31,[[]]],[10,"data_drop","","",31,[[]]],[10,"memory_copy","","",31,[[]]],[10,"memory_fill","","",31,[[]]],[10,"table_init","","",31,[[]]],[10,"elem_drop","","",31,[[]]],[10,"table_copy","","",31,[[]]],[3,"MicrowasmConv","","",null,null],[3,"OpSig","","",null,null],[11,"new","","",32,[[["functionbody",3],["signlesstype",6]],[["error",4],["result",4]]]],[3,"CodeGenSession","lightbeam","",null,null],[12,"module_context","","",33,null],[12,"op_offset_map","","",33,null],[5,"translate_function","","",null,[[["functionbody",3],["codegensession",3],["sinks",3]],[["error",4],["result",4]]]],[3,"NullOffsetSink","","",null,null],[8,"OffsetSink","","",null,null],[10,"offset","","",34,[[["sourceloc",3]]]],[3,"Sinks","","",null,null],[12,"relocs","","",35,null],[12,"traps","","",35,null],[12,"offsets","","",35,null],[5,"translate","","",null,[[],[["error",4],["result",4],["executablemodule",3]]]],[3,"ExecutableModule","","",null,null],[4,"ExecutionError","","",null,null],[13,"FuncIndexOutOfBounds","","",36,null],[13,"TypeMismatch","","",36,null],[8,"ModuleContext","","",null,null],[16,"Signature","","",37,null],[16,"GlobalType","","",37,null],[10,"vmctx_builtin_function","","",37,[[]]],[10,"vmctx_vmglobal_definition","","",37,[[]]],[10,"vmctx_vmglobal_import_from","","",37,[[]]],[10,"vmctx_vmmemory_import_from","","",37,[[]]],[10,"vmctx_vmmemory_definition","","",37,[[]]],[10,"vmctx_vmmemory_definition_base","","",37,[[]]],[10,"vmctx_vmmemory_definition_current_length","","",37,[[]]],[10,"vmmemory_definition_base","","",37,[[]]],[10,"vmmemory_definition_current_length","","",37,[[]]],[10,"vmctx_vmtable_import_from","","",37,[[]]],[10,"vmctx_vmtable_definition","","",37,[[]]],[10,"vmctx_vmtable_definition_base","","",37,[[]]],[10,"vmctx_vmtable_definition_current_elements","","",37,[[]]],[10,"vmctx_vmfunction_import_body","","",37,[[]]],[10,"vmctx_vmfunction_import_vmctx","","",37,[[]]],[10,"vmtable_definition_base","","",37,[[]]],[10,"vmtable_definition_current_elements","","",37,[[]]],[10,"vmctx_vmshared_signature_id","","",37,[[]]],[10,"vmcaller_checked_anyfunc_type_index","","",37,[[]]],[10,"vmcaller_checked_anyfunc_func_ptr","","",37,[[]]],[10,"vmcaller_checked_anyfunc_vmctx","","",37,[[]]],[10,"size_of_vmcaller_checked_anyfunc","","",37,[[]]],[10,"defined_table_index","","",37,[[],["option",4]]],[10,"defined_memory_index","","",37,[[],["option",4]]],[10,"defined_global_index","","",37,[[],["option",4]]],[10,"global_type","","",37,[[]]],[10,"func_type_index","","",37,[[]]],[10,"signature","","",37,[[]]],[10,"func_index","","",37,[[]]],[10,"defined_func_index","","",37,[[],["option",4]]],[11,"defined_func_type","","",37,[[]]],[11,"func_type","","",37,[[]]],[11,"emit_memory_bounds_check","","",37,[[]]],[8,"Signature","","",null,null],[16,"Type","","",38,null],[10,"params","","",38,[[]]],[10,"returns","","",38,[[]]],[3,"TranslatedModule","","",null,null],[5,"disassemble","","",null,[[],[["result",4],["box",3]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","lightbeam::microwasm","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[]]],[11,"clone_any","","",0,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"clone_any_send","","",0,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_sync","","",0,[[],[["global",3],["cloneany",8],["box",3]]]],[11,"clone_any_send_sync","","",0,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[]]],[11,"clone_any","","",1,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"clone_any_send","","",1,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_sync","","",1,[[],[["global",3],["cloneany",8],["box",3]]]],[11,"clone_any_send_sync","","",1,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[]]],[11,"clone_any","","",2,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"clone_any_send","","",2,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_sync","","",2,[[],[["global",3],["cloneany",8],["box",3]]]],[11,"clone_any_send_sync","","",2,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"equivalent","","",3,[[]]],[11,"clone_any","","",3,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"clone_any_send","","",3,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_sync","","",3,[[],[["global",3],["cloneany",8],["box",3]]]],[11,"clone_any_send_sync","","",3,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"equivalent","","",4,[[]]],[11,"clone_any","","",4,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"clone_any_send","","",4,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_sync","","",4,[[],[["global",3],["cloneany",8],["box",3]]]],[11,"clone_any_send_sync","","",4,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"equivalent","","",5,[[]]],[11,"clone_any","","",5,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"clone_any_send","","",5,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_sync","","",5,[[],[["global",3],["cloneany",8],["box",3]]]],[11,"clone_any_send_sync","","",5,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"equivalent","","",6,[[]]],[11,"clone_any","","",6,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"clone_any_send","","",6,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_sync","","",6,[[],[["global",3],["cloneany",8],["box",3]]]],[11,"clone_any_send_sync","","",6,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"clone_any","","",9,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"clone_any_send","","",9,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_sync","","",9,[[],[["global",3],["cloneany",8],["box",3]]]],[11,"clone_any_send_sync","","",9,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"equivalent","","",10,[[]]],[11,"clone_any","","",10,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"clone_any_send","","",10,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_sync","","",10,[[],[["global",3],["cloneany",8],["box",3]]]],[11,"clone_any_send_sync","","",10,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"from","","",11,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"equivalent","","",11,[[]]],[11,"clone_any","","",11,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"clone_any_send","","",11,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_sync","","",11,[[],[["global",3],["cloneany",8],["box",3]]]],[11,"clone_any_send_sync","","",11,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"equivalent","","",12,[[]]],[11,"clone_any","","",12,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"clone_any_send","","",12,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_sync","","",12,[[],[["global",3],["cloneany",8],["box",3]]]],[11,"clone_any_send_sync","","",12,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"equivalent","","",13,[[]]],[11,"clone_any","","",13,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"clone_any_send","","",13,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_sync","","",13,[[],[["global",3],["cloneany",8],["box",3]]]],[11,"clone_any_send_sync","","",13,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"clone_any","","",14,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"clone_any_send","","",14,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_sync","","",14,[[],[["global",3],["cloneany",8],["box",3]]]],[11,"clone_any_send_sync","","",14,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"into_iter","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","lightbeam","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"equivalent","","",36,[[]]],[11,"clone_any","","",36,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"clone_any_send","","",36,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_sync","","",36,[[],[["global",3],["cloneany",8],["box",3]]]],[11,"clone_any_send_sync","","",36,[[],[["cloneany",8],["global",3],["box",3]]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"offset","","",39,[[["sourceloc",3]]]],[11,"from","lightbeam::microwasm","",0,[[["wasmieee32",3]]]],[11,"from","","",1,[[["wasmieee64",3]]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[["ieee32",3]]]],[11,"from","","",2,[[["ieee64",3]]]],[11,"from","","",11,[[]]],[11,"from","","",12,[[["brtarget",4]]]],[11,"from","","",13,[[["wasmmemoryimmediate",3]]]],[11,"from","","",40,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"clone","","",0,[[],["ieee32",3]]],[11,"clone","","",1,[[],["ieee64",3]]],[11,"clone","","",2,[[],["value",4]]],[11,"clone","","",3,[[],["signedness",4]]],[11,"clone","","",4,[[],["size",4]]],[11,"clone","","",5,[[],["signfulint",3]]],[11,"clone","","",6,[[],["type",4]]],[11,"clone","","",9,[[],["brtable",3]]],[11,"clone","","",10,[[],["nametag",4]]],[11,"clone","","",11,[[],["brtarget",4]]],[11,"clone","","",12,[[],["brtargetdrop",3]]],[11,"clone","","",13,[[],["memoryimmediate",3]]],[11,"clone","","",14,[[],["operator",4]]],[11,"clone","lightbeam","",36,[[],["executionerror",4]]],[11,"default","","",41,[[],["translatedmodule",3]]],[11,"eq","lightbeam::microwasm","",0,[[["ieee32",3]]]],[11,"ne","","",0,[[["ieee32",3]]]],[11,"eq","","",1,[[["ieee64",3]]]],[11,"ne","","",1,[[["ieee64",3]]]],[11,"eq","","",2,[[["value",4]]]],[11,"ne","","",2,[[["value",4]]]],[11,"eq","","",3,[[["signedness",4]]]],[11,"eq","","",4,[[["size",4]]]],[11,"eq","","",5,[[["signfulint",3]]]],[11,"ne","","",5,[[["signfulint",3]]]],[11,"eq","","",6,[[["type",4]]]],[11,"ne","","",6,[[["type",4]]]],[11,"eq","","",10,[[["nametag",4]]]],[11,"eq","","",11,[[["brtarget",4]]]],[11,"ne","","",11,[[["brtarget",4]]]],[11,"eq","","",12,[[["brtargetdrop",3]]]],[11,"ne","","",12,[[["brtargetdrop",3]]]],[11,"eq","","",13,[[["memoryimmediate",3]]]],[11,"ne","","",13,[[["memoryimmediate",3]]]],[11,"eq","lightbeam","",36,[[["executionerror",4]]]],[11,"fmt","lightbeam::microwasm","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","lightbeam","",36,[[["formatter",3]],["result",6]]],[11,"fmt","lightbeam::microwasm","",2,[[["formatter",3]],["result",6]]],[11,"fmt","lightbeam","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","lightbeam::microwasm","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","lightbeam","",36,[[["formatter",3]],["result",6]]],[11,"hash","lightbeam::microwasm","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"new","lightbeam","",33,[[["signlesstype",6]]]],[11,"offset","","",33,[[]]],[11,"pointer_type","","",33,[[],["signlesstype",6]]],[11,"new_context","","",33,[[["relocsink",8]],["context",3]]],[11,"into_translated_code_section","","",33,[[],[["translatedcodesection",3],["error",4],["result",4]]]],[11,"instantiate","","",41,[[],["executablemodule",3]]],[11,"disassemble","","",41,[[]]],[11,"execute_func_unchecked","","Executes the function identified by `func_idx`.",42,[[["functionargs",8]]]],[11,"execute_func","","",42,[[["functionargs",8],["typelist",8]],[["executionerror",4],["result",4],["typelist",8]]]],[11,"disassemble","","",42,[[]]],[11,"defined_func_type","","",37,[[]]],[11,"func_type","","",37,[[]]],[11,"emit_memory_bounds_check","","",37,[[]]]],"p":[[3,"Ieee32"],[3,"Ieee64"],[4,"Value"],[4,"Signedness"],[4,"Size"],[3,"SignfulInt"],[4,"Type"],[8,"IntoType"],[6,"SignlessType"],[3,"BrTable"],[4,"NameTag"],[4,"BrTarget"],[3,"BrTargetDrop"],[3,"MemoryImmediate"],[4,"Operator"],[13,"Block"],[13,"Br"],[13,"BrIf"],[13,"Call"],[13,"CallIndirect"],[13,"Load"],[13,"Load8"],[13,"Load16"],[13,"Load32"],[13,"Store"],[13,"Store8"],[13,"Store16"],[13,"Store32"],[13,"ITruncFromF"],[13,"FConvertFromI"],[13,"Extend"],[8,"MicrowasmReceiver"],[3,"MicrowasmConv"],[3,"CodeGenSession"],[8,"OffsetSink"],[3,"Sinks"],[4,"ExecutionError"],[8,"ModuleContext"],[8,"Signature"],[3,"NullOffsetSink"],[3,"OpSig"],[3,"TranslatedModule"],[3,"ExecutableModule"],[6,"SignfulType"]]},\
"peepmatic":{"doc":"`peepmatic` is a DSL and compiler for generating peephole…","i":[[4,"DynAstRef","peepmatic","A reference to any AST node.",null,null],[13,"Optimizations","","A reference to an `Optimizations`.",0,null],[13,"Optimization","","A reference to an `Optimization`.",0,null],[13,"Lhs","","A reference to an `Lhs`.",0,null],[13,"Rhs","","A reference to an `Rhs`.",0,null],[13,"Pattern","","A reference to a `Pattern`.",0,null],[13,"Precondition","","A reference to a `Precondition`.",0,null],[13,"ConstraintOperand","","A reference to a `ConstraintOperand`.",0,null],[13,"ValueLiteral","","A reference to a `ValueLiteral`.",0,null],[13,"Constant","","A reference to a `Constant`.",0,null],[13,"PatternOperation","","A reference to a `PatternOperation`.",0,null],[13,"Variable","","A reference to a `Variable`.",0,null],[13,"Integer","","A reference to an `Integer`.",0,null],[13,"Boolean","","A reference to a `Boolean`.",0,null],[13,"ConditionCode","","A reference to a `ConditionCode`.",0,null],[13,"Unquote","","A reference to an `Unquote`.",0,null],[13,"RhsOperation","","A reference to an `RhsOperation`.",0,null],[8,"Ast","","A trait implemented by all AST nodes.",null,null],[8,"ChildNodes","","Enumerate the child AST nodes of a given node.",null,null],[10,"child_nodes","","Get each of this AST node\'s children, in order.",1,[[]]],[8,"Span","","A trait for getting the span where an AST node was defined.",null,null],[10,"span","","Get the span where this AST node was defined.",2,[[],["span",3]]],[3,"Optimizations","","A set of optimizations.",null,null],[12,"span","","Where these `Optimizations` were defined.",3,null],[12,"optimizations","","The optimizations.",3,null],[3,"Optimization","","A complete optimization: a left-hand side to match against…",null,null],[12,"span","","Where this `Optimization` was defined.",4,null],[12,"lhs","","The left-hand side that matches when this optimization…",4,null],[12,"rhs","","The new sequence of instructions to replace an old…",4,null],[3,"Lhs","","A left-hand side describes what is required for a…",null,null],[12,"span","","Where this `Lhs` was defined.",5,null],[12,"pattern","","A pattern that describes sequences of instructions to match.",5,null],[12,"preconditions","","Additional constraints that a match must satisfy in…",5,null],[4,"Pattern","","A structural pattern, potentially with wildcard variables…",null,null],[13,"ValueLiteral","","A specific value. These are written as `1234` or `0x1234`…",6,null],[13,"Constant","","A constant that matches any constant value. This subsumes…",6,null],[13,"Operation","","An operation pattern with zero or more operand patterns.…",6,null],[13,"Variable","","A variable that matches any kind of subexpression. This…",6,null],[4,"ValueLiteral","","An integer or boolean value literal.",null,null],[13,"Integer","","An integer value.",7,null],[13,"Boolean","","A boolean value: `true` or `false`.",7,null],[13,"ConditionCode","","A condition code: `eq`, `ne`, etc...",7,null],[3,"Integer","","An integer literal.",null,null],[12,"span","","Where this `Integer` was defined.",8,null],[12,"value","","The integer value.",8,null],[12,"bit_width","","The bit width of this integer.",8,null],[12,"marker","","",8,null],[3,"Boolean","","A boolean literal.",null,null],[12,"span","","Where this `Boolean` was defined.",9,null],[12,"value","","The boolean value.",9,null],[12,"bit_width","","The bit width of this boolean.",9,null],[12,"marker","","",9,null],[3,"ConditionCode","","A condition code.",null,null],[12,"span","","Where this `ConditionCode` was defined.",10,null],[12,"cc","","The actual condition code.",10,null],[12,"marker","","",10,null],[3,"Constant","","A symbolic constant.",null,null],[12,"span","","Where this `Constant` was defined.",11,null],[12,"id","","This constant\'s identifier.",11,null],[12,"marker","","",11,null],[3,"Variable","","A variable that matches any subtree.",null,null],[12,"span","","Where this `Variable` was defined.",12,null],[12,"id","","This variable\'s identifier.",12,null],[12,"marker","","",12,null],[3,"Operation","","An operation with an operator, and operands of type `T`.",null,null],[12,"span","","The span where this operation was written.",13,null],[12,"operator","","The operator for this operation, e.g. `imul` or `iadd`.",13,null],[12,"type","","An optional ascribed or inferred type for the operator.",13,null],[12,"operands","","This operation\'s operands.",13,null],[12,"marker","","",13,null],[3,"Precondition","","A precondition adds additional constraints to a pattern,…",null,null],[12,"span","","Where this `Precondition` was defined.",14,null],[12,"constraint","","The constraint operator.",14,null],[12,"operands","","The operands of the constraint.",14,null],[12,"marker","","",14,null],[4,"Constraint","","Contraint operators.",null,null],[13,"IsPowerOfTwo","","Is the operand a power of two?",15,null],[13,"BitWidth","","Check the bit width of a value.",15,null],[13,"FitsInNativeWord","","Does the argument fit within our target architecture\'s…",15,null],[4,"ConstraintOperand","","An operand of a precondition\'s constraint.",null,null],[13,"ValueLiteral","","A value literal operand.",16,null],[13,"Constant","","A constant operand.",16,null],[13,"Variable","","A variable operand.",16,null],[4,"Rhs","","The right-hand side of an optimization that contains the…",null,null],[13,"ValueLiteral","","A value literal right-hand side.",17,null],[13,"Constant","","A constant right-hand side (the constant must have been…",17,null],[13,"Variable","","A variable right-hand side (the variable must have been…",17,null],[13,"Unquote","","An unquote expression that is evaluated while replacing…",17,null],[13,"Operation","","A compound right-hand side consisting of an operation and…",17,null],[3,"Unquote","","An unquote operation.",null,null],[12,"span","","Where this `Unquote` was defined.",18,null],[12,"operator","","The operator for this unquote operation.",18,null],[12,"operands","","The operands for this unquote operation.",18,null],[12,"marker","","",18,null],[5,"automatize","","Construct an automaton from a set of linear optimizations.",null,[[["optimizations",3]],[["automaton",3],["box",3],["matchresult",6],["matchop",4]]]],[5,"sort_least_to_most_general","","Sort a set of optimizations from least to most general.",null,[[["optimizations",3]]]],[5,"sort_lexicographically","","Sort the linear optimizations lexicographically.",null,[[["optimizations",3]]]],[5,"match_in_same_order","","Ensure that we emit match operations in a consistent order.",null,[[["optimizations",3]]]],[5,"remove_unnecessary_nops","","99.99% of nops are unnecessary; remove them.",null,[[["optimizations",3]]]],[5,"linearize","","Translate the given AST optimizations into linear…",null,[[["optimizations",3]],["optimizations",3]]],[4,"TraversalEvent","","A low-level DFS traversal event: either entering or…",null,null],[13,"Enter","","Entering traversal of an AST node.",19,null],[13,"Exit","","Exiting traversal of an AST node.",19,null],[3,"Dfs","","A depth-first traversal of an AST.",null,null],[3,"Bfs","","A breadth-first traversal of an AST",null,null],[3,"VerifyError","","A verification or type checking error.",null,null],[6,"VerifyResult","","Either `Ok(T)` or `Err(VerifyError)`.",null,null],[5,"verify","","Verify and type check a set of optimizations.",null,[[["optimizations",3]],["verifyresult",6]]],[5,"compile_file","","Compile the given DSL file into a compact peephole…",null,[[["path",3]],[["result",6],["peepholeoptimizations",3]]]],[5,"compile_str","","Compile the given DSL source text down into a compact…",null,[[["path",3]],[["result",6],["peepholeoptimizations",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"child_nodes","","",0,[[]]],[11,"child_nodes","","",3,[[]]],[11,"child_nodes","","",4,[[]]],[11,"child_nodes","","",5,[[]]],[11,"child_nodes","","",6,[[]]],[11,"child_nodes","","",7,[[]]],[11,"child_nodes","","",8,[[]]],[11,"child_nodes","","",9,[[]]],[11,"child_nodes","","",10,[[]]],[11,"child_nodes","","",11,[[]]],[11,"child_nodes","","",12,[[]]],[11,"child_nodes","","",13,[[]]],[11,"child_nodes","","",14,[[]]],[11,"child_nodes","","",16,[[]]],[11,"child_nodes","","",17,[[]]],[11,"child_nodes","","",18,[[]]],[11,"span","","",3,[[],["span",3]]],[11,"span","","",4,[[],["span",3]]],[11,"span","","",5,[[],["span",3]]],[11,"span","","",6,[[],["span",3]]],[11,"span","","",7,[[],["span",3]]],[11,"span","","",8,[[],["span",3]]],[11,"span","","",9,[[],["span",3]]],[11,"span","","",10,[[],["span",3]]],[11,"span","","",11,[[],["span",3]]],[11,"span","","",12,[[],["span",3]]],[11,"span","","",13,[[],["span",3]]],[11,"span","","",14,[[],["span",3]]],[11,"span","","",16,[[],["span",3]]],[11,"span","","",17,[[],["span",3]]],[11,"span","","",18,[[],["span",3]]],[11,"from","","",0,[[["optimizations",3]]]],[11,"from","","",0,[[["optimization",3]]]],[11,"from","","",0,[[["lhs",3]]]],[11,"from","","",0,[[["pattern",4]]]],[11,"from","","",0,[[["valueliteral",4]]]],[11,"from","","",0,[[["integer",3]]]],[11,"from","","",0,[[["boolean",3]]]],[11,"from","","",0,[[["conditioncode",3]]]],[11,"from","","",0,[[["constant",3]]]],[11,"from","","",0,[[["variable",3]]]],[11,"from","","",0,[[["operation",3]],["dynastref",4]]],[11,"from","","",0,[[["operation",3]],["dynastref",4]]],[11,"from","","",0,[[["precondition",3]]]],[11,"from","","",0,[[["constraintoperand",4]]]],[11,"from","","",0,[[["rhs",4]]]],[11,"from","","",0,[[["unquote",3]]]],[11,"from","","",22,[[["wasterror",3]]]],[11,"from","","",22,[[["error",3]]]],[11,"next","","",20,[[],["option",4]]],[11,"next","","",21,[[],["option",4]]],[11,"clone","","",0,[[],["dynastref",4]]],[11,"clone","","",15,[[],["constraint",4]]],[11,"clone","","",19,[[],["traversalevent",4]]],[11,"clone","","",20,[[],["dfs",3]]],[11,"clone","","",21,[[],["bfs",3]]],[11,"eq","","",8,[[["integer",3]]]],[11,"ne","","",8,[[["integer",3]]]],[11,"eq","","",9,[[["boolean",3]]]],[11,"ne","","",9,[[["boolean",3]]]],[11,"eq","","",15,[[["constraint",4]]]],[11,"eq","","",19,[[["traversalevent",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",15,[[]]],[11,"parse","","",3,[[["parser",3]],["parseresult",6]]],[11,"parse","","",4,[[["parser",3]],["parseresult",6]]],[11,"parse","","",5,[[["parser",3]],["parseresult",6]]],[11,"parse","","",6,[[["parser",3]],["parseresult",6]]],[11,"parse","","",7,[[["parser",3]],["parseresult",6]]],[11,"parse","","",8,[[["parser",3]],["parseresult",6]]],[11,"parse","","",9,[[["parser",3]],["parseresult",6]]],[11,"parse","","",10,[[["parser",3]],["parseresult",6]]],[11,"parse","","",11,[[["parser",3]],["parseresult",6]]],[11,"parse","","",12,[[["parser",3]],["parseresult",6]]],[11,"parse","","",13,[[["parser",3]],["parseresult",6]]],[11,"parse","","",14,[[["parser",3]],["parseresult",6]]],[11,"parse","","",15,[[["parser",3]],["parseresult",6]]],[11,"parse","","",16,[[["parser",3]],["parseresult",6]]],[11,"parse","","",17,[[["parser",3]],["parseresult",6]]],[11,"parse","","",18,[[["parser",3]],["parseresult",6]]],[11,"peek","","",6,[[["cursor",3]]]],[11,"display","","",6,[[]]],[11,"peek","","",7,[[["cursor",3]]]],[11,"display","","",7,[[]]],[11,"peek","","",9,[[["cursor",3]]]],[11,"display","","",9,[[]]],[11,"peek","","",10,[[["cursor",3]]]],[11,"display","","",10,[[]]],[11,"peek","","",11,[[["cursor",3]]]],[11,"display","","",11,[[]]],[11,"peek","","",12,[[["cursor",3]]]],[11,"display","","",12,[[]]],[11,"peek","","",13,[[["cursor",3]]]],[11,"display","","",13,[[]]],[11,"peek","","",16,[[["cursor",3]]]],[11,"display","","",16,[[]]],[11,"peek","","",17,[[["cursor",3]]]],[11,"display","","",17,[[]]],[11,"peek","","",18,[[["cursor",3]]]],[11,"display","","",18,[[]]],[11,"new","","Construct a new `Dfs` traversal starting at the given…",20,[[]]],[11,"peek","","Peek at the next traversal event and AST node pair, if any.",20,[[],["option",4]]],[11,"new","","Construct a new `Bfs` traversal starting at the given…",21,[[]]],[11,"set_text","","To provide a more useful error this function can be used…",22,[[]]],[11,"set_path","","To provide a more useful error this function can be used…",22,[[["path",3]]]]],"p":[[4,"DynAstRef"],[8,"ChildNodes"],[8,"Span"],[3,"Optimizations"],[3,"Optimization"],[3,"Lhs"],[4,"Pattern"],[4,"ValueLiteral"],[3,"Integer"],[3,"Boolean"],[3,"ConditionCode"],[3,"Constant"],[3,"Variable"],[3,"Operation"],[3,"Precondition"],[4,"Constraint"],[4,"ConstraintOperand"],[4,"Rhs"],[3,"Unquote"],[4,"TraversalEvent"],[3,"Dfs"],[3,"Bfs"],[3,"VerifyError"]]},\
"peepmatic_automata":{"doc":"Finite-state transducer automata.","i":[[0,"dot","peepmatic_automata","Helpers for generating GraphViz Dot files to visually…",null,null],[8,"DotFmt","peepmatic_automata::dot","Format the user-provided bits of an `Automaton` for…",null,null],[10,"fmt_transition","","Format a transition edge: `from ---input---> to`.",0,[[["option",4]],["result",6]]],[10,"fmt_state","","Format the custom data associated with a state.",0,[[],["result",6]]],[10,"fmt_output","","Format a transition\'s output or the final output of a…",0,[[],["result",6]]],[3,"DebugDotFmt","","Format an `Automaton`\'s `TAlphabet`, `TState`, and…",null,null],[3,"DisplayDotFmt","","Format an `Automaton`\'s `TAlphabet`, `TState`, and…",null,null],[8,"Output","peepmatic_automata","An output type for a transducer automata.",null,null],[10,"empty","","Construct the empty instance.",1,[[]]],[11,"is_empty","","Is this the empty instance?",1,[[]]],[10,"prefix","","Get the shared prefix of two instances.",1,[[]]],[10,"difference","","When `b` is a prefix of `a`, get the remaining suffix of…",1,[[]]],[10,"concat","","Concatenate `a` and `b`.",1,[[]]],[3,"Builder","","A builder for a transducer automata.",null,null],[11,"new","","Make a new builder to start constructing a new transducer…",2,[[]]],[11,"insert","","Start building a new key/value insertion.",2,[[],["insertionbuilder",3]]],[11,"finish","","Finish building this transducer and return the constructed…",2,[[],["automaton",3]]],[3,"State","","A state in an automaton.",null,null],[3,"InsertionBuilder","","A builder for a new entry in a transducer automata.",null,null],[11,"next","","Insert the next character of input for this entry, and the…",3,[[]]],[11,"finish","","Finish this insertion.",3,[[]]],[11,"set_state_data","","Set the optional, custom data for the current state.",3,[[]]],[11,"get_state_data","","Get the current state\'s optional, custom data, if any.",3,[[],["option",4]]],[3,"Automaton","","A finite-state transducer automata.",null,null],[11,"get","","Get the output value associated with the given input…",4,[[],["option",4]]],[11,"query","","Create a low-level query.",4,[[],["query",3]]],[3,"Query","","A low-level query of an `Automaton`.",null,null],[11,"current_state","","Get the current state in the automaton that this query is…",5,[[],["state",3]]],[11,"go_to_state","","Move this query to the given state in the automaton.",5,[[["state",3]]]],[11,"has_transition_on","","Does the query\'s current state have a transition on the…",5,[[]]],[11,"next","","Transition to the next state given the next input…",5,[[],["option",4]]],[11,"current_state_data","","Get the current state\'s associated custom data, if any.",5,[[],["option",4]]],[11,"is_in_final_state","","Is this query currently in a final state?",5,[[]]],[11,"finish","","Given that the input sequence is exhausted, get the final…",5,[[],["option",4]]],[11,"from","peepmatic_automata::dot","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","peepmatic_automata","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"fmt_transition","peepmatic_automata::dot","",6,[[["option",4]],["result",6]]],[11,"fmt_state","","",6,[[],["result",6]]],[11,"fmt_output","","",6,[[],["result",6]]],[11,"fmt_transition","","",7,[[["option",4]],["result",6]]],[11,"fmt_state","","",7,[[],["result",6]]],[11,"fmt_output","","",7,[[],["result",6]]],[11,"clone","peepmatic_automata","",2,[[],["builder",3]]],[11,"clone","","",8,[[],["state",3]]],[11,"clone","","",4,[[],["automaton",3]]],[11,"clone","","",5,[[],["query",3]]],[11,"cmp","","",8,[[["state",3]],["ordering",4]]],[11,"eq","","",8,[[["state",3]]]],[11,"ne","","",8,[[["state",3]]]],[11,"partial_cmp","","",8,[[["state",3]],[["ordering",4],["option",4]]]],[11,"lt","","",8,[[["state",3]]]],[11,"le","","",8,[[["state",3]]]],[11,"gt","","",8,[[["state",3]]]],[11,"ge","","",8,[[["state",3]]]],[11,"fmt","peepmatic_automata::dot","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","peepmatic_automata","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"hash","","",8,[[]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"write_dot_file","","Write this `Automaton` out as a GraphViz Dot file at the…",4,[[],["result",6]]],[11,"write_dot","","Write this `Automaton` out to the given write-able as a…",4,[[],["result",6]]]],"p":[[8,"DotFmt"],[8,"Output"],[3,"Builder"],[3,"InsertionBuilder"],[3,"Automaton"],[3,"Query"],[3,"DebugDotFmt"],[3,"DisplayDotFmt"],[3,"State"]]},\
"peepmatic_fuzzing":{"doc":"Utilities for fuzzing.","i":[[0,"automata","peepmatic_fuzzing","Helpers for fuzzing the `peepmatic-automata` crate.",null,null],[5,"simple_automata","peepmatic_fuzzing::automata","Construct an automaton from the the given input-output…",null,[[["vec",3],["vec",3]]]],[5,"fst_differential","","Do differential testing against the `fst` crate, which is…",null,[[["hashmap",3],["vec",3]]]],[0,"compile","peepmatic_fuzzing","Fuzz testing utilities related to AST pattern matching.",null,null],[5,"compile","peepmatic_fuzzing::compile","Attempt to interpret the given bytes as UTF-8 and then…",null,[[]]],[0,"interp","peepmatic_fuzzing","Interpreting compiled peephole optimizations against test…",null,null],[5,"interp","peepmatic_fuzzing::interp","Compile the given source text, and if it is a valid set of…",null,[[]]],[0,"parser","peepmatic_fuzzing","Utilities for fuzzing our DSL\'s parser.",null,null],[5,"parse","peepmatic_fuzzing::parser","Attempt to parse the given string as if it were a snippet…",null,[[]]],[5,"check","peepmatic_fuzzing","A quickcheck-style runner for fuzz targets.",null,[[]]]],"p":[]},\
"peepmatic_macro":{"doc":"","i":[[24,"Ast","peepmatic_macro","",null,null]],"p":[]},\
"peepmatic_runtime":{"doc":"Runtime support for `peepmatic`\'s peephole optimizers.","i":[[0,"cc","peepmatic_runtime","Condition codes.",null,null],[4,"ConditionCode","peepmatic_runtime::cc","A condition code.",null,null],[13,"Eq","","Equal.",0,null],[13,"Ne","","Not equal.",0,null],[13,"Slt","","Signed less than.",0,null],[13,"Ult","","Unsigned less than.",0,null],[13,"Sge","","Signed greater than or equal.",0,null],[13,"Uge","","Unsigned greater than or equal.",0,null],[13,"Sgt","","Signed greater than.",0,null],[13,"Ugt","","Unsigned greater than.",0,null],[13,"Sle","","Signed less than or equal.",0,null],[13,"Ule","","Unsigned less than or equal.",0,null],[13,"Of","","Overflow.",0,null],[13,"Nof","","No overflow.",0,null],[0,"error","peepmatic_runtime","`Error` and `Result` types for this crate.",null,null],[6,"Result","peepmatic_runtime::error","A result type containing `Ok(T)` or…",null,null],[3,"Error","","Errors that `peepmatic_runtime` may generate.",null,null],[0,"instruction_set","peepmatic_runtime","Interfacing with actual instructions.",null,null],[8,"InstructionSet","peepmatic_runtime::instruction_set","A trait for interfacing with actual instruction sequences.",null,null],[16,"Context","","Mutable context passed into all trait methods. Can be…",1,null],[16,"Operator","","An operator.",1,null],[16,"Instruction","","An instruction (or identifier for an instruction).",1,null],[10,"replace_instruction","","Replace the `old` instruction with `new`.",1,[[["part",4]]]],[10,"operator","","Get the given instruction\'s operator.",1,[[],["option",4]]],[10,"make_inst_1","","Make a unary instruction.",1,[[["type",3],["part",4]]]],[10,"make_inst_2","","Make a binary instruction.",1,[[["type",3],["part",4]]]],[10,"make_inst_3","","Make a ternary instruction.",1,[[["type",3],["part",4]]]],[10,"instruction_to_constant","","Try to resolve the given instruction into a constant value.",1,[[],[["option",4],["constant",4]]]],[10,"instruction_result_bit_width","","Get the bit width of the given instruction\'s result.",1,[[]]],[10,"native_word_size_in_bits","","Get the size of a native word in bits.",1,[[]]],[0,"integer_interner","peepmatic_runtime","Interner for (potentially large) integer values.",null,null],[3,"IntegerId","peepmatic_runtime::integer_interner","An identifier for an interned integer.",null,null],[3,"IntegerInterner","","An interner for integer values.",null,null],[11,"new","","Construct a new `IntegerInterner`.",2,[[]]],[11,"intern","","Intern a value into this `IntegerInterner`, returning its…",2,[[],["integerid",3]]],[11,"already_interned","","Get the id of an already-interned integer, or `None` if it…",2,[[],[["integerid",3],["option",4]]]],[11,"lookup","","Lookup a previously interned integer by id.",2,[[["integerid",3]]]],[0,"linear","peepmatic_runtime","A linear IR for optimizations.",null,null],[3,"Optimizations","peepmatic_runtime::linear","A set of linear optimizations.",null,null],[12,"optimizations","","The linear optimizations.",3,null],[12,"integers","","The integer literals referenced by these optimizations.",3,null],[3,"Optimization","","A linearized optimization.",null,null],[12,"matches","","The chain of match operations and expected results for…",4,null],[12,"actions","","Actions to perform, given that the operation resulted in…",4,null],[3,"Else","","Match any value.",null,null],[6,"MatchResult","","The result of evaluating a `MatchOp`.",null,null],[5,"bool_to_match_result","","Convert a boolean to a `MatchResult`.",null,[[],["matchresult",6]]],[3,"Match","","A partial match of an optimization\'s LHS.",null,null],[12,"operation","","The matching operation to perform.",5,null],[12,"expected","","The expected result of our matching operation, that…",5,null],[4,"MatchOp","","A matching operation to be performed on some Cranelift…",null,null],[13,"Opcode","","Switch on the opcode of an instruction.",6,null],[13,"IsConst","","Does an instruction have a constant value?",6,null],[13,"IsPowerOfTwo","","Is the constant value a power of two?",6,null],[13,"BitWidth","","Switch on the bit width of a value.",6,null],[13,"FitsInNativeWord","","Does the value fit in our target architecture\'s native…",6,null],[13,"Eq","","Are the instructions (or immediates) the same?",6,null],[13,"IntegerValue","","Switch on the constant integer value of an instruction.",6,null],[13,"BooleanValue","","Switch on the constant boolean value of an instruction.",6,null],[13,"ConditionCode","","Switch on a condition code.",6,null],[13,"Nop","","No operation. Always evaluates to `Else`.",6,null],[3,"LhsId","","A canonicalized identifier for a left-hand side value that…",null,null],[12,"0","","",7,null],[3,"RhsId","","A canonicalized identifier for a right-hand side value.",null,null],[12,"0","","",8,null],[4,"Action","","An action to perform when transitioning between states in…",null,null],[13,"GetLhs","","Reuse something from the left-hand side.",9,null],[12,"lhs","peepmatic_runtime::linear::Action","The left-hand side instruction or value.",10,null],[13,"UnaryUnquote","peepmatic_runtime::linear","Perform compile-time evaluation.",9,null],[12,"operator","peepmatic_runtime::linear::Action","The unquote operator.",11,null],[12,"operand","","The constant operand to this unquote.",11,null],[13,"BinaryUnquote","peepmatic_runtime::linear","Perform compile-time evaluation.",9,null],[12,"operator","peepmatic_runtime::linear::Action","The unquote operator.",12,null],[12,"operands","","The constant operands to this unquote.",12,null],[13,"MakeIntegerConst","peepmatic_runtime::linear","Create an integer constant.",9,null],[12,"value","peepmatic_runtime::linear::Action","The constant integer value.",13,null],[12,"bit_width","","The bit width of this constant.",13,null],[13,"MakeBooleanConst","peepmatic_runtime::linear","Create a boolean constant.",9,null],[12,"value","peepmatic_runtime::linear::Action","The constant boolean value.",14,null],[12,"bit_width","","The bit width of this constant.",14,null],[13,"MakeConditionCode","peepmatic_runtime::linear","Create a condition code.",9,null],[12,"cc","peepmatic_runtime::linear::Action","The condition code.",15,null],[13,"MakeUnaryInst","peepmatic_runtime::linear","Make a unary instruction.",9,null],[12,"operand","peepmatic_runtime::linear::Action","The operand for this instruction.",16,null],[12,"type","","The type of this instruction\'s result.",16,null],[12,"operator","","The operator for this instruction.",16,null],[13,"MakeBinaryInst","peepmatic_runtime::linear","Make a binary instruction.",9,null],[12,"operator","peepmatic_runtime::linear::Action","The opcode for this instruction.",17,null],[12,"type","","The type of this instruction\'s result.",17,null],[12,"operands","","The operands for this instruction.",17,null],[13,"MakeTernaryInst","peepmatic_runtime::linear","Make a ternary instruction.",9,null],[12,"operator","peepmatic_runtime::linear::Action","The opcode for this instruction.",18,null],[12,"type","","The type of this instruction\'s result.",18,null],[12,"operands","","The operands for this instruction.",18,null],[0,"optimizations","peepmatic_runtime","Compiled peephole optimizations.",null,null],[3,"PeepholeOptimizations","peepmatic_runtime::optimizations","A compiled set of peephole optimizations.",null,null],[12,"integers","","Not all integers we\'re matching on fit in the `u32` that…",19,null],[12,"automata","","The underlying automata for matching optimizations\'…",19,null],[11,"deserialize","","Deserialize a `PeepholeOptimizations` from bytes.",19,[[],["result",6]]],[11,"serialize_to_file","","Serialize these peephole optimizations out to the file at…",19,[[["path",3]],["result",6]]],[11,"optimizer","","Create a new peephole optimizer instance from this set of…",19,[[],["peepholeoptimizer",3]]],[0,"optimizer","peepmatic_runtime","An optimizer for a set of peephole optimizations.",null,null],[3,"PeepholeOptimizer","peepmatic_runtime::optimizer","A peephole optimizer instance that can apply a set of…",null,null],[11,"apply_one","","Attempt to apply a single peephole optimization to the…",20,[[],["option",4]]],[11,"apply_all","","Keep applying peephole optimizations to the given…",20,[[]]],[0,"part","peepmatic_runtime","Parts of instructions.",null,null],[4,"Constant","peepmatic_runtime::part","A constant value.",null,null],[13,"Bool","","A boolean of the given width.",21,null],[13,"Int","","An integer constant of the given width,",21,null],[4,"Part","","A part of an instruction, or a whole instruction itself.",null,null],[13,"Instruction","","An instruction (or result of an instruction).",22,null],[13,"Constant","","A constant value.",22,null],[13,"ConditionCode","","A condition code.",22,null],[11,"as_int","","If this is any kind of integer constant, get it as a…",21,[[],["option",4]]],[11,"as_bool","","If this is any kind of boolean constant, get its value.",21,[[],["option",4]]],[11,"bit_width","","The number of bits required to represent this constant…",21,[[]]],[11,"as_instruction","","",22,[[],["option",4]]],[11,"is_instruction","","",22,[[]]],[11,"unwrap_instruction","","",22,[[]]],[11,"as_constant","","",22,[[],[["option",4],["constant",4]]]],[11,"is_constant","","",22,[[]]],[11,"unwrap_constant","","",22,[[],["constant",4]]],[11,"as_condition_code","","",22,[[],[["conditioncode",4],["option",4]]]],[11,"is_condition_code","","",22,[[]]],[11,"unwrap_condition_code","","",22,[[],["conditioncode",4]]],[0,"type","peepmatic_runtime","Types.",null,null],[4,"BitWidth","peepmatic_runtime::type","A bit width of a type.",null,null],[13,"Polymorphic","","Polymorphic over bit width, with the same width as the…",23,null],[13,"One","","A fixed bit width of 1.",23,null],[13,"Eight","","A fixed bit width of 8.",23,null],[13,"Sixteen","","A fixed bit width of 16.",23,null],[13,"ThirtyTwo","","A fixed bit width of 32.",23,null],[13,"SixtyFour","","A fixed bit width of 64.",23,null],[13,"OneTwentyEight","","A fixed bit width of 128.",23,null],[4,"Kind","","The kind of type we are looking at: either an integer kind…",null,null],[13,"Int","","Integer kind.",24,null],[13,"Bool","","Boolean kind.",24,null],[13,"CpuFlags","","CPU flags kind.",24,null],[13,"Void","","Void kind.",24,null],[3,"Type","","A type a value or the result of an operation.",null,null],[12,"kind","","This type\'s kind.",25,null],[12,"bit_width","","This type\'s bit width.",25,null],[11,"is_polymorphic","","Is this a polymorphic bit width?",23,[[]]],[11,"fixed_width","","Get this width in bits, unless this is a polymorphic bit…",23,[[],["option",4]]],[11,"i1","","Get the `i1` type.",25,[[]]],[11,"i8","","Get the `i8` type.",25,[[]]],[11,"i16","","Get the `i16` type.",25,[[]]],[11,"i32","","Get the `i32` type.",25,[[]]],[11,"i64","","Get the `i64` type.",25,[[]]],[11,"i128","","Get the `i128` type.",25,[[]]],[11,"b1","","Get the `b1` type.",25,[[]]],[11,"b8","","Get the `b8` type.",25,[[]]],[11,"b16","","Get the `b16` type.",25,[[]]],[11,"b32","","Get the `b32` type.",25,[[]]],[11,"b64","","Get the `b64` type.",25,[[]]],[11,"b128","","Get the `b128` type.",25,[[]]],[11,"cpu_flags","","Get the CPU flags type.",25,[[]]],[11,"void","","Get the void type.",25,[[]]],[0,"unquote","peepmatic_runtime","Unquote operator definition.",null,null],[4,"UnquoteOperator","peepmatic_runtime::unquote","Compile-time unquote operators.",null,null],[13,"Band","","",26,null],[13,"Bor","","",26,null],[13,"Bxor","","",26,null],[13,"Iadd","","",26,null],[13,"Imul","","",26,null],[13,"Isub","","",26,null],[13,"Log2","","",26,null],[13,"Neg","","",26,null],[11,"from","peepmatic_runtime::cc","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","peepmatic_runtime::error","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","peepmatic_runtime::integer_interner","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","peepmatic_runtime::linear","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","peepmatic_runtime::optimizations","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","peepmatic_runtime::optimizer","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","peepmatic_runtime::part","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","peepmatic_runtime::type","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","peepmatic_runtime::unquote","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","peepmatic_runtime::error","",27,[[["errorinner",4],["box",3]]]],[11,"from","","",27,[[["error",3]],["error",3]]],[11,"from","","",27,[[["error",6]],["error",3]]],[11,"from","peepmatic_runtime::part","",22,[[["constant",4]],["part",4]]],[11,"from","","",22,[[["conditioncode",4]],["part",4]]],[11,"clone","peepmatic_runtime::cc","",0,[[],["conditioncode",4]]],[11,"clone","peepmatic_runtime::integer_interner","",28,[[],["integerid",3]]],[11,"clone","peepmatic_runtime::linear","",4,[[],["optimization",3]]],[11,"clone","","",29,[[],["else",3]]],[11,"clone","","",5,[[],["match",3]]],[11,"clone","","",6,[[],["matchop",4]]],[11,"clone","","",7,[[],["lhsid",3]]],[11,"clone","","",8,[[],["rhsid",3]]],[11,"clone","","",9,[[],["action",4]]],[11,"clone","peepmatic_runtime::part","",21,[[],["constant",4]]],[11,"clone","","",22,[[],["part",4]]],[11,"clone","peepmatic_runtime::type","",23,[[],["bitwidth",4]]],[11,"clone","","",24,[[],["kind",4]]],[11,"clone","","",25,[[],["type",3]]],[11,"clone","peepmatic_runtime::unquote","",26,[[],["unquoteoperator",4]]],[11,"default","peepmatic_runtime::integer_interner","",2,[[],["integerinterner",3]]],[11,"cmp","peepmatic_runtime::linear","",29,[[["else",3]],["ordering",4]]],[11,"cmp","","",7,[[["lhsid",3]],["ordering",4]]],[11,"eq","peepmatic_runtime::cc","",0,[[["conditioncode",4]]]],[11,"eq","peepmatic_runtime::integer_interner","",28,[[["integerid",3]]]],[11,"ne","","",28,[[["integerid",3]]]],[11,"eq","peepmatic_runtime::linear","",4,[[["optimization",3]]]],[11,"ne","","",4,[[["optimization",3]]]],[11,"eq","","",29,[[["else",3]]]],[11,"eq","","",5,[[["match",3]]]],[11,"ne","","",5,[[["match",3]]]],[11,"eq","","",6,[[["matchop",4]]]],[11,"ne","","",6,[[["matchop",4]]]],[11,"eq","","",7,[[["lhsid",3]]]],[11,"ne","","",7,[[["lhsid",3]]]],[11,"eq","","",8,[[["rhsid",3]]]],[11,"ne","","",8,[[["rhsid",3]]]],[11,"eq","","",9,[[["action",4]]]],[11,"ne","","",9,[[["action",4]]]],[11,"eq","peepmatic_runtime::part","",21,[[["constant",4]]]],[11,"ne","","",21,[[["constant",4]]]],[11,"eq","","",22,[[["part",4]]]],[11,"ne","","",22,[[["part",4]]]],[11,"eq","peepmatic_runtime::type","",23,[[["bitwidth",4]]]],[11,"eq","","",24,[[["kind",4]]]],[11,"eq","","",25,[[["type",3]]]],[11,"ne","","",25,[[["type",3]]]],[11,"eq","peepmatic_runtime::unquote","",26,[[["unquoteoperator",4]]]],[11,"partial_cmp","peepmatic_runtime::linear","",29,[[["else",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",7,[[["lhsid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",7,[[["lhsid",3]]]],[11,"le","","",7,[[["lhsid",3]]]],[11,"gt","","",7,[[["lhsid",3]]]],[11,"ge","","",7,[[["lhsid",3]]]],[11,"fmt","peepmatic_runtime::cc","",0,[[["formatter",3]],["result",6]]],[11,"fmt","peepmatic_runtime::error","",27,[[["formatter",3]],["result",6]]],[11,"fmt","peepmatic_runtime::integer_interner","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","peepmatic_runtime::linear","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","peepmatic_runtime::optimizations","",19,[[["formatter",3]],["result",6]]],[11,"fmt","peepmatic_runtime::optimizer","",20,[[["formatter",3]],["result",6]]],[11,"fmt","peepmatic_runtime::part","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","peepmatic_runtime::type","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","peepmatic_runtime::unquote","",26,[[["formatter",3]],["result",6]]],[11,"fmt","peepmatic_runtime::cc","",0,[[["formatter",3]],["result",6]]],[11,"fmt","peepmatic_runtime::error","",27,[[["formatter",3]],["result",6]]],[11,"fmt","peepmatic_runtime::type","",25,[[["formatter",3]],["result",6]]],[11,"hash","peepmatic_runtime::cc","",0,[[]]],[11,"hash","peepmatic_runtime::integer_interner","",28,[[]]],[11,"hash","peepmatic_runtime::linear","",29,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","peepmatic_runtime::type","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","peepmatic_runtime::unquote","",26,[[]]],[11,"try_from","peepmatic_runtime::cc","",0,[[],["result",4]]],[11,"try_from","peepmatic_runtime::type","",23,[[],["result",4]]],[11,"try_from","peepmatic_runtime::unquote","",26,[[],["result",4]]],[11,"try_from","","",26,[[["nonzerou32",3]],["result",4]]],[11,"source","peepmatic_runtime::error","",27,[[],[["error",8],["option",4]]]],[11,"serialize","peepmatic_runtime::cc","",0,[[],["result",4]]],[11,"serialize","peepmatic_runtime::integer_interner","",28,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","peepmatic_runtime::linear","",29,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","peepmatic_runtime::optimizations","",19,[[],["result",4]]],[11,"serialize","peepmatic_runtime::type","",23,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"serialize","peepmatic_runtime::unquote","",26,[[],["result",4]]],[11,"deserialize","peepmatic_runtime::cc","",0,[[],["result",4]]],[11,"deserialize","peepmatic_runtime::integer_interner","",28,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","peepmatic_runtime::linear","",29,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","peepmatic_runtime::optimizations","",19,[[],["result",4]]],[11,"deserialize","peepmatic_runtime::type","",23,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","peepmatic_runtime::unquote","",26,[[],["result",4]]],[11,"parse","peepmatic_runtime::type","",25,[[["parser",3]],["result",6]]],[11,"parse","peepmatic_runtime::unquote","",26,[[["parser",3]],[["unquoteoperator",4],["result",6]]]],[11,"result_type","","",26,[[]]],[11,"immediates_arity","","",26,[[]]],[11,"immediate_types","","",26,[[]]],[11,"parameters_arity","","",26,[[]]],[11,"parameter_types","","",26,[[]]],[11,"is_reduce","","",26,[[]]],[11,"is_extend","","",26,[[]]]],"p":[[4,"ConditionCode"],[8,"InstructionSet"],[3,"IntegerInterner"],[3,"Optimizations"],[3,"Optimization"],[3,"Match"],[4,"MatchOp"],[3,"LhsId"],[3,"RhsId"],[4,"Action"],[13,"GetLhs"],[13,"UnaryUnquote"],[13,"BinaryUnquote"],[13,"MakeIntegerConst"],[13,"MakeBooleanConst"],[13,"MakeConditionCode"],[13,"MakeUnaryInst"],[13,"MakeBinaryInst"],[13,"MakeTernaryInst"],[3,"PeepholeOptimizations"],[3,"PeepholeOptimizer"],[4,"Constant"],[4,"Part"],[4,"BitWidth"],[4,"Kind"],[3,"Type"],[4,"UnquoteOperator"],[3,"Error"],[3,"IntegerId"],[3,"Else"]]},\
"peepmatic_souper":{"doc":"Converting Souper optimizations into Peepmatic DSL.","i":[[5,"convert_file","peepmatic_souper","Convert a file containing Souper optimizations into…",null,[[["path",3]],[["result",6],["string",3]]]],[5,"convert_str","","Convert a string of Souper optimizations into Peepmatic DSL.",null,[[["option",4],["path",3]],[["result",6],["string",3]]]]],"p":[]},\
"peepmatic_test":{"doc":"Testing utilities and a testing-only instruction set for…","i":[[3,"Instruction","peepmatic_test","",null,null],[12,"0","","",0,null],[3,"InstructionData","","",null,null],[12,"operator","","",1,null],[12,"type","","",1,null],[12,"immediates","","",1,null],[12,"arguments","","",1,null],[4,"Immediate","","",null,null],[13,"Constant","","",2,null],[13,"ConditionCode","","",2,null],[3,"Program","","",null,null],[11,"structurally_eq","","Are `a` and `b` structurally equivalent, even if they use…",3,[[["instruction",3]]]],[11,"instructions","","",3,[[]]],[11,"replace_instruction","","",3,[[["instruction",3]]]],[11,"resolve","","",3,[[["instruction",3]],["instruction",3]]],[11,"data","","",3,[[["instruction",3]],["instructiondata",3]]],[11,"new_instruction","","",3,[[["instruction",3],["vec",3],["testoperator",4],["vec",3],["type",3],["immediate",4]],["instruction",3]]],[11,"const","","",3,[[["constant",4],["bitwidth",4]],["instruction",3]]],[3,"TestIsa","","",null,null],[12,"native_word_size_in_bits","","",4,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",2,[[["constant",4]],["immediate",4]]],[11,"from","","",2,[[["conditioncode",4]],["immediate",4]]],[11,"clone","","",0,[[],["instruction",3]]],[11,"clone","","",2,[[],["immediate",4]]],[11,"default","","",3,[[],["program",3]]],[11,"cmp","","",0,[[["instruction",3]],["ordering",4]]],[11,"eq","","",0,[[["instruction",3]]]],[11,"ne","","",0,[[["instruction",3]]]],[11,"eq","","",2,[[["immediate",4]]]],[11,"ne","","",2,[[["immediate",4]]]],[11,"partial_cmp","","",0,[[["instruction",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["instruction",3]]]],[11,"le","","",0,[[["instruction",3]]]],[11,"gt","","",0,[[["instruction",3]]]],[11,"ge","","",0,[[["instruction",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"try_from","","",2,[[["part",4],["instruction",3]],[["result",4],["immediate",4]]]],[11,"replace_instruction","","",4,[[["program",3],["instruction",3],["part",4]],["instruction",3]]],[11,"operator","","",4,[[["program",3]],["option",4]]],[11,"make_inst_1","","",4,[[["program",3],["instruction",3],["testoperator",4],["part",4],["type",3]],["instruction",3]]],[11,"make_inst_2","","",4,[[["program",3],["instruction",3],["testoperator",4],["part",4],["type",3]],["instruction",3]]],[11,"make_inst_3","","",4,[[["program",3],["instruction",3],["testoperator",4],["part",4],["type",3]],["instruction",3]]],[11,"instruction_to_constant","","",4,[[["program",3],["instruction",3]],[["option",4],["constant",4]]]],[11,"instruction_result_bit_width","","",4,[[["program",3],["instruction",3]]]],[11,"native_word_size_in_bits","","",4,[[["program",3]]]]],"p":[[3,"Instruction"],[3,"InstructionData"],[4,"Immediate"],[3,"Program"],[3,"TestIsa"]]},\
"peepmatic_test_operator":{"doc":"This crate defines `TestOperator`: a `TOperator` type for…","i":[[4,"TestOperator","peepmatic_test_operator","A `TOperator` type for use inside tests.",null,null],[13,"AdjustSpDown","","",0,null],[13,"AdjustSpDownImm","","",0,null],[13,"Band","","",0,null],[13,"BandImm","","",0,null],[13,"Bconst","","",0,null],[13,"Bint","","",0,null],[13,"Bor","","",0,null],[13,"BorImm","","",0,null],[13,"Brnz","","",0,null],[13,"Brz","","",0,null],[13,"Bxor","","",0,null],[13,"BxorImm","","",0,null],[13,"Iadd","","",0,null],[13,"IaddImm","","",0,null],[13,"Icmp","","",0,null],[13,"IcmpImm","","",0,null],[13,"Iconst","","",0,null],[13,"Ifcmp","","",0,null],[13,"IfcmpImm","","",0,null],[13,"Imul","","",0,null],[13,"ImulImm","","",0,null],[13,"Ireduce","","",0,null],[13,"IrsubImm","","",0,null],[13,"Ishl","","",0,null],[13,"IshlImm","","",0,null],[13,"Isub","","",0,null],[13,"Rotl","","",0,null],[13,"RotlImm","","",0,null],[13,"Rotr","","",0,null],[13,"RotrImm","","",0,null],[13,"Sdiv","","",0,null],[13,"SdivImm","","",0,null],[13,"Select","","",0,null],[13,"Sextend","","",0,null],[13,"Srem","","",0,null],[13,"SremImm","","",0,null],[13,"Sshr","","",0,null],[13,"SshrImm","","",0,null],[13,"Trapnz","","",0,null],[13,"Trapz","","",0,null],[13,"Udiv","","",0,null],[13,"UdivImm","","",0,null],[13,"Uextend","","",0,null],[13,"Urem","","",0,null],[13,"UremImm","","",0,null],[13,"Ushr","","",0,null],[13,"UshrImm","","",0,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["testoperator",4]]],[11,"eq","","",0,[[["testoperator",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_from","","",0,[[["nonzerou32",3]],["result",4]]],[11,"result_type","","",0,[[]]],[11,"immediates_arity","","",0,[[]]],[11,"immediate_types","","",0,[[]]],[11,"parameters_arity","","",0,[[]]],[11,"parameter_types","","",0,[[]]],[11,"is_reduce","","",0,[[]]],[11,"is_extend","","",0,[[]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"parse","","",0,[[["parser",3]],[["result",6],["testoperator",4]]]]],"p":[[4,"TestOperator"]]},\
"peepmatic_traits":{"doc":"Shared traits, types, and macros for Peepmatic.","i":[[8,"TypingContext","peepmatic_traits","A trait to represent a typing context.",null,null],[16,"Span","","A source span.",0,null],[16,"TypeVariable","","A type variable.",0,null],[10,"cc","","Create a condition code type.",0,[[]]],[10,"bNN","","Create a boolean type with a polymorphic bit width.",0,[[]]],[10,"iNN","","Create an integer type with a polymorphic bit width.",0,[[]]],[10,"iMM","","Create an integer type with a polymorphic bit width.",0,[[]]],[10,"cpu_flags","","Create the CPU flags type variable.",0,[[]]],[10,"b1","","Create a boolean type of size one bit.",0,[[]]],[10,"void","","Create the void type, used as the result of operators that…",0,[[]]],[10,"bool_or_int","","Create a type variable that may be either a boolean or an…",0,[[]]],[10,"any_t","","Create a type variable that can be any type T.",0,[[]]],[8,"TypingRules","","The typing rules for a `TOperator` type.",null,null],[10,"result_type","","Get the result type of this operator.",1,[[]]],[10,"immediates_arity","","Get the number of immediates this operator has.",1,[[]]],[10,"immediate_types","","Get the types of this operator\'s immediates.",1,[[]]],[10,"parameters_arity","","Get the number of parameters this operator has.",1,[[]]],[10,"parameter_types","","Get the types of this operator\'s parameters.",1,[[]]],[10,"is_reduce","","Is this a bit width reducing instruction?",1,[[]]],[10,"is_extend","","Is this a bit width extending instruction?",1,[[]]],[5,"unsupported","","Raise a panic about an unsupported operation.",null,[[]]],[14,"define_parse_impl_for_operator","","Define a `wast::parser::Parse` implementation for an…",null,null],[14,"define_typing_rules_impl_for_operator","","Define a `peepmatic_traits::TypingRules` implementation…",null,null],[14,"define_parse_and_typing_rules_for_operator","","Define both a `wast::parser::Parse` implementation and a…",null,null],[14,"define_operator","","Define an operator type, as well as its parsing and typing…",null,null]],"p":[[8,"TypingContext"],[8,"TypingRules"]]},\
"proc_macro2":{"doc":"A wrapper around the procedural macro API of the…","i":[[0,"token_stream","proc_macro2","Public implementation details for the `TokenStream` type,…",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`\'s `TokenTree`s.",null,null],[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",null,null],[3,"LexError","","Error returned from `TokenStream::from_str`.",null,null],[11,"new","","Returns an empty `TokenStream` containing no token trees.",0,[[],["tokenstream",3]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",0,[[]]],[3,"Span","","A region of source code, along with macro expansion…",null,null],[11,"call_site","","The span of the invocation of the current procedural macro.",1,[[],["span",3]]],[11,"mixed_site","","The span located at the invocation of the procedural…",1,[[],["span",3]]],[11,"resolved_at","","Creates a new span with the same line/column information…",1,[[["span",3]],["span",3]]],[11,"located_at","","Creates a new span with the same name resolution behavior…",1,[[["span",3]],["span",3]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",1,[[],["span",3]]],[11,"join","","Create a new span encompassing `self` and `other`.",1,[[["span",3]],[["span",3],["option",4]]]],[4,"TokenTree","","A single token or a delimited sequence of token trees…",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",2,null],[13,"Ident","","An identifier.",2,null],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",2,null],[13,"Literal","","A literal character (`\'a\'`), string (`\\\"hello\\\"`), number…",2,null],[11,"span","","Returns the span of this tree, delegating to the `span`…",2,[[],["span",3]]],[11,"set_span","","Configures the span for only this token.",2,[[["span",3]]]],[3,"Group","","A delimited token stream.",null,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","`( ... )`",3,null],[13,"Brace","","`{ ... }`",3,null],[13,"Bracket","","`[ ... ]`",3,null],[13,"None","","`Ø ... Ø`",3,null],[11,"new","","Creates a new `Group` with the given delimiter and token…",4,[[["delimiter",4],["tokenstream",3]],["group",3]]],[11,"delimiter","","Returns the delimiter of this `Group`",4,[[],["delimiter",4]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",4,[[],["tokenstream",3]]],[11,"span","","Returns the span for the delimiters of this token stream,…",4,[[],["span",3]]],[11,"span_open","","Returns the span pointing to the opening delimiter of this…",4,[[],["span",3]]],[11,"span_close","","Returns the span pointing to the closing delimiter of this…",4,[[],["span",3]]],[11,"set_span","","Configures the span for this `Group`\'s delimiters, but not…",4,[[["span",3]]]],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",null,null],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",null,null],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",5,null],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `\'` is `Joint` in `\'#`.",5,null],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["spacing",4]],["punct",3]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[],["spacing",4]]],[11,"span","","Returns the span for this punctuation character.",6,[[],["span",3]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["span",3]]]],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",null,null],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this `Ident`.",7,[[],["span",3]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["span",3]]]],[3,"Literal","","A literal string (`\\\"hello\\\"`), byte string (`b\\\"hello\\\"`),…",null,null],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[],["literal",3]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",8,[[],["literal",3]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[],["literal",3]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",8,[[],["literal",3]]],[11,"string","","String literal.",8,[[],["literal",3]]],[11,"character","","Character literal.",8,[[],["literal",3]]],[11,"byte_string","","Byte string literal.",8,[[],["literal",3]]],[11,"span","","Returns the span encompassing this literal.",8,[[],["span",3]]],[11,"set_span","","Configures the span associated for this literal.",8,[[["span",3]]]],[11,"subspan","","Returns a `Span` that is a subset of `self.span()`…",8,[[["rangebounds",8]],[["span",3],["option",4]]]],[11,"from","proc_macro2::token_stream","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","proc_macro2","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",1,[[["span",3]],["span",3]]],[11,"from","","",0,[[["tokenstream",3]],["tokenstream",3]]],[11,"from","","",0,[[["tokentree",4]]]],[11,"from","","",2,[[["group",3]],["tokentree",4]]],[11,"from","","",2,[[["ident",3]],["tokentree",4]]],[11,"from","","",2,[[["punct",3]],["tokentree",4]]],[11,"from","","",2,[[["literal",3]],["tokentree",4]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"into_iter","","",0,[[],["intoiter",3]]],[11,"next","proc_macro2::token_stream","",9,[[],[["tokentree",4],["option",4]]]],[11,"clone","proc_macro2","",0,[[],["tokenstream",3]]],[11,"clone","","",1,[[],["span",3]]],[11,"clone","","",2,[[],["tokentree",4]]],[11,"clone","","",4,[[],["group",3]]],[11,"clone","","",3,[[],["delimiter",4]]],[11,"clone","","",6,[[],["punct",3]]],[11,"clone","","",5,[[],["spacing",4]]],[11,"clone","","",7,[[],["ident",3]]],[11,"clone","","",8,[[],["literal",3]]],[11,"clone","proc_macro2::token_stream","",9,[[],["intoiter",3]]],[11,"default","proc_macro2","",0,[[]]],[11,"cmp","","",7,[[["ident",3]],["ordering",4]]],[11,"eq","","",3,[[["delimiter",4]]]],[11,"eq","","",5,[[["spacing",4]]]],[11,"eq","","",7,[[["ident",3]]]],[11,"eq","","",7,[[]]],[11,"partial_cmp","","",7,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2::token_stream","",9,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"hash","","",7,[[]]],[11,"from_str","","",0,[[],[["result",4],["tokenstream",3],["lexerror",3]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]]],"p":[[3,"TokenStream"],[3,"Span"],[4,"TokenTree"],[4,"Delimiter"],[3,"Group"],[4,"Spacing"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"IntoIter"],[3,"LexError"]]},\
"quote":{"doc":"github crates-io docs-rs","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",null,null],[10,"append","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[]]],[8,"IdentFragment","","Specialized formatting trait used by `format_ident!`.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter",3]],["result",6]]],[11,"span","","Span associated with this `IdentFragment`.",1,[[],[["option",4],["span",3]]]],[8,"ToTokens","","Types that can be interpolated inside a `quote!` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `TokenStream`.",2,[[["tokenstream",3]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[14,"format_ident","","Formatting macro for constructing `Ident`s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",null,null],[11,"span","","Span associated with this `IdentFragment`.",1,[[],[["option",4],["span",3]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"run_examples":{"doc":"","i":[[5,"main","run_examples","",null,[[],["result",6]]],[5,"run","","",null,[[["command",3]],["result",6]]]],"p":[]},\
"serde":{"doc":"SerdeSerde is a framework for serializing and…","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[0,"value","serde::de","Building blocks for deserializing basic values using the…",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",null,null],[3,"UnitDeserializer","","A deserializer holding a `()`.",null,null],[3,"BoolDeserializer","","A deserializer holding a `bool`.",null,null],[3,"I8Deserializer","","A deserializer holding an `i8`.",null,null],[3,"I16Deserializer","","A deserializer holding an `i16`.",null,null],[3,"I32Deserializer","","A deserializer holding an `i32`.",null,null],[3,"I64Deserializer","","A deserializer holding an `i64`.",null,null],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",null,null],[3,"U8Deserializer","","A deserializer holding a `u8`.",null,null],[3,"U16Deserializer","","A deserializer holding a `u16`.",null,null],[3,"U64Deserializer","","A deserializer holding a `u64`.",null,null],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",null,null],[3,"F32Deserializer","","A deserializer holding an `f32`.",null,null],[3,"F64Deserializer","","A deserializer holding an `f64`.",null,null],[3,"CharDeserializer","","A deserializer holding a `char`.",null,null],[3,"I128Deserializer","","A deserializer holding an `i128`.",null,null],[3,"U128Deserializer","","A deserializer holding a `u128`.",null,null],[3,"U32Deserializer","","A deserializer holding a `u32`.",null,null],[3,"StrDeserializer","","A deserializer holding a `&str`.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",0,[[],["borrowedstrdeserializer",3]]],[3,"StringDeserializer","","A deserializer holding a `String`.",null,null],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",null,null],[11,"new","","Create a new borrowed deserializer from the given byte…",1,[[],["borrowedbytesdeserializer",3]]],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",2,[[]]],[11,"end","","Check for remaining elements after passing a…",2,[[],["result",4]]],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",null,null],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",3,[[]]],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[11,"new","","Construct a new `MapDeserializer<I, E>`.",4,[[]]],[11,"end","","Check for remaining elements after passing a…",4,[[],["result",4]]],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",null,null],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",5,[[]]],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[8,"Error","","The `Error` trait allows `Deserialize` implementations to…",null,null],[10,"custom","","Raised when there is general error when deserializing a…",6,[[]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",6,[[["unexpected",4],["expected",8]]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",6,[[["unexpected",4],["expected",8]]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",6,[[["expected",8]]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",6,[[]]],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",6,[[]]],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",6,[[]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",6,[[]]],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",7,null],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",7,null],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",7,null],[13,"Float","","The input contained a floating point `f32` or `f64` that…",7,null],[13,"Char","","The input contained a `char` that was not expected.",7,null],[13,"Str","","The input contained a `&str` or `String` that was not…",7,null],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",7,null],[13,"Unit","","The input contained a unit `()` that was not expected.",7,null],[13,"Option","","The input contained an `Option<T>` that was not expected.",7,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",7,null],[13,"Seq","","The input contained a sequence that was not expected.",7,null],[13,"Map","","The input contained a map that was not expected.",7,null],[13,"Enum","","The input contained an enum that was not expected.",7,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",7,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",7,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",7,null],[13,"StructVariant","","The input contained a struct variant that was not expected.",7,null],[13,"Other","","A message stating what uncategorized thing the input…",7,null],[8,"Expected","","`Expected` represents an explanation of what data a…",null,null],[10,"fmt","","Format an explanation of what data was being expected.…",8,[[["formatter",3]],["result",6]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[],["result",4]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",null,null],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",null,null],[16,"Value","","The type produced by using this seed.",10,null],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",10,[[],["result",4]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[],["result",4]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[],["result",4]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[],["result",4]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[],["result",4]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[],["result",4]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[],["result",4]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[],["result",4]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[],["result",4]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[],["result",4]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[],["result",4]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[],["result",4]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[],["result",4]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[],["result",4]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[],["result",4]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[],["result",4]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[],["result",4]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[],["result",4]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[],["result",4]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[],["result",4]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[],["result",4]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[],["result",4]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[],["result",4]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[],["result",4]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[]]],[8,"Visitor","","This trait represents a visitor that walks through a…",null,null],[16,"Value","","The value produced by this visitor.",12,null],[10,"expecting","","Format a message stating what data this Visitor expects to…",12,[[["formatter",3]],["result",6]]],[11,"visit_bool","","The input contains a boolean.",12,[[],["result",4]]],[11,"visit_i8","","The input contains an `i8`.",12,[[],["result",4]]],[11,"visit_i16","","The input contains an `i16`.",12,[[],["result",4]]],[11,"visit_i32","","The input contains an `i32`.",12,[[],["result",4]]],[11,"visit_i64","","The input contains an `i64`.",12,[[],["result",4]]],[11,"visit_i128","","The input contains a `i128`.",12,[[],["result",4]]],[11,"visit_u8","","The input contains a `u8`.",12,[[],["result",4]]],[11,"visit_u16","","The input contains a `u16`.",12,[[],["result",4]]],[11,"visit_u32","","The input contains a `u32`.",12,[[],["result",4]]],[11,"visit_u64","","The input contains a `u64`.",12,[[],["result",4]]],[11,"visit_u128","","The input contains a `u128`.",12,[[],["result",4]]],[11,"visit_f32","","The input contains an `f32`.",12,[[],["result",4]]],[11,"visit_f64","","The input contains an `f64`.",12,[[],["result",4]]],[11,"visit_char","","The input contains a `char`.",12,[[],["result",4]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",12,[[],["result",4]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",12,[[],["result",4]]],[11,"visit_string","","The input contains a string and ownership of the string is…",12,[[["string",3]],["result",4]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",12,[[],["result",4]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",12,[[],["result",4]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",12,[[["vec",3]],["result",4]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[],["result",4]]],[11,"visit_some","","The input contains an optional that is present.",12,[[],["result",4]]],[11,"visit_unit","","The input contains a unit `()`.",12,[[],["result",4]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[],["result",4]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[],["result",4]]],[11,"visit_map","","The input contains a key-value map.",12,[[],["result",4]]],[11,"visit_enum","","The input contains an enum.",12,[[],["result",4]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",13,null],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",13,[[],[["option",4],["result",4]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",13,[[],[["option",4],["result",4]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",13,[[],["option",4]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",14,null],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[],[["result",4],["option",4]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",14,[[],["result",4]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",14,[[],[["result",4],["option",4]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[],[["option",4],["result",4]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",14,[[],["result",4]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",14,[[],[["option",4],["result",4]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",14,[[],["option",4]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",15,null],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",15,null],[10,"variant_seed","","`variant` is called to identify which variant to…",15,[[],["result",4]]],[11,"variant","","`variant` is called to identify which variant to…",15,[[],["result",4]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",16,null],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[],["result",4]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[],["result",4]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[],["result",4]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[],["result",4]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,[[],["result",4]]],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",17,null],[10,"into_deserializer","","Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",null,null],[8,"Error","","Trait used by `Serialize` implementations to generically…",null,null],[10,"custom","","Used when a `Serialize` implementation encounters any…",18,[[]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[],["result",4]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from `serialize_seq` for serializing the…",20,null],[16,"SerializeTuple","","Type returned from `serialize_tuple` for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from `serialize_tuple_struct` for…",20,null],[16,"SerializeTupleVariant","","Type returned from `serialize_tuple_variant` for…",20,null],[16,"SerializeMap","","Type returned from `serialize_map` for serializing the…",20,null],[16,"SerializeStruct","","Type returned from `serialize_struct` for serializing the…",20,null],[16,"SerializeStructVariant","","Type returned from `serialize_struct_variant` for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[],["result",4]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[],["result",4]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[],["result",4]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[],["result",4]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[],["result",4]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[],["result",4]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[],["result",4]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[],["result",4]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[],["result",4]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[],["result",4]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[],["result",4]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[],["result",4]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[],["result",4]]],[10,"serialize_char","","Serialize a character.",20,[[],["result",4]]],[10,"serialize_str","","Serialize a `&str`.",20,[[],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result",4]]],[10,"serialize_none","","Serialize a `None` value.",20,[[],["result",4]]],[10,"serialize_some","","Serialize a `Some(T)` value.",20,[[],["result",4]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",20,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",21,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",21,null],[10,"serialize_element","","Serialize a sequence element.",21,[[],["result",4]]],[10,"end","","Finish serializing a sequence.",21,[[],["result",4]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,null],[10,"serialize_element","","Serialize a tuple element.",22,[[],["result",4]]],[10,"end","","Finish serializing a tuple.",22,[[],["result",4]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,null],[10,"serialize_field","","Serialize a tuple struct field.",23,[[],["result",4]]],[10,"end","","Finish serializing a tuple struct.",23,[[],["result",4]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,null],[10,"serialize_field","","Serialize a tuple variant field.",24,[[],["result",4]]],[10,"end","","Finish serializing a tuple variant.",24,[[],["result",4]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,null],[10,"serialize_key","","Serialize a map key.",25,[[],["result",4]]],[10,"serialize_value","","Serialize a map value.",25,[[],["result",4]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[],["result",4]]],[10,"end","","Finish serializing a map.",25,[[],["result",4]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,null],[10,"serialize_field","","Serialize a struct field.",26,[[],["result",4]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[],["result",4]]],[10,"end","","Finish serializing a struct.",26,[[],["result",4]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,null],[10,"serialize_field","","Serialize a struct variant field.",27,[[],["result",4]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[],["result",4]]],[10,"end","","Finish serializing a struct variant.",27,[[],["result",4]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[],["result",4]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[],["result",4]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[],["result",4]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[],["result",4]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[],["result",4]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[],["result",4]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[],["result",4]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[],["result",4]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[],["result",4]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[],["result",4]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[],["result",4]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[],["result",4]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[],["result",4]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[],["result",4]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[],["result",4]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[],["result",4]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[],["result",4]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[],["result",4]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[],["result",4]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[],["result",4]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[],["result",4]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[],["result",4]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[],["result",4]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[],["result",4]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[],["result",4]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from `serialize_seq` for serializing the…",20,null],[16,"SerializeTuple","","Type returned from `serialize_tuple` for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from `serialize_tuple_struct` for…",20,null],[16,"SerializeTupleVariant","","Type returned from `serialize_tuple_variant` for…",20,null],[16,"SerializeMap","","Type returned from `serialize_map` for serializing the…",20,null],[16,"SerializeStruct","","Type returned from `serialize_struct` for serializing the…",20,null],[16,"SerializeStructVariant","","Type returned from `serialize_struct_variant` for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[],["result",4]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[],["result",4]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[],["result",4]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[],["result",4]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[],["result",4]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[],["result",4]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[],["result",4]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[],["result",4]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[],["result",4]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[],["result",4]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[],["result",4]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[],["result",4]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[],["result",4]]],[10,"serialize_char","","Serialize a character.",20,[[],["result",4]]],[10,"serialize_str","","Serialize a `&str`.",20,[[],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result",4]]],[10,"serialize_none","","Serialize a `None` value.",20,[[],["result",4]]],[10,"serialize_some","","Serialize a `Some(T)` value.",20,[[],["result",4]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",20,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",null,null],[11,"from","serde::de::value","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"fmt","serde::de","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","serde::ser","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"deserialize","serde::de","",49,[[],[["ignoredany",3],["result",4]]]],[11,"deserialize_bool","serde::de::value","",29,[[],["result",4]]],[11,"deserialize_i8","","",29,[[],["result",4]]],[11,"deserialize_i16","","",29,[[],["result",4]]],[11,"deserialize_i32","","",29,[[],["result",4]]],[11,"deserialize_i64","","",29,[[],["result",4]]],[11,"deserialize_i128","","",29,[[],["result",4]]],[11,"deserialize_u8","","",29,[[],["result",4]]],[11,"deserialize_u16","","",29,[[],["result",4]]],[11,"deserialize_u32","","",29,[[],["result",4]]],[11,"deserialize_u64","","",29,[[],["result",4]]],[11,"deserialize_u128","","",29,[[],["result",4]]],[11,"deserialize_f32","","",29,[[],["result",4]]],[11,"deserialize_f64","","",29,[[],["result",4]]],[11,"deserialize_char","","",29,[[],["result",4]]],[11,"deserialize_str","","",29,[[],["result",4]]],[11,"deserialize_string","","",29,[[],["result",4]]],[11,"deserialize_bytes","","",29,[[],["result",4]]],[11,"deserialize_byte_buf","","",29,[[],["result",4]]],[11,"deserialize_unit","","",29,[[],["result",4]]],[11,"deserialize_unit_struct","","",29,[[],["result",4]]],[11,"deserialize_newtype_struct","","",29,[[],["result",4]]],[11,"deserialize_seq","","",29,[[],["result",4]]],[11,"deserialize_tuple","","",29,[[],["result",4]]],[11,"deserialize_tuple_struct","","",29,[[],["result",4]]],[11,"deserialize_map","","",29,[[],["result",4]]],[11,"deserialize_struct","","",29,[[],["result",4]]],[11,"deserialize_enum","","",29,[[],["result",4]]],[11,"deserialize_identifier","","",29,[[],["result",4]]],[11,"deserialize_ignored_any","","",29,[[],["result",4]]],[11,"deserialize_any","","",29,[[],["result",4]]],[11,"deserialize_option","","",29,[[],["result",4]]],[11,"deserialize_bool","","",30,[[],["result",4]]],[11,"deserialize_i8","","",30,[[],["result",4]]],[11,"deserialize_i16","","",30,[[],["result",4]]],[11,"deserialize_i32","","",30,[[],["result",4]]],[11,"deserialize_i64","","",30,[[],["result",4]]],[11,"deserialize_i128","","",30,[[],["result",4]]],[11,"deserialize_u8","","",30,[[],["result",4]]],[11,"deserialize_u16","","",30,[[],["result",4]]],[11,"deserialize_u32","","",30,[[],["result",4]]],[11,"deserialize_u64","","",30,[[],["result",4]]],[11,"deserialize_u128","","",30,[[],["result",4]]],[11,"deserialize_f32","","",30,[[],["result",4]]],[11,"deserialize_f64","","",30,[[],["result",4]]],[11,"deserialize_char","","",30,[[],["result",4]]],[11,"deserialize_str","","",30,[[],["result",4]]],[11,"deserialize_string","","",30,[[],["result",4]]],[11,"deserialize_bytes","","",30,[[],["result",4]]],[11,"deserialize_byte_buf","","",30,[[],["result",4]]],[11,"deserialize_option","","",30,[[],["result",4]]],[11,"deserialize_unit","","",30,[[],["result",4]]],[11,"deserialize_unit_struct","","",30,[[],["result",4]]],[11,"deserialize_newtype_struct","","",30,[[],["result",4]]],[11,"deserialize_seq","","",30,[[],["result",4]]],[11,"deserialize_tuple","","",30,[[],["result",4]]],[11,"deserialize_tuple_struct","","",30,[[],["result",4]]],[11,"deserialize_map","","",30,[[],["result",4]]],[11,"deserialize_struct","","",30,[[],["result",4]]],[11,"deserialize_enum","","",30,[[],["result",4]]],[11,"deserialize_identifier","","",30,[[],["result",4]]],[11,"deserialize_ignored_any","","",30,[[],["result",4]]],[11,"deserialize_any","","",30,[[],["result",4]]],[11,"deserialize_bool","","",31,[[],["result",4]]],[11,"deserialize_i8","","",31,[[],["result",4]]],[11,"deserialize_i16","","",31,[[],["result",4]]],[11,"deserialize_i32","","",31,[[],["result",4]]],[11,"deserialize_i64","","",31,[[],["result",4]]],[11,"deserialize_i128","","",31,[[],["result",4]]],[11,"deserialize_u8","","",31,[[],["result",4]]],[11,"deserialize_u16","","",31,[[],["result",4]]],[11,"deserialize_u32","","",31,[[],["result",4]]],[11,"deserialize_u64","","",31,[[],["result",4]]],[11,"deserialize_u128","","",31,[[],["result",4]]],[11,"deserialize_f32","","",31,[[],["result",4]]],[11,"deserialize_f64","","",31,[[],["result",4]]],[11,"deserialize_char","","",31,[[],["result",4]]],[11,"deserialize_str","","",31,[[],["result",4]]],[11,"deserialize_string","","",31,[[],["result",4]]],[11,"deserialize_bytes","","",31,[[],["result",4]]],[11,"deserialize_byte_buf","","",31,[[],["result",4]]],[11,"deserialize_option","","",31,[[],["result",4]]],[11,"deserialize_unit","","",31,[[],["result",4]]],[11,"deserialize_unit_struct","","",31,[[],["result",4]]],[11,"deserialize_newtype_struct","","",31,[[],["result",4]]],[11,"deserialize_seq","","",31,[[],["result",4]]],[11,"deserialize_tuple","","",31,[[],["result",4]]],[11,"deserialize_tuple_struct","","",31,[[],["result",4]]],[11,"deserialize_map","","",31,[[],["result",4]]],[11,"deserialize_struct","","",31,[[],["result",4]]],[11,"deserialize_enum","","",31,[[],["result",4]]],[11,"deserialize_identifier","","",31,[[],["result",4]]],[11,"deserialize_ignored_any","","",31,[[],["result",4]]],[11,"deserialize_any","","",31,[[],["result",4]]],[11,"deserialize_bool","","",32,[[],["result",4]]],[11,"deserialize_i8","","",32,[[],["result",4]]],[11,"deserialize_i16","","",32,[[],["result",4]]],[11,"deserialize_i32","","",32,[[],["result",4]]],[11,"deserialize_i64","","",32,[[],["result",4]]],[11,"deserialize_i128","","",32,[[],["result",4]]],[11,"deserialize_u8","","",32,[[],["result",4]]],[11,"deserialize_u16","","",32,[[],["result",4]]],[11,"deserialize_u32","","",32,[[],["result",4]]],[11,"deserialize_u64","","",32,[[],["result",4]]],[11,"deserialize_u128","","",32,[[],["result",4]]],[11,"deserialize_f32","","",32,[[],["result",4]]],[11,"deserialize_f64","","",32,[[],["result",4]]],[11,"deserialize_char","","",32,[[],["result",4]]],[11,"deserialize_str","","",32,[[],["result",4]]],[11,"deserialize_string","","",32,[[],["result",4]]],[11,"deserialize_bytes","","",32,[[],["result",4]]],[11,"deserialize_byte_buf","","",32,[[],["result",4]]],[11,"deserialize_option","","",32,[[],["result",4]]],[11,"deserialize_unit","","",32,[[],["result",4]]],[11,"deserialize_unit_struct","","",32,[[],["result",4]]],[11,"deserialize_newtype_struct","","",32,[[],["result",4]]],[11,"deserialize_seq","","",32,[[],["result",4]]],[11,"deserialize_tuple","","",32,[[],["result",4]]],[11,"deserialize_tuple_struct","","",32,[[],["result",4]]],[11,"deserialize_map","","",32,[[],["result",4]]],[11,"deserialize_struct","","",32,[[],["result",4]]],[11,"deserialize_enum","","",32,[[],["result",4]]],[11,"deserialize_identifier","","",32,[[],["result",4]]],[11,"deserialize_ignored_any","","",32,[[],["result",4]]],[11,"deserialize_any","","",32,[[],["result",4]]],[11,"deserialize_bool","","",33,[[],["result",4]]],[11,"deserialize_i8","","",33,[[],["result",4]]],[11,"deserialize_i16","","",33,[[],["result",4]]],[11,"deserialize_i32","","",33,[[],["result",4]]],[11,"deserialize_i64","","",33,[[],["result",4]]],[11,"deserialize_i128","","",33,[[],["result",4]]],[11,"deserialize_u8","","",33,[[],["result",4]]],[11,"deserialize_u16","","",33,[[],["result",4]]],[11,"deserialize_u32","","",33,[[],["result",4]]],[11,"deserialize_u64","","",33,[[],["result",4]]],[11,"deserialize_u128","","",33,[[],["result",4]]],[11,"deserialize_f32","","",33,[[],["result",4]]],[11,"deserialize_f64","","",33,[[],["result",4]]],[11,"deserialize_char","","",33,[[],["result",4]]],[11,"deserialize_str","","",33,[[],["result",4]]],[11,"deserialize_string","","",33,[[],["result",4]]],[11,"deserialize_bytes","","",33,[[],["result",4]]],[11,"deserialize_byte_buf","","",33,[[],["result",4]]],[11,"deserialize_option","","",33,[[],["result",4]]],[11,"deserialize_unit","","",33,[[],["result",4]]],[11,"deserialize_unit_struct","","",33,[[],["result",4]]],[11,"deserialize_newtype_struct","","",33,[[],["result",4]]],[11,"deserialize_seq","","",33,[[],["result",4]]],[11,"deserialize_tuple","","",33,[[],["result",4]]],[11,"deserialize_tuple_struct","","",33,[[],["result",4]]],[11,"deserialize_map","","",33,[[],["result",4]]],[11,"deserialize_struct","","",33,[[],["result",4]]],[11,"deserialize_enum","","",33,[[],["result",4]]],[11,"deserialize_identifier","","",33,[[],["result",4]]],[11,"deserialize_ignored_any","","",33,[[],["result",4]]],[11,"deserialize_any","","",33,[[],["result",4]]],[11,"deserialize_bool","","",34,[[],["result",4]]],[11,"deserialize_i8","","",34,[[],["result",4]]],[11,"deserialize_i16","","",34,[[],["result",4]]],[11,"deserialize_i32","","",34,[[],["result",4]]],[11,"deserialize_i64","","",34,[[],["result",4]]],[11,"deserialize_i128","","",34,[[],["result",4]]],[11,"deserialize_u8","","",34,[[],["result",4]]],[11,"deserialize_u16","","",34,[[],["result",4]]],[11,"deserialize_u32","","",34,[[],["result",4]]],[11,"deserialize_u64","","",34,[[],["result",4]]],[11,"deserialize_u128","","",34,[[],["result",4]]],[11,"deserialize_f32","","",34,[[],["result",4]]],[11,"deserialize_f64","","",34,[[],["result",4]]],[11,"deserialize_char","","",34,[[],["result",4]]],[11,"deserialize_str","","",34,[[],["result",4]]],[11,"deserialize_string","","",34,[[],["result",4]]],[11,"deserialize_bytes","","",34,[[],["result",4]]],[11,"deserialize_byte_buf","","",34,[[],["result",4]]],[11,"deserialize_option","","",34,[[],["result",4]]],[11,"deserialize_unit","","",34,[[],["result",4]]],[11,"deserialize_unit_struct","","",34,[[],["result",4]]],[11,"deserialize_newtype_struct","","",34,[[],["result",4]]],[11,"deserialize_seq","","",34,[[],["result",4]]],[11,"deserialize_tuple","","",34,[[],["result",4]]],[11,"deserialize_tuple_struct","","",34,[[],["result",4]]],[11,"deserialize_map","","",34,[[],["result",4]]],[11,"deserialize_struct","","",34,[[],["result",4]]],[11,"deserialize_enum","","",34,[[],["result",4]]],[11,"deserialize_identifier","","",34,[[],["result",4]]],[11,"deserialize_ignored_any","","",34,[[],["result",4]]],[11,"deserialize_any","","",34,[[],["result",4]]],[11,"deserialize_bool","","",35,[[],["result",4]]],[11,"deserialize_i8","","",35,[[],["result",4]]],[11,"deserialize_i16","","",35,[[],["result",4]]],[11,"deserialize_i32","","",35,[[],["result",4]]],[11,"deserialize_i64","","",35,[[],["result",4]]],[11,"deserialize_i128","","",35,[[],["result",4]]],[11,"deserialize_u8","","",35,[[],["result",4]]],[11,"deserialize_u16","","",35,[[],["result",4]]],[11,"deserialize_u32","","",35,[[],["result",4]]],[11,"deserialize_u64","","",35,[[],["result",4]]],[11,"deserialize_u128","","",35,[[],["result",4]]],[11,"deserialize_f32","","",35,[[],["result",4]]],[11,"deserialize_f64","","",35,[[],["result",4]]],[11,"deserialize_char","","",35,[[],["result",4]]],[11,"deserialize_str","","",35,[[],["result",4]]],[11,"deserialize_string","","",35,[[],["result",4]]],[11,"deserialize_bytes","","",35,[[],["result",4]]],[11,"deserialize_byte_buf","","",35,[[],["result",4]]],[11,"deserialize_option","","",35,[[],["result",4]]],[11,"deserialize_unit","","",35,[[],["result",4]]],[11,"deserialize_unit_struct","","",35,[[],["result",4]]],[11,"deserialize_newtype_struct","","",35,[[],["result",4]]],[11,"deserialize_seq","","",35,[[],["result",4]]],[11,"deserialize_tuple","","",35,[[],["result",4]]],[11,"deserialize_tuple_struct","","",35,[[],["result",4]]],[11,"deserialize_map","","",35,[[],["result",4]]],[11,"deserialize_struct","","",35,[[],["result",4]]],[11,"deserialize_enum","","",35,[[],["result",4]]],[11,"deserialize_identifier","","",35,[[],["result",4]]],[11,"deserialize_ignored_any","","",35,[[],["result",4]]],[11,"deserialize_any","","",35,[[],["result",4]]],[11,"deserialize_bool","","",36,[[],["result",4]]],[11,"deserialize_i8","","",36,[[],["result",4]]],[11,"deserialize_i16","","",36,[[],["result",4]]],[11,"deserialize_i32","","",36,[[],["result",4]]],[11,"deserialize_i64","","",36,[[],["result",4]]],[11,"deserialize_i128","","",36,[[],["result",4]]],[11,"deserialize_u8","","",36,[[],["result",4]]],[11,"deserialize_u16","","",36,[[],["result",4]]],[11,"deserialize_u32","","",36,[[],["result",4]]],[11,"deserialize_u64","","",36,[[],["result",4]]],[11,"deserialize_u128","","",36,[[],["result",4]]],[11,"deserialize_f32","","",36,[[],["result",4]]],[11,"deserialize_f64","","",36,[[],["result",4]]],[11,"deserialize_char","","",36,[[],["result",4]]],[11,"deserialize_str","","",36,[[],["result",4]]],[11,"deserialize_string","","",36,[[],["result",4]]],[11,"deserialize_bytes","","",36,[[],["result",4]]],[11,"deserialize_byte_buf","","",36,[[],["result",4]]],[11,"deserialize_option","","",36,[[],["result",4]]],[11,"deserialize_unit","","",36,[[],["result",4]]],[11,"deserialize_unit_struct","","",36,[[],["result",4]]],[11,"deserialize_newtype_struct","","",36,[[],["result",4]]],[11,"deserialize_seq","","",36,[[],["result",4]]],[11,"deserialize_tuple","","",36,[[],["result",4]]],[11,"deserialize_tuple_struct","","",36,[[],["result",4]]],[11,"deserialize_map","","",36,[[],["result",4]]],[11,"deserialize_struct","","",36,[[],["result",4]]],[11,"deserialize_enum","","",36,[[],["result",4]]],[11,"deserialize_identifier","","",36,[[],["result",4]]],[11,"deserialize_ignored_any","","",36,[[],["result",4]]],[11,"deserialize_any","","",36,[[],["result",4]]],[11,"deserialize_bool","","",37,[[],["result",4]]],[11,"deserialize_i8","","",37,[[],["result",4]]],[11,"deserialize_i16","","",37,[[],["result",4]]],[11,"deserialize_i32","","",37,[[],["result",4]]],[11,"deserialize_i64","","",37,[[],["result",4]]],[11,"deserialize_i128","","",37,[[],["result",4]]],[11,"deserialize_u8","","",37,[[],["result",4]]],[11,"deserialize_u16","","",37,[[],["result",4]]],[11,"deserialize_u32","","",37,[[],["result",4]]],[11,"deserialize_u64","","",37,[[],["result",4]]],[11,"deserialize_u128","","",37,[[],["result",4]]],[11,"deserialize_f32","","",37,[[],["result",4]]],[11,"deserialize_f64","","",37,[[],["result",4]]],[11,"deserialize_char","","",37,[[],["result",4]]],[11,"deserialize_str","","",37,[[],["result",4]]],[11,"deserialize_string","","",37,[[],["result",4]]],[11,"deserialize_bytes","","",37,[[],["result",4]]],[11,"deserialize_byte_buf","","",37,[[],["result",4]]],[11,"deserialize_option","","",37,[[],["result",4]]],[11,"deserialize_unit","","",37,[[],["result",4]]],[11,"deserialize_unit_struct","","",37,[[],["result",4]]],[11,"deserialize_newtype_struct","","",37,[[],["result",4]]],[11,"deserialize_seq","","",37,[[],["result",4]]],[11,"deserialize_tuple","","",37,[[],["result",4]]],[11,"deserialize_tuple_struct","","",37,[[],["result",4]]],[11,"deserialize_map","","",37,[[],["result",4]]],[11,"deserialize_struct","","",37,[[],["result",4]]],[11,"deserialize_enum","","",37,[[],["result",4]]],[11,"deserialize_identifier","","",37,[[],["result",4]]],[11,"deserialize_ignored_any","","",37,[[],["result",4]]],[11,"deserialize_any","","",37,[[],["result",4]]],[11,"deserialize_bool","","",38,[[],["result",4]]],[11,"deserialize_i8","","",38,[[],["result",4]]],[11,"deserialize_i16","","",38,[[],["result",4]]],[11,"deserialize_i32","","",38,[[],["result",4]]],[11,"deserialize_i64","","",38,[[],["result",4]]],[11,"deserialize_i128","","",38,[[],["result",4]]],[11,"deserialize_u8","","",38,[[],["result",4]]],[11,"deserialize_u16","","",38,[[],["result",4]]],[11,"deserialize_u32","","",38,[[],["result",4]]],[11,"deserialize_u64","","",38,[[],["result",4]]],[11,"deserialize_u128","","",38,[[],["result",4]]],[11,"deserialize_f32","","",38,[[],["result",4]]],[11,"deserialize_f64","","",38,[[],["result",4]]],[11,"deserialize_char","","",38,[[],["result",4]]],[11,"deserialize_str","","",38,[[],["result",4]]],[11,"deserialize_string","","",38,[[],["result",4]]],[11,"deserialize_bytes","","",38,[[],["result",4]]],[11,"deserialize_byte_buf","","",38,[[],["result",4]]],[11,"deserialize_option","","",38,[[],["result",4]]],[11,"deserialize_unit","","",38,[[],["result",4]]],[11,"deserialize_unit_struct","","",38,[[],["result",4]]],[11,"deserialize_newtype_struct","","",38,[[],["result",4]]],[11,"deserialize_seq","","",38,[[],["result",4]]],[11,"deserialize_tuple","","",38,[[],["result",4]]],[11,"deserialize_tuple_struct","","",38,[[],["result",4]]],[11,"deserialize_map","","",38,[[],["result",4]]],[11,"deserialize_struct","","",38,[[],["result",4]]],[11,"deserialize_enum","","",38,[[],["result",4]]],[11,"deserialize_identifier","","",38,[[],["result",4]]],[11,"deserialize_ignored_any","","",38,[[],["result",4]]],[11,"deserialize_any","","",38,[[],["result",4]]],[11,"deserialize_bool","","",39,[[],["result",4]]],[11,"deserialize_i8","","",39,[[],["result",4]]],[11,"deserialize_i16","","",39,[[],["result",4]]],[11,"deserialize_i32","","",39,[[],["result",4]]],[11,"deserialize_i64","","",39,[[],["result",4]]],[11,"deserialize_i128","","",39,[[],["result",4]]],[11,"deserialize_u8","","",39,[[],["result",4]]],[11,"deserialize_u16","","",39,[[],["result",4]]],[11,"deserialize_u32","","",39,[[],["result",4]]],[11,"deserialize_u64","","",39,[[],["result",4]]],[11,"deserialize_u128","","",39,[[],["result",4]]],[11,"deserialize_f32","","",39,[[],["result",4]]],[11,"deserialize_f64","","",39,[[],["result",4]]],[11,"deserialize_char","","",39,[[],["result",4]]],[11,"deserialize_str","","",39,[[],["result",4]]],[11,"deserialize_string","","",39,[[],["result",4]]],[11,"deserialize_bytes","","",39,[[],["result",4]]],[11,"deserialize_byte_buf","","",39,[[],["result",4]]],[11,"deserialize_option","","",39,[[],["result",4]]],[11,"deserialize_unit","","",39,[[],["result",4]]],[11,"deserialize_unit_struct","","",39,[[],["result",4]]],[11,"deserialize_newtype_struct","","",39,[[],["result",4]]],[11,"deserialize_seq","","",39,[[],["result",4]]],[11,"deserialize_tuple","","",39,[[],["result",4]]],[11,"deserialize_tuple_struct","","",39,[[],["result",4]]],[11,"deserialize_map","","",39,[[],["result",4]]],[11,"deserialize_struct","","",39,[[],["result",4]]],[11,"deserialize_enum","","",39,[[],["result",4]]],[11,"deserialize_identifier","","",39,[[],["result",4]]],[11,"deserialize_ignored_any","","",39,[[],["result",4]]],[11,"deserialize_any","","",39,[[],["result",4]]],[11,"deserialize_bool","","",40,[[],["result",4]]],[11,"deserialize_i8","","",40,[[],["result",4]]],[11,"deserialize_i16","","",40,[[],["result",4]]],[11,"deserialize_i32","","",40,[[],["result",4]]],[11,"deserialize_i64","","",40,[[],["result",4]]],[11,"deserialize_i128","","",40,[[],["result",4]]],[11,"deserialize_u8","","",40,[[],["result",4]]],[11,"deserialize_u16","","",40,[[],["result",4]]],[11,"deserialize_u32","","",40,[[],["result",4]]],[11,"deserialize_u64","","",40,[[],["result",4]]],[11,"deserialize_u128","","",40,[[],["result",4]]],[11,"deserialize_f32","","",40,[[],["result",4]]],[11,"deserialize_f64","","",40,[[],["result",4]]],[11,"deserialize_char","","",40,[[],["result",4]]],[11,"deserialize_str","","",40,[[],["result",4]]],[11,"deserialize_string","","",40,[[],["result",4]]],[11,"deserialize_bytes","","",40,[[],["result",4]]],[11,"deserialize_byte_buf","","",40,[[],["result",4]]],[11,"deserialize_option","","",40,[[],["result",4]]],[11,"deserialize_unit","","",40,[[],["result",4]]],[11,"deserialize_unit_struct","","",40,[[],["result",4]]],[11,"deserialize_newtype_struct","","",40,[[],["result",4]]],[11,"deserialize_seq","","",40,[[],["result",4]]],[11,"deserialize_tuple","","",40,[[],["result",4]]],[11,"deserialize_tuple_struct","","",40,[[],["result",4]]],[11,"deserialize_map","","",40,[[],["result",4]]],[11,"deserialize_struct","","",40,[[],["result",4]]],[11,"deserialize_enum","","",40,[[],["result",4]]],[11,"deserialize_identifier","","",40,[[],["result",4]]],[11,"deserialize_ignored_any","","",40,[[],["result",4]]],[11,"deserialize_any","","",40,[[],["result",4]]],[11,"deserialize_bool","","",41,[[],["result",4]]],[11,"deserialize_i8","","",41,[[],["result",4]]],[11,"deserialize_i16","","",41,[[],["result",4]]],[11,"deserialize_i32","","",41,[[],["result",4]]],[11,"deserialize_i64","","",41,[[],["result",4]]],[11,"deserialize_i128","","",41,[[],["result",4]]],[11,"deserialize_u8","","",41,[[],["result",4]]],[11,"deserialize_u16","","",41,[[],["result",4]]],[11,"deserialize_u32","","",41,[[],["result",4]]],[11,"deserialize_u64","","",41,[[],["result",4]]],[11,"deserialize_u128","","",41,[[],["result",4]]],[11,"deserialize_f32","","",41,[[],["result",4]]],[11,"deserialize_f64","","",41,[[],["result",4]]],[11,"deserialize_char","","",41,[[],["result",4]]],[11,"deserialize_str","","",41,[[],["result",4]]],[11,"deserialize_string","","",41,[[],["result",4]]],[11,"deserialize_bytes","","",41,[[],["result",4]]],[11,"deserialize_byte_buf","","",41,[[],["result",4]]],[11,"deserialize_option","","",41,[[],["result",4]]],[11,"deserialize_unit","","",41,[[],["result",4]]],[11,"deserialize_unit_struct","","",41,[[],["result",4]]],[11,"deserialize_newtype_struct","","",41,[[],["result",4]]],[11,"deserialize_seq","","",41,[[],["result",4]]],[11,"deserialize_tuple","","",41,[[],["result",4]]],[11,"deserialize_tuple_struct","","",41,[[],["result",4]]],[11,"deserialize_map","","",41,[[],["result",4]]],[11,"deserialize_struct","","",41,[[],["result",4]]],[11,"deserialize_enum","","",41,[[],["result",4]]],[11,"deserialize_identifier","","",41,[[],["result",4]]],[11,"deserialize_ignored_any","","",41,[[],["result",4]]],[11,"deserialize_any","","",41,[[],["result",4]]],[11,"deserialize_bool","","",42,[[],["result",4]]],[11,"deserialize_i8","","",42,[[],["result",4]]],[11,"deserialize_i16","","",42,[[],["result",4]]],[11,"deserialize_i32","","",42,[[],["result",4]]],[11,"deserialize_i64","","",42,[[],["result",4]]],[11,"deserialize_i128","","",42,[[],["result",4]]],[11,"deserialize_u8","","",42,[[],["result",4]]],[11,"deserialize_u16","","",42,[[],["result",4]]],[11,"deserialize_u32","","",42,[[],["result",4]]],[11,"deserialize_u64","","",42,[[],["result",4]]],[11,"deserialize_u128","","",42,[[],["result",4]]],[11,"deserialize_f32","","",42,[[],["result",4]]],[11,"deserialize_f64","","",42,[[],["result",4]]],[11,"deserialize_char","","",42,[[],["result",4]]],[11,"deserialize_str","","",42,[[],["result",4]]],[11,"deserialize_string","","",42,[[],["result",4]]],[11,"deserialize_bytes","","",42,[[],["result",4]]],[11,"deserialize_byte_buf","","",42,[[],["result",4]]],[11,"deserialize_option","","",42,[[],["result",4]]],[11,"deserialize_unit","","",42,[[],["result",4]]],[11,"deserialize_unit_struct","","",42,[[],["result",4]]],[11,"deserialize_newtype_struct","","",42,[[],["result",4]]],[11,"deserialize_seq","","",42,[[],["result",4]]],[11,"deserialize_tuple","","",42,[[],["result",4]]],[11,"deserialize_tuple_struct","","",42,[[],["result",4]]],[11,"deserialize_map","","",42,[[],["result",4]]],[11,"deserialize_struct","","",42,[[],["result",4]]],[11,"deserialize_enum","","",42,[[],["result",4]]],[11,"deserialize_identifier","","",42,[[],["result",4]]],[11,"deserialize_ignored_any","","",42,[[],["result",4]]],[11,"deserialize_any","","",42,[[],["result",4]]],[11,"deserialize_bool","","",43,[[],["result",4]]],[11,"deserialize_i8","","",43,[[],["result",4]]],[11,"deserialize_i16","","",43,[[],["result",4]]],[11,"deserialize_i32","","",43,[[],["result",4]]],[11,"deserialize_i64","","",43,[[],["result",4]]],[11,"deserialize_i128","","",43,[[],["result",4]]],[11,"deserialize_u8","","",43,[[],["result",4]]],[11,"deserialize_u16","","",43,[[],["result",4]]],[11,"deserialize_u32","","",43,[[],["result",4]]],[11,"deserialize_u64","","",43,[[],["result",4]]],[11,"deserialize_u128","","",43,[[],["result",4]]],[11,"deserialize_f32","","",43,[[],["result",4]]],[11,"deserialize_f64","","",43,[[],["result",4]]],[11,"deserialize_char","","",43,[[],["result",4]]],[11,"deserialize_str","","",43,[[],["result",4]]],[11,"deserialize_string","","",43,[[],["result",4]]],[11,"deserialize_bytes","","",43,[[],["result",4]]],[11,"deserialize_byte_buf","","",43,[[],["result",4]]],[11,"deserialize_option","","",43,[[],["result",4]]],[11,"deserialize_unit","","",43,[[],["result",4]]],[11,"deserialize_unit_struct","","",43,[[],["result",4]]],[11,"deserialize_newtype_struct","","",43,[[],["result",4]]],[11,"deserialize_seq","","",43,[[],["result",4]]],[11,"deserialize_tuple","","",43,[[],["result",4]]],[11,"deserialize_tuple_struct","","",43,[[],["result",4]]],[11,"deserialize_map","","",43,[[],["result",4]]],[11,"deserialize_struct","","",43,[[],["result",4]]],[11,"deserialize_enum","","",43,[[],["result",4]]],[11,"deserialize_identifier","","",43,[[],["result",4]]],[11,"deserialize_ignored_any","","",43,[[],["result",4]]],[11,"deserialize_any","","",43,[[],["result",4]]],[11,"deserialize_bool","","",44,[[],["result",4]]],[11,"deserialize_i8","","",44,[[],["result",4]]],[11,"deserialize_i16","","",44,[[],["result",4]]],[11,"deserialize_i32","","",44,[[],["result",4]]],[11,"deserialize_i64","","",44,[[],["result",4]]],[11,"deserialize_i128","","",44,[[],["result",4]]],[11,"deserialize_u8","","",44,[[],["result",4]]],[11,"deserialize_u16","","",44,[[],["result",4]]],[11,"deserialize_u32","","",44,[[],["result",4]]],[11,"deserialize_u64","","",44,[[],["result",4]]],[11,"deserialize_u128","","",44,[[],["result",4]]],[11,"deserialize_f32","","",44,[[],["result",4]]],[11,"deserialize_f64","","",44,[[],["result",4]]],[11,"deserialize_char","","",44,[[],["result",4]]],[11,"deserialize_str","","",44,[[],["result",4]]],[11,"deserialize_string","","",44,[[],["result",4]]],[11,"deserialize_bytes","","",44,[[],["result",4]]],[11,"deserialize_byte_buf","","",44,[[],["result",4]]],[11,"deserialize_option","","",44,[[],["result",4]]],[11,"deserialize_unit","","",44,[[],["result",4]]],[11,"deserialize_unit_struct","","",44,[[],["result",4]]],[11,"deserialize_newtype_struct","","",44,[[],["result",4]]],[11,"deserialize_seq","","",44,[[],["result",4]]],[11,"deserialize_tuple","","",44,[[],["result",4]]],[11,"deserialize_tuple_struct","","",44,[[],["result",4]]],[11,"deserialize_map","","",44,[[],["result",4]]],[11,"deserialize_struct","","",44,[[],["result",4]]],[11,"deserialize_enum","","",44,[[],["result",4]]],[11,"deserialize_identifier","","",44,[[],["result",4]]],[11,"deserialize_ignored_any","","",44,[[],["result",4]]],[11,"deserialize_any","","",44,[[],["result",4]]],[11,"deserialize_bool","","",45,[[],["result",4]]],[11,"deserialize_i8","","",45,[[],["result",4]]],[11,"deserialize_i16","","",45,[[],["result",4]]],[11,"deserialize_i32","","",45,[[],["result",4]]],[11,"deserialize_i64","","",45,[[],["result",4]]],[11,"deserialize_i128","","",45,[[],["result",4]]],[11,"deserialize_u8","","",45,[[],["result",4]]],[11,"deserialize_u16","","",45,[[],["result",4]]],[11,"deserialize_u32","","",45,[[],["result",4]]],[11,"deserialize_u64","","",45,[[],["result",4]]],[11,"deserialize_u128","","",45,[[],["result",4]]],[11,"deserialize_f32","","",45,[[],["result",4]]],[11,"deserialize_f64","","",45,[[],["result",4]]],[11,"deserialize_char","","",45,[[],["result",4]]],[11,"deserialize_str","","",45,[[],["result",4]]],[11,"deserialize_string","","",45,[[],["result",4]]],[11,"deserialize_bytes","","",45,[[],["result",4]]],[11,"deserialize_byte_buf","","",45,[[],["result",4]]],[11,"deserialize_option","","",45,[[],["result",4]]],[11,"deserialize_unit","","",45,[[],["result",4]]],[11,"deserialize_unit_struct","","",45,[[],["result",4]]],[11,"deserialize_newtype_struct","","",45,[[],["result",4]]],[11,"deserialize_seq","","",45,[[],["result",4]]],[11,"deserialize_tuple","","",45,[[],["result",4]]],[11,"deserialize_tuple_struct","","",45,[[],["result",4]]],[11,"deserialize_map","","",45,[[],["result",4]]],[11,"deserialize_struct","","",45,[[],["result",4]]],[11,"deserialize_identifier","","",45,[[],["result",4]]],[11,"deserialize_ignored_any","","",45,[[],["result",4]]],[11,"deserialize_any","","",45,[[],["result",4]]],[11,"deserialize_enum","","",45,[[],["result",4]]],[11,"deserialize_any","","",46,[[],["result",4]]],[11,"deserialize_enum","","",46,[[],["result",4]]],[11,"deserialize_bool","","",46,[[],["result",4]]],[11,"deserialize_i8","","",46,[[],["result",4]]],[11,"deserialize_i16","","",46,[[],["result",4]]],[11,"deserialize_i32","","",46,[[],["result",4]]],[11,"deserialize_i64","","",46,[[],["result",4]]],[11,"deserialize_i128","","",46,[[],["result",4]]],[11,"deserialize_u8","","",46,[[],["result",4]]],[11,"deserialize_u16","","",46,[[],["result",4]]],[11,"deserialize_u32","","",46,[[],["result",4]]],[11,"deserialize_u64","","",46,[[],["result",4]]],[11,"deserialize_u128","","",46,[[],["result",4]]],[11,"deserialize_f32","","",46,[[],["result",4]]],[11,"deserialize_f64","","",46,[[],["result",4]]],[11,"deserialize_char","","",46,[[],["result",4]]],[11,"deserialize_str","","",46,[[],["result",4]]],[11,"deserialize_string","","",46,[[],["result",4]]],[11,"deserialize_bytes","","",46,[[],["result",4]]],[11,"deserialize_byte_buf","","",46,[[],["result",4]]],[11,"deserialize_option","","",46,[[],["result",4]]],[11,"deserialize_unit","","",46,[[],["result",4]]],[11,"deserialize_unit_struct","","",46,[[],["result",4]]],[11,"deserialize_newtype_struct","","",46,[[],["result",4]]],[11,"deserialize_seq","","",46,[[],["result",4]]],[11,"deserialize_tuple","","",46,[[],["result",4]]],[11,"deserialize_tuple_struct","","",46,[[],["result",4]]],[11,"deserialize_map","","",46,[[],["result",4]]],[11,"deserialize_struct","","",46,[[],["result",4]]],[11,"deserialize_identifier","","",46,[[],["result",4]]],[11,"deserialize_ignored_any","","",46,[[],["result",4]]],[11,"deserialize_any","","",0,[[],["result",4]]],[11,"deserialize_enum","","",0,[[],["result",4]]],[11,"deserialize_bool","","",0,[[],["result",4]]],[11,"deserialize_i8","","",0,[[],["result",4]]],[11,"deserialize_i16","","",0,[[],["result",4]]],[11,"deserialize_i32","","",0,[[],["result",4]]],[11,"deserialize_i64","","",0,[[],["result",4]]],[11,"deserialize_i128","","",0,[[],["result",4]]],[11,"deserialize_u8","","",0,[[],["result",4]]],[11,"deserialize_u16","","",0,[[],["result",4]]],[11,"deserialize_u32","","",0,[[],["result",4]]],[11,"deserialize_u64","","",0,[[],["result",4]]],[11,"deserialize_u128","","",0,[[],["result",4]]],[11,"deserialize_f32","","",0,[[],["result",4]]],[11,"deserialize_f64","","",0,[[],["result",4]]],[11,"deserialize_char","","",0,[[],["result",4]]],[11,"deserialize_str","","",0,[[],["result",4]]],[11,"deserialize_string","","",0,[[],["result",4]]],[11,"deserialize_bytes","","",0,[[],["result",4]]],[11,"deserialize_byte_buf","","",0,[[],["result",4]]],[11,"deserialize_option","","",0,[[],["result",4]]],[11,"deserialize_unit","","",0,[[],["result",4]]],[11,"deserialize_unit_struct","","",0,[[],["result",4]]],[11,"deserialize_newtype_struct","","",0,[[],["result",4]]],[11,"deserialize_seq","","",0,[[],["result",4]]],[11,"deserialize_tuple","","",0,[[],["result",4]]],[11,"deserialize_tuple_struct","","",0,[[],["result",4]]],[11,"deserialize_map","","",0,[[],["result",4]]],[11,"deserialize_struct","","",0,[[],["result",4]]],[11,"deserialize_identifier","","",0,[[],["result",4]]],[11,"deserialize_ignored_any","","",0,[[],["result",4]]],[11,"deserialize_any","","",47,[[],["result",4]]],[11,"deserialize_enum","","",47,[[],["result",4]]],[11,"deserialize_bool","","",47,[[],["result",4]]],[11,"deserialize_i8","","",47,[[],["result",4]]],[11,"deserialize_i16","","",47,[[],["result",4]]],[11,"deserialize_i32","","",47,[[],["result",4]]],[11,"deserialize_i64","","",47,[[],["result",4]]],[11,"deserialize_i128","","",47,[[],["result",4]]],[11,"deserialize_u8","","",47,[[],["result",4]]],[11,"deserialize_u16","","",47,[[],["result",4]]],[11,"deserialize_u32","","",47,[[],["result",4]]],[11,"deserialize_u64","","",47,[[],["result",4]]],[11,"deserialize_u128","","",47,[[],["result",4]]],[11,"deserialize_f32","","",47,[[],["result",4]]],[11,"deserialize_f64","","",47,[[],["result",4]]],[11,"deserialize_char","","",47,[[],["result",4]]],[11,"deserialize_str","","",47,[[],["result",4]]],[11,"deserialize_string","","",47,[[],["result",4]]],[11,"deserialize_bytes","","",47,[[],["result",4]]],[11,"deserialize_byte_buf","","",47,[[],["result",4]]],[11,"deserialize_option","","",47,[[],["result",4]]],[11,"deserialize_unit","","",47,[[],["result",4]]],[11,"deserialize_unit_struct","","",47,[[],["result",4]]],[11,"deserialize_newtype_struct","","",47,[[],["result",4]]],[11,"deserialize_seq","","",47,[[],["result",4]]],[11,"deserialize_tuple","","",47,[[],["result",4]]],[11,"deserialize_tuple_struct","","",47,[[],["result",4]]],[11,"deserialize_map","","",47,[[],["result",4]]],[11,"deserialize_struct","","",47,[[],["result",4]]],[11,"deserialize_identifier","","",47,[[],["result",4]]],[11,"deserialize_ignored_any","","",47,[[],["result",4]]],[11,"deserialize_any","","",48,[[],["result",4]]],[11,"deserialize_enum","","",48,[[],["result",4]]],[11,"deserialize_bool","","",48,[[],["result",4]]],[11,"deserialize_i8","","",48,[[],["result",4]]],[11,"deserialize_i16","","",48,[[],["result",4]]],[11,"deserialize_i32","","",48,[[],["result",4]]],[11,"deserialize_i64","","",48,[[],["result",4]]],[11,"deserialize_i128","","",48,[[],["result",4]]],[11,"deserialize_u8","","",48,[[],["result",4]]],[11,"deserialize_u16","","",48,[[],["result",4]]],[11,"deserialize_u32","","",48,[[],["result",4]]],[11,"deserialize_u64","","",48,[[],["result",4]]],[11,"deserialize_u128","","",48,[[],["result",4]]],[11,"deserialize_f32","","",48,[[],["result",4]]],[11,"deserialize_f64","","",48,[[],["result",4]]],[11,"deserialize_char","","",48,[[],["result",4]]],[11,"deserialize_str","","",48,[[],["result",4]]],[11,"deserialize_string","","",48,[[],["result",4]]],[11,"deserialize_bytes","","",48,[[],["result",4]]],[11,"deserialize_byte_buf","","",48,[[],["result",4]]],[11,"deserialize_option","","",48,[[],["result",4]]],[11,"deserialize_unit","","",48,[[],["result",4]]],[11,"deserialize_unit_struct","","",48,[[],["result",4]]],[11,"deserialize_newtype_struct","","",48,[[],["result",4]]],[11,"deserialize_seq","","",48,[[],["result",4]]],[11,"deserialize_tuple","","",48,[[],["result",4]]],[11,"deserialize_tuple_struct","","",48,[[],["result",4]]],[11,"deserialize_map","","",48,[[],["result",4]]],[11,"deserialize_struct","","",48,[[],["result",4]]],[11,"deserialize_identifier","","",48,[[],["result",4]]],[11,"deserialize_ignored_any","","",48,[[],["result",4]]],[11,"deserialize_any","","",1,[[],["result",4]]],[11,"deserialize_bool","","",1,[[],["result",4]]],[11,"deserialize_i8","","",1,[[],["result",4]]],[11,"deserialize_i16","","",1,[[],["result",4]]],[11,"deserialize_i32","","",1,[[],["result",4]]],[11,"deserialize_i64","","",1,[[],["result",4]]],[11,"deserialize_i128","","",1,[[],["result",4]]],[11,"deserialize_u8","","",1,[[],["result",4]]],[11,"deserialize_u16","","",1,[[],["result",4]]],[11,"deserialize_u32","","",1,[[],["result",4]]],[11,"deserialize_u64","","",1,[[],["result",4]]],[11,"deserialize_u128","","",1,[[],["result",4]]],[11,"deserialize_f32","","",1,[[],["result",4]]],[11,"deserialize_f64","","",1,[[],["result",4]]],[11,"deserialize_char","","",1,[[],["result",4]]],[11,"deserialize_str","","",1,[[],["result",4]]],[11,"deserialize_string","","",1,[[],["result",4]]],[11,"deserialize_bytes","","",1,[[],["result",4]]],[11,"deserialize_byte_buf","","",1,[[],["result",4]]],[11,"deserialize_option","","",1,[[],["result",4]]],[11,"deserialize_unit","","",1,[[],["result",4]]],[11,"deserialize_unit_struct","","",1,[[],["result",4]]],[11,"deserialize_newtype_struct","","",1,[[],["result",4]]],[11,"deserialize_seq","","",1,[[],["result",4]]],[11,"deserialize_tuple","","",1,[[],["result",4]]],[11,"deserialize_tuple_struct","","",1,[[],["result",4]]],[11,"deserialize_map","","",1,[[],["result",4]]],[11,"deserialize_struct","","",1,[[],["result",4]]],[11,"deserialize_identifier","","",1,[[],["result",4]]],[11,"deserialize_ignored_any","","",1,[[],["result",4]]],[11,"deserialize_enum","","",1,[[],["result",4]]],[11,"deserialize_any","","",2,[[],["result",4]]],[11,"deserialize_bool","","",2,[[],["result",4]]],[11,"deserialize_i8","","",2,[[],["result",4]]],[11,"deserialize_i16","","",2,[[],["result",4]]],[11,"deserialize_i32","","",2,[[],["result",4]]],[11,"deserialize_i64","","",2,[[],["result",4]]],[11,"deserialize_i128","","",2,[[],["result",4]]],[11,"deserialize_u8","","",2,[[],["result",4]]],[11,"deserialize_u16","","",2,[[],["result",4]]],[11,"deserialize_u32","","",2,[[],["result",4]]],[11,"deserialize_u64","","",2,[[],["result",4]]],[11,"deserialize_u128","","",2,[[],["result",4]]],[11,"deserialize_f32","","",2,[[],["result",4]]],[11,"deserialize_f64","","",2,[[],["result",4]]],[11,"deserialize_char","","",2,[[],["result",4]]],[11,"deserialize_str","","",2,[[],["result",4]]],[11,"deserialize_string","","",2,[[],["result",4]]],[11,"deserialize_bytes","","",2,[[],["result",4]]],[11,"deserialize_byte_buf","","",2,[[],["result",4]]],[11,"deserialize_option","","",2,[[],["result",4]]],[11,"deserialize_unit","","",2,[[],["result",4]]],[11,"deserialize_unit_struct","","",2,[[],["result",4]]],[11,"deserialize_newtype_struct","","",2,[[],["result",4]]],[11,"deserialize_seq","","",2,[[],["result",4]]],[11,"deserialize_tuple","","",2,[[],["result",4]]],[11,"deserialize_tuple_struct","","",2,[[],["result",4]]],[11,"deserialize_map","","",2,[[],["result",4]]],[11,"deserialize_struct","","",2,[[],["result",4]]],[11,"deserialize_enum","","",2,[[],["result",4]]],[11,"deserialize_identifier","","",2,[[],["result",4]]],[11,"deserialize_ignored_any","","",2,[[],["result",4]]],[11,"deserialize_any","","",3,[[],["result",4]]],[11,"deserialize_bool","","",3,[[],["result",4]]],[11,"deserialize_i8","","",3,[[],["result",4]]],[11,"deserialize_i16","","",3,[[],["result",4]]],[11,"deserialize_i32","","",3,[[],["result",4]]],[11,"deserialize_i64","","",3,[[],["result",4]]],[11,"deserialize_i128","","",3,[[],["result",4]]],[11,"deserialize_u8","","",3,[[],["result",4]]],[11,"deserialize_u16","","",3,[[],["result",4]]],[11,"deserialize_u32","","",3,[[],["result",4]]],[11,"deserialize_u64","","",3,[[],["result",4]]],[11,"deserialize_u128","","",3,[[],["result",4]]],[11,"deserialize_f32","","",3,[[],["result",4]]],[11,"deserialize_f64","","",3,[[],["result",4]]],[11,"deserialize_char","","",3,[[],["result",4]]],[11,"deserialize_str","","",3,[[],["result",4]]],[11,"deserialize_string","","",3,[[],["result",4]]],[11,"deserialize_bytes","","",3,[[],["result",4]]],[11,"deserialize_byte_buf","","",3,[[],["result",4]]],[11,"deserialize_option","","",3,[[],["result",4]]],[11,"deserialize_unit","","",3,[[],["result",4]]],[11,"deserialize_unit_struct","","",3,[[],["result",4]]],[11,"deserialize_newtype_struct","","",3,[[],["result",4]]],[11,"deserialize_seq","","",3,[[],["result",4]]],[11,"deserialize_tuple","","",3,[[],["result",4]]],[11,"deserialize_tuple_struct","","",3,[[],["result",4]]],[11,"deserialize_map","","",3,[[],["result",4]]],[11,"deserialize_struct","","",3,[[],["result",4]]],[11,"deserialize_enum","","",3,[[],["result",4]]],[11,"deserialize_identifier","","",3,[[],["result",4]]],[11,"deserialize_ignored_any","","",3,[[],["result",4]]],[11,"deserialize_any","","",4,[[],["result",4]]],[11,"deserialize_seq","","",4,[[],["result",4]]],[11,"deserialize_tuple","","",4,[[],["result",4]]],[11,"deserialize_bool","","",4,[[],["result",4]]],[11,"deserialize_i8","","",4,[[],["result",4]]],[11,"deserialize_i16","","",4,[[],["result",4]]],[11,"deserialize_i32","","",4,[[],["result",4]]],[11,"deserialize_i64","","",4,[[],["result",4]]],[11,"deserialize_i128","","",4,[[],["result",4]]],[11,"deserialize_u8","","",4,[[],["result",4]]],[11,"deserialize_u16","","",4,[[],["result",4]]],[11,"deserialize_u32","","",4,[[],["result",4]]],[11,"deserialize_u64","","",4,[[],["result",4]]],[11,"deserialize_u128","","",4,[[],["result",4]]],[11,"deserialize_f32","","",4,[[],["result",4]]],[11,"deserialize_f64","","",4,[[],["result",4]]],[11,"deserialize_char","","",4,[[],["result",4]]],[11,"deserialize_str","","",4,[[],["result",4]]],[11,"deserialize_string","","",4,[[],["result",4]]],[11,"deserialize_bytes","","",4,[[],["result",4]]],[11,"deserialize_byte_buf","","",4,[[],["result",4]]],[11,"deserialize_option","","",4,[[],["result",4]]],[11,"deserialize_unit","","",4,[[],["result",4]]],[11,"deserialize_unit_struct","","",4,[[],["result",4]]],[11,"deserialize_newtype_struct","","",4,[[],["result",4]]],[11,"deserialize_tuple_struct","","",4,[[],["result",4]]],[11,"deserialize_map","","",4,[[],["result",4]]],[11,"deserialize_struct","","",4,[[],["result",4]]],[11,"deserialize_enum","","",4,[[],["result",4]]],[11,"deserialize_identifier","","",4,[[],["result",4]]],[11,"deserialize_ignored_any","","",4,[[],["result",4]]],[11,"deserialize_any","","",5,[[],["result",4]]],[11,"deserialize_enum","","",5,[[],["result",4]]],[11,"deserialize_bool","","",5,[[],["result",4]]],[11,"deserialize_i8","","",5,[[],["result",4]]],[11,"deserialize_i16","","",5,[[],["result",4]]],[11,"deserialize_i32","","",5,[[],["result",4]]],[11,"deserialize_i64","","",5,[[],["result",4]]],[11,"deserialize_i128","","",5,[[],["result",4]]],[11,"deserialize_u8","","",5,[[],["result",4]]],[11,"deserialize_u16","","",5,[[],["result",4]]],[11,"deserialize_u32","","",5,[[],["result",4]]],[11,"deserialize_u64","","",5,[[],["result",4]]],[11,"deserialize_u128","","",5,[[],["result",4]]],[11,"deserialize_f32","","",5,[[],["result",4]]],[11,"deserialize_f64","","",5,[[],["result",4]]],[11,"deserialize_char","","",5,[[],["result",4]]],[11,"deserialize_str","","",5,[[],["result",4]]],[11,"deserialize_string","","",5,[[],["result",4]]],[11,"deserialize_bytes","","",5,[[],["result",4]]],[11,"deserialize_byte_buf","","",5,[[],["result",4]]],[11,"deserialize_option","","",5,[[],["result",4]]],[11,"deserialize_unit","","",5,[[],["result",4]]],[11,"deserialize_unit_struct","","",5,[[],["result",4]]],[11,"deserialize_newtype_struct","","",5,[[],["result",4]]],[11,"deserialize_seq","","",5,[[],["result",4]]],[11,"deserialize_tuple","","",5,[[],["result",4]]],[11,"deserialize_tuple_struct","","",5,[[],["result",4]]],[11,"deserialize_map","","",5,[[],["result",4]]],[11,"deserialize_struct","","",5,[[],["result",4]]],[11,"deserialize_identifier","","",5,[[],["result",4]]],[11,"deserialize_ignored_any","","",5,[[],["result",4]]],[11,"expecting","serde::de","",49,[[["formatter",3]],["result",6]]],[11,"visit_bool","","",49,[[],["result",4]]],[11,"visit_i64","","",49,[[],["result",4]]],[11,"visit_i128","","",49,[[],["result",4]]],[11,"visit_u64","","",49,[[],["result",4]]],[11,"visit_u128","","",49,[[],["result",4]]],[11,"visit_f64","","",49,[[],["result",4]]],[11,"visit_str","","",49,[[],["result",4]]],[11,"visit_none","","",49,[[],["result",4]]],[11,"visit_some","","",49,[[],["result",4]]],[11,"visit_newtype_struct","","",49,[[],["result",4]]],[11,"visit_unit","","",49,[[],["result",4]]],[11,"visit_seq","","",49,[[],["result",4]]],[11,"visit_map","","",49,[[],["result",4]]],[11,"visit_bytes","","",49,[[],["result",4]]],[11,"visit_enum","","",49,[[],["result",4]]],[11,"next_element_seed","serde::de::value","",2,[[],[["option",4],["result",4]]]],[11,"size_hint","","",2,[[],["option",4]]],[11,"next_element_seed","","",4,[[],[["option",4],["result",4]]]],[11,"size_hint","","",4,[[],["option",4]]],[11,"next_key_seed","","",4,[[],[["option",4],["result",4]]]],[11,"next_value_seed","","",4,[[],["result",4]]],[11,"next_entry_seed","","",4,[[],[["option",4],["result",4]]]],[11,"size_hint","","",4,[[],["option",4]]],[11,"variant_seed","","",45,[[],["result",4]]],[11,"variant_seed","","",46,[[],["result",4]]],[11,"variant_seed","","",0,[[],["result",4]]],[11,"variant_seed","","",47,[[],["result",4]]],[11,"variant_seed","","",48,[[],["result",4]]],[11,"variant_seed","","",5,[[],["result",4]]],[11,"serialize_element","serde::ser","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_element","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_key","","",50,[[],["result",4]]],[11,"serialize_value","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"custom","serde::de::value","",28,[[]]],[11,"custom","","",28,[[]]],[11,"clone","","",28,[[],["error",3]]],[11,"clone","","",29,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",0,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[],["seqdeserializer",3]]],[11,"clone","","",3,[[],["seqaccessdeserializer",3]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[],["mapaccessdeserializer",3]]],[11,"clone","serde::de","",49,[[],["ignoredany",3]]],[11,"clone","","",7,[[],["unexpected",4]]],[11,"default","","",49,[[],["ignoredany",3]]],[11,"eq","serde::de::value","",28,[[["error",3]]]],[11,"ne","","",28,[[["error",3]]]],[11,"eq","serde::de","",7,[[["unexpected",4]]]],[11,"ne","","",7,[[["unexpected",4]]]],[11,"fmt","serde::de::value","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de::value","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","serde::de","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"description","serde::de::value","",28,[[]]]],"p":[[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[4,"Unexpected"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"IgnoredAny"],[3,"Impossible"]]},\
"serde_derive":{"doc":"This crate provides Serde\'s two derive macros.","i":[[24,"Serialize","serde_derive","",null,null],[24,"Deserialize","","",null,null]],"p":[]},\
"syn":{"doc":"github crates-io docs-rs","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",null,null],[0,"token","","Tokens representing Rust punctuation, keywords, and…",null,null],[8,"Token","syn::token","Marker trait for types that represent single tokens.",null,null],[3,"Underscore","","`_`",null,null],[12,"spans","","",0,null],[3,"Abstract","","`abstract`",null,null],[12,"span","","",1,null],[3,"As","","`as`",null,null],[12,"span","","",2,null],[3,"Async","","`async`",null,null],[12,"span","","",3,null],[3,"Auto","","`auto`",null,null],[12,"span","","",4,null],[3,"Await","","`await`",null,null],[12,"span","","",5,null],[3,"Become","","`become`",null,null],[12,"span","","",6,null],[3,"Box","","`box`",null,null],[12,"span","","",7,null],[3,"Break","","`break`",null,null],[12,"span","","",8,null],[3,"Const","","`const`",null,null],[12,"span","","",9,null],[3,"Continue","","`continue`",null,null],[12,"span","","",10,null],[3,"Crate","","`crate`",null,null],[12,"span","","",11,null],[3,"Default","","`default`",null,null],[12,"span","","",12,null],[3,"Do","","`do`",null,null],[12,"span","","",13,null],[3,"Dyn","","`dyn`",null,null],[12,"span","","",14,null],[3,"Else","","`else`",null,null],[12,"span","","",15,null],[3,"Enum","","`enum`",null,null],[12,"span","","",16,null],[3,"Extern","","`extern`",null,null],[12,"span","","",17,null],[3,"Final","","`final`",null,null],[12,"span","","",18,null],[3,"Fn","","`fn`",null,null],[12,"span","","",19,null],[3,"For","","`for`",null,null],[12,"span","","",20,null],[3,"If","","`if`",null,null],[12,"span","","",21,null],[3,"Impl","","`impl`",null,null],[12,"span","","",22,null],[3,"In","","`in`",null,null],[12,"span","","",23,null],[3,"Let","","`let`",null,null],[12,"span","","",24,null],[3,"Loop","","`loop`",null,null],[12,"span","","",25,null],[3,"Macro","","`macro`",null,null],[12,"span","","",26,null],[3,"Match","","`match`",null,null],[12,"span","","",27,null],[3,"Mod","","`mod`",null,null],[12,"span","","",28,null],[3,"Move","","`move`",null,null],[12,"span","","",29,null],[3,"Mut","","`mut`",null,null],[12,"span","","",30,null],[3,"Override","","`override`",null,null],[12,"span","","",31,null],[3,"Priv","","`priv`",null,null],[12,"span","","",32,null],[3,"Pub","","`pub`",null,null],[12,"span","","",33,null],[3,"Ref","","`ref`",null,null],[12,"span","","",34,null],[3,"Return","","`return`",null,null],[12,"span","","",35,null],[3,"SelfType","","`Self`",null,null],[12,"span","","",36,null],[3,"SelfValue","","`self`",null,null],[12,"span","","",37,null],[3,"Static","","`static`",null,null],[12,"span","","",38,null],[3,"Struct","","`struct`",null,null],[12,"span","","",39,null],[3,"Super","","`super`",null,null],[12,"span","","",40,null],[3,"Trait","","`trait`",null,null],[12,"span","","",41,null],[3,"Try","","`try`",null,null],[12,"span","","",42,null],[3,"Type","","`type`",null,null],[12,"span","","",43,null],[3,"Typeof","","`typeof`",null,null],[12,"span","","",44,null],[3,"Union","","`union`",null,null],[12,"span","","",45,null],[3,"Unsafe","","`unsafe`",null,null],[12,"span","","",46,null],[3,"Unsized","","`unsized`",null,null],[12,"span","","",47,null],[3,"Use","","`use`",null,null],[12,"span","","",48,null],[3,"Virtual","","`virtual`",null,null],[12,"span","","",49,null],[3,"Where","","`where`",null,null],[12,"span","","",50,null],[3,"While","","`while`",null,null],[12,"span","","",51,null],[3,"Yield","","`yield`",null,null],[12,"span","","",52,null],[3,"Add","","`+`",null,null],[12,"spans","","",53,null],[3,"AddEq","","`+=`",null,null],[12,"spans","","",54,null],[3,"And","","`&`",null,null],[12,"spans","","",55,null],[3,"AndAnd","","`&&`",null,null],[12,"spans","","",56,null],[3,"AndEq","","`&=`",null,null],[12,"spans","","",57,null],[3,"At","","`@`",null,null],[12,"spans","","",58,null],[3,"Bang","","`!`",null,null],[12,"spans","","",59,null],[3,"Caret","","`^`",null,null],[12,"spans","","",60,null],[3,"CaretEq","","`^=`",null,null],[12,"spans","","",61,null],[3,"Colon","","`:`",null,null],[12,"spans","","",62,null],[3,"Colon2","","`::`",null,null],[12,"spans","","",63,null],[3,"Comma","","`,`",null,null],[12,"spans","","",64,null],[3,"Div","","`/`",null,null],[12,"spans","","",65,null],[3,"DivEq","","`/=`",null,null],[12,"spans","","",66,null],[3,"Dollar","","`$`",null,null],[12,"spans","","",67,null],[3,"Dot","","`.`",null,null],[12,"spans","","",68,null],[3,"Dot2","","`..`",null,null],[12,"spans","","",69,null],[3,"Dot3","","`...`",null,null],[12,"spans","","",70,null],[3,"DotDotEq","","`..=`",null,null],[12,"spans","","",71,null],[3,"Eq","","`=`",null,null],[12,"spans","","",72,null],[3,"EqEq","","`==`",null,null],[12,"spans","","",73,null],[3,"Ge","","`>=`",null,null],[12,"spans","","",74,null],[3,"Gt","","`>`",null,null],[12,"spans","","",75,null],[3,"Le","","`<=`",null,null],[12,"spans","","",76,null],[3,"Lt","","`<`",null,null],[12,"spans","","",77,null],[3,"MulEq","","`*=`",null,null],[12,"spans","","",78,null],[3,"Ne","","`!=`",null,null],[12,"spans","","",79,null],[3,"Or","","`|`",null,null],[12,"spans","","",80,null],[3,"OrEq","","`|=`",null,null],[12,"spans","","",81,null],[3,"OrOr","","`||`",null,null],[12,"spans","","",82,null],[3,"Pound","","`#`",null,null],[12,"spans","","",83,null],[3,"Question","","`?`",null,null],[12,"spans","","",84,null],[3,"RArrow","","`->`",null,null],[12,"spans","","",85,null],[3,"LArrow","","`<-`",null,null],[12,"spans","","",86,null],[3,"Rem","","`%`",null,null],[12,"spans","","",87,null],[3,"RemEq","","`%=`",null,null],[12,"spans","","",88,null],[3,"FatArrow","","`=>`",null,null],[12,"spans","","",89,null],[3,"Semi","","`;`",null,null],[12,"spans","","",90,null],[3,"Shl","","`<<`",null,null],[12,"spans","","",91,null],[3,"ShlEq","","`<<=`",null,null],[12,"spans","","",92,null],[3,"Shr","","`>>`",null,null],[12,"spans","","",93,null],[3,"ShrEq","","`>>=`",null,null],[12,"spans","","",94,null],[3,"Star","","`*`",null,null],[12,"spans","","",95,null],[3,"Sub","","`-`",null,null],[12,"spans","","",96,null],[3,"SubEq","","`-=`",null,null],[12,"spans","","",97,null],[3,"Tilde","","`~`",null,null],[12,"spans","","",98,null],[3,"Brace","","`{...}`",null,null],[12,"span","","",99,null],[11,"surround","","",99,[[["tokenstream",3]]]],[3,"Bracket","","`[...]`",null,null],[12,"span","","",100,null],[11,"surround","","",100,[[["tokenstream",3]]]],[3,"Paren","","`(...)`",null,null],[12,"span","","",101,null],[11,"surround","","",101,[[["tokenstream",3]]]],[3,"Group","","None-delimited group",null,null],[12,"span","","",102,null],[11,"surround","","",102,[[["tokenstream",3]]]],[0,"buffer","syn","A stably addressed token buffer supporting efficient…",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",103,[[],["cursor",3]]],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",104,[[]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",104,[[]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",104,[[["delimiter",4]],["option",4]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",104,[[],["option",4]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",104,[[],["option",4]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",104,[[],["option",4]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",104,[[],["option",4]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",104,[[],["tokenstream",3]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",104,[[],["option",4]]],[11,"span","","Returns the `Span` of the current token, or…",104,[[],["span",3]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",null,null],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",null,null],[10,"parse_any","","Parses any identifier including keywords.",105,[[["parsestream",6]],["result",6]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",105,null],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",105,[[],["ident",3]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",null,null],[11,"new","","Creates an empty punctuated sequence.",106,[[]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",106,[[]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",106,[[]]],[11,"first","","Borrows the first element in this sequence.",106,[[],["option",4]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",106,[[],["option",4]]],[11,"last","","Borrows the last element in this sequence.",106,[[],["option",4]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",106,[[],["option",4]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",106,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",106,[[],["itermut",3]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",106,[[],["pairs",3]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",106,[[],["pairsmut",3]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",106,[[],["intopairs",3]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",106,[[]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",106,[[]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",106,[[],[["option",4],["pair",4]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",106,[[]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",106,[[]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",106,[[]]],[11,"insert","","Inserts an element at position `index`.",106,[[]]],[11,"clear","","Clears the sequence of all values and punctuation, making…",106,[[]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",106,[[["parsestream",6]],["result",6]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",106,[[["parsestream",6]],["result",6]]],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its…",null,null],[13,"Punctuated","","",107,null],[13,"End","","",107,null],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",107,[[]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",107,[[]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",107,[[]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",107,[[],["option",4]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",107,[[["option",4]]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",107,[[]]],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",null,null],[10,"span","","Returns a `Span` covering the complete contents of this…",108,[[],["span",3]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[8,"Visit","syn::visit","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[11,"visit_abi","","",109,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",109,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",109,[[["arm",3]]]],[11,"visit_attr_style","","",109,[[["attrstyle",4]]]],[11,"visit_attribute","","",109,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",109,[[["barefnarg",3]]]],[11,"visit_bin_op","","",109,[[["binop",4]]]],[11,"visit_binding","","",109,[[["binding",3]]]],[11,"visit_block","","",109,[[["block",3]]]],[11,"visit_bound_lifetimes","","",109,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",109,[[["constparam",3]]]],[11,"visit_constraint","","",109,[[["constraint",3]]]],[11,"visit_data","","",109,[[["data",4]]]],[11,"visit_data_enum","","",109,[[["dataenum",3]]]],[11,"visit_data_struct","","",109,[[["datastruct",3]]]],[11,"visit_data_union","","",109,[[["dataunion",3]]]],[11,"visit_derive_input","","",109,[[["deriveinput",3]]]],[11,"visit_expr","","",109,[[["expr",4]]]],[11,"visit_expr_array","","",109,[[["exprarray",3]]]],[11,"visit_expr_assign","","",109,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",109,[[["exprassignop",3]]]],[11,"visit_expr_async","","",109,[[["exprasync",3]]]],[11,"visit_expr_await","","",109,[[["exprawait",3]]]],[11,"visit_expr_binary","","",109,[[["exprbinary",3]]]],[11,"visit_expr_block","","",109,[[["exprblock",3]]]],[11,"visit_expr_box","","",109,[[["exprbox",3]]]],[11,"visit_expr_break","","",109,[[["exprbreak",3]]]],[11,"visit_expr_call","","",109,[[["exprcall",3]]]],[11,"visit_expr_cast","","",109,[[["exprcast",3]]]],[11,"visit_expr_closure","","",109,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",109,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",109,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",109,[[["exprforloop",3]]]],[11,"visit_expr_group","","",109,[[["exprgroup",3]]]],[11,"visit_expr_if","","",109,[[["exprif",3]]]],[11,"visit_expr_index","","",109,[[["exprindex",3]]]],[11,"visit_expr_let","","",109,[[["exprlet",3]]]],[11,"visit_expr_lit","","",109,[[["exprlit",3]]]],[11,"visit_expr_loop","","",109,[[["exprloop",3]]]],[11,"visit_expr_macro","","",109,[[["exprmacro",3]]]],[11,"visit_expr_match","","",109,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",109,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",109,[[["exprparen",3]]]],[11,"visit_expr_path","","",109,[[["exprpath",3]]]],[11,"visit_expr_range","","",109,[[["exprrange",3]]]],[11,"visit_expr_reference","","",109,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",109,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",109,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",109,[[["exprstruct",3]]]],[11,"visit_expr_try","","",109,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",109,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",109,[[["exprtuple",3]]]],[11,"visit_expr_type","","",109,[[["exprtype",3]]]],[11,"visit_expr_unary","","",109,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",109,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",109,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",109,[[["expryield",3]]]],[11,"visit_field","","",109,[[["field",3]]]],[11,"visit_field_pat","","",109,[[["fieldpat",3]]]],[11,"visit_field_value","","",109,[[["fieldvalue",3]]]],[11,"visit_fields","","",109,[[["fields",4]]]],[11,"visit_fields_named","","",109,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",109,[[["fieldsunnamed",3]]]],[11,"visit_file","","",109,[[["file",3]]]],[11,"visit_fn_arg","","",109,[[["fnarg",4]]]],[11,"visit_foreign_item","","",109,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",109,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",109,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",109,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",109,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",109,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",109,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",109,[[["genericparam",4]]]],[11,"visit_generics","","",109,[[["generics",3]]]],[11,"visit_ident","","",109,[[["ident",3]]]],[11,"visit_impl_item","","",109,[[["implitem",4]]]],[11,"visit_impl_item_const","","",109,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",109,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",109,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",109,[[["implitemtype",3]]]],[11,"visit_index","","",109,[[["index",3]]]],[11,"visit_item","","",109,[[["item",4]]]],[11,"visit_item_const","","",109,[[["itemconst",3]]]],[11,"visit_item_enum","","",109,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",109,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",109,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",109,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",109,[[["itemimpl",3]]]],[11,"visit_item_macro","","",109,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",109,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",109,[[["itemmod",3]]]],[11,"visit_item_static","","",109,[[["itemstatic",3]]]],[11,"visit_item_struct","","",109,[[["itemstruct",3]]]],[11,"visit_item_trait","","",109,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",109,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",109,[[["itemtype",3]]]],[11,"visit_item_union","","",109,[[["itemunion",3]]]],[11,"visit_item_use","","",109,[[["itemuse",3]]]],[11,"visit_label","","",109,[[["label",3]]]],[11,"visit_lifetime","","",109,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",109,[[["lifetimedef",3]]]],[11,"visit_lit","","",109,[[["lit",4]]]],[11,"visit_lit_bool","","",109,[[["litbool",3]]]],[11,"visit_lit_byte","","",109,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",109,[[["litbytestr",3]]]],[11,"visit_lit_char","","",109,[[["litchar",3]]]],[11,"visit_lit_float","","",109,[[["litfloat",3]]]],[11,"visit_lit_int","","",109,[[["litint",3]]]],[11,"visit_lit_str","","",109,[[["litstr",3]]]],[11,"visit_local","","",109,[[["local",3]]]],[11,"visit_macro","","",109,[[["macro",3]]]],[11,"visit_macro_delimiter","","",109,[[["macrodelimiter",4]]]],[11,"visit_member","","",109,[[["member",4]]]],[11,"visit_meta","","",109,[[["meta",4]]]],[11,"visit_meta_list","","",109,[[["metalist",3]]]],[11,"visit_meta_name_value","","",109,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",109,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",109,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",109,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",109,[[["pat",4]]]],[11,"visit_pat_box","","",109,[[["patbox",3]]]],[11,"visit_pat_ident","","",109,[[["patident",3]]]],[11,"visit_pat_lit","","",109,[[["patlit",3]]]],[11,"visit_pat_macro","","",109,[[["patmacro",3]]]],[11,"visit_pat_or","","",109,[[["pator",3]]]],[11,"visit_pat_path","","",109,[[["patpath",3]]]],[11,"visit_pat_range","","",109,[[["patrange",3]]]],[11,"visit_pat_reference","","",109,[[["patreference",3]]]],[11,"visit_pat_rest","","",109,[[["patrest",3]]]],[11,"visit_pat_slice","","",109,[[["patslice",3]]]],[11,"visit_pat_struct","","",109,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",109,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",109,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",109,[[["pattype",3]]]],[11,"visit_pat_wild","","",109,[[["patwild",3]]]],[11,"visit_path","","",109,[[["path",3]]]],[11,"visit_path_arguments","","",109,[[["patharguments",4]]]],[11,"visit_path_segment","","",109,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",109,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",109,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",109,[[["predicatetype",3]]]],[11,"visit_qself","","",109,[[["qself",3]]]],[11,"visit_range_limits","","",109,[[["rangelimits",4]]]],[11,"visit_receiver","","",109,[[["receiver",3]]]],[11,"visit_return_type","","",109,[[["returntype",4]]]],[11,"visit_signature","","",109,[[["signature",3]]]],[11,"visit_span","","",109,[[["span",3]]]],[11,"visit_stmt","","",109,[[["stmt",4]]]],[11,"visit_trait_bound","","",109,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",109,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",109,[[["traititem",4]]]],[11,"visit_trait_item_const","","",109,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",109,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",109,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",109,[[["traititemtype",3]]]],[11,"visit_type","","",109,[[["type",4]]]],[11,"visit_type_array","","",109,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",109,[[["typebarefn",3]]]],[11,"visit_type_group","","",109,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",109,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",109,[[["typeinfer",3]]]],[11,"visit_type_macro","","",109,[[["typemacro",3]]]],[11,"visit_type_never","","",109,[[["typenever",3]]]],[11,"visit_type_param","","",109,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",109,[[["typeparambound",4]]]],[11,"visit_type_paren","","",109,[[["typeparen",3]]]],[11,"visit_type_path","","",109,[[["typepath",3]]]],[11,"visit_type_ptr","","",109,[[["typeptr",3]]]],[11,"visit_type_reference","","",109,[[["typereference",3]]]],[11,"visit_type_slice","","",109,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",109,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",109,[[["typetuple",3]]]],[11,"visit_un_op","","",109,[[["unop",4]]]],[11,"visit_use_glob","","",109,[[["useglob",3]]]],[11,"visit_use_group","","",109,[[["usegroup",3]]]],[11,"visit_use_name","","",109,[[["usename",3]]]],[11,"visit_use_path","","",109,[[["usepath",3]]]],[11,"visit_use_rename","","",109,[[["userename",3]]]],[11,"visit_use_tree","","",109,[[["usetree",4]]]],[11,"visit_variadic","","",109,[[["variadic",3]]]],[11,"visit_variant","","",109,[[["variant",3]]]],[11,"visit_vis_crate","","",109,[[["viscrate",3]]]],[11,"visit_vis_public","","",109,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",109,[[["visrestricted",3]]]],[11,"visit_visibility","","",109,[[["visibility",4]]]],[11,"visit_where_clause","","",109,[[["whereclause",3]]]],[11,"visit_where_predicate","","",109,[[["wherepredicate",4]]]],[5,"visit_abi","","",null,[[["abi",3]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["anglebracketedgenericarguments",3]]]],[5,"visit_arm","","",null,[[["arm",3]]]],[5,"visit_attr_style","","",null,[[["attrstyle",4]]]],[5,"visit_attribute","","",null,[[["attribute",3]]]],[5,"visit_bare_fn_arg","","",null,[[["barefnarg",3]]]],[5,"visit_bin_op","","",null,[[["binop",4]]]],[5,"visit_binding","","",null,[[["binding",3]]]],[5,"visit_block","","",null,[[["block",3]]]],[5,"visit_bound_lifetimes","","",null,[[["boundlifetimes",3]]]],[5,"visit_const_param","","",null,[[["constparam",3]]]],[5,"visit_constraint","","",null,[[["constraint",3]]]],[5,"visit_data","","",null,[[["data",4]]]],[5,"visit_data_enum","","",null,[[["dataenum",3]]]],[5,"visit_data_struct","","",null,[[["datastruct",3]]]],[5,"visit_data_union","","",null,[[["dataunion",3]]]],[5,"visit_derive_input","","",null,[[["deriveinput",3]]]],[5,"visit_expr","","",null,[[["expr",4]]]],[5,"visit_expr_array","","",null,[[["exprarray",3]]]],[5,"visit_expr_assign","","",null,[[["exprassign",3]]]],[5,"visit_expr_assign_op","","",null,[[["exprassignop",3]]]],[5,"visit_expr_async","","",null,[[["exprasync",3]]]],[5,"visit_expr_await","","",null,[[["exprawait",3]]]],[5,"visit_expr_binary","","",null,[[["exprbinary",3]]]],[5,"visit_expr_block","","",null,[[["exprblock",3]]]],[5,"visit_expr_box","","",null,[[["exprbox",3]]]],[5,"visit_expr_break","","",null,[[["exprbreak",3]]]],[5,"visit_expr_call","","",null,[[["exprcall",3]]]],[5,"visit_expr_cast","","",null,[[["exprcast",3]]]],[5,"visit_expr_closure","","",null,[[["exprclosure",3]]]],[5,"visit_expr_continue","","",null,[[["exprcontinue",3]]]],[5,"visit_expr_field","","",null,[[["exprfield",3]]]],[5,"visit_expr_for_loop","","",null,[[["exprforloop",3]]]],[5,"visit_expr_group","","",null,[[["exprgroup",3]]]],[5,"visit_expr_if","","",null,[[["exprif",3]]]],[5,"visit_expr_index","","",null,[[["exprindex",3]]]],[5,"visit_expr_let","","",null,[[["exprlet",3]]]],[5,"visit_expr_lit","","",null,[[["exprlit",3]]]],[5,"visit_expr_loop","","",null,[[["exprloop",3]]]],[5,"visit_expr_macro","","",null,[[["exprmacro",3]]]],[5,"visit_expr_match","","",null,[[["exprmatch",3]]]],[5,"visit_expr_method_call","","",null,[[["exprmethodcall",3]]]],[5,"visit_expr_paren","","",null,[[["exprparen",3]]]],[5,"visit_expr_path","","",null,[[["exprpath",3]]]],[5,"visit_expr_range","","",null,[[["exprrange",3]]]],[5,"visit_expr_reference","","",null,[[["exprreference",3]]]],[5,"visit_expr_repeat","","",null,[[["exprrepeat",3]]]],[5,"visit_expr_return","","",null,[[["exprreturn",3]]]],[5,"visit_expr_struct","","",null,[[["exprstruct",3]]]],[5,"visit_expr_try","","",null,[[["exprtry",3]]]],[5,"visit_expr_try_block","","",null,[[["exprtryblock",3]]]],[5,"visit_expr_tuple","","",null,[[["exprtuple",3]]]],[5,"visit_expr_type","","",null,[[["exprtype",3]]]],[5,"visit_expr_unary","","",null,[[["exprunary",3]]]],[5,"visit_expr_unsafe","","",null,[[["exprunsafe",3]]]],[5,"visit_expr_while","","",null,[[["exprwhile",3]]]],[5,"visit_expr_yield","","",null,[[["expryield",3]]]],[5,"visit_field","","",null,[[["field",3]]]],[5,"visit_field_pat","","",null,[[["fieldpat",3]]]],[5,"visit_field_value","","",null,[[["fieldvalue",3]]]],[5,"visit_fields","","",null,[[["fields",4]]]],[5,"visit_fields_named","","",null,[[["fieldsnamed",3]]]],[5,"visit_fields_unnamed","","",null,[[["fieldsunnamed",3]]]],[5,"visit_file","","",null,[[["file",3]]]],[5,"visit_fn_arg","","",null,[[["fnarg",4]]]],[5,"visit_foreign_item","","",null,[[["foreignitem",4]]]],[5,"visit_foreign_item_fn","","",null,[[["foreignitemfn",3]]]],[5,"visit_foreign_item_macro","","",null,[[["foreignitemmacro",3]]]],[5,"visit_foreign_item_static","","",null,[[["foreignitemstatic",3]]]],[5,"visit_foreign_item_type","","",null,[[["foreignitemtype",3]]]],[5,"visit_generic_argument","","",null,[[["genericargument",4]]]],[5,"visit_generic_method_argument","","",null,[[["genericmethodargument",4]]]],[5,"visit_generic_param","","",null,[[["genericparam",4]]]],[5,"visit_generics","","",null,[[["generics",3]]]],[5,"visit_ident","","",null,[[["ident",3]]]],[5,"visit_impl_item","","",null,[[["implitem",4]]]],[5,"visit_impl_item_const","","",null,[[["implitemconst",3]]]],[5,"visit_impl_item_macro","","",null,[[["implitemmacro",3]]]],[5,"visit_impl_item_method","","",null,[[["implitemmethod",3]]]],[5,"visit_impl_item_type","","",null,[[["implitemtype",3]]]],[5,"visit_index","","",null,[[["index",3]]]],[5,"visit_item","","",null,[[["item",4]]]],[5,"visit_item_const","","",null,[[["itemconst",3]]]],[5,"visit_item_enum","","",null,[[["itemenum",3]]]],[5,"visit_item_extern_crate","","",null,[[["itemexterncrate",3]]]],[5,"visit_item_fn","","",null,[[["itemfn",3]]]],[5,"visit_item_foreign_mod","","",null,[[["itemforeignmod",3]]]],[5,"visit_item_impl","","",null,[[["itemimpl",3]]]],[5,"visit_item_macro","","",null,[[["itemmacro",3]]]],[5,"visit_item_macro2","","",null,[[["itemmacro2",3]]]],[5,"visit_item_mod","","",null,[[["itemmod",3]]]],[5,"visit_item_static","","",null,[[["itemstatic",3]]]],[5,"visit_item_struct","","",null,[[["itemstruct",3]]]],[5,"visit_item_trait","","",null,[[["itemtrait",3]]]],[5,"visit_item_trait_alias","","",null,[[["itemtraitalias",3]]]],[5,"visit_item_type","","",null,[[["itemtype",3]]]],[5,"visit_item_union","","",null,[[["itemunion",3]]]],[5,"visit_item_use","","",null,[[["itemuse",3]]]],[5,"visit_label","","",null,[[["label",3]]]],[5,"visit_lifetime","","",null,[[["lifetime",3]]]],[5,"visit_lifetime_def","","",null,[[["lifetimedef",3]]]],[5,"visit_lit","","",null,[[["lit",4]]]],[5,"visit_lit_bool","","",null,[[["litbool",3]]]],[5,"visit_lit_byte","","",null,[[["litbyte",3]]]],[5,"visit_lit_byte_str","","",null,[[["litbytestr",3]]]],[5,"visit_lit_char","","",null,[[["litchar",3]]]],[5,"visit_lit_float","","",null,[[["litfloat",3]]]],[5,"visit_lit_int","","",null,[[["litint",3]]]],[5,"visit_lit_str","","",null,[[["litstr",3]]]],[5,"visit_local","","",null,[[["local",3]]]],[5,"visit_macro","","",null,[[["macro",3]]]],[5,"visit_macro_delimiter","","",null,[[["macrodelimiter",4]]]],[5,"visit_member","","",null,[[["member",4]]]],[5,"visit_meta","","",null,[[["meta",4]]]],[5,"visit_meta_list","","",null,[[["metalist",3]]]],[5,"visit_meta_name_value","","",null,[[["metanamevalue",3]]]],[5,"visit_method_turbofish","","",null,[[["methodturbofish",3]]]],[5,"visit_nested_meta","","",null,[[["nestedmeta",4]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["parenthesizedgenericarguments",3]]]],[5,"visit_pat","","",null,[[["pat",4]]]],[5,"visit_pat_box","","",null,[[["patbox",3]]]],[5,"visit_pat_ident","","",null,[[["patident",3]]]],[5,"visit_pat_lit","","",null,[[["patlit",3]]]],[5,"visit_pat_macro","","",null,[[["patmacro",3]]]],[5,"visit_pat_or","","",null,[[["pator",3]]]],[5,"visit_pat_path","","",null,[[["patpath",3]]]],[5,"visit_pat_range","","",null,[[["patrange",3]]]],[5,"visit_pat_reference","","",null,[[["patreference",3]]]],[5,"visit_pat_rest","","",null,[[["patrest",3]]]],[5,"visit_pat_slice","","",null,[[["patslice",3]]]],[5,"visit_pat_struct","","",null,[[["patstruct",3]]]],[5,"visit_pat_tuple","","",null,[[["pattuple",3]]]],[5,"visit_pat_tuple_struct","","",null,[[["pattuplestruct",3]]]],[5,"visit_pat_type","","",null,[[["pattype",3]]]],[5,"visit_pat_wild","","",null,[[["patwild",3]]]],[5,"visit_path","","",null,[[["path",3]]]],[5,"visit_path_arguments","","",null,[[["patharguments",4]]]],[5,"visit_path_segment","","",null,[[["pathsegment",3]]]],[5,"visit_predicate_eq","","",null,[[["predicateeq",3]]]],[5,"visit_predicate_lifetime","","",null,[[["predicatelifetime",3]]]],[5,"visit_predicate_type","","",null,[[["predicatetype",3]]]],[5,"visit_qself","","",null,[[["qself",3]]]],[5,"visit_range_limits","","",null,[[["rangelimits",4]]]],[5,"visit_receiver","","",null,[[["receiver",3]]]],[5,"visit_return_type","","",null,[[["returntype",4]]]],[5,"visit_signature","","",null,[[["signature",3]]]],[5,"visit_span","","",null,[[["span",3]]]],[5,"visit_stmt","","",null,[[["stmt",4]]]],[5,"visit_trait_bound","","",null,[[["traitbound",3]]]],[5,"visit_trait_bound_modifier","","",null,[[["traitboundmodifier",4]]]],[5,"visit_trait_item","","",null,[[["traititem",4]]]],[5,"visit_trait_item_const","","",null,[[["traititemconst",3]]]],[5,"visit_trait_item_macro","","",null,[[["traititemmacro",3]]]],[5,"visit_trait_item_method","","",null,[[["traititemmethod",3]]]],[5,"visit_trait_item_type","","",null,[[["traititemtype",3]]]],[5,"visit_type","","",null,[[["type",4]]]],[5,"visit_type_array","","",null,[[["typearray",3]]]],[5,"visit_type_bare_fn","","",null,[[["typebarefn",3]]]],[5,"visit_type_group","","",null,[[["typegroup",3]]]],[5,"visit_type_impl_trait","","",null,[[["typeimpltrait",3]]]],[5,"visit_type_infer","","",null,[[["typeinfer",3]]]],[5,"visit_type_macro","","",null,[[["typemacro",3]]]],[5,"visit_type_never","","",null,[[["typenever",3]]]],[5,"visit_type_param","","",null,[[["typeparam",3]]]],[5,"visit_type_param_bound","","",null,[[["typeparambound",4]]]],[5,"visit_type_paren","","",null,[[["typeparen",3]]]],[5,"visit_type_path","","",null,[[["typepath",3]]]],[5,"visit_type_ptr","","",null,[[["typeptr",3]]]],[5,"visit_type_reference","","",null,[[["typereference",3]]]],[5,"visit_type_slice","","",null,[[["typeslice",3]]]],[5,"visit_type_trait_object","","",null,[[["typetraitobject",3]]]],[5,"visit_type_tuple","","",null,[[["typetuple",3]]]],[5,"visit_un_op","","",null,[[["unop",4]]]],[5,"visit_use_glob","","",null,[[["useglob",3]]]],[5,"visit_use_group","","",null,[[["usegroup",3]]]],[5,"visit_use_name","","",null,[[["usename",3]]]],[5,"visit_use_path","","",null,[[["usepath",3]]]],[5,"visit_use_rename","","",null,[[["userename",3]]]],[5,"visit_use_tree","","",null,[[["usetree",4]]]],[5,"visit_variadic","","",null,[[["variadic",3]]]],[5,"visit_variant","","",null,[[["variant",3]]]],[5,"visit_vis_crate","","",null,[[["viscrate",3]]]],[5,"visit_vis_public","","",null,[[["vispublic",3]]]],[5,"visit_vis_restricted","","",null,[[["visrestricted",3]]]],[5,"visit_visibility","","",null,[[["visibility",4]]]],[5,"visit_where_clause","","",null,[[["whereclause",3]]]],[5,"visit_where_predicate","","",null,[[["wherepredicate",4]]]],[0,"visit_mut","syn","Syntax tree traversal to mutate an exclusive borrow of a…",null,null],[8,"VisitMut","syn::visit_mut","Syntax tree traversal to mutate an exclusive borrow of a…",null,null],[11,"visit_abi_mut","","",110,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments_mut","","",110,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm_mut","","",110,[[["arm",3]]]],[11,"visit_attr_style_mut","","",110,[[["attrstyle",4]]]],[11,"visit_attribute_mut","","",110,[[["attribute",3]]]],[11,"visit_bare_fn_arg_mut","","",110,[[["barefnarg",3]]]],[11,"visit_bin_op_mut","","",110,[[["binop",4]]]],[11,"visit_binding_mut","","",110,[[["binding",3]]]],[11,"visit_block_mut","","",110,[[["block",3]]]],[11,"visit_bound_lifetimes_mut","","",110,[[["boundlifetimes",3]]]],[11,"visit_const_param_mut","","",110,[[["constparam",3]]]],[11,"visit_constraint_mut","","",110,[[["constraint",3]]]],[11,"visit_data_mut","","",110,[[["data",4]]]],[11,"visit_data_enum_mut","","",110,[[["dataenum",3]]]],[11,"visit_data_struct_mut","","",110,[[["datastruct",3]]]],[11,"visit_data_union_mut","","",110,[[["dataunion",3]]]],[11,"visit_derive_input_mut","","",110,[[["deriveinput",3]]]],[11,"visit_expr_mut","","",110,[[["expr",4]]]],[11,"visit_expr_array_mut","","",110,[[["exprarray",3]]]],[11,"visit_expr_assign_mut","","",110,[[["exprassign",3]]]],[11,"visit_expr_assign_op_mut","","",110,[[["exprassignop",3]]]],[11,"visit_expr_async_mut","","",110,[[["exprasync",3]]]],[11,"visit_expr_await_mut","","",110,[[["exprawait",3]]]],[11,"visit_expr_binary_mut","","",110,[[["exprbinary",3]]]],[11,"visit_expr_block_mut","","",110,[[["exprblock",3]]]],[11,"visit_expr_box_mut","","",110,[[["exprbox",3]]]],[11,"visit_expr_break_mut","","",110,[[["exprbreak",3]]]],[11,"visit_expr_call_mut","","",110,[[["exprcall",3]]]],[11,"visit_expr_cast_mut","","",110,[[["exprcast",3]]]],[11,"visit_expr_closure_mut","","",110,[[["exprclosure",3]]]],[11,"visit_expr_continue_mut","","",110,[[["exprcontinue",3]]]],[11,"visit_expr_field_mut","","",110,[[["exprfield",3]]]],[11,"visit_expr_for_loop_mut","","",110,[[["exprforloop",3]]]],[11,"visit_expr_group_mut","","",110,[[["exprgroup",3]]]],[11,"visit_expr_if_mut","","",110,[[["exprif",3]]]],[11,"visit_expr_index_mut","","",110,[[["exprindex",3]]]],[11,"visit_expr_let_mut","","",110,[[["exprlet",3]]]],[11,"visit_expr_lit_mut","","",110,[[["exprlit",3]]]],[11,"visit_expr_loop_mut","","",110,[[["exprloop",3]]]],[11,"visit_expr_macro_mut","","",110,[[["exprmacro",3]]]],[11,"visit_expr_match_mut","","",110,[[["exprmatch",3]]]],[11,"visit_expr_method_call_mut","","",110,[[["exprmethodcall",3]]]],[11,"visit_expr_paren_mut","","",110,[[["exprparen",3]]]],[11,"visit_expr_path_mut","","",110,[[["exprpath",3]]]],[11,"visit_expr_range_mut","","",110,[[["exprrange",3]]]],[11,"visit_expr_reference_mut","","",110,[[["exprreference",3]]]],[11,"visit_expr_repeat_mut","","",110,[[["exprrepeat",3]]]],[11,"visit_expr_return_mut","","",110,[[["exprreturn",3]]]],[11,"visit_expr_struct_mut","","",110,[[["exprstruct",3]]]],[11,"visit_expr_try_mut","","",110,[[["exprtry",3]]]],[11,"visit_expr_try_block_mut","","",110,[[["exprtryblock",3]]]],[11,"visit_expr_tuple_mut","","",110,[[["exprtuple",3]]]],[11,"visit_expr_type_mut","","",110,[[["exprtype",3]]]],[11,"visit_expr_unary_mut","","",110,[[["exprunary",3]]]],[11,"visit_expr_unsafe_mut","","",110,[[["exprunsafe",3]]]],[11,"visit_expr_while_mut","","",110,[[["exprwhile",3]]]],[11,"visit_expr_yield_mut","","",110,[[["expryield",3]]]],[11,"visit_field_mut","","",110,[[["field",3]]]],[11,"visit_field_pat_mut","","",110,[[["fieldpat",3]]]],[11,"visit_field_value_mut","","",110,[[["fieldvalue",3]]]],[11,"visit_fields_mut","","",110,[[["fields",4]]]],[11,"visit_fields_named_mut","","",110,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed_mut","","",110,[[["fieldsunnamed",3]]]],[11,"visit_file_mut","","",110,[[["file",3]]]],[11,"visit_fn_arg_mut","","",110,[[["fnarg",4]]]],[11,"visit_foreign_item_mut","","",110,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn_mut","","",110,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro_mut","","",110,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static_mut","","",110,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type_mut","","",110,[[["foreignitemtype",3]]]],[11,"visit_generic_argument_mut","","",110,[[["genericargument",4]]]],[11,"visit_generic_method_argument_mut","","",110,[[["genericmethodargument",4]]]],[11,"visit_generic_param_mut","","",110,[[["genericparam",4]]]],[11,"visit_generics_mut","","",110,[[["generics",3]]]],[11,"visit_ident_mut","","",110,[[["ident",3]]]],[11,"visit_impl_item_mut","","",110,[[["implitem",4]]]],[11,"visit_impl_item_const_mut","","",110,[[["implitemconst",3]]]],[11,"visit_impl_item_macro_mut","","",110,[[["implitemmacro",3]]]],[11,"visit_impl_item_method_mut","","",110,[[["implitemmethod",3]]]],[11,"visit_impl_item_type_mut","","",110,[[["implitemtype",3]]]],[11,"visit_index_mut","","",110,[[["index",3]]]],[11,"visit_item_mut","","",110,[[["item",4]]]],[11,"visit_item_const_mut","","",110,[[["itemconst",3]]]],[11,"visit_item_enum_mut","","",110,[[["itemenum",3]]]],[11,"visit_item_extern_crate_mut","","",110,[[["itemexterncrate",3]]]],[11,"visit_item_fn_mut","","",110,[[["itemfn",3]]]],[11,"visit_item_foreign_mod_mut","","",110,[[["itemforeignmod",3]]]],[11,"visit_item_impl_mut","","",110,[[["itemimpl",3]]]],[11,"visit_item_macro_mut","","",110,[[["itemmacro",3]]]],[11,"visit_item_macro2_mut","","",110,[[["itemmacro2",3]]]],[11,"visit_item_mod_mut","","",110,[[["itemmod",3]]]],[11,"visit_item_static_mut","","",110,[[["itemstatic",3]]]],[11,"visit_item_struct_mut","","",110,[[["itemstruct",3]]]],[11,"visit_item_trait_mut","","",110,[[["itemtrait",3]]]],[11,"visit_item_trait_alias_mut","","",110,[[["itemtraitalias",3]]]],[11,"visit_item_type_mut","","",110,[[["itemtype",3]]]],[11,"visit_item_union_mut","","",110,[[["itemunion",3]]]],[11,"visit_item_use_mut","","",110,[[["itemuse",3]]]],[11,"visit_label_mut","","",110,[[["label",3]]]],[11,"visit_lifetime_mut","","",110,[[["lifetime",3]]]],[11,"visit_lifetime_def_mut","","",110,[[["lifetimedef",3]]]],[11,"visit_lit_mut","","",110,[[["lit",4]]]],[11,"visit_lit_bool_mut","","",110,[[["litbool",3]]]],[11,"visit_lit_byte_mut","","",110,[[["litbyte",3]]]],[11,"visit_lit_byte_str_mut","","",110,[[["litbytestr",3]]]],[11,"visit_lit_char_mut","","",110,[[["litchar",3]]]],[11,"visit_lit_float_mut","","",110,[[["litfloat",3]]]],[11,"visit_lit_int_mut","","",110,[[["litint",3]]]],[11,"visit_lit_str_mut","","",110,[[["litstr",3]]]],[11,"visit_local_mut","","",110,[[["local",3]]]],[11,"visit_macro_mut","","",110,[[["macro",3]]]],[11,"visit_macro_delimiter_mut","","",110,[[["macrodelimiter",4]]]],[11,"visit_member_mut","","",110,[[["member",4]]]],[11,"visit_meta_mut","","",110,[[["meta",4]]]],[11,"visit_meta_list_mut","","",110,[[["metalist",3]]]],[11,"visit_meta_name_value_mut","","",110,[[["metanamevalue",3]]]],[11,"visit_method_turbofish_mut","","",110,[[["methodturbofish",3]]]],[11,"visit_nested_meta_mut","","",110,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments_mut","","",110,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat_mut","","",110,[[["pat",4]]]],[11,"visit_pat_box_mut","","",110,[[["patbox",3]]]],[11,"visit_pat_ident_mut","","",110,[[["patident",3]]]],[11,"visit_pat_lit_mut","","",110,[[["patlit",3]]]],[11,"visit_pat_macro_mut","","",110,[[["patmacro",3]]]],[11,"visit_pat_or_mut","","",110,[[["pator",3]]]],[11,"visit_pat_path_mut","","",110,[[["patpath",3]]]],[11,"visit_pat_range_mut","","",110,[[["patrange",3]]]],[11,"visit_pat_reference_mut","","",110,[[["patreference",3]]]],[11,"visit_pat_rest_mut","","",110,[[["patrest",3]]]],[11,"visit_pat_slice_mut","","",110,[[["patslice",3]]]],[11,"visit_pat_struct_mut","","",110,[[["patstruct",3]]]],[11,"visit_pat_tuple_mut","","",110,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct_mut","","",110,[[["pattuplestruct",3]]]],[11,"visit_pat_type_mut","","",110,[[["pattype",3]]]],[11,"visit_pat_wild_mut","","",110,[[["patwild",3]]]],[11,"visit_path_mut","","",110,[[["path",3]]]],[11,"visit_path_arguments_mut","","",110,[[["patharguments",4]]]],[11,"visit_path_segment_mut","","",110,[[["pathsegment",3]]]],[11,"visit_predicate_eq_mut","","",110,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime_mut","","",110,[[["predicatelifetime",3]]]],[11,"visit_predicate_type_mut","","",110,[[["predicatetype",3]]]],[11,"visit_qself_mut","","",110,[[["qself",3]]]],[11,"visit_range_limits_mut","","",110,[[["rangelimits",4]]]],[11,"visit_receiver_mut","","",110,[[["receiver",3]]]],[11,"visit_return_type_mut","","",110,[[["returntype",4]]]],[11,"visit_signature_mut","","",110,[[["signature",3]]]],[11,"visit_span_mut","","",110,[[["span",3]]]],[11,"visit_stmt_mut","","",110,[[["stmt",4]]]],[11,"visit_trait_bound_mut","","",110,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier_mut","","",110,[[["traitboundmodifier",4]]]],[11,"visit_trait_item_mut","","",110,[[["traititem",4]]]],[11,"visit_trait_item_const_mut","","",110,[[["traititemconst",3]]]],[11,"visit_trait_item_macro_mut","","",110,[[["traititemmacro",3]]]],[11,"visit_trait_item_method_mut","","",110,[[["traititemmethod",3]]]],[11,"visit_trait_item_type_mut","","",110,[[["traititemtype",3]]]],[11,"visit_type_mut","","",110,[[["type",4]]]],[11,"visit_type_array_mut","","",110,[[["typearray",3]]]],[11,"visit_type_bare_fn_mut","","",110,[[["typebarefn",3]]]],[11,"visit_type_group_mut","","",110,[[["typegroup",3]]]],[11,"visit_type_impl_trait_mut","","",110,[[["typeimpltrait",3]]]],[11,"visit_type_infer_mut","","",110,[[["typeinfer",3]]]],[11,"visit_type_macro_mut","","",110,[[["typemacro",3]]]],[11,"visit_type_never_mut","","",110,[[["typenever",3]]]],[11,"visit_type_param_mut","","",110,[[["typeparam",3]]]],[11,"visit_type_param_bound_mut","","",110,[[["typeparambound",4]]]],[11,"visit_type_paren_mut","","",110,[[["typeparen",3]]]],[11,"visit_type_path_mut","","",110,[[["typepath",3]]]],[11,"visit_type_ptr_mut","","",110,[[["typeptr",3]]]],[11,"visit_type_reference_mut","","",110,[[["typereference",3]]]],[11,"visit_type_slice_mut","","",110,[[["typeslice",3]]]],[11,"visit_type_trait_object_mut","","",110,[[["typetraitobject",3]]]],[11,"visit_type_tuple_mut","","",110,[[["typetuple",3]]]],[11,"visit_un_op_mut","","",110,[[["unop",4]]]],[11,"visit_use_glob_mut","","",110,[[["useglob",3]]]],[11,"visit_use_group_mut","","",110,[[["usegroup",3]]]],[11,"visit_use_name_mut","","",110,[[["usename",3]]]],[11,"visit_use_path_mut","","",110,[[["usepath",3]]]],[11,"visit_use_rename_mut","","",110,[[["userename",3]]]],[11,"visit_use_tree_mut","","",110,[[["usetree",4]]]],[11,"visit_variadic_mut","","",110,[[["variadic",3]]]],[11,"visit_variant_mut","","",110,[[["variant",3]]]],[11,"visit_vis_crate_mut","","",110,[[["viscrate",3]]]],[11,"visit_vis_public_mut","","",110,[[["vispublic",3]]]],[11,"visit_vis_restricted_mut","","",110,[[["visrestricted",3]]]],[11,"visit_visibility_mut","","",110,[[["visibility",4]]]],[11,"visit_where_clause_mut","","",110,[[["whereclause",3]]]],[11,"visit_where_predicate_mut","","",110,[[["wherepredicate",4]]]],[5,"visit_abi_mut","","",null,[[["abi",3]]]],[5,"visit_angle_bracketed_generic_arguments_mut","","",null,[[["anglebracketedgenericarguments",3]]]],[5,"visit_arm_mut","","",null,[[["arm",3]]]],[5,"visit_attr_style_mut","","",null,[[["attrstyle",4]]]],[5,"visit_attribute_mut","","",null,[[["attribute",3]]]],[5,"visit_bare_fn_arg_mut","","",null,[[["barefnarg",3]]]],[5,"visit_bin_op_mut","","",null,[[["binop",4]]]],[5,"visit_binding_mut","","",null,[[["binding",3]]]],[5,"visit_block_mut","","",null,[[["block",3]]]],[5,"visit_bound_lifetimes_mut","","",null,[[["boundlifetimes",3]]]],[5,"visit_const_param_mut","","",null,[[["constparam",3]]]],[5,"visit_constraint_mut","","",null,[[["constraint",3]]]],[5,"visit_data_mut","","",null,[[["data",4]]]],[5,"visit_data_enum_mut","","",null,[[["dataenum",3]]]],[5,"visit_data_struct_mut","","",null,[[["datastruct",3]]]],[5,"visit_data_union_mut","","",null,[[["dataunion",3]]]],[5,"visit_derive_input_mut","","",null,[[["deriveinput",3]]]],[5,"visit_expr_mut","","",null,[[["expr",4]]]],[5,"visit_expr_array_mut","","",null,[[["exprarray",3]]]],[5,"visit_expr_assign_mut","","",null,[[["exprassign",3]]]],[5,"visit_expr_assign_op_mut","","",null,[[["exprassignop",3]]]],[5,"visit_expr_async_mut","","",null,[[["exprasync",3]]]],[5,"visit_expr_await_mut","","",null,[[["exprawait",3]]]],[5,"visit_expr_binary_mut","","",null,[[["exprbinary",3]]]],[5,"visit_expr_block_mut","","",null,[[["exprblock",3]]]],[5,"visit_expr_box_mut","","",null,[[["exprbox",3]]]],[5,"visit_expr_break_mut","","",null,[[["exprbreak",3]]]],[5,"visit_expr_call_mut","","",null,[[["exprcall",3]]]],[5,"visit_expr_cast_mut","","",null,[[["exprcast",3]]]],[5,"visit_expr_closure_mut","","",null,[[["exprclosure",3]]]],[5,"visit_expr_continue_mut","","",null,[[["exprcontinue",3]]]],[5,"visit_expr_field_mut","","",null,[[["exprfield",3]]]],[5,"visit_expr_for_loop_mut","","",null,[[["exprforloop",3]]]],[5,"visit_expr_group_mut","","",null,[[["exprgroup",3]]]],[5,"visit_expr_if_mut","","",null,[[["exprif",3]]]],[5,"visit_expr_index_mut","","",null,[[["exprindex",3]]]],[5,"visit_expr_let_mut","","",null,[[["exprlet",3]]]],[5,"visit_expr_lit_mut","","",null,[[["exprlit",3]]]],[5,"visit_expr_loop_mut","","",null,[[["exprloop",3]]]],[5,"visit_expr_macro_mut","","",null,[[["exprmacro",3]]]],[5,"visit_expr_match_mut","","",null,[[["exprmatch",3]]]],[5,"visit_expr_method_call_mut","","",null,[[["exprmethodcall",3]]]],[5,"visit_expr_paren_mut","","",null,[[["exprparen",3]]]],[5,"visit_expr_path_mut","","",null,[[["exprpath",3]]]],[5,"visit_expr_range_mut","","",null,[[["exprrange",3]]]],[5,"visit_expr_reference_mut","","",null,[[["exprreference",3]]]],[5,"visit_expr_repeat_mut","","",null,[[["exprrepeat",3]]]],[5,"visit_expr_return_mut","","",null,[[["exprreturn",3]]]],[5,"visit_expr_struct_mut","","",null,[[["exprstruct",3]]]],[5,"visit_expr_try_mut","","",null,[[["exprtry",3]]]],[5,"visit_expr_try_block_mut","","",null,[[["exprtryblock",3]]]],[5,"visit_expr_tuple_mut","","",null,[[["exprtuple",3]]]],[5,"visit_expr_type_mut","","",null,[[["exprtype",3]]]],[5,"visit_expr_unary_mut","","",null,[[["exprunary",3]]]],[5,"visit_expr_unsafe_mut","","",null,[[["exprunsafe",3]]]],[5,"visit_expr_while_mut","","",null,[[["exprwhile",3]]]],[5,"visit_expr_yield_mut","","",null,[[["expryield",3]]]],[5,"visit_field_mut","","",null,[[["field",3]]]],[5,"visit_field_pat_mut","","",null,[[["fieldpat",3]]]],[5,"visit_field_value_mut","","",null,[[["fieldvalue",3]]]],[5,"visit_fields_mut","","",null,[[["fields",4]]]],[5,"visit_fields_named_mut","","",null,[[["fieldsnamed",3]]]],[5,"visit_fields_unnamed_mut","","",null,[[["fieldsunnamed",3]]]],[5,"visit_file_mut","","",null,[[["file",3]]]],[5,"visit_fn_arg_mut","","",null,[[["fnarg",4]]]],[5,"visit_foreign_item_mut","","",null,[[["foreignitem",4]]]],[5,"visit_foreign_item_fn_mut","","",null,[[["foreignitemfn",3]]]],[5,"visit_foreign_item_macro_mut","","",null,[[["foreignitemmacro",3]]]],[5,"visit_foreign_item_static_mut","","",null,[[["foreignitemstatic",3]]]],[5,"visit_foreign_item_type_mut","","",null,[[["foreignitemtype",3]]]],[5,"visit_generic_argument_mut","","",null,[[["genericargument",4]]]],[5,"visit_generic_method_argument_mut","","",null,[[["genericmethodargument",4]]]],[5,"visit_generic_param_mut","","",null,[[["genericparam",4]]]],[5,"visit_generics_mut","","",null,[[["generics",3]]]],[5,"visit_ident_mut","","",null,[[["ident",3]]]],[5,"visit_impl_item_mut","","",null,[[["implitem",4]]]],[5,"visit_impl_item_const_mut","","",null,[[["implitemconst",3]]]],[5,"visit_impl_item_macro_mut","","",null,[[["implitemmacro",3]]]],[5,"visit_impl_item_method_mut","","",null,[[["implitemmethod",3]]]],[5,"visit_impl_item_type_mut","","",null,[[["implitemtype",3]]]],[5,"visit_index_mut","","",null,[[["index",3]]]],[5,"visit_item_mut","","",null,[[["item",4]]]],[5,"visit_item_const_mut","","",null,[[["itemconst",3]]]],[5,"visit_item_enum_mut","","",null,[[["itemenum",3]]]],[5,"visit_item_extern_crate_mut","","",null,[[["itemexterncrate",3]]]],[5,"visit_item_fn_mut","","",null,[[["itemfn",3]]]],[5,"visit_item_foreign_mod_mut","","",null,[[["itemforeignmod",3]]]],[5,"visit_item_impl_mut","","",null,[[["itemimpl",3]]]],[5,"visit_item_macro_mut","","",null,[[["itemmacro",3]]]],[5,"visit_item_macro2_mut","","",null,[[["itemmacro2",3]]]],[5,"visit_item_mod_mut","","",null,[[["itemmod",3]]]],[5,"visit_item_static_mut","","",null,[[["itemstatic",3]]]],[5,"visit_item_struct_mut","","",null,[[["itemstruct",3]]]],[5,"visit_item_trait_mut","","",null,[[["itemtrait",3]]]],[5,"visit_item_trait_alias_mut","","",null,[[["itemtraitalias",3]]]],[5,"visit_item_type_mut","","",null,[[["itemtype",3]]]],[5,"visit_item_union_mut","","",null,[[["itemunion",3]]]],[5,"visit_item_use_mut","","",null,[[["itemuse",3]]]],[5,"visit_label_mut","","",null,[[["label",3]]]],[5,"visit_lifetime_mut","","",null,[[["lifetime",3]]]],[5,"visit_lifetime_def_mut","","",null,[[["lifetimedef",3]]]],[5,"visit_lit_mut","","",null,[[["lit",4]]]],[5,"visit_lit_bool_mut","","",null,[[["litbool",3]]]],[5,"visit_lit_byte_mut","","",null,[[["litbyte",3]]]],[5,"visit_lit_byte_str_mut","","",null,[[["litbytestr",3]]]],[5,"visit_lit_char_mut","","",null,[[["litchar",3]]]],[5,"visit_lit_float_mut","","",null,[[["litfloat",3]]]],[5,"visit_lit_int_mut","","",null,[[["litint",3]]]],[5,"visit_lit_str_mut","","",null,[[["litstr",3]]]],[5,"visit_local_mut","","",null,[[["local",3]]]],[5,"visit_macro_mut","","",null,[[["macro",3]]]],[5,"visit_macro_delimiter_mut","","",null,[[["macrodelimiter",4]]]],[5,"visit_member_mut","","",null,[[["member",4]]]],[5,"visit_meta_mut","","",null,[[["meta",4]]]],[5,"visit_meta_list_mut","","",null,[[["metalist",3]]]],[5,"visit_meta_name_value_mut","","",null,[[["metanamevalue",3]]]],[5,"visit_method_turbofish_mut","","",null,[[["methodturbofish",3]]]],[5,"visit_nested_meta_mut","","",null,[[["nestedmeta",4]]]],[5,"visit_parenthesized_generic_arguments_mut","","",null,[[["parenthesizedgenericarguments",3]]]],[5,"visit_pat_mut","","",null,[[["pat",4]]]],[5,"visit_pat_box_mut","","",null,[[["patbox",3]]]],[5,"visit_pat_ident_mut","","",null,[[["patident",3]]]],[5,"visit_pat_lit_mut","","",null,[[["patlit",3]]]],[5,"visit_pat_macro_mut","","",null,[[["patmacro",3]]]],[5,"visit_pat_or_mut","","",null,[[["pator",3]]]],[5,"visit_pat_path_mut","","",null,[[["patpath",3]]]],[5,"visit_pat_range_mut","","",null,[[["patrange",3]]]],[5,"visit_pat_reference_mut","","",null,[[["patreference",3]]]],[5,"visit_pat_rest_mut","","",null,[[["patrest",3]]]],[5,"visit_pat_slice_mut","","",null,[[["patslice",3]]]],[5,"visit_pat_struct_mut","","",null,[[["patstruct",3]]]],[5,"visit_pat_tuple_mut","","",null,[[["pattuple",3]]]],[5,"visit_pat_tuple_struct_mut","","",null,[[["pattuplestruct",3]]]],[5,"visit_pat_type_mut","","",null,[[["pattype",3]]]],[5,"visit_pat_wild_mut","","",null,[[["patwild",3]]]],[5,"visit_path_mut","","",null,[[["path",3]]]],[5,"visit_path_arguments_mut","","",null,[[["patharguments",4]]]],[5,"visit_path_segment_mut","","",null,[[["pathsegment",3]]]],[5,"visit_predicate_eq_mut","","",null,[[["predicateeq",3]]]],[5,"visit_predicate_lifetime_mut","","",null,[[["predicatelifetime",3]]]],[5,"visit_predicate_type_mut","","",null,[[["predicatetype",3]]]],[5,"visit_qself_mut","","",null,[[["qself",3]]]],[5,"visit_range_limits_mut","","",null,[[["rangelimits",4]]]],[5,"visit_receiver_mut","","",null,[[["receiver",3]]]],[5,"visit_return_type_mut","","",null,[[["returntype",4]]]],[5,"visit_signature_mut","","",null,[[["signature",3]]]],[5,"visit_span_mut","","",null,[[["span",3]]]],[5,"visit_stmt_mut","","",null,[[["stmt",4]]]],[5,"visit_trait_bound_mut","","",null,[[["traitbound",3]]]],[5,"visit_trait_bound_modifier_mut","","",null,[[["traitboundmodifier",4]]]],[5,"visit_trait_item_mut","","",null,[[["traititem",4]]]],[5,"visit_trait_item_const_mut","","",null,[[["traititemconst",3]]]],[5,"visit_trait_item_macro_mut","","",null,[[["traititemmacro",3]]]],[5,"visit_trait_item_method_mut","","",null,[[["traititemmethod",3]]]],[5,"visit_trait_item_type_mut","","",null,[[["traititemtype",3]]]],[5,"visit_type_mut","","",null,[[["type",4]]]],[5,"visit_type_array_mut","","",null,[[["typearray",3]]]],[5,"visit_type_bare_fn_mut","","",null,[[["typebarefn",3]]]],[5,"visit_type_group_mut","","",null,[[["typegroup",3]]]],[5,"visit_type_impl_trait_mut","","",null,[[["typeimpltrait",3]]]],[5,"visit_type_infer_mut","","",null,[[["typeinfer",3]]]],[5,"visit_type_macro_mut","","",null,[[["typemacro",3]]]],[5,"visit_type_never_mut","","",null,[[["typenever",3]]]],[5,"visit_type_param_mut","","",null,[[["typeparam",3]]]],[5,"visit_type_param_bound_mut","","",null,[[["typeparambound",4]]]],[5,"visit_type_paren_mut","","",null,[[["typeparen",3]]]],[5,"visit_type_path_mut","","",null,[[["typepath",3]]]],[5,"visit_type_ptr_mut","","",null,[[["typeptr",3]]]],[5,"visit_type_reference_mut","","",null,[[["typereference",3]]]],[5,"visit_type_slice_mut","","",null,[[["typeslice",3]]]],[5,"visit_type_trait_object_mut","","",null,[[["typetraitobject",3]]]],[5,"visit_type_tuple_mut","","",null,[[["typetuple",3]]]],[5,"visit_un_op_mut","","",null,[[["unop",4]]]],[5,"visit_use_glob_mut","","",null,[[["useglob",3]]]],[5,"visit_use_group_mut","","",null,[[["usegroup",3]]]],[5,"visit_use_name_mut","","",null,[[["usename",3]]]],[5,"visit_use_path_mut","","",null,[[["usepath",3]]]],[5,"visit_use_rename_mut","","",null,[[["userename",3]]]],[5,"visit_use_tree_mut","","",null,[[["usetree",4]]]],[5,"visit_variadic_mut","","",null,[[["variadic",3]]]],[5,"visit_variant_mut","","",null,[[["variant",3]]]],[5,"visit_vis_crate_mut","","",null,[[["viscrate",3]]]],[5,"visit_vis_public_mut","","",null,[[["vispublic",3]]]],[5,"visit_vis_restricted_mut","","",null,[[["visrestricted",3]]]],[5,"visit_visibility_mut","","",null,[[["visibility",4]]]],[5,"visit_where_clause_mut","","",null,[[["whereclause",3]]]],[5,"visit_where_predicate_mut","","",null,[[["wherepredicate",4]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",null,null],[0,"discouraged","syn::parse","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked…",111,[[]]],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be…",null,null],[10,"parse","","",112,[[["parsestream",6]],["result",6]]],[6,"ParseStream","","Input to a Syn parser function.",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[11,"error","","Triggers an error at the current position of the parse…",113,[[["display",8]],["error",3]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",114,[[],[["parse",8],["result",6]]]],[11,"call","","Calls the given parser function to parse a syntax tree…",114,[[],["result",6]]],[11,"peek","","Looks at the next token in the parse stream to determine…",114,[[["peek",8]]]],[11,"peek2","","Looks at the second-next token in the parse stream.",114,[[["peek",8]]]],[11,"peek3","","Looks at the third-next token in the parse stream.",114,[[["peek",8]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",114,[[],[["result",6],["punctuated",3]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",114,[[]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",114,[[],["lookahead1",3]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",114,[[]]],[11,"error","","Triggers an error at the current position of the parse…",114,[[["display",8]],["error",3]]],[11,"step","","Speculatively parses tokens from this parse stream,…",114,[[],["result",6]]],[11,"span","","Returns the `Span` of the next token in the parse stream,…",114,[[],["span",3]]],[11,"cursor","","Provides low-level access to the token representation…",114,[[],["cursor",3]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",null,null],[16,"Output","","",115,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",115,[[["tokenstream",3]],["result",6]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",115,[[["tokenstream",3]],["result",6]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",115,[[],["result",6]]],[3,"Nothing","","An empty syntax tree node that consumes no tokens when…",null,null],[11,"new","","Usually the `ParseStream::error` method will be used…",116,[[["display",8],["span",3]]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",116,[[["display",8],["totokens",8]]]],[11,"span","","The source location of the error.",116,[[],["span",3]]],[11,"to_compile_error","","Render the error as an invocation of `compile_error!`.",116,[[],["tokenstream",3]]],[11,"into_compile_error","","Render the error as an invocation of `compile_error!`.",116,[[],["tokenstream",3]]],[11,"combine","","Add another error message to self such that when…",116,[[["error",3]]]],[4,"AttrStyle","syn","Distinguishes between attributes that decorate an item and…",null,null],[13,"Outer","","",117,null],[13,"Inner","","",117,null],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",118,null],[12,"style","","",118,null],[12,"bracket_token","","",118,null],[12,"path","","",118,null],[12,"tokens","","",118,null],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",null,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",119,null],[13,"List","","A structured list within an attribute, like `derive(Copy,…",119,null],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",119,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",null,null],[12,"path","","",120,null],[12,"paren_token","","",120,null],[12,"nested","","",120,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",null,null],[12,"path","","",121,null],[12,"eq_token","","",121,null],[12,"lit","","",121,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in…",122,null],[13,"Lit","","A Rust literal, like the `\\\"new_name\\\"` in…",122,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",123,null],[12,"vis","","Visibility of the field.",123,null],[12,"ident","","Name of the field, if any.",123,null],[12,"colon_token","","",123,null],[12,"ty","","Type of the field.",123,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point…",124,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",124,null],[13,"Unit","","Unit struct or unit variant such as `None`.",124,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",null,null],[12,"brace_token","","",125,null],[12,"named","","",125,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",null,null],[12,"paren_token","","",126,null],[12,"unnamed","","",126,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",127,null],[12,"ident","","Name of the variant.",127,null],[12,"fields","","Content stored in the variant.",127,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",127,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",128,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",129,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",null,null],[12,"pub_token","","",130,null],[12,"paren_token","","",130,null],[12,"in_token","","",130,null],[12,"path","","",130,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",null,null],[13,"Public","","A public visibility level: `pub`.",131,null],[13,"Crate","","A crate-level visibility: `crate`.",131,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",131,null],[13,"Inherited","","An inherited visibility, which usually means private.",131,null],[3,"Arm","","One arm of a `match` expression: `0...10 => { return true;…",null,null],[12,"attrs","","",132,null],[12,"pat","","",132,null],[12,"guard","","",132,null],[12,"fat_arrow_token","","",132,null],[12,"body","","",132,null],[12,"comma","","",132,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",133,null],[12,"member","","Name or index of the field.",133,null],[12,"colon_token","","The colon in `Struct { x: x }`. If written in shorthand…",133,null],[12,"expr","","Value of the field.",133,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like `T`.",null,null],[13,"Type","","A type argument.",134,null],[13,"Const","","A const expression. Must be inside of a block.",134,null],[3,"Label","","A lifetime labeling a `for`, `while`, or `loop`.",null,null],[12,"name","","",135,null],[12,"colon_token","","",135,null],[3,"MethodTurbofish","","The `::<>` explicit type parameters passed to a method…",null,null],[12,"colon2_token","","",136,null],[12,"lt_token","","",136,null],[12,"args","","",136,null],[12,"gt_token","","",136,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",137,null],[13,"Closed","","Inclusive at the beginning and end.",137,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",138,null],[13,"Assign","","An assignment expression: `a = compute()`.",138,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",138,null],[13,"Async","","An async block: `async { ... }`.",138,null],[13,"Await","","An await expression: `fut.await`.",138,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",138,null],[13,"Block","","A blocked scope: `{ ... }`.",138,null],[13,"Box","","A box expression: `box f`.",138,null],[13,"Break","","A `break`, with an optional label to break and an optional…",138,null],[13,"Call","","A function call expression: `invoke(a, b)`.",138,null],[13,"Cast","","A cast expression: `foo as f64`.",138,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",138,null],[13,"Continue","","A `continue`, with an optional label.",138,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",138,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",138,null],[13,"Group","","An expression contained within invisible delimiters.",138,null],[13,"If","","An `if` expression with an optional `else` block: `if expr…",138,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",138,null],[13,"Let","","A `let` guard: `let Some(x) = opt`.",138,null],[13,"Lit","","A literal in place of an expression: `1`, `\\\"foo\\\"`.",138,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",138,null],[13,"Macro","","A macro invocation expression: `format!(\\\"{}\\\", q)`.",138,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",138,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",138,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",138,null],[13,"Path","","A path like `std::mem::replace` possibly containing…",138,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",138,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",138,null],[13,"Repeat","","An array literal constructed from one repeated element:…",138,null],[13,"Return","","A `return`, with an optional value to be returned.",138,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",138,null],[13,"Try","","A try-expression: `expr?`.",138,null],[13,"TryBlock","","A try block: `try { ... }`.",138,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",138,null],[13,"Type","","A type ascription expression: `foo: f64`.",138,null],[13,"Unary","","A unary operation: `!x`, `*x`.",138,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",138,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",138,null],[13,"While","","A while loop: `while expr { ... }`.",138,null],[13,"Yield","","A yield expression: `yield expr`.",138,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[12,"attrs","","",139,null],[12,"bracket_token","","",139,null],[12,"elems","","",139,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[12,"attrs","","",140,null],[12,"left","","",140,null],[12,"eq_token","","",140,null],[12,"right","","",140,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[12,"attrs","","",141,null],[12,"left","","",141,null],[12,"op","","",141,null],[12,"right","","",141,null],[3,"ExprAsync","","An async block: `async { ... }`.",null,null],[12,"attrs","","",142,null],[12,"async_token","","",142,null],[12,"capture","","",142,null],[12,"block","","",142,null],[3,"ExprAwait","","An await expression: `fut.await`.",null,null],[12,"attrs","","",143,null],[12,"base","","",143,null],[12,"dot_token","","",143,null],[12,"await_token","","",143,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",144,null],[12,"left","","",144,null],[12,"op","","",144,null],[12,"right","","",144,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[12,"attrs","","",145,null],[12,"label","","",145,null],[12,"block","","",145,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[12,"attrs","","",146,null],[12,"box_token","","",146,null],[12,"expr","","",146,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",null,null],[12,"attrs","","",147,null],[12,"break_token","","",147,null],[12,"label","","",147,null],[12,"expr","","",147,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",148,null],[12,"func","","",148,null],[12,"paren_token","","",148,null],[12,"args","","",148,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",149,null],[12,"expr","","",149,null],[12,"as_token","","",149,null],[12,"ty","","",149,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[12,"attrs","","",150,null],[12,"asyncness","","",150,null],[12,"movability","","",150,null],[12,"capture","","",150,null],[12,"or1_token","","",150,null],[12,"inputs","","",150,null],[12,"or2_token","","",150,null],[12,"output","","",150,null],[12,"body","","",150,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[12,"attrs","","",151,null],[12,"continue_token","","",151,null],[12,"label","","",151,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",null,null],[12,"attrs","","",152,null],[12,"base","","",152,null],[12,"dot_token","","",152,null],[12,"member","","",152,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[12,"attrs","","",153,null],[12,"label","","",153,null],[12,"for_token","","",153,null],[12,"pat","","",153,null],[12,"in_token","","",153,null],[12,"expr","","",153,null],[12,"body","","",153,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",154,null],[12,"group_token","","",154,null],[12,"expr","","",154,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",null,null],[12,"attrs","","",155,null],[12,"if_token","","",155,null],[12,"cond","","",155,null],[12,"then_branch","","",155,null],[12,"else_branch","","",155,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",156,null],[12,"expr","","",156,null],[12,"bracket_token","","",156,null],[12,"index","","",156,null],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",null,null],[12,"attrs","","",157,null],[12,"let_token","","",157,null],[12,"pat","","",157,null],[12,"eq_token","","",157,null],[12,"expr","","",157,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\\\"foo\\\"`.",null,null],[12,"attrs","","",158,null],[12,"lit","","",158,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[12,"attrs","","",159,null],[12,"label","","",159,null],[12,"loop_token","","",159,null],[12,"body","","",159,null],[3,"ExprMacro","","A macro invocation expression: `format!(\\\"{}\\\", q)`.",null,null],[12,"attrs","","",160,null],[12,"mac","","",160,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",null,null],[12,"attrs","","",161,null],[12,"match_token","","",161,null],[12,"expr","","",161,null],[12,"brace_token","","",161,null],[12,"arms","","",161,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[12,"attrs","","",162,null],[12,"receiver","","",162,null],[12,"dot_token","","",162,null],[12,"method","","",162,null],[12,"turbofish","","",162,null],[12,"paren_token","","",162,null],[12,"args","","",162,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",163,null],[12,"paren_token","","",163,null],[12,"expr","","",163,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",null,null],[12,"attrs","","",164,null],[12,"qself","","",164,null],[12,"path","","",164,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[12,"attrs","","",165,null],[12,"from","","",165,null],[12,"limits","","",165,null],[12,"to","","",165,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[12,"attrs","","",166,null],[12,"and_token","","",166,null],[12,"raw","","",166,null],[12,"mutability","","",166,null],[12,"expr","","",166,null],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",null,null],[12,"attrs","","",167,null],[12,"bracket_token","","",167,null],[12,"expr","","",167,null],[12,"semi_token","","",167,null],[12,"len","","",167,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[12,"attrs","","",168,null],[12,"return_token","","",168,null],[12,"expr","","",168,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[12,"attrs","","",169,null],[12,"path","","",169,null],[12,"brace_token","","",169,null],[12,"fields","","",169,null],[12,"dot2_token","","",169,null],[12,"rest","","",169,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[12,"attrs","","",170,null],[12,"expr","","",170,null],[12,"question_token","","",170,null],[3,"ExprTryBlock","","A try block: `try { ... }`.",null,null],[12,"attrs","","",171,null],[12,"try_token","","",171,null],[12,"block","","",171,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[12,"attrs","","",172,null],[12,"paren_token","","",172,null],[12,"elems","","",172,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[12,"attrs","","",173,null],[12,"expr","","",173,null],[12,"colon_token","","",173,null],[12,"ty","","",173,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",174,null],[12,"op","","",174,null],[12,"expr","","",174,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[12,"attrs","","",175,null],[12,"unsafe_token","","",175,null],[12,"block","","",175,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[12,"attrs","","",176,null],[12,"label","","",176,null],[12,"while_token","","",176,null],[12,"cond","","",176,null],[12,"body","","",176,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[12,"attrs","","",177,null],[12,"yield_token","","",177,null],[12,"expr","","",177,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",178,null],[12,"span","","",178,null],[4,"Member","","A struct or tuple struct field accessed in a struct…",null,null],[13,"Named","","A named field like `self.x`.",179,null],[13,"Unnamed","","An unnamed field like `self.0`.",179,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<\'a, \'b, \'c>`.",null,null],[12,"for_token","","",180,null],[12,"lt_token","","",180,null],[12,"lifetimes","","",180,null],[12,"gt_token","","",180,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",181,null],[12,"const_token","","",181,null],[12,"ident","","",181,null],[12,"colon_token","","",181,null],[12,"ty","","",181,null],[12,"eq_token","","",181,null],[12,"default","","",181,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",182,null],[13,"Lifetime","","A lifetime definition: `\'a: \'b + \'c + \'d`.",182,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",182,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",null,null],[12,"lt_token","","",183,null],[12,"params","","",183,null],[12,"gt_token","","",183,null],[12,"where_clause","","",183,null],[3,"LifetimeDef","","A lifetime definition: `\'a: \'b + \'c + \'d`.",null,null],[12,"attrs","","",184,null],[12,"lifetime","","",184,null],[12,"colon_token","","",184,null],[12,"bounds","","",184,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",185,null],[12,"eq_token","","",185,null],[12,"rhs_ty","","",185,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `\'a: \'b + \'c`.",null,null],[12,"lifetime","","",186,null],[12,"colon_token","","",186,null],[12,"bounds","","",186,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<\'c> Foo<\'c>:…",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",187,null],[12,"bounded_ty","","The type being bounded",187,null],[12,"colon_token","","",187,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+\'static`)",187,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",188,null],[12,"modifier","","",188,null],[12,"lifetimes","","The `for<\'a>` in `for<\'a> Foo<&\'a T>`",188,null],[12,"path","","The `Foo<&\'a T>` in `for<\'a> Foo<&\'a T>`",188,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",null,null],[13,"None","","",189,null],[13,"Maybe","","",189,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",190,null],[12,"ident","","",190,null],[12,"colon_token","","",190,null],[12,"bounds","","",190,null],[12,"eq_token","","",190,null],[12,"default","","",190,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",191,null],[13,"Lifetime","","",191,null],[3,"WhereClause","","A `where` clause in a definition: `where T:…",null,null],[12,"where_token","","",192,null],[12,"predicates","","",192,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",null,null],[13,"Type","","A type predicate in a `where` clause: `for<\'c> Foo<\'c>:…",193,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `\'a: \'b + \'c`.",193,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",193,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn…",null,null],[13,"Receiver","","The `self` argument of an associated method, whether taken…",194,null],[13,"Typed","","A function argument accepted by pattern and type.",194,null],[4,"ForeignItem","","An item within an `extern` block.",null,null],[13,"Fn","","A foreign function in an `extern` block.",195,null],[13,"Static","","A foreign static item in an `extern` block: `static ext:…",195,null],[13,"Type","","A foreign type in an `extern` block: `type void`.",195,null],[13,"Macro","","A macro invocation within an extern block.",195,null],[13,"Verbatim","","Tokens in an `extern` block not interpreted by Syn.",195,null],[3,"ForeignItemFn","","A foreign function in an `extern` block.",null,null],[12,"attrs","","",196,null],[12,"vis","","",196,null],[12,"sig","","",196,null],[12,"semi_token","","",196,null],[3,"ForeignItemMacro","","A macro invocation within an extern block.",null,null],[12,"attrs","","",197,null],[12,"mac","","",197,null],[12,"semi_token","","",197,null],[3,"ForeignItemStatic","","A foreign static item in an `extern` block: `static ext:…",null,null],[12,"attrs","","",198,null],[12,"vis","","",198,null],[12,"static_token","","",198,null],[12,"mutability","","",198,null],[12,"ident","","",198,null],[12,"colon_token","","",198,null],[12,"ty","","",198,null],[12,"semi_token","","",198,null],[3,"ForeignItemType","","A foreign type in an `extern` block: `type void`.",null,null],[12,"attrs","","",199,null],[12,"vis","","",199,null],[12,"type_token","","",199,null],[12,"ident","","",199,null],[12,"semi_token","","",199,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",200,null],[13,"Method","","A method within an impl block.",200,null],[13,"Type","","An associated type within an impl block.",200,null],[13,"Macro","","A macro invocation within an impl block.",200,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",200,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",201,null],[12,"vis","","",201,null],[12,"defaultness","","",201,null],[12,"const_token","","",201,null],[12,"ident","","",201,null],[12,"colon_token","","",201,null],[12,"ty","","",201,null],[12,"eq_token","","",201,null],[12,"expr","","",201,null],[12,"semi_token","","",201,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",202,null],[12,"mac","","",202,null],[12,"semi_token","","",202,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",203,null],[12,"vis","","",203,null],[12,"defaultness","","",203,null],[12,"sig","","",203,null],[12,"block","","",203,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",204,null],[12,"vis","","",204,null],[12,"defaultness","","",204,null],[12,"type_token","","",204,null],[12,"ident","","",204,null],[12,"generics","","",204,null],[12,"eq_token","","",204,null],[12,"ty","","",204,null],[12,"semi_token","","",204,null],[4,"Item","","Things that can appear directly inside of a module or scope.",null,null],[13,"Const","","A constant item: `const MAX: u16 = 65535`.",205,null],[13,"Enum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",205,null],[13,"ExternCrate","","An `extern crate` item: `extern crate serde`.",205,null],[13,"Fn","","A free-standing function: `fn process(n: usize) ->…",205,null],[13,"ForeignMod","","A block of foreign items: `extern \\\"C\\\" { ... }`.",205,null],[13,"Impl","","An impl block providing trait or associated items:…",205,null],[13,"Macro","","A macro invocation, which includes `macro_rules!`…",205,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the `macro`…",205,null],[13,"Mod","","A module or module declaration: `mod m` or `mod m { ... }`.",205,null],[13,"Static","","A static item: `static BIKE: Shed = Shed(42)`.",205,null],[13,"Struct","","A struct definition: `struct Foo<A> { x: A }`.",205,null],[13,"Trait","","A trait definition: `pub trait Iterator { ... }`.",205,null],[13,"TraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",205,null],[13,"Type","","A type alias: `type Result<T> = std::result::Result<T,…",205,null],[13,"Union","","A union definition: `union Foo<A, B> { x: A, y: B }`.",205,null],[13,"Use","","A use declaration: `use std::collections::HashMap`.",205,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",205,null],[3,"ItemConst","","A constant item: `const MAX: u16 = 65535`.",null,null],[12,"attrs","","",206,null],[12,"vis","","",206,null],[12,"const_token","","",206,null],[12,"ident","","",206,null],[12,"colon_token","","",206,null],[12,"ty","","",206,null],[12,"eq_token","","",206,null],[12,"expr","","",206,null],[12,"semi_token","","",206,null],[3,"ItemEnum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",null,null],[12,"attrs","","",207,null],[12,"vis","","",207,null],[12,"enum_token","","",207,null],[12,"ident","","",207,null],[12,"generics","","",207,null],[12,"brace_token","","",207,null],[12,"variants","","",207,null],[3,"ItemExternCrate","","An `extern crate` item: `extern crate serde`.",null,null],[12,"attrs","","",208,null],[12,"vis","","",208,null],[12,"extern_token","","",208,null],[12,"crate_token","","",208,null],[12,"ident","","",208,null],[12,"rename","","",208,null],[12,"semi_token","","",208,null],[3,"ItemFn","","A free-standing function: `fn process(n: usize) ->…",null,null],[12,"attrs","","",209,null],[12,"vis","","",209,null],[12,"sig","","",209,null],[12,"block","","",209,null],[3,"ItemForeignMod","","A block of foreign items: `extern \\\"C\\\" { ... }`.",null,null],[12,"attrs","","",210,null],[12,"abi","","",210,null],[12,"brace_token","","",210,null],[12,"items","","",210,null],[3,"ItemImpl","","An impl block providing trait or associated items:…",null,null],[12,"attrs","","",211,null],[12,"defaultness","","",211,null],[12,"unsafety","","",211,null],[12,"impl_token","","",211,null],[12,"generics","","",211,null],[12,"trait_","","Trait this impl implements.",211,null],[12,"self_ty","","The Self type of the impl.",211,null],[12,"brace_token","","",211,null],[12,"items","","",211,null],[3,"ItemMacro","","A macro invocation, which includes `macro_rules!`…",null,null],[12,"attrs","","",212,null],[12,"ident","","The `example` in `macro_rules! example { ... }`.",212,null],[12,"mac","","",212,null],[12,"semi_token","","",212,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the `macro`…",null,null],[12,"attrs","","",213,null],[12,"vis","","",213,null],[12,"macro_token","","",213,null],[12,"ident","","",213,null],[12,"rules","","",213,null],[3,"ItemMod","","A module or module declaration: `mod m` or `mod m { ... }`.",null,null],[12,"attrs","","",214,null],[12,"vis","","",214,null],[12,"mod_token","","",214,null],[12,"ident","","",214,null],[12,"content","","",214,null],[12,"semi","","",214,null],[3,"ItemStatic","","A static item: `static BIKE: Shed = Shed(42)`.",null,null],[12,"attrs","","",215,null],[12,"vis","","",215,null],[12,"static_token","","",215,null],[12,"mutability","","",215,null],[12,"ident","","",215,null],[12,"colon_token","","",215,null],[12,"ty","","",215,null],[12,"eq_token","","",215,null],[12,"expr","","",215,null],[12,"semi_token","","",215,null],[3,"ItemStruct","","A struct definition: `struct Foo<A> { x: A }`.",null,null],[12,"attrs","","",216,null],[12,"vis","","",216,null],[12,"struct_token","","",216,null],[12,"ident","","",216,null],[12,"generics","","",216,null],[12,"fields","","",216,null],[12,"semi_token","","",216,null],[3,"ItemTrait","","A trait definition: `pub trait Iterator { ... }`.",null,null],[12,"attrs","","",217,null],[12,"vis","","",217,null],[12,"unsafety","","",217,null],[12,"auto_token","","",217,null],[12,"trait_token","","",217,null],[12,"ident","","",217,null],[12,"generics","","",217,null],[12,"colon_token","","",217,null],[12,"supertraits","","",217,null],[12,"brace_token","","",217,null],[12,"items","","",217,null],[3,"ItemTraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",null,null],[12,"attrs","","",218,null],[12,"vis","","",218,null],[12,"trait_token","","",218,null],[12,"ident","","",218,null],[12,"generics","","",218,null],[12,"eq_token","","",218,null],[12,"bounds","","",218,null],[12,"semi_token","","",218,null],[3,"ItemType","","A type alias: `type Result<T> = std::result::Result<T,…",null,null],[12,"attrs","","",219,null],[12,"vis","","",219,null],[12,"type_token","","",219,null],[12,"ident","","",219,null],[12,"generics","","",219,null],[12,"eq_token","","",219,null],[12,"ty","","",219,null],[12,"semi_token","","",219,null],[3,"ItemUnion","","A union definition: `union Foo<A, B> { x: A, y: B }`.",null,null],[12,"attrs","","",220,null],[12,"vis","","",220,null],[12,"union_token","","",220,null],[12,"ident","","",220,null],[12,"generics","","",220,null],[12,"fields","","",220,null],[3,"ItemUse","","A use declaration: `use std::collections::HashMap`.",null,null],[12,"attrs","","",221,null],[12,"vis","","",221,null],[12,"use_token","","",221,null],[12,"leading_colon","","",221,null],[12,"tree","","",221,null],[12,"semi_token","","",221,null],[3,"Receiver","","The `self` argument of an associated method, whether taken…",null,null],[12,"attrs","","",222,null],[12,"reference","","",222,null],[12,"mutability","","",222,null],[12,"self_token","","",222,null],[3,"Signature","","A function signature in a trait or implementation: `unsafe…",null,null],[12,"constness","","",223,null],[12,"asyncness","","",223,null],[12,"unsafety","","",223,null],[12,"abi","","",223,null],[12,"fn_token","","",223,null],[12,"ident","","",223,null],[12,"generics","","",223,null],[12,"paren_token","","",223,null],[12,"inputs","","",223,null],[12,"variadic","","",223,null],[12,"output","","",223,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",224,null],[13,"Method","","A trait method within the definition of a trait.",224,null],[13,"Type","","An associated type within the definition of a trait.",224,null],[13,"Macro","","A macro invocation within the definition of a trait.",224,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted by…",224,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",225,null],[12,"const_token","","",225,null],[12,"ident","","",225,null],[12,"colon_token","","",225,null],[12,"ty","","",225,null],[12,"default","","",225,null],[12,"semi_token","","",225,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",226,null],[12,"mac","","",226,null],[12,"semi_token","","",226,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",227,null],[12,"sig","","",227,null],[12,"default","","",227,null],[12,"semi_token","","",227,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",228,null],[12,"type_token","","",228,null],[12,"ident","","",228,null],[12,"generics","","",228,null],[12,"colon_token","","",228,null],[12,"bounds","","",228,null],[12,"default","","",228,null],[12,"semi_token","","",228,null],[3,"UseGlob","","A glob import in a `use` item: `*`.",null,null],[12,"star_token","","",229,null],[3,"UseGroup","","A braced group of imports in a `use` item: `{A, B, C}`.",null,null],[12,"brace_token","","",230,null],[12,"items","","",230,null],[3,"UseName","","An identifier imported by a `use` item: `HashMap`.",null,null],[12,"ident","","",231,null],[3,"UsePath","","A path prefix of imports in a `use` item: `std::...`.",null,null],[12,"ident","","",232,null],[12,"colon2_token","","",232,null],[12,"tree","","",232,null],[3,"UseRename","","An renamed identifier imported by a `use` item: `HashMap…",null,null],[12,"ident","","",233,null],[12,"as_token","","",233,null],[12,"rename","","",233,null],[4,"UseTree","","A suffix of an import tree in a `use` item: `Type as…",null,null],[13,"Path","","A path prefix of imports in a `use` item: `std::...`.",234,null],[13,"Name","","An identifier imported by a `use` item: `HashMap`.",234,null],[13,"Rename","","An renamed identifier imported by a `use` item: `HashMap…",234,null],[13,"Glob","","A glob import in a `use` item: `*`.",234,null],[13,"Group","","A braced group of imports in a `use` item: `{A, B, C}`.",234,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",235,null],[12,"attrs","","",235,null],[12,"items","","",235,null],[3,"Lifetime","","A Rust lifetime: `\'a`.",null,null],[12,"apostrophe","","",236,null],[12,"ident","","",236,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\\\"foo\\\"`.",237,null],[13,"ByteStr","","A byte string literal: `b\\\"foo\\\"`.",237,null],[13,"Byte","","A byte literal: `b\'f\'`.",237,null],[13,"Char","","A character literal: `\'a\'`.",237,null],[13,"Int","","An integer literal: `1` or `1u16`.",237,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",237,null],[13,"Bool","","A boolean literal: `true` or `false`.",237,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",237,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",238,null],[12,"span","","",238,null],[3,"LitByte","","A byte literal: `b\'f\'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\\\"foo\\\"`.",null,null],[3,"LitChar","","A character literal: `\'a\'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\\\"foo\\\"`.",null,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",null,null],[13,"Cooked","","An ordinary string like `\\\"data\\\"`.",239,null],[13,"Raw","","A raw string like `r##\\\"data\\\"##`.",239,null],[3,"Macro","","A macro invocation: `println!(\\\"{}\\\", mac)`.",null,null],[12,"path","","",240,null],[12,"bang_token","","",240,null],[12,"delimiter","","",240,null],[12,"tokens","","",240,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",null,null],[13,"Paren","","",241,null],[13,"Brace","","",241,null],[13,"Bracket","","",241,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",242,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",242,null],[13,"Union","","An untagged union input to a `proc_macro_derive` macro.",242,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",243,null],[12,"brace_token","","",243,null],[12,"variants","","",243,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",244,null],[12,"fields","","",244,null],[12,"semi_token","","",244,null],[3,"DataUnion","","An untagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",245,null],[12,"fields","","",245,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",246,null],[12,"vis","","Visibility of the struct or enum.",246,null],[12,"ident","","Name of the struct or enum.",246,null],[12,"generics","","Generics required to complete the definition.",246,null],[12,"data","","Data within the struct or enum.",246,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",247,null],[13,"Sub","","The `-` operator (subtraction)",247,null],[13,"Mul","","The `*` operator (multiplication)",247,null],[13,"Div","","The `/` operator (division)",247,null],[13,"Rem","","The `%` operator (modulus)",247,null],[13,"And","","The `&&` operator (logical and)",247,null],[13,"Or","","The `||` operator (logical or)",247,null],[13,"BitXor","","The `^` operator (bitwise xor)",247,null],[13,"BitAnd","","The `&` operator (bitwise and)",247,null],[13,"BitOr","","The `|` operator (bitwise or)",247,null],[13,"Shl","","The `<<` operator (shift left)",247,null],[13,"Shr","","The `>>` operator (shift right)",247,null],[13,"Eq","","The `==` operator (equality)",247,null],[13,"Lt","","The `<` operator (less than)",247,null],[13,"Le","","The `<=` operator (less than or equal to)",247,null],[13,"Ne","","The `!=` operator (not equal to)",247,null],[13,"Ge","","The `>=` operator (greater than or equal to)",247,null],[13,"Gt","","The `>` operator (greater than)",247,null],[13,"AddEq","","The `+=` operator",247,null],[13,"SubEq","","The `-=` operator",247,null],[13,"MulEq","","The `*=` operator",247,null],[13,"DivEq","","The `/=` operator",247,null],[13,"RemEq","","The `%=` operator",247,null],[13,"BitXorEq","","The `^=` operator",247,null],[13,"BitAndEq","","The `&=` operator",247,null],[13,"BitOrEq","","The `|=` operator",247,null],[13,"ShlEq","","The `<<=` operator",247,null],[13,"ShrEq","","The `>>=` operator",247,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",248,null],[13,"Not","","The `!` operator for logical inversion",248,null],[13,"Neg","","The `-` operator for negation",248,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",249,null],[12,"stmts","","Statements in a block",249,null],[3,"Local","","A local `let` binding: `let x: u64 = s.parse()?`.",null,null],[12,"attrs","","",250,null],[12,"let_token","","",250,null],[12,"pat","","",250,null],[12,"init","","",250,null],[12,"semi_token","","",250,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",251,null],[13,"Item","","An item definition.",251,null],[13,"Expr","","Expr without trailing semicolon.",251,null],[13,"Semi","","Expression with trailing semicolon.",251,null],[3,"Abi","","The binary interface of a function: `extern \\\"C\\\"`.",null,null],[12,"extern_token","","",252,null],[12,"name","","",252,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",null,null],[12,"attrs","","",253,null],[12,"name","","",253,null],[12,"ty","","",253,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",254,null],[13,"Type","","A particular type is returned.",254,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: `[T; n]`.",255,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",255,null],[13,"Group","","A type contained within invisible delimiters.",255,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",255,null],[13,"Infer","","Indication that a type should be inferred by the compiler:…",255,null],[13,"Macro","","A macro in the type position.",255,null],[13,"Never","","The never type: `!`.",255,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",255,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",255,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",255,null],[13,"Reference","","A reference type: `&\'a T` or `&\'a mut T`.",255,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",255,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",255,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",255,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",255,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",256,null],[12,"elem","","",256,null],[12,"semi_token","","",256,null],[12,"len","","",256,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"lifetimes","","",257,null],[12,"unsafety","","",257,null],[12,"abi","","",257,null],[12,"fn_token","","",257,null],[12,"paren_token","","",257,null],[12,"inputs","","",257,null],[12,"variadic","","",257,null],[12,"output","","",257,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",258,null],[12,"elem","","",258,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",null,null],[12,"impl_token","","",259,null],[12,"bounds","","",259,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",null,null],[12,"underscore_token","","",260,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",261,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",262,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",263,null],[12,"elem","","",263,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",null,null],[12,"qself","","",264,null],[12,"path","","",264,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",265,null],[12,"const_token","","",265,null],[12,"mutability","","",265,null],[12,"elem","","",265,null],[3,"TypeReference","","A reference type: `&\'a T` or `&\'a mut T`.",null,null],[12,"and_token","","",266,null],[12,"lifetime","","",266,null],[12,"mutability","","",266,null],[12,"elem","","",266,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",267,null],[12,"elem","","",267,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",null,null],[12,"dyn_token","","",268,null],[12,"bounds","","",268,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",269,null],[12,"elems","","",269,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",270,null],[12,"dots","","",270,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",271,null],[12,"member","","",271,null],[12,"colon_token","","",271,null],[12,"pat","","",271,null],[4,"Pat","","A pattern in a local binding, function signature, match…",null,null],[13,"Box","","A box pattern: `box v`.",272,null],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @…",272,null],[13,"Lit","","A literal pattern: `0`.",272,null],[13,"Macro","","A macro in pattern position.",272,null],[13,"Or","","A pattern that matches any one of a set of cases.",272,null],[13,"Path","","A path pattern like `Color::Red`, optionally qualified…",272,null],[13,"Range","","A range pattern: `1..=2`.",272,null],[13,"Reference","","A reference pattern: `&mut var`.",272,null],[13,"Rest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",272,null],[13,"Slice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",272,null],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",272,null],[13,"Tuple","","A tuple pattern: `(a, b)`.",272,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",272,null],[13,"Type","","A type ascription pattern: `foo: f64`.",272,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",272,null],[13,"Wild","","A pattern that matches any value: `_`.",272,null],[3,"PatBox","","A box pattern: `box v`.",null,null],[12,"attrs","","",273,null],[12,"box_token","","",273,null],[12,"pat","","",273,null],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @…",null,null],[12,"attrs","","",274,null],[12,"by_ref","","",274,null],[12,"mutability","","",274,null],[12,"ident","","",274,null],[12,"subpat","","",274,null],[3,"PatLit","","A literal pattern: `0`.",null,null],[12,"attrs","","",275,null],[12,"expr","","",275,null],[3,"PatMacro","","A macro in pattern position.",null,null],[12,"attrs","","",276,null],[12,"mac","","",276,null],[3,"PatOr","","A pattern that matches any one of a set of cases.",null,null],[12,"attrs","","",277,null],[12,"leading_vert","","",277,null],[12,"cases","","",277,null],[3,"PatPath","","A path pattern like `Color::Red`, optionally qualified…",null,null],[12,"attrs","","",278,null],[12,"qself","","",278,null],[12,"path","","",278,null],[3,"PatRange","","A range pattern: `1..=2`.",null,null],[12,"attrs","","",279,null],[12,"lo","","",279,null],[12,"limits","","",279,null],[12,"hi","","",279,null],[3,"PatReference","","A reference pattern: `&mut var`.",null,null],[12,"attrs","","",280,null],[12,"and_token","","",280,null],[12,"mutability","","",280,null],[12,"pat","","",280,null],[3,"PatRest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",null,null],[12,"attrs","","",281,null],[12,"dot2_token","","",281,null],[3,"PatSlice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",null,null],[12,"attrs","","",282,null],[12,"bracket_token","","",282,null],[12,"elems","","",282,null],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",null,null],[12,"attrs","","",283,null],[12,"path","","",283,null],[12,"brace_token","","",283,null],[12,"fields","","",283,null],[12,"dot2_token","","",283,null],[3,"PatTuple","","A tuple pattern: `(a, b)`.",null,null],[12,"attrs","","",284,null],[12,"paren_token","","",284,null],[12,"elems","","",284,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",null,null],[12,"attrs","","",285,null],[12,"path","","",285,null],[12,"pat","","",285,null],[3,"PatType","","A type ascription pattern: `foo: f64`.",null,null],[12,"attrs","","",286,null],[12,"pat","","",286,null],[12,"colon_token","","",286,null],[12,"ty","","",286,null],[3,"PatWild","","A pattern that matches any value: `_`.",null,null],[12,"attrs","","",287,null],[12,"underscore_token","","",287,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",null,null],[12,"colon2_token","","",288,null],[12,"lt_token","","",288,null],[12,"args","","",288,null],[12,"gt_token","","",288,null],[3,"Binding","","A binding (equality constraint) on an associated type:…",null,null],[12,"ident","","",289,null],[12,"eq_token","","",289,null],[12,"ty","","",289,null],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",null,null],[12,"ident","","",290,null],[12,"colon_token","","",290,null],[12,"bounds","","",290,null],[4,"GenericArgument","","An individual generic argument, like `\'a`, `T`, or `Item =…",null,null],[13,"Lifetime","","A lifetime argument.",291,null],[13,"Type","","A type argument.",291,null],[13,"Binding","","A binding (equality constraint) on an associated type: the…",291,null],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",291,null],[13,"Const","","A const expression. Must be inside of a block.",291,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",null,null],[12,"paren_token","","",292,null],[12,"inputs","","`(A, B)`",292,null],[12,"output","","`C`",292,null],[3,"Path","","A path at which a named item is exported (e.g.…",null,null],[12,"leading_colon","","",293,null],[12,"segments","","",293,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",null,null],[13,"None","","",294,null],[13,"AngleBracketed","","The `<\'a, T>` in `std::slice::iter<\'a, T>`.",294,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",294,null],[3,"PathSegment","","A segment of a path together with any path arguments on…",null,null],[12,"ident","","",295,null],[12,"arguments","","",295,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",null,null],[12,"lt_token","","",296,null],[12,"ty","","",296,null],[12,"position","","",296,null],[12,"as_token","","",296,null],[12,"gt_token","","",296,null],[3,"Error","","Error returned when a Syn parser cannot parse the input…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",null,[[],[["result",6],["parse",8]]]],[5,"parse_file","","Parse the content of a file of Rust code.",null,[[],[["result",6],["file",3]]]],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",null,null],[14,"braced","","Parse a set of curly braces and expose their content to…",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content to…",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type…",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the `quote!`…",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",null,null],[11,"span","","",297,[[],["span",3]]],[11,"from","","",297,[[]]],[11,"into","","",297,[[]]],[11,"to_owned","","",297,[[]]],[11,"clone_into","","",297,[[]]],[11,"to_string","","",297,[[],["string",3]]],[11,"borrow","","",297,[[]]],[11,"borrow_mut","","",297,[[]]],[11,"try_from","","",297,[[],["result",4]]],[11,"try_into","","",297,[[],["result",4]]],[11,"type_id","","",297,[[],["typeid",3]]],[11,"span","syn::token","",0,[[],["span",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"span","","",1,[[],["span",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"span","","",2,[[],["span",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"span","","",3,[[],["span",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"span","","",4,[[],["span",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"span","","",5,[[],["span",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"span","","",6,[[],["span",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"span","","",7,[[],["span",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"span","","",8,[[],["span",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"span","","",9,[[],["span",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"span","","",10,[[],["span",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"span","","",11,[[],["span",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"span","","",12,[[],["span",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"span","","",13,[[],["span",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"span","","",14,[[],["span",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"span","","",15,[[],["span",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"span","","",16,[[],["span",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"span","","",17,[[],["span",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"span","","",18,[[],["span",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"span","","",19,[[],["span",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"span","","",20,[[],["span",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"span","","",21,[[],["span",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"span","","",22,[[],["span",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"span","","",23,[[],["span",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"span","","",24,[[],["span",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"span","","",25,[[],["span",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"span","","",26,[[],["span",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"span","","",27,[[],["span",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"span","","",28,[[],["span",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"span","","",29,[[],["span",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"span","","",30,[[],["span",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"span","","",31,[[],["span",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"span","","",32,[[],["span",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"span","","",33,[[],["span",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"span","","",34,[[],["span",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"span","","",35,[[],["span",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"span","","",36,[[],["span",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"span","","",37,[[],["span",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"span","","",38,[[],["span",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"span","","",39,[[],["span",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"span","","",40,[[],["span",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"span","","",41,[[],["span",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"span","","",42,[[],["span",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"span","","",43,[[],["span",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"span","","",44,[[],["span",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"span","","",45,[[],["span",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"span","","",46,[[],["span",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"span","","",47,[[],["span",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"span","","",48,[[],["span",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"span","","",49,[[],["span",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"span","","",50,[[],["span",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"span","","",51,[[],["span",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"span","","",52,[[],["span",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"span","","",53,[[],["span",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"span","","",54,[[],["span",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"span","","",55,[[],["span",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"span","","",56,[[],["span",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"span","","",57,[[],["span",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"span","","",58,[[],["span",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"span","","",59,[[],["span",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"span","","",60,[[],["span",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"span","","",61,[[],["span",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"span","","",62,[[],["span",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"span","","",63,[[],["span",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"span","","",64,[[],["span",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"span","","",65,[[],["span",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"span","","",66,[[],["span",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"span","","",67,[[],["span",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"span","","",68,[[],["span",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"span","","",69,[[],["span",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"span","","",70,[[],["span",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"span","","",71,[[],["span",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"span","","",72,[[],["span",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"span","","",73,[[],["span",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"span","","",74,[[],["span",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"span","","",75,[[],["span",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"span","","",76,[[],["span",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"span","","",77,[[],["span",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"span","","",78,[[],["span",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"span","","",79,[[],["span",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"span","","",80,[[],["span",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"span","","",81,[[],["span",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"span","","",82,[[],["span",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"span","","",83,[[],["span",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"span","","",84,[[],["span",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"span","","",85,[[],["span",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"span","","",86,[[],["span",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"span","","",87,[[],["span",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"span","","",88,[[],["span",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"span","","",89,[[],["span",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"span","","",90,[[],["span",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"span","","",91,[[],["span",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"span","","",92,[[],["span",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"span","","",93,[[],["span",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"span","","",94,[[],["span",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"span","","",95,[[],["span",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"span","","",96,[[],["span",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"span","","",97,[[],["span",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"span","","",98,[[],["span",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"span","syn","",118,[[],["span",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"span","","",119,[[],["span",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"span","","",120,[[],["span",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"span","","",121,[[],["span",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"span","","",122,[[],["span",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"span","","",127,[[],["span",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"span","","",124,[[],["span",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"span","","",125,[[],["span",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"span","","",126,[[],["span",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"span","","",123,[[],["span",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"span","","",131,[[],["span",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"span","","",129,[[],["span",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"span","","",128,[[],["span",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"span","","",130,[[],["span",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"span","","",138,[[],["span",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"span","","",139,[[],["span",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"span","","",140,[[],["span",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"span","","",141,[[],["span",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"span","","",142,[[],["span",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"span","","",143,[[],["span",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"span","","",144,[[],["span",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"span","","",145,[[],["span",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"span","","",146,[[],["span",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"span","","",147,[[],["span",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"span","","",148,[[],["span",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"span","","",149,[[],["span",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"span","","",150,[[],["span",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"span","","",151,[[],["span",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"span","","",152,[[],["span",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"span","","",153,[[],["span",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"span","","",154,[[],["span",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"span","","",155,[[],["span",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"span","","",156,[[],["span",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"span","","",157,[[],["span",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"span","","",158,[[],["span",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"span","","",159,[[],["span",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"span","","",160,[[],["span",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"span","","",161,[[],["span",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"span","","",162,[[],["span",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"span","","",163,[[],["span",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"span","","",164,[[],["span",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"span","","",165,[[],["span",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"span","","",166,[[],["span",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"span","","",167,[[],["span",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"span","","",168,[[],["span",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"span","","",169,[[],["span",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"span","","",170,[[],["span",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"span","","",171,[[],["span",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"span","","",172,[[],["span",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"span","","",173,[[],["span",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"span","","",174,[[],["span",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"span","","",175,[[],["span",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"span","","",176,[[],["span",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"span","","",177,[[],["span",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"span","","",179,[[],["span",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"span","","",178,[[],["span",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"span","","",136,[[],["span",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"span","","",134,[[],["span",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"span","","",133,[[],["span",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"span","","",135,[[],["span",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"span","","",132,[[],["span",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"span","","",183,[[],["span",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"span","","",182,[[],["span",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"span","","",190,[[],["span",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"span","","",184,[[],["span",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"span","","",181,[[],["span",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"span","","",298,[[],["span",3]]],[11,"from","","",298,[[]]],[11,"into","","",298,[[]]],[11,"to_owned","","",298,[[]]],[11,"clone_into","","",298,[[]]],[11,"borrow","","",298,[[]]],[11,"borrow_mut","","",298,[[]]],[11,"try_from","","",298,[[],["result",4]]],[11,"try_into","","",298,[[],["result",4]]],[11,"type_id","","",298,[[],["typeid",3]]],[11,"span","","",299,[[],["span",3]]],[11,"from","","",299,[[]]],[11,"into","","",299,[[]]],[11,"to_owned","","",299,[[]]],[11,"clone_into","","",299,[[]]],[11,"borrow","","",299,[[]]],[11,"borrow_mut","","",299,[[]]],[11,"try_from","","",299,[[],["result",4]]],[11,"try_into","","",299,[[],["result",4]]],[11,"type_id","","",299,[[],["typeid",3]]],[11,"span","","",300,[[],["span",3]]],[11,"from","","",300,[[]]],[11,"into","","",300,[[]]],[11,"to_owned","","",300,[[]]],[11,"clone_into","","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"span","","",180,[[],["span",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"span","","",191,[[],["span",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"span","","",188,[[],["span",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"span","","",189,[[],["span",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"span","","",192,[[],["span",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"span","","",193,[[],["span",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"span","","",187,[[],["span",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"span","","",186,[[],["span",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"span","","",185,[[],["span",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"span","","",205,[[],["span",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"span","","",206,[[],["span",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"span","","",207,[[],["span",3]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"span","","",208,[[],["span",3]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"span","","",209,[[],["span",3]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"span","","",210,[[],["span",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"span","","",211,[[],["span",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"span","","",212,[[],["span",3]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"span","","",213,[[],["span",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"span","","",214,[[],["span",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"span","","",215,[[],["span",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"span","","",216,[[],["span",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"span","","",217,[[],["span",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"span","","",218,[[],["span",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"span","","",219,[[],["span",3]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"span","","",220,[[],["span",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"span","","",221,[[],["span",3]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"span","","",234,[[],["span",3]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"span","","",232,[[],["span",3]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"span","","",231,[[],["span",3]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"span","","",233,[[],["span",3]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"span","","",229,[[],["span",3]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"span","","",230,[[],["span",3]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"span","","",195,[[],["span",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"span","","",196,[[],["span",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"span","","",198,[[],["span",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"span","","",199,[[],["span",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"span","","",197,[[],["span",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"span","","",224,[[],["span",3]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"span","","",225,[[],["span",3]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"span","","",227,[[],["span",3]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"span","","",228,[[],["span",3]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"span","","",226,[[],["span",3]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"span","","",200,[[],["span",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"span","","",201,[[],["span",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"span","","",203,[[],["span",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"span","","",204,[[],["span",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"span","","",202,[[],["span",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"span","","",223,[[],["span",3]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"span","","",194,[[],["span",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"span","","",222,[[],["span",3]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"span","","",235,[[],["span",3]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"to_owned","","",235,[[]]],[11,"clone_into","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"span","","",236,[[],["span",3]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"to_string","","",236,[[],["string",3]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"span","","",237,[[],["span",3]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"span","","",301,[[],["span",3]]],[11,"from","","",301,[[]]],[11,"into","","",301,[[]]],[11,"to_owned","","",301,[[]]],[11,"clone_into","","",301,[[]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"try_into","","",301,[[],["result",4]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"span","","",302,[[],["span",3]]],[11,"from","","",302,[[]]],[11,"into","","",302,[[]]],[11,"to_owned","","",302,[[]]],[11,"clone_into","","",302,[[]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"try_from","","",302,[[],["result",4]]],[11,"try_into","","",302,[[],["result",4]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"span","","",303,[[],["span",3]]],[11,"from","","",303,[[]]],[11,"into","","",303,[[]]],[11,"to_owned","","",303,[[]]],[11,"clone_into","","",303,[[]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"try_into","","",303,[[],["result",4]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"span","","",304,[[],["span",3]]],[11,"from","","",304,[[]]],[11,"into","","",304,[[]]],[11,"to_owned","","",304,[[]]],[11,"clone_into","","",304,[[]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"try_into","","",304,[[],["result",4]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"span","","",305,[[],["span",3]]],[11,"from","","",305,[[]]],[11,"into","","",305,[[]]],[11,"to_owned","","",305,[[]]],[11,"clone_into","","",305,[[]]],[11,"to_string","","",305,[[],["string",3]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"try_into","","",305,[[],["result",4]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"span","","",306,[[],["span",3]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"to_owned","","",306,[[]]],[11,"clone_into","","",306,[[]]],[11,"to_string","","",306,[[],["string",3]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"try_into","","",306,[[],["result",4]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"span","","",238,[[],["span",3]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"to_owned","","",238,[[]]],[11,"clone_into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"span","","",240,[[],["span",3]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"span","","",246,[[],["span",3]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"span","","",247,[[],["span",3]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"span","","",248,[[],["span",3]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"span","","",249,[[],["span",3]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"span","","",251,[[],["span",3]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"span","","",250,[[],["span",3]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"span","","",255,[[],["span",3]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"span","","",256,[[],["span",3]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"to_owned","","",256,[[]]],[11,"clone_into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"span","","",257,[[],["span",3]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"span","","",258,[[],["span",3]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"span","","",259,[[],["span",3]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"to_owned","","",259,[[]]],[11,"clone_into","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"span","","",260,[[],["span",3]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"to_owned","","",260,[[]]],[11,"clone_into","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"span","","",261,[[],["span",3]]],[11,"from","","",261,[[]]],[11,"into","","",261,[[]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"span","","",262,[[],["span",3]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"to_owned","","",262,[[]]],[11,"clone_into","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"span","","",263,[[],["span",3]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"to_owned","","",263,[[]]],[11,"clone_into","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"span","","",264,[[],["span",3]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"to_owned","","",264,[[]]],[11,"clone_into","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"span","","",265,[[],["span",3]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"span","","",266,[[],["span",3]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"span","","",267,[[],["span",3]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"span","","",268,[[],["span",3]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"to_owned","","",268,[[]]],[11,"clone_into","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"span","","",269,[[],["span",3]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"to_owned","","",269,[[]]],[11,"clone_into","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"span","","",252,[[],["span",3]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"span","","",253,[[],["span",3]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"span","","",270,[[],["span",3]]],[11,"from","","",270,[[]]],[11,"into","","",270,[[]]],[11,"to_owned","","",270,[[]]],[11,"clone_into","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"span","","",254,[[],["span",3]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"span","","",272,[[],["span",3]]],[11,"from","","",272,[[]]],[11,"into","","",272,[[]]],[11,"to_owned","","",272,[[]]],[11,"clone_into","","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"span","","",273,[[],["span",3]]],[11,"from","","",273,[[]]],[11,"into","","",273,[[]]],[11,"to_owned","","",273,[[]]],[11,"clone_into","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"span","","",274,[[],["span",3]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"to_owned","","",274,[[]]],[11,"clone_into","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"span","","",275,[[],["span",3]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"to_owned","","",275,[[]]],[11,"clone_into","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"span","","",276,[[],["span",3]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"to_owned","","",276,[[]]],[11,"clone_into","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"span","","",277,[[],["span",3]]],[11,"from","","",277,[[]]],[11,"into","","",277,[[]]],[11,"to_owned","","",277,[[]]],[11,"clone_into","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"span","","",278,[[],["span",3]]],[11,"from","","",278,[[]]],[11,"into","","",278,[[]]],[11,"to_owned","","",278,[[]]],[11,"clone_into","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"span","","",279,[[],["span",3]]],[11,"from","","",279,[[]]],[11,"into","","",279,[[]]],[11,"to_owned","","",279,[[]]],[11,"clone_into","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"span","","",280,[[],["span",3]]],[11,"from","","",280,[[]]],[11,"into","","",280,[[]]],[11,"to_owned","","",280,[[]]],[11,"clone_into","","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"span","","",281,[[],["span",3]]],[11,"from","","",281,[[]]],[11,"into","","",281,[[]]],[11,"to_owned","","",281,[[]]],[11,"clone_into","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"span","","",282,[[],["span",3]]],[11,"from","","",282,[[]]],[11,"into","","",282,[[]]],[11,"to_owned","","",282,[[]]],[11,"clone_into","","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"span","","",283,[[],["span",3]]],[11,"from","","",283,[[]]],[11,"into","","",283,[[]]],[11,"to_owned","","",283,[[]]],[11,"clone_into","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"span","","",284,[[],["span",3]]],[11,"from","","",284,[[]]],[11,"into","","",284,[[]]],[11,"to_owned","","",284,[[]]],[11,"clone_into","","",284,[[]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"span","","",285,[[],["span",3]]],[11,"from","","",285,[[]]],[11,"into","","",285,[[]]],[11,"to_owned","","",285,[[]]],[11,"clone_into","","",285,[[]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"span","","",286,[[],["span",3]]],[11,"from","","",286,[[]]],[11,"into","","",286,[[]]],[11,"to_owned","","",286,[[]]],[11,"clone_into","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"span","","",287,[[],["span",3]]],[11,"from","","",287,[[]]],[11,"into","","",287,[[]]],[11,"to_owned","","",287,[[]]],[11,"clone_into","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"span","","",271,[[],["span",3]]],[11,"from","","",271,[[]]],[11,"into","","",271,[[]]],[11,"to_owned","","",271,[[]]],[11,"clone_into","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"span","","",293,[[],["span",3]]],[11,"from","","",293,[[]]],[11,"into","","",293,[[]]],[11,"to_owned","","",293,[[]]],[11,"clone_into","","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"span","","",295,[[],["span",3]]],[11,"from","","",295,[[]]],[11,"into","","",295,[[]]],[11,"to_owned","","",295,[[]]],[11,"clone_into","","",295,[[]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"try_into","","",295,[[],["result",4]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"span","","",294,[[],["span",3]]],[11,"from","","",294,[[]]],[11,"into","","",294,[[]]],[11,"to_owned","","",294,[[]]],[11,"clone_into","","",294,[[]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"try_into","","",294,[[],["result",4]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"span","","",291,[[],["span",3]]],[11,"from","","",291,[[]]],[11,"into","","",291,[[]]],[11,"to_owned","","",291,[[]]],[11,"clone_into","","",291,[[]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"try_into","","",291,[[],["result",4]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"span","","",288,[[],["span",3]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"to_owned","","",288,[[]]],[11,"clone_into","","",288,[[]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"span","","",289,[[],["span",3]]],[11,"from","","",289,[[]]],[11,"into","","",289,[[]]],[11,"to_owned","","",289,[[]]],[11,"clone_into","","",289,[[]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"span","","",290,[[],["span",3]]],[11,"from","","",290,[[]]],[11,"into","","",290,[[]]],[11,"to_owned","","",290,[[]]],[11,"clone_into","","",290,[[]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"span","","",292,[[],["span",3]]],[11,"from","","",292,[[]]],[11,"into","","",292,[[]]],[11,"to_owned","","",292,[[]]],[11,"clone_into","","",292,[[]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"try_into","","",292,[[],["result",4]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"from","","",296,[[]]],[11,"into","","",296,[[]]],[11,"to_owned","","",296,[[]]],[11,"clone_into","","",296,[[]]],[11,"borrow","","",296,[[]]],[11,"borrow_mut","","",296,[[]]],[11,"try_from","","",296,[[],["result",4]]],[11,"try_into","","",296,[[],["result",4]]],[11,"type_id","","",296,[[],["typeid",3]]],[11,"from","syn::buffer","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"span","syn::punctuated","",106,[[],["span",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",307,[[]]],[11,"into","","",307,[[]]],[11,"into_iter","","",307,[[]]],[11,"to_owned","","",307,[[]]],[11,"clone_into","","",307,[[]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"try_into","","",307,[[],["result",4]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"from","","",308,[[]]],[11,"into","","",308,[[]]],[11,"into_iter","","",308,[[]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"try_into","","",308,[[],["result",4]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"from","","",309,[[]]],[11,"into","","",309,[[]]],[11,"into_iter","","",309,[[]]],[11,"to_owned","","",309,[[]]],[11,"clone_into","","",309,[[]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"from","","",310,[[]]],[11,"into","","",310,[[]]],[11,"into_iter","","",310,[[]]],[11,"to_owned","","",310,[[]]],[11,"clone_into","","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from","","",311,[[]]],[11,"into","","",311,[[]]],[11,"into_iter","","",311,[[]]],[11,"to_owned","","",311,[[]]],[11,"clone_into","","",311,[[]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"try_into","","",311,[[],["result",4]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"from","","",312,[[]]],[11,"into","","",312,[[]]],[11,"into_iter","","",312,[[]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"try_into","","",312,[[],["result",4]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"span","","",107,[[],["span",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","syn::parse","",313,[[]]],[11,"into","","",313,[[]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"to_string","","",116,[[],["string",3]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_string","","",114,[[],["string",3]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",314,[[]]],[11,"into","","",314,[[]]],[11,"borrow","","",314,[[]]],[11,"borrow_mut","","",314,[[]]],[11,"try_from","","",314,[[],["result",4]]],[11,"try_into","","",314,[[],["result",4]]],[11,"type_id","","",314,[[],["typeid",3]]],[11,"eq","syn","",297,[[]]],[11,"eq","","",297,[[["ident",3]]]],[11,"cmp","","",297,[[["ident",3]],["ordering",4]]],[11,"partial_cmp","","",297,[[["ident",3]],[["ordering",4],["option",4]]]],[11,"fmt","","",297,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",297,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",297,[[]]],[11,"clone","","",297,[[],["ident",3]]],[11,"span","","",297,[[],[["option",4],["span",3]]]],[11,"fmt","","",297,[[["formatter",3]],[["error",3],["result",4]]]],[11,"to_tokens","","",297,[[["tokenstream",3]]]],[11,"peek","","",236,[[["cursor",3]]]],[11,"display","","",236,[[]]],[11,"peek","","",237,[[["cursor",3]]]],[11,"display","","",237,[[]]],[11,"peek","","",301,[[["cursor",3]]]],[11,"display","","",301,[[]]],[11,"peek","","",302,[[["cursor",3]]]],[11,"display","","",302,[[]]],[11,"peek","","",303,[[["cursor",3]]]],[11,"display","","",303,[[]]],[11,"peek","","",304,[[["cursor",3]]]],[11,"display","","",304,[[]]],[11,"peek","","",305,[[["cursor",3]]]],[11,"display","","",305,[[]]],[11,"peek","","",306,[[["cursor",3]]]],[11,"display","","",306,[[]]],[11,"peek","","",238,[[["cursor",3]]]],[11,"display","","",238,[[]]],[11,"peek","syn::token","",0,[[["cursor",3]]]],[11,"display","","",0,[[]]],[11,"peek","","",101,[[["cursor",3]]]],[11,"display","","",101,[[]]],[11,"peek","","",99,[[["cursor",3]]]],[11,"display","","",99,[[]]],[11,"peek","","",100,[[["cursor",3]]]],[11,"display","","",100,[[]]],[11,"peek","","",102,[[["cursor",3]]]],[11,"display","","",102,[[]]],[11,"peek","","",1,[[["cursor",3]]]],[11,"display","","",1,[[]]],[11,"peek","","",2,[[["cursor",3]]]],[11,"display","","",2,[[]]],[11,"peek","","",3,[[["cursor",3]]]],[11,"display","","",3,[[]]],[11,"peek","","",4,[[["cursor",3]]]],[11,"display","","",4,[[]]],[11,"peek","","",5,[[["cursor",3]]]],[11,"display","","",5,[[]]],[11,"peek","","",6,[[["cursor",3]]]],[11,"display","","",6,[[]]],[11,"peek","","",7,[[["cursor",3]]]],[11,"display","","",7,[[]]],[11,"peek","","",8,[[["cursor",3]]]],[11,"display","","",8,[[]]],[11,"peek","","",9,[[["cursor",3]]]],[11,"display","","",9,[[]]],[11,"peek","","",10,[[["cursor",3]]]],[11,"display","","",10,[[]]],[11,"peek","","",11,[[["cursor",3]]]],[11,"display","","",11,[[]]],[11,"peek","","",12,[[["cursor",3]]]],[11,"display","","",12,[[]]],[11,"peek","","",13,[[["cursor",3]]]],[11,"display","","",13,[[]]],[11,"peek","","",14,[[["cursor",3]]]],[11,"display","","",14,[[]]],[11,"peek","","",15,[[["cursor",3]]]],[11,"display","","",15,[[]]],[11,"peek","","",16,[[["cursor",3]]]],[11,"display","","",16,[[]]],[11,"peek","","",17,[[["cursor",3]]]],[11,"display","","",17,[[]]],[11,"peek","","",18,[[["cursor",3]]]],[11,"display","","",18,[[]]],[11,"peek","","",19,[[["cursor",3]]]],[11,"display","","",19,[[]]],[11,"peek","","",20,[[["cursor",3]]]],[11,"display","","",20,[[]]],[11,"peek","","",21,[[["cursor",3]]]],[11,"display","","",21,[[]]],[11,"peek","","",22,[[["cursor",3]]]],[11,"display","","",22,[[]]],[11,"peek","","",23,[[["cursor",3]]]],[11,"display","","",23,[[]]],[11,"peek","","",24,[[["cursor",3]]]],[11,"display","","",24,[[]]],[11,"peek","","",25,[[["cursor",3]]]],[11,"display","","",25,[[]]],[11,"peek","","",26,[[["cursor",3]]]],[11,"display","","",26,[[]]],[11,"peek","","",27,[[["cursor",3]]]],[11,"display","","",27,[[]]],[11,"peek","","",28,[[["cursor",3]]]],[11,"display","","",28,[[]]],[11,"peek","","",29,[[["cursor",3]]]],[11,"display","","",29,[[]]],[11,"peek","","",30,[[["cursor",3]]]],[11,"display","","",30,[[]]],[11,"peek","","",31,[[["cursor",3]]]],[11,"display","","",31,[[]]],[11,"peek","","",32,[[["cursor",3]]]],[11,"display","","",32,[[]]],[11,"peek","","",33,[[["cursor",3]]]],[11,"display","","",33,[[]]],[11,"peek","","",34,[[["cursor",3]]]],[11,"display","","",34,[[]]],[11,"peek","","",35,[[["cursor",3]]]],[11,"display","","",35,[[]]],[11,"peek","","",36,[[["cursor",3]]]],[11,"display","","",36,[[]]],[11,"peek","","",37,[[["cursor",3]]]],[11,"display","","",37,[[]]],[11,"peek","","",38,[[["cursor",3]]]],[11,"display","","",38,[[]]],[11,"peek","","",39,[[["cursor",3]]]],[11,"display","","",39,[[]]],[11,"peek","","",40,[[["cursor",3]]]],[11,"display","","",40,[[]]],[11,"peek","","",41,[[["cursor",3]]]],[11,"display","","",41,[[]]],[11,"peek","","",42,[[["cursor",3]]]],[11,"display","","",42,[[]]],[11,"peek","","",43,[[["cursor",3]]]],[11,"display","","",43,[[]]],[11,"peek","","",44,[[["cursor",3]]]],[11,"display","","",44,[[]]],[11,"peek","","",45,[[["cursor",3]]]],[11,"display","","",45,[[]]],[11,"peek","","",46,[[["cursor",3]]]],[11,"display","","",46,[[]]],[11,"peek","","",47,[[["cursor",3]]]],[11,"display","","",47,[[]]],[11,"peek","","",48,[[["cursor",3]]]],[11,"display","","",48,[[]]],[11,"peek","","",49,[[["cursor",3]]]],[11,"display","","",49,[[]]],[11,"peek","","",50,[[["cursor",3]]]],[11,"display","","",50,[[]]],[11,"peek","","",51,[[["cursor",3]]]],[11,"display","","",51,[[]]],[11,"peek","","",52,[[["cursor",3]]]],[11,"display","","",52,[[]]],[11,"peek","","",53,[[["cursor",3]]]],[11,"display","","",53,[[]]],[11,"peek","","",54,[[["cursor",3]]]],[11,"display","","",54,[[]]],[11,"peek","","",55,[[["cursor",3]]]],[11,"display","","",55,[[]]],[11,"peek","","",56,[[["cursor",3]]]],[11,"display","","",56,[[]]],[11,"peek","","",57,[[["cursor",3]]]],[11,"display","","",57,[[]]],[11,"peek","","",58,[[["cursor",3]]]],[11,"display","","",58,[[]]],[11,"peek","","",59,[[["cursor",3]]]],[11,"display","","",59,[[]]],[11,"peek","","",60,[[["cursor",3]]]],[11,"display","","",60,[[]]],[11,"peek","","",61,[[["cursor",3]]]],[11,"display","","",61,[[]]],[11,"peek","","",62,[[["cursor",3]]]],[11,"display","","",62,[[]]],[11,"peek","","",63,[[["cursor",3]]]],[11,"display","","",63,[[]]],[11,"peek","","",64,[[["cursor",3]]]],[11,"display","","",64,[[]]],[11,"peek","","",65,[[["cursor",3]]]],[11,"display","","",65,[[]]],[11,"peek","","",66,[[["cursor",3]]]],[11,"display","","",66,[[]]],[11,"peek","","",67,[[["cursor",3]]]],[11,"display","","",67,[[]]],[11,"peek","","",68,[[["cursor",3]]]],[11,"display","","",68,[[]]],[11,"peek","","",69,[[["cursor",3]]]],[11,"display","","",69,[[]]],[11,"peek","","",70,[[["cursor",3]]]],[11,"display","","",70,[[]]],[11,"peek","","",71,[[["cursor",3]]]],[11,"display","","",71,[[]]],[11,"peek","","",72,[[["cursor",3]]]],[11,"display","","",72,[[]]],[11,"peek","","",73,[[["cursor",3]]]],[11,"display","","",73,[[]]],[11,"peek","","",74,[[["cursor",3]]]],[11,"display","","",74,[[]]],[11,"peek","","",75,[[["cursor",3]]]],[11,"display","","",75,[[]]],[11,"peek","","",76,[[["cursor",3]]]],[11,"display","","",76,[[]]],[11,"peek","","",77,[[["cursor",3]]]],[11,"display","","",77,[[]]],[11,"peek","","",78,[[["cursor",3]]]],[11,"display","","",78,[[]]],[11,"peek","","",79,[[["cursor",3]]]],[11,"display","","",79,[[]]],[11,"peek","","",80,[[["cursor",3]]]],[11,"display","","",80,[[]]],[11,"peek","","",81,[[["cursor",3]]]],[11,"display","","",81,[[]]],[11,"peek","","",82,[[["cursor",3]]]],[11,"display","","",82,[[]]],[11,"peek","","",83,[[["cursor",3]]]],[11,"display","","",83,[[]]],[11,"peek","","",84,[[["cursor",3]]]],[11,"display","","",84,[[]]],[11,"peek","","",85,[[["cursor",3]]]],[11,"display","","",85,[[]]],[11,"peek","","",86,[[["cursor",3]]]],[11,"display","","",86,[[]]],[11,"peek","","",87,[[["cursor",3]]]],[11,"display","","",87,[[]]],[11,"peek","","",88,[[["cursor",3]]]],[11,"display","","",88,[[]]],[11,"peek","","",89,[[["cursor",3]]]],[11,"display","","",89,[[]]],[11,"peek","","",90,[[["cursor",3]]]],[11,"display","","",90,[[]]],[11,"peek","","",91,[[["cursor",3]]]],[11,"display","","",91,[[]]],[11,"peek","","",92,[[["cursor",3]]]],[11,"display","","",92,[[]]],[11,"peek","","",93,[[["cursor",3]]]],[11,"display","","",93,[[]]],[11,"peek","","",94,[[["cursor",3]]]],[11,"display","","",94,[[]]],[11,"peek","","",95,[[["cursor",3]]]],[11,"display","","",95,[[]]],[11,"peek","","",96,[[["cursor",3]]]],[11,"display","","",96,[[]]],[11,"peek","","",97,[[["cursor",3]]]],[11,"display","","",97,[[]]],[11,"peek","","",98,[[["cursor",3]]]],[11,"display","","",98,[[]]],[11,"peek","syn","",297,[[["cursor",3]]]],[11,"display","","",297,[[]]],[11,"parse_any","","",297,[[["parsestream",6]],["result",6]]],[11,"unraw","","",297,[[],["ident",3]]],[11,"advance_to","syn::parse","",114,[[]]],[11,"parse","syn::token","",0,[[["parsestream",6]],["result",6]]],[11,"parse","","",1,[[["parsestream",6]],["result",6]]],[11,"parse","","",2,[[["parsestream",6]],["result",6]]],[11,"parse","","",3,[[["parsestream",6]],["result",6]]],[11,"parse","","",4,[[["parsestream",6]],["result",6]]],[11,"parse","","",5,[[["parsestream",6]],["result",6]]],[11,"parse","","",6,[[["parsestream",6]],["result",6]]],[11,"parse","","",7,[[["parsestream",6]],["result",6]]],[11,"parse","","",8,[[["parsestream",6]],["result",6]]],[11,"parse","","",9,[[["parsestream",6]],["result",6]]],[11,"parse","","",10,[[["parsestream",6]],["result",6]]],[11,"parse","","",11,[[["parsestream",6]],["result",6]]],[11,"parse","","",12,[[["parsestream",6]],["result",6]]],[11,"parse","","",13,[[["parsestream",6]],["result",6]]],[11,"parse","","",14,[[["parsestream",6]],["result",6]]],[11,"parse","","",15,[[["parsestream",6]],["result",6]]],[11,"parse","","",16,[[["parsestream",6]],["result",6]]],[11,"parse","","",17,[[["parsestream",6]],["result",6]]],[11,"parse","","",18,[[["parsestream",6]],["result",6]]],[11,"parse","","",19,[[["parsestream",6]],["result",6]]],[11,"parse","","",20,[[["parsestream",6]],["result",6]]],[11,"parse","","",21,[[["parsestream",6]],["result",6]]],[11,"parse","","",22,[[["parsestream",6]],["result",6]]],[11,"parse","","",23,[[["parsestream",6]],["result",6]]],[11,"parse","","",24,[[["parsestream",6]],["result",6]]],[11,"parse","","",25,[[["parsestream",6]],["result",6]]],[11,"parse","","",26,[[["parsestream",6]],["result",6]]],[11,"parse","","",27,[[["parsestream",6]],["result",6]]],[11,"parse","","",28,[[["parsestream",6]],["result",6]]],[11,"parse","","",29,[[["parsestream",6]],["result",6]]],[11,"parse","","",30,[[["parsestream",6]],["result",6]]],[11,"parse","","",31,[[["parsestream",6]],["result",6]]],[11,"parse","","",32,[[["parsestream",6]],["result",6]]],[11,"parse","","",33,[[["parsestream",6]],["result",6]]],[11,"parse","","",34,[[["parsestream",6]],["result",6]]],[11,"parse","","",35,[[["parsestream",6]],["result",6]]],[11,"parse","","",36,[[["parsestream",6]],["result",6]]],[11,"parse","","",37,[[["parsestream",6]],["result",6]]],[11,"parse","","",38,[[["parsestream",6]],["result",6]]],[11,"parse","","",39,[[["parsestream",6]],["result",6]]],[11,"parse","","",40,[[["parsestream",6]],["result",6]]],[11,"parse","","",41,[[["parsestream",6]],["result",6]]],[11,"parse","","",42,[[["parsestream",6]],["result",6]]],[11,"parse","","",43,[[["parsestream",6]],["result",6]]],[11,"parse","","",44,[[["parsestream",6]],["result",6]]],[11,"parse","","",45,[[["parsestream",6]],["result",6]]],[11,"parse","","",46,[[["parsestream",6]],["result",6]]],[11,"parse","","",47,[[["parsestream",6]],["result",6]]],[11,"parse","","",48,[[["parsestream",6]],["result",6]]],[11,"parse","","",49,[[["parsestream",6]],["result",6]]],[11,"parse","","",50,[[["parsestream",6]],["result",6]]],[11,"parse","","",51,[[["parsestream",6]],["result",6]]],[11,"parse","","",52,[[["parsestream",6]],["result",6]]],[11,"parse","","",53,[[["parsestream",6]],["result",6]]],[11,"parse","","",54,[[["parsestream",6]],["result",6]]],[11,"parse","","",55,[[["parsestream",6]],["result",6]]],[11,"parse","","",56,[[["parsestream",6]],["result",6]]],[11,"parse","","",57,[[["parsestream",6]],["result",6]]],[11,"parse","","",58,[[["parsestream",6]],["result",6]]],[11,"parse","","",59,[[["parsestream",6]],["result",6]]],[11,"parse","","",60,[[["parsestream",6]],["result",6]]],[11,"parse","","",61,[[["parsestream",6]],["result",6]]],[11,"parse","","",62,[[["parsestream",6]],["result",6]]],[11,"parse","","",63,[[["parsestream",6]],["result",6]]],[11,"parse","","",64,[[["parsestream",6]],["result",6]]],[11,"parse","","",65,[[["parsestream",6]],["result",6]]],[11,"parse","","",66,[[["parsestream",6]],["result",6]]],[11,"parse","","",67,[[["parsestream",6]],["result",6]]],[11,"parse","","",68,[[["parsestream",6]],["result",6]]],[11,"parse","","",69,[[["parsestream",6]],["result",6]]],[11,"parse","","",70,[[["parsestream",6]],["result",6]]],[11,"parse","","",71,[[["parsestream",6]],["result",6]]],[11,"parse","","",72,[[["parsestream",6]],["result",6]]],[11,"parse","","",73,[[["parsestream",6]],["result",6]]],[11,"parse","","",74,[[["parsestream",6]],["result",6]]],[11,"parse","","",75,[[["parsestream",6]],["result",6]]],[11,"parse","","",76,[[["parsestream",6]],["result",6]]],[11,"parse","","",77,[[["parsestream",6]],["result",6]]],[11,"parse","","",78,[[["parsestream",6]],["result",6]]],[11,"parse","","",79,[[["parsestream",6]],["result",6]]],[11,"parse","","",80,[[["parsestream",6]],["result",6]]],[11,"parse","","",81,[[["parsestream",6]],["result",6]]],[11,"parse","","",82,[[["parsestream",6]],["result",6]]],[11,"parse","","",83,[[["parsestream",6]],["result",6]]],[11,"parse","","",84,[[["parsestream",6]],["result",6]]],[11,"parse","","",85,[[["parsestream",6]],["result",6]]],[11,"parse","","",86,[[["parsestream",6]],["result",6]]],[11,"parse","","",87,[[["parsestream",6]],["result",6]]],[11,"parse","","",88,[[["parsestream",6]],["result",6]]],[11,"parse","","",89,[[["parsestream",6]],["result",6]]],[11,"parse","","",90,[[["parsestream",6]],["result",6]]],[11,"parse","","",91,[[["parsestream",6]],["result",6]]],[11,"parse","","",92,[[["parsestream",6]],["result",6]]],[11,"parse","","",93,[[["parsestream",6]],["result",6]]],[11,"parse","","",94,[[["parsestream",6]],["result",6]]],[11,"parse","","",95,[[["parsestream",6]],["result",6]]],[11,"parse","","",96,[[["parsestream",6]],["result",6]]],[11,"parse","","",97,[[["parsestream",6]],["result",6]]],[11,"parse","","",98,[[["parsestream",6]],["result",6]]],[11,"parse","syn","",297,[[["parsestream",6]],["result",6]]],[11,"parse","","",119,[[["parsestream",6]],["result",6]]],[11,"parse","","",120,[[["parsestream",6]],["result",6]]],[11,"parse","","",121,[[["parsestream",6]],["result",6]]],[11,"parse","","",122,[[["parsestream",6]],["result",6]]],[11,"parse","","",127,[[["parsestream",6]],["result",6]]],[11,"parse","","",125,[[["parsestream",6]],["result",6]]],[11,"parse","","",126,[[["parsestream",6]],["result",6]]],[11,"parse","","",131,[[["parsestream",6]],["result",6]]],[11,"parse","","",138,[[["parsestream",6]],["result",6]]],[11,"parse","","",158,[[["parsestream",6]],["result",6]]],[11,"parse","","",155,[[["parsestream",6]],["result",6]]],[11,"parse","","",153,[[["parsestream",6]],["result",6]]],[11,"parse","","",159,[[["parsestream",6]],["result",6]]],[11,"parse","","",161,[[["parsestream",6]],["result",6]]],[11,"parse","","",146,[[["parsestream",6]],["result",6]]],[11,"parse","","",139,[[["parsestream",6]],["result",6]]],[11,"parse","","",148,[[["parsestream",6]],["result",6]]],[11,"parse","","",162,[[["parsestream",6]],["result",6]]],[11,"parse","","",172,[[["parsestream",6]],["result",6]]],[11,"parse","","",144,[[["parsestream",6]],["result",6]]],[11,"parse","","",174,[[["parsestream",6]],["result",6]]],[11,"parse","","",149,[[["parsestream",6]],["result",6]]],[11,"parse","","",173,[[["parsestream",6]],["result",6]]],[11,"parse","","",157,[[["parsestream",6]],["result",6]]],[11,"parse","","",150,[[["parsestream",6]],["result",6]]],[11,"parse","","",175,[[["parsestream",6]],["result",6]]],[11,"parse","","",145,[[["parsestream",6]],["result",6]]],[11,"parse","","",140,[[["parsestream",6]],["result",6]]],[11,"parse","","",141,[[["parsestream",6]],["result",6]]],[11,"parse","","",152,[[["parsestream",6]],["result",6]]],[11,"parse","","",156,[[["parsestream",6]],["result",6]]],[11,"parse","","",165,[[["parsestream",6]],["result",6]]],[11,"parse","","",166,[[["parsestream",6]],["result",6]]],[11,"parse","","",147,[[["parsestream",6]],["result",6]]],[11,"parse","","",151,[[["parsestream",6]],["result",6]]],[11,"parse","","",168,[[["parsestream",6]],["result",6]]],[11,"parse","","",160,[[["parsestream",6]],["result",6]]],[11,"parse","","",169,[[["parsestream",6]],["result",6]]],[11,"parse","","",167,[[["parsestream",6]],["result",6]]],[11,"parse","","",163,[[["parsestream",6]],["result",6]]],[11,"parse","","",170,[[["parsestream",6]],["result",6]]],[11,"parse","","",142,[[["parsestream",6]],["result",6]]],[11,"parse","","",171,[[["parsestream",6]],["result",6]]],[11,"parse","","",177,[[["parsestream",6]],["result",6]]],[11,"parse","","",176,[[["parsestream",6]],["result",6]]],[11,"parse","","",135,[[["parsestream",6]],["result",6]]],[11,"parse","","",133,[[["parsestream",6]],["result",6]]],[11,"parse","","",137,[[["parsestream",6]],["result",6]]],[11,"parse","","",164,[[["parsestream",6]],["result",6]]],[11,"parse","","",179,[[["parsestream",6]],["result",6]]],[11,"parse","","",132,[[["parsestream",6]],[["result",6],["arm",3]]]],[11,"parse","","",178,[[["parsestream",6]],["result",6]]],[11,"parse","","",183,[[["parsestream",6]],["result",6]]],[11,"parse","","",182,[[["parsestream",6]],["result",6]]],[11,"parse","","",184,[[["parsestream",6]],["result",6]]],[11,"parse","","",180,[[["parsestream",6]],["result",6]]],[11,"parse","","",190,[[["parsestream",6]],["result",6]]],[11,"parse","","",191,[[["parsestream",6]],["result",6]]],[11,"parse","","",188,[[["parsestream",6]],["result",6]]],[11,"parse","","",189,[[["parsestream",6]],["result",6]]],[11,"parse","","",181,[[["parsestream",6]],["result",6]]],[11,"parse","","",192,[[["parsestream",6]],["result",6]]],[11,"parse","","",193,[[["parsestream",6]],["result",6]]],[11,"parse","","",205,[[["parsestream",6]],["result",6]]],[11,"parse","","",212,[[["parsestream",6]],["result",6]]],[11,"parse","","",213,[[["parsestream",6]],["result",6]]],[11,"parse","","",208,[[["parsestream",6]],["result",6]]],[11,"parse","","",221,[[["parsestream",6]],["result",6]]],[11,"parse","","",234,[[["parsestream",6]],[["result",6],["usetree",4]]]],[11,"parse","","",215,[[["parsestream",6]],["result",6]]],[11,"parse","","",206,[[["parsestream",6]],["result",6]]],[11,"parse","","",223,[[["parsestream",6]],["result",6]]],[11,"parse","","",209,[[["parsestream",6]],["result",6]]],[11,"parse","","",194,[[["parsestream",6]],["result",6]]],[11,"parse","","",222,[[["parsestream",6]],["result",6]]],[11,"parse","","",214,[[["parsestream",6]],["result",6]]],[11,"parse","","",210,[[["parsestream",6]],["result",6]]],[11,"parse","","",195,[[["parsestream",6]],["result",6]]],[11,"parse","","",196,[[["parsestream",6]],["result",6]]],[11,"parse","","",198,[[["parsestream",6]],["result",6]]],[11,"parse","","",199,[[["parsestream",6]],["result",6]]],[11,"parse","","",197,[[["parsestream",6]],["result",6]]],[11,"parse","","",219,[[["parsestream",6]],["result",6]]],[11,"parse","","",216,[[["parsestream",6]],["result",6]]],[11,"parse","","",207,[[["parsestream",6]],["result",6]]],[11,"parse","","",220,[[["parsestream",6]],["result",6]]],[11,"parse","","",217,[[["parsestream",6]],["result",6]]],[11,"parse","","",218,[[["parsestream",6]],["result",6]]],[11,"parse","","",224,[[["parsestream",6]],["result",6]]],[11,"parse","","",225,[[["parsestream",6]],["result",6]]],[11,"parse","","",227,[[["parsestream",6]],["result",6]]],[11,"parse","","",228,[[["parsestream",6]],["result",6]]],[11,"parse","","",226,[[["parsestream",6]],["result",6]]],[11,"parse","","",211,[[["parsestream",6]],["result",6]]],[11,"parse","","",200,[[["parsestream",6]],["result",6]]],[11,"parse","","",201,[[["parsestream",6]],["result",6]]],[11,"parse","","",203,[[["parsestream",6]],["result",6]]],[11,"parse","","",204,[[["parsestream",6]],["result",6]]],[11,"parse","","",202,[[["parsestream",6]],["result",6]]],[11,"parse","","",235,[[["parsestream",6]],["result",6]]],[11,"parse","","",236,[[["parsestream",6]],["result",6]]],[11,"parse","","",237,[[["parsestream",6]],["result",6]]],[11,"parse","","",301,[[["parsestream",6]],["result",6]]],[11,"parse","","",302,[[["parsestream",6]],["result",6]]],[11,"parse","","",303,[[["parsestream",6]],["result",6]]],[11,"parse","","",304,[[["parsestream",6]],["result",6]]],[11,"parse","","",305,[[["parsestream",6]],["result",6]]],[11,"parse","","",306,[[["parsestream",6]],["result",6]]],[11,"parse","","",238,[[["parsestream",6]],["result",6]]],[11,"parse","","",240,[[["parsestream",6]],["result",6]]],[11,"parse","","",246,[[["parsestream",6]],["result",6]]],[11,"parse","","",247,[[["parsestream",6]],["result",6]]],[11,"parse","","",248,[[["parsestream",6]],["result",6]]],[11,"parse","","",249,[[["parsestream",6]],["result",6]]],[11,"parse","","",251,[[["parsestream",6]],["result",6]]],[11,"parse","","",255,[[["parsestream",6]],["result",6]]],[11,"parse","","",267,[[["parsestream",6]],["result",6]]],[11,"parse","","",256,[[["parsestream",6]],["result",6]]],[11,"parse","","",265,[[["parsestream",6]],["result",6]]],[11,"parse","","",266,[[["parsestream",6]],["result",6]]],[11,"parse","","",257,[[["parsestream",6]],["result",6]]],[11,"parse","","",262,[[["parsestream",6]],["result",6]]],[11,"parse","","",260,[[["parsestream",6]],["result",6]]],[11,"parse","","",269,[[["parsestream",6]],["result",6]]],[11,"parse","","",261,[[["parsestream",6]],["result",6]]],[11,"parse","","",264,[[["parsestream",6]],["result",6]]],[11,"parse","","",254,[[["parsestream",6]],["result",6]]],[11,"parse","","",268,[[["parsestream",6]],["result",6]]],[11,"parse","","",259,[[["parsestream",6]],["result",6]]],[11,"parse","","",258,[[["parsestream",6]],["result",6]]],[11,"parse","","",263,[[["parsestream",6]],["result",6]]],[11,"parse","","",253,[[["parsestream",6]],["result",6]]],[11,"parse","","",252,[[["parsestream",6]],["result",6]]],[11,"parse","","",272,[[["parsestream",6]],["result",6]]],[11,"parse","","",293,[[["parsestream",6]],["result",6]]],[11,"parse","","",291,[[["parsestream",6]],["result",6]]],[11,"parse","","",288,[[["parsestream",6]],["result",6]]],[11,"parse","","",292,[[["parsestream",6]],["result",6]]],[11,"parse","","",295,[[["parsestream",6]],["result",6]]],[11,"parse","","",289,[[["parsestream",6]],["result",6]]],[11,"parse","","",290,[[["parsestream",6]],["result",6]]],[11,"parse","syn::parse","",314,[[["parsestream",6]],["result",6]]],[11,"drop","","",114,[[]]],[11,"from","syn","",297,[[["selfvalue",3]],["ident",3]]],[11,"from","","",297,[[["selftype",3]],["ident",3]]],[11,"from","","",297,[[["super",3]],["ident",3]]],[11,"from","","",297,[[["crate",3]],["ident",3]]],[11,"from","","",297,[[["extern",3]],["ident",3]]],[11,"from","","",297,[[["underscore",3]],["ident",3]]],[11,"from","","",119,[[["path",3]],["meta",4]]],[11,"from","","",119,[[["metalist",3]],["meta",4]]],[11,"from","","",119,[[["metanamevalue",3]],["meta",4]]],[11,"from","","",122,[[["meta",4]],["nestedmeta",4]]],[11,"from","","",122,[[["lit",4]],["nestedmeta",4]]],[11,"from","","",124,[[["fieldsnamed",3]],["fields",4]]],[11,"from","","",124,[[["fieldsunnamed",3]],["fields",4]]],[11,"from","","",131,[[["vispublic",3]],["visibility",4]]],[11,"from","","",131,[[["viscrate",3]],["visibility",4]]],[11,"from","","",131,[[["visrestricted",3]],["visibility",4]]],[11,"from","","",138,[[["exprarray",3]],["expr",4]]],[11,"from","","",138,[[["exprassign",3]],["expr",4]]],[11,"from","","",138,[[["exprassignop",3]],["expr",4]]],[11,"from","","",138,[[["exprasync",3]],["expr",4]]],[11,"from","","",138,[[["exprawait",3]],["expr",4]]],[11,"from","","",138,[[["exprbinary",3]],["expr",4]]],[11,"from","","",138,[[["exprblock",3]],["expr",4]]],[11,"from","","",138,[[["exprbox",3]],["expr",4]]],[11,"from","","",138,[[["exprbreak",3]],["expr",4]]],[11,"from","","",138,[[["exprcall",3]],["expr",4]]],[11,"from","","",138,[[["exprcast",3]],["expr",4]]],[11,"from","","",138,[[["exprclosure",3]],["expr",4]]],[11,"from","","",138,[[["exprcontinue",3]],["expr",4]]],[11,"from","","",138,[[["exprfield",3]],["expr",4]]],[11,"from","","",138,[[["exprforloop",3]],["expr",4]]],[11,"from","","",138,[[["exprgroup",3]],["expr",4]]],[11,"from","","",138,[[["exprif",3]],["expr",4]]],[11,"from","","",138,[[["exprindex",3]],["expr",4]]],[11,"from","","",138,[[["exprlet",3]],["expr",4]]],[11,"from","","",138,[[["exprlit",3]],["expr",4]]],[11,"from","","",138,[[["exprloop",3]],["expr",4]]],[11,"from","","",138,[[["exprmacro",3]],["expr",4]]],[11,"from","","",138,[[["exprmatch",3]],["expr",4]]],[11,"from","","",138,[[["exprmethodcall",3]],["expr",4]]],[11,"from","","",138,[[["exprparen",3]],["expr",4]]],[11,"from","","",138,[[["exprpath",3]],["expr",4]]],[11,"from","","",138,[[["exprrange",3]],["expr",4]]],[11,"from","","",138,[[["exprreference",3]],["expr",4]]],[11,"from","","",138,[[["exprrepeat",3]],["expr",4]]],[11,"from","","",138,[[["exprreturn",3]],["expr",4]]],[11,"from","","",138,[[["exprstruct",3]],["expr",4]]],[11,"from","","",138,[[["exprtry",3]],["expr",4]]],[11,"from","","",138,[[["exprtryblock",3]],["expr",4]]],[11,"from","","",138,[[["exprtuple",3]],["expr",4]]],[11,"from","","",138,[[["exprtype",3]],["expr",4]]],[11,"from","","",138,[[["exprunary",3]],["expr",4]]],[11,"from","","",138,[[["exprunsafe",3]],["expr",4]]],[11,"from","","",138,[[["exprwhile",3]],["expr",4]]],[11,"from","","",138,[[["expryield",3]],["expr",4]]],[11,"from","","",178,[[],["index",3]]],[11,"from","","",182,[[["typeparam",3]],["genericparam",4]]],[11,"from","","",182,[[["lifetimedef",3]],["genericparam",4]]],[11,"from","","",182,[[["constparam",3]],["genericparam",4]]],[11,"from","","",190,[[["ident",3]]]],[11,"from","","",191,[[["traitbound",3]],["typeparambound",4]]],[11,"from","","",191,[[["lifetime",3]],["typeparambound",4]]],[11,"from","","",193,[[["predicatetype",3]],["wherepredicate",4]]],[11,"from","","",193,[[["predicatelifetime",3]],["wherepredicate",4]]],[11,"from","","",193,[[["predicateeq",3]],["wherepredicate",4]]],[11,"from","","",205,[[["itemconst",3]],["item",4]]],[11,"from","","",205,[[["itemenum",3]],["item",4]]],[11,"from","","",205,[[["itemexterncrate",3]],["item",4]]],[11,"from","","",205,[[["itemfn",3]],["item",4]]],[11,"from","","",205,[[["itemforeignmod",3]],["item",4]]],[11,"from","","",205,[[["itemimpl",3]],["item",4]]],[11,"from","","",205,[[["itemmacro",3]],["item",4]]],[11,"from","","",205,[[["itemmacro2",3]],["item",4]]],[11,"from","","",205,[[["itemmod",3]],["item",4]]],[11,"from","","",205,[[["itemstatic",3]],["item",4]]],[11,"from","","",205,[[["itemstruct",3]],["item",4]]],[11,"from","","",205,[[["itemtrait",3]],["item",4]]],[11,"from","","",205,[[["itemtraitalias",3]],["item",4]]],[11,"from","","",205,[[["itemtype",3]],["item",4]]],[11,"from","","",205,[[["itemunion",3]],["item",4]]],[11,"from","","",205,[[["itemuse",3]],["item",4]]],[11,"from","","",205,[[["deriveinput",3]],["item",4]]],[11,"from","","",246,[[["itemstruct",3]],["deriveinput",3]]],[11,"from","","",246,[[["itemenum",3]],["deriveinput",3]]],[11,"from","","",246,[[["itemunion",3]],["deriveinput",3]]],[11,"from","","",234,[[["usepath",3]],["usetree",4]]],[11,"from","","",234,[[["usename",3]],["usetree",4]]],[11,"from","","",234,[[["userename",3]],["usetree",4]]],[11,"from","","",234,[[["useglob",3]],["usetree",4]]],[11,"from","","",234,[[["usegroup",3]],["usetree",4]]],[11,"from","","",195,[[["foreignitemfn",3]],["foreignitem",4]]],[11,"from","","",195,[[["foreignitemstatic",3]],["foreignitem",4]]],[11,"from","","",195,[[["foreignitemtype",3]],["foreignitem",4]]],[11,"from","","",195,[[["foreignitemmacro",3]],["foreignitem",4]]],[11,"from","","",224,[[["traititemconst",3]],["traititem",4]]],[11,"from","","",224,[[["traititemmethod",3]],["traititem",4]]],[11,"from","","",224,[[["traititemtype",3]],["traititem",4]]],[11,"from","","",224,[[["traititemmacro",3]],["traititem",4]]],[11,"from","","",200,[[["implitemconst",3]],["implitem",4]]],[11,"from","","",200,[[["implitemmethod",3]],["implitem",4]]],[11,"from","","",200,[[["implitemtype",3]],["implitem",4]]],[11,"from","","",200,[[["implitemmacro",3]],["implitem",4]]],[11,"from","","",194,[[["receiver",3]],["fnarg",4]]],[11,"from","","",194,[[["pattype",3]],["fnarg",4]]],[11,"from","","",237,[[["litstr",3]],["lit",4]]],[11,"from","","",237,[[["litbytestr",3]],["lit",4]]],[11,"from","","",237,[[["litbyte",3]],["lit",4]]],[11,"from","","",237,[[["litchar",3]],["lit",4]]],[11,"from","","",237,[[["litint",3]],["lit",4]]],[11,"from","","",237,[[["litfloat",3]],["lit",4]]],[11,"from","","",237,[[["litbool",3]],["lit",4]]],[11,"from","","",305,[[["literal",3]]]],[11,"from","","",306,[[["literal",3]]]],[11,"from","","",242,[[["datastruct",3]],["data",4]]],[11,"from","","",242,[[["dataenum",3]],["data",4]]],[11,"from","","",242,[[["dataunion",3]],["data",4]]],[11,"from","","",255,[[["typearray",3]],["type",4]]],[11,"from","","",255,[[["typebarefn",3]],["type",4]]],[11,"from","","",255,[[["typegroup",3]],["type",4]]],[11,"from","","",255,[[["typeimpltrait",3]],["type",4]]],[11,"from","","",255,[[["typeinfer",3]],["type",4]]],[11,"from","","",255,[[["typemacro",3]],["type",4]]],[11,"from","","",255,[[["typenever",3]],["type",4]]],[11,"from","","",255,[[["typeparen",3]],["type",4]]],[11,"from","","",255,[[["typepath",3]],["type",4]]],[11,"from","","",255,[[["typeptr",3]],["type",4]]],[11,"from","","",255,[[["typereference",3]],["type",4]]],[11,"from","","",255,[[["typeslice",3]],["type",4]]],[11,"from","","",255,[[["typetraitobject",3]],["type",4]]],[11,"from","","",255,[[["typetuple",3]],["type",4]]],[11,"from","","",272,[[["patbox",3]],["pat",4]]],[11,"from","","",272,[[["patident",3]],["pat",4]]],[11,"from","","",272,[[["patlit",3]],["pat",4]]],[11,"from","","",272,[[["patmacro",3]],["pat",4]]],[11,"from","","",272,[[["pator",3]],["pat",4]]],[11,"from","","",272,[[["patpath",3]],["pat",4]]],[11,"from","","",272,[[["patrange",3]],["pat",4]]],[11,"from","","",272,[[["patreference",3]],["pat",4]]],[11,"from","","",272,[[["patrest",3]],["pat",4]]],[11,"from","","",272,[[["patslice",3]],["pat",4]]],[11,"from","","",272,[[["patstruct",3]],["pat",4]]],[11,"from","","",272,[[["pattuple",3]],["pat",4]]],[11,"from","","",272,[[["pattuplestruct",3]],["pat",4]]],[11,"from","","",272,[[["pattype",3]],["pat",4]]],[11,"from","","",272,[[["patwild",3]],["pat",4]]],[11,"from","","",293,[[]]],[11,"from","","",295,[[]]],[11,"from","syn::parse","",116,[[["lexerror",3]]]],[11,"next_back","syn::punctuated","",307,[[],["option",4]]],[11,"next_back","","",308,[[],["option",4]]],[11,"next_back","","",309,[[],["option",4]]],[11,"next_back","","",310,[[],["option",4]]],[11,"next_back","","",311,[[],["option",4]]],[11,"next_back","","",312,[[],["option",4]]],[11,"len","","",307,[[]]],[11,"len","","",308,[[]]],[11,"len","","",309,[[]]],[11,"len","","",310,[[]]],[11,"len","","",311,[[]]],[11,"len","","",312,[[]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","syn::parse","",116,[[["intoiterator",8]]]],[11,"into_iter","syn","",124,[[]]],[11,"into_iter","syn::punctuated","",106,[[]]],[11,"into_iter","syn::parse","",116,[[]]],[11,"next","syn::punctuated","",307,[[],["option",4]]],[11,"size_hint","","",307,[[]]],[11,"next","","",308,[[],["option",4]]],[11,"size_hint","","",308,[[]]],[11,"next","","",309,[[],["option",4]]],[11,"size_hint","","",309,[[]]],[11,"next","","",310,[[],["option",4]]],[11,"size_hint","","",310,[[]]],[11,"next","","",311,[[],["option",4]]],[11,"size_hint","","",311,[[]]],[11,"next","","",312,[[],["option",4]]],[11,"size_hint","","",312,[[]]],[11,"clone","syn::token","",0,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",9,[[]]],[11,"clone","","",10,[[]]],[11,"clone","","",11,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",13,[[]]],[11,"clone","","",14,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"clone","","",21,[[]]],[11,"clone","","",22,[[]]],[11,"clone","","",23,[[]]],[11,"clone","","",24,[[]]],[11,"clone","","",25,[[]]],[11,"clone","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",28,[[]]],[11,"clone","","",29,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",50,[[]]],[11,"clone","","",51,[[]]],[11,"clone","","",52,[[]]],[11,"clone","","",53,[[]]],[11,"clone","","",54,[[]]],[11,"clone","","",55,[[]]],[11,"clone","","",56,[[]]],[11,"clone","","",57,[[]]],[11,"clone","","",58,[[]]],[11,"clone","","",59,[[]]],[11,"clone","","",60,[[]]],[11,"clone","","",61,[[]]],[11,"clone","","",62,[[]]],[11,"clone","","",63,[[]]],[11,"clone","","",64,[[]]],[11,"clone","","",65,[[]]],[11,"clone","","",66,[[]]],[11,"clone","","",67,[[]]],[11,"clone","","",68,[[]]],[11,"clone","","",69,[[]]],[11,"clone","","",70,[[]]],[11,"clone","","",71,[[]]],[11,"clone","","",72,[[]]],[11,"clone","","",73,[[]]],[11,"clone","","",74,[[]]],[11,"clone","","",75,[[]]],[11,"clone","","",76,[[]]],[11,"clone","","",77,[[]]],[11,"clone","","",78,[[]]],[11,"clone","","",79,[[]]],[11,"clone","","",80,[[]]],[11,"clone","","",81,[[]]],[11,"clone","","",82,[[]]],[11,"clone","","",83,[[]]],[11,"clone","","",84,[[]]],[11,"clone","","",85,[[]]],[11,"clone","","",86,[[]]],[11,"clone","","",87,[[]]],[11,"clone","","",88,[[]]],[11,"clone","","",89,[[]]],[11,"clone","","",90,[[]]],[11,"clone","","",91,[[]]],[11,"clone","","",92,[[]]],[11,"clone","","",93,[[]]],[11,"clone","","",94,[[]]],[11,"clone","","",95,[[]]],[11,"clone","","",96,[[]]],[11,"clone","","",97,[[]]],[11,"clone","","",98,[[]]],[11,"clone","","",99,[[]]],[11,"clone","","",100,[[]]],[11,"clone","","",101,[[]]],[11,"clone","","",102,[[]]],[11,"clone","syn","",298,[[]]],[11,"clone","","",299,[[]]],[11,"clone","","",300,[[]]],[11,"clone","","",236,[[]]],[11,"clone","","",301,[[]]],[11,"clone","","",302,[[]]],[11,"clone","","",303,[[]]],[11,"clone","","",304,[[]]],[11,"clone","","",305,[[]]],[11,"clone","","",306,[[]]],[11,"clone","syn::buffer","",104,[[]]],[11,"clone","syn::punctuated","",106,[[]]],[11,"clone","","",307,[[]]],[11,"clone","","",309,[[]]],[11,"clone","","",310,[[]]],[11,"clone","","",311,[[]]],[11,"clone","","",107,[[]]],[11,"clone","syn","",252,[[]]],[11,"clone","","",288,[[]]],[11,"clone","","",132,[[]]],[11,"clone","","",117,[[]]],[11,"clone","","",118,[[]]],[11,"clone","","",253,[[]]],[11,"clone","","",247,[[]]],[11,"clone","","",289,[[]]],[11,"clone","","",249,[[]]],[11,"clone","","",180,[[]]],[11,"clone","","",181,[[]]],[11,"clone","","",290,[[]]],[11,"clone","","",242,[[]]],[11,"clone","","",243,[[]]],[11,"clone","","",244,[[]]],[11,"clone","","",245,[[]]],[11,"clone","","",246,[[]]],[11,"clone","","",138,[[]]],[11,"clone","","",139,[[]]],[11,"clone","","",140,[[]]],[11,"clone","","",141,[[]]],[11,"clone","","",142,[[]]],[11,"clone","","",143,[[]]],[11,"clone","","",144,[[]]],[11,"clone","","",145,[[]]],[11,"clone","","",146,[[]]],[11,"clone","","",147,[[]]],[11,"clone","","",148,[[]]],[11,"clone","","",149,[[]]],[11,"clone","","",150,[[]]],[11,"clone","","",151,[[]]],[11,"clone","","",152,[[]]],[11,"clone","","",153,[[]]],[11,"clone","","",154,[[]]],[11,"clone","","",155,[[]]],[11,"clone","","",156,[[]]],[11,"clone","","",157,[[]]],[11,"clone","","",158,[[]]],[11,"clone","","",159,[[]]],[11,"clone","","",160,[[]]],[11,"clone","","",161,[[]]],[11,"clone","","",162,[[]]],[11,"clone","","",163,[[]]],[11,"clone","","",164,[[]]],[11,"clone","","",165,[[]]],[11,"clone","","",166,[[]]],[11,"clone","","",167,[[]]],[11,"clone","","",168,[[]]],[11,"clone","","",169,[[]]],[11,"clone","","",170,[[]]],[11,"clone","","",171,[[]]],[11,"clone","","",172,[[]]],[11,"clone","","",173,[[]]],[11,"clone","","",174,[[]]],[11,"clone","","",175,[[]]],[11,"clone","","",176,[[]]],[11,"clone","","",177,[[]]],[11,"clone","","",123,[[]]],[11,"clone","","",271,[[]]],[11,"clone","","",133,[[]]],[11,"clone","","",124,[[]]],[11,"clone","","",125,[[]]],[11,"clone","","",126,[[]]],[11,"clone","","",235,[[]]],[11,"clone","","",194,[[]]],[11,"clone","","",195,[[]]],[11,"clone","","",196,[[]]],[11,"clone","","",197,[[]]],[11,"clone","","",198,[[]]],[11,"clone","","",199,[[]]],[11,"clone","","",291,[[]]],[11,"clone","","",134,[[]]],[11,"clone","","",182,[[]]],[11,"clone","","",183,[[]]],[11,"clone","","",200,[[]]],[11,"clone","","",201,[[]]],[11,"clone","","",202,[[]]],[11,"clone","","",203,[[]]],[11,"clone","","",204,[[]]],[11,"clone","","",178,[[]]],[11,"clone","","",205,[[]]],[11,"clone","","",206,[[]]],[11,"clone","","",207,[[]]],[11,"clone","","",208,[[]]],[11,"clone","","",209,[[]]],[11,"clone","","",210,[[]]],[11,"clone","","",211,[[]]],[11,"clone","","",212,[[]]],[11,"clone","","",213,[[]]],[11,"clone","","",214,[[]]],[11,"clone","","",215,[[]]],[11,"clone","","",216,[[]]],[11,"clone","","",217,[[]]],[11,"clone","","",218,[[]]],[11,"clone","","",219,[[]]],[11,"clone","","",220,[[]]],[11,"clone","","",221,[[]]],[11,"clone","","",135,[[]]],[11,"clone","","",184,[[]]],[11,"clone","","",237,[[]]],[11,"clone","","",238,[[]]],[11,"clone","","",250,[[]]],[11,"clone","","",240,[[]]],[11,"clone","","",241,[[]]],[11,"clone","","",179,[[]]],[11,"clone","","",119,[[]]],[11,"clone","","",120,[[]]],[11,"clone","","",121,[[]]],[11,"clone","","",136,[[]]],[11,"clone","","",122,[[]]],[11,"clone","","",292,[[]]],[11,"clone","","",272,[[]]],[11,"clone","","",273,[[]]],[11,"clone","","",274,[[]]],[11,"clone","","",275,[[]]],[11,"clone","","",276,[[]]],[11,"clone","","",277,[[]]],[11,"clone","","",278,[[]]],[11,"clone","","",279,[[]]],[11,"clone","","",280,[[]]],[11,"clone","","",281,[[]]],[11,"clone","","",282,[[]]],[11,"clone","","",283,[[]]],[11,"clone","","",284,[[]]],[11,"clone","","",285,[[]]],[11,"clone","","",286,[[]]],[11,"clone","","",287,[[]]],[11,"clone","","",293,[[]]],[11,"clone","","",294,[[]]],[11,"clone","","",295,[[]]],[11,"clone","","",185,[[]]],[11,"clone","","",186,[[]]],[11,"clone","","",187,[[]]],[11,"clone","","",296,[[]]],[11,"clone","","",137,[[]]],[11,"clone","","",222,[[]]],[11,"clone","","",254,[[]]],[11,"clone","","",223,[[]]],[11,"clone","","",251,[[]]],[11,"clone","","",188,[[]]],[11,"clone","","",189,[[]]],[11,"clone","","",224,[[]]],[11,"clone","","",225,[[]]],[11,"clone","","",226,[[]]],[11,"clone","","",227,[[]]],[11,"clone","","",228,[[]]],[11,"clone","","",255,[[]]],[11,"clone","","",256,[[]]],[11,"clone","","",257,[[]]],[11,"clone","","",258,[[]]],[11,"clone","","",259,[[]]],[11,"clone","","",260,[[]]],[11,"clone","","",261,[[]]],[11,"clone","","",262,[[]]],[11,"clone","","",190,[[]]],[11,"clone","","",191,[[]]],[11,"clone","","",263,[[]]],[11,"clone","","",264,[[]]],[11,"clone","","",265,[[]]],[11,"clone","","",266,[[]]],[11,"clone","","",267,[[]]],[11,"clone","","",268,[[]]],[11,"clone","","",269,[[]]],[11,"clone","","",248,[[]]],[11,"clone","","",229,[[]]],[11,"clone","","",230,[[]]],[11,"clone","","",231,[[]]],[11,"clone","","",232,[[]]],[11,"clone","","",233,[[]]],[11,"clone","","",234,[[]]],[11,"clone","","",270,[[]]],[11,"clone","","",127,[[]]],[11,"clone","","",128,[[]]],[11,"clone","","",129,[[]]],[11,"clone","","",130,[[]]],[11,"clone","","",131,[[]]],[11,"clone","","",192,[[]]],[11,"clone","","",193,[[]]],[11,"clone","syn::parse","",113,[[]]],[11,"clone","","",116,[[]]],[11,"default","syn::token","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","","",7,[[]]],[11,"default","","",8,[[]]],[11,"default","","",9,[[]]],[11,"default","","",10,[[]]],[11,"default","","",11,[[]]],[11,"default","","",12,[[]]],[11,"default","","",13,[[]]],[11,"default","","",14,[[]]],[11,"default","","",15,[[]]],[11,"default","","",16,[[]]],[11,"default","","",17,[[]]],[11,"default","","",18,[[]]],[11,"default","","",19,[[]]],[11,"default","","",20,[[]]],[11,"default","","",21,[[]]],[11,"default","","",22,[[]]],[11,"default","","",23,[[]]],[11,"default","","",24,[[]]],[11,"default","","",25,[[]]],[11,"default","","",26,[[]]],[11,"default","","",27,[[]]],[11,"default","","",28,[[]]],[11,"default","","",29,[[]]],[11,"default","","",30,[[]]],[11,"default","","",31,[[]]],[11,"default","","",32,[[]]],[11,"default","","",33,[[]]],[11,"default","","",34,[[]]],[11,"default","","",35,[[]]],[11,"default","","",36,[[]]],[11,"default","","",37,[[]]],[11,"default","","",38,[[]]],[11,"default","","",39,[[]]],[11,"default","","",40,[[]]],[11,"default","","",41,[[]]],[11,"default","","",42,[[]]],[11,"default","","",43,[[]]],[11,"default","","",44,[[]]],[11,"default","","",45,[[]]],[11,"default","","",46,[[]]],[11,"default","","",47,[[]]],[11,"default","","",48,[[]]],[11,"default","","",49,[[]]],[11,"default","","",50,[[]]],[11,"default","","",51,[[]]],[11,"default","","",52,[[]]],[11,"default","","",53,[[]]],[11,"default","","",54,[[]]],[11,"default","","",55,[[]]],[11,"default","","",56,[[]]],[11,"default","","",57,[[]]],[11,"default","","",58,[[]]],[11,"default","","",59,[[]]],[11,"default","","",60,[[]]],[11,"default","","",61,[[]]],[11,"default","","",62,[[]]],[11,"default","","",63,[[]]],[11,"default","","",64,[[]]],[11,"default","","",65,[[]]],[11,"default","","",66,[[]]],[11,"default","","",67,[[]]],[11,"default","","",68,[[]]],[11,"default","","",69,[[]]],[11,"default","","",70,[[]]],[11,"default","","",71,[[]]],[11,"default","","",72,[[]]],[11,"default","","",73,[[]]],[11,"default","","",74,[[]]],[11,"default","","",75,[[]]],[11,"default","","",76,[[]]],[11,"default","","",77,[[]]],[11,"default","","",78,[[]]],[11,"default","","",79,[[]]],[11,"default","","",80,[[]]],[11,"default","","",81,[[]]],[11,"default","","",82,[[]]],[11,"default","","",83,[[]]],[11,"default","","",84,[[]]],[11,"default","","",85,[[]]],[11,"default","","",86,[[]]],[11,"default","","",87,[[]]],[11,"default","","",88,[[]]],[11,"default","","",89,[[]]],[11,"default","","",90,[[]]],[11,"default","","",91,[[]]],[11,"default","","",92,[[]]],[11,"default","","",93,[[]]],[11,"default","","",94,[[]]],[11,"default","","",95,[[]]],[11,"default","","",96,[[]]],[11,"default","","",97,[[]]],[11,"default","","",98,[[]]],[11,"default","","",99,[[]]],[11,"default","","",100,[[]]],[11,"default","","",101,[[]]],[11,"default","","",102,[[]]],[11,"default","syn","",183,[[]]],[11,"default","","",180,[[]]],[11,"default","","",294,[[]]],[11,"default","syn::punctuated","",106,[[]]],[11,"cmp","syn","",236,[[["lifetime",3]],["ordering",4]]],[11,"eq","syn::token","",0,[[["underscore",3]]]],[11,"eq","","",1,[[["abstract",3]]]],[11,"eq","","",2,[[["as",3]]]],[11,"eq","","",3,[[["async",3]]]],[11,"eq","","",4,[[["auto",3]]]],[11,"eq","","",5,[[["await",3]]]],[11,"eq","","",6,[[["become",3]]]],[11,"eq","","",7,[[["box",3]]]],[11,"eq","","",8,[[["break",3]]]],[11,"eq","","",9,[[["const",3]]]],[11,"eq","","",10,[[["continue",3]]]],[11,"eq","","",11,[[["crate",3]]]],[11,"eq","","",12,[[["default",3]]]],[11,"eq","","",13,[[["do",3]]]],[11,"eq","","",14,[[["dyn",3]]]],[11,"eq","","",15,[[["else",3]]]],[11,"eq","","",16,[[["enum",3]]]],[11,"eq","","",17,[[["extern",3]]]],[11,"eq","","",18,[[["final",3]]]],[11,"eq","","",19,[[["fn",3]]]],[11,"eq","","",20,[[["for",3]]]],[11,"eq","","",21,[[["if",3]]]],[11,"eq","","",22,[[["impl",3]]]],[11,"eq","","",23,[[["in",3]]]],[11,"eq","","",24,[[["let",3]]]],[11,"eq","","",25,[[["loop",3]]]],[11,"eq","","",26,[[["macro",3]]]],[11,"eq","","",27,[[["match",3]]]],[11,"eq","","",28,[[["mod",3]]]],[11,"eq","","",29,[[["move",3]]]],[11,"eq","","",30,[[["mut",3]]]],[11,"eq","","",31,[[["override",3]]]],[11,"eq","","",32,[[["priv",3]]]],[11,"eq","","",33,[[["pub",3]]]],[11,"eq","","",34,[[["ref",3]]]],[11,"eq","","",35,[[["return",3]]]],[11,"eq","","",36,[[["selftype",3]]]],[11,"eq","","",37,[[["selfvalue",3]]]],[11,"eq","","",38,[[["static",3]]]],[11,"eq","","",39,[[["struct",3]]]],[11,"eq","","",40,[[["super",3]]]],[11,"eq","","",41,[[["trait",3]]]],[11,"eq","","",42,[[["try",3]]]],[11,"eq","","",43,[[["type",3]]]],[11,"eq","","",44,[[["typeof",3]]]],[11,"eq","","",45,[[["union",3]]]],[11,"eq","","",46,[[["unsafe",3]]]],[11,"eq","","",47,[[["unsized",3]]]],[11,"eq","","",48,[[["use",3]]]],[11,"eq","","",49,[[["virtual",3]]]],[11,"eq","","",50,[[["where",3]]]],[11,"eq","","",51,[[["while",3]]]],[11,"eq","","",52,[[["yield",3]]]],[11,"eq","","",53,[[["add",3]]]],[11,"eq","","",54,[[["addeq",3]]]],[11,"eq","","",55,[[["and",3]]]],[11,"eq","","",56,[[["andand",3]]]],[11,"eq","","",57,[[["andeq",3]]]],[11,"eq","","",58,[[["at",3]]]],[11,"eq","","",59,[[["bang",3]]]],[11,"eq","","",60,[[["caret",3]]]],[11,"eq","","",61,[[["careteq",3]]]],[11,"eq","","",62,[[["colon",3]]]],[11,"eq","","",63,[[["colon2",3]]]],[11,"eq","","",64,[[["comma",3]]]],[11,"eq","","",65,[[["div",3]]]],[11,"eq","","",66,[[["diveq",3]]]],[11,"eq","","",67,[[["dollar",3]]]],[11,"eq","","",68,[[["dot",3]]]],[11,"eq","","",69,[[["dot2",3]]]],[11,"eq","","",70,[[["dot3",3]]]],[11,"eq","","",71,[[["dotdoteq",3]]]],[11,"eq","","",72,[[["eq",3]]]],[11,"eq","","",73,[[["eqeq",3]]]],[11,"eq","","",74,[[["ge",3]]]],[11,"eq","","",75,[[["gt",3]]]],[11,"eq","","",76,[[["le",3]]]],[11,"eq","","",77,[[["lt",3]]]],[11,"eq","","",78,[[["muleq",3]]]],[11,"eq","","",79,[[["ne",3]]]],[11,"eq","","",80,[[["or",3]]]],[11,"eq","","",81,[[["oreq",3]]]],[11,"eq","","",82,[[["oror",3]]]],[11,"eq","","",83,[[["pound",3]]]],[11,"eq","","",84,[[["question",3]]]],[11,"eq","","",85,[[["rarrow",3]]]],[11,"eq","","",86,[[["larrow",3]]]],[11,"eq","","",87,[[["rem",3]]]],[11,"eq","","",88,[[["remeq",3]]]],[11,"eq","","",89,[[["fatarrow",3]]]],[11,"eq","","",90,[[["semi",3]]]],[11,"eq","","",91,[[["shl",3]]]],[11,"eq","","",92,[[["shleq",3]]]],[11,"eq","","",93,[[["shr",3]]]],[11,"eq","","",94,[[["shreq",3]]]],[11,"eq","","",95,[[["star",3]]]],[11,"eq","","",96,[[["sub",3]]]],[11,"eq","","",97,[[["subeq",3]]]],[11,"eq","","",98,[[["tilde",3]]]],[11,"eq","","",99,[[["brace",3]]]],[11,"eq","","",100,[[["bracket",3]]]],[11,"eq","","",101,[[["paren",3]]]],[11,"eq","","",102,[[["group",3]]]],[11,"eq","syn","",179,[[]]],[11,"eq","","",178,[[]]],[11,"eq","","",298,[[]]],[11,"eq","","",299,[[]]],[11,"eq","","",300,[[]]],[11,"eq","","",236,[[["lifetime",3]]]],[11,"eq","","",301,[[]]],[11,"eq","","",302,[[]]],[11,"eq","","",303,[[]]],[11,"eq","","",304,[[]]],[11,"eq","","",305,[[]]],[11,"eq","","",306,[[]]],[11,"eq","syn::buffer","",104,[[]]],[11,"eq","syn::punctuated","",106,[[]]],[11,"eq","syn","",252,[[]]],[11,"eq","","",288,[[]]],[11,"eq","","",132,[[]]],[11,"eq","","",117,[[]]],[11,"eq","","",118,[[]]],[11,"eq","","",253,[[]]],[11,"eq","","",247,[[]]],[11,"eq","","",289,[[]]],[11,"eq","","",249,[[]]],[11,"eq","","",180,[[]]],[11,"eq","","",181,[[]]],[11,"eq","","",290,[[]]],[11,"eq","","",242,[[]]],[11,"eq","","",243,[[]]],[11,"eq","","",244,[[]]],[11,"eq","","",245,[[]]],[11,"eq","","",246,[[]]],[11,"eq","","",138,[[]]],[11,"eq","","",139,[[]]],[11,"eq","","",140,[[]]],[11,"eq","","",141,[[]]],[11,"eq","","",142,[[]]],[11,"eq","","",143,[[]]],[11,"eq","","",144,[[]]],[11,"eq","","",145,[[]]],[11,"eq","","",146,[[]]],[11,"eq","","",147,[[]]],[11,"eq","","",148,[[]]],[11,"eq","","",149,[[]]],[11,"eq","","",150,[[]]],[11,"eq","","",151,[[]]],[11,"eq","","",152,[[]]],[11,"eq","","",153,[[]]],[11,"eq","","",154,[[]]],[11,"eq","","",155,[[]]],[11,"eq","","",156,[[]]],[11,"eq","","",157,[[]]],[11,"eq","","",158,[[]]],[11,"eq","","",159,[[]]],[11,"eq","","",160,[[]]],[11,"eq","","",161,[[]]],[11,"eq","","",162,[[]]],[11,"eq","","",163,[[]]],[11,"eq","","",164,[[]]],[11,"eq","","",165,[[]]],[11,"eq","","",166,[[]]],[11,"eq","","",167,[[]]],[11,"eq","","",168,[[]]],[11,"eq","","",169,[[]]],[11,"eq","","",170,[[]]],[11,"eq","","",171,[[]]],[11,"eq","","",172,[[]]],[11,"eq","","",173,[[]]],[11,"eq","","",174,[[]]],[11,"eq","","",175,[[]]],[11,"eq","","",176,[[]]],[11,"eq","","",177,[[]]],[11,"eq","","",123,[[]]],[11,"eq","","",271,[[]]],[11,"eq","","",133,[[]]],[11,"eq","","",124,[[]]],[11,"eq","","",125,[[]]],[11,"eq","","",126,[[]]],[11,"eq","","",235,[[]]],[11,"eq","","",194,[[]]],[11,"eq","","",195,[[]]],[11,"eq","","",196,[[]]],[11,"eq","","",197,[[]]],[11,"eq","","",198,[[]]],[11,"eq","","",199,[[]]],[11,"eq","","",291,[[]]],[11,"eq","","",134,[[]]],[11,"eq","","",182,[[]]],[11,"eq","","",183,[[]]],[11,"eq","","",200,[[]]],[11,"eq","","",201,[[]]],[11,"eq","","",202,[[]]],[11,"eq","","",203,[[]]],[11,"eq","","",204,[[]]],[11,"eq","","",205,[[]]],[11,"eq","","",206,[[]]],[11,"eq","","",207,[[]]],[11,"eq","","",208,[[]]],[11,"eq","","",209,[[]]],[11,"eq","","",210,[[]]],[11,"eq","","",211,[[]]],[11,"eq","","",212,[[]]],[11,"eq","","",213,[[]]],[11,"eq","","",214,[[]]],[11,"eq","","",215,[[]]],[11,"eq","","",216,[[]]],[11,"eq","","",217,[[]]],[11,"eq","","",218,[[]]],[11,"eq","","",219,[[]]],[11,"eq","","",220,[[]]],[11,"eq","","",221,[[]]],[11,"eq","","",135,[[]]],[11,"eq","","",184,[[]]],[11,"eq","","",237,[[]]],[11,"eq","","",238,[[]]],[11,"eq","","",250,[[]]],[11,"eq","","",240,[[]]],[11,"eq","","",241,[[]]],[11,"eq","","",119,[[]]],[11,"eq","","",120,[[]]],[11,"eq","","",121,[[]]],[11,"eq","","",136,[[]]],[11,"eq","","",122,[[]]],[11,"eq","","",292,[[]]],[11,"eq","","",272,[[]]],[11,"eq","","",273,[[]]],[11,"eq","","",274,[[]]],[11,"eq","","",275,[[]]],[11,"eq","","",276,[[]]],[11,"eq","","",277,[[]]],[11,"eq","","",278,[[]]],[11,"eq","","",279,[[]]],[11,"eq","","",280,[[]]],[11,"eq","","",281,[[]]],[11,"eq","","",282,[[]]],[11,"eq","","",283,[[]]],[11,"eq","","",284,[[]]],[11,"eq","","",285,[[]]],[11,"eq","","",286,[[]]],[11,"eq","","",287,[[]]],[11,"eq","","",293,[[]]],[11,"eq","","",294,[[]]],[11,"eq","","",295,[[]]],[11,"eq","","",185,[[]]],[11,"eq","","",186,[[]]],[11,"eq","","",187,[[]]],[11,"eq","","",296,[[]]],[11,"eq","","",137,[[]]],[11,"eq","","",222,[[]]],[11,"eq","","",254,[[]]],[11,"eq","","",223,[[]]],[11,"eq","","",251,[[]]],[11,"eq","","",188,[[]]],[11,"eq","","",189,[[]]],[11,"eq","","",224,[[]]],[11,"eq","","",225,[[]]],[11,"eq","","",226,[[]]],[11,"eq","","",227,[[]]],[11,"eq","","",228,[[]]],[11,"eq","","",255,[[]]],[11,"eq","","",256,[[]]],[11,"eq","","",257,[[]]],[11,"eq","","",258,[[]]],[11,"eq","","",259,[[]]],[11,"eq","","",260,[[]]],[11,"eq","","",261,[[]]],[11,"eq","","",262,[[]]],[11,"eq","","",190,[[]]],[11,"eq","","",191,[[]]],[11,"eq","","",263,[[]]],[11,"eq","","",264,[[]]],[11,"eq","","",265,[[]]],[11,"eq","","",266,[[]]],[11,"eq","","",267,[[]]],[11,"eq","","",268,[[]]],[11,"eq","","",269,[[]]],[11,"eq","","",248,[[]]],[11,"eq","","",229,[[]]],[11,"eq","","",230,[[]]],[11,"eq","","",231,[[]]],[11,"eq","","",232,[[]]],[11,"eq","","",233,[[]]],[11,"eq","","",234,[[]]],[11,"eq","","",270,[[]]],[11,"eq","","",127,[[]]],[11,"eq","","",128,[[]]],[11,"eq","","",129,[[]]],[11,"eq","","",130,[[]]],[11,"eq","","",131,[[]]],[11,"eq","","",192,[[]]],[11,"eq","","",193,[[]]],[11,"partial_cmp","","",236,[[["lifetime",3]],[["option",4],["ordering",4]]]],[11,"deref","syn::token","",0,[[]]],[11,"deref","","",53,[[]]],[11,"deref","","",55,[[]]],[11,"deref","","",58,[[]]],[11,"deref","","",59,[[]]],[11,"deref","","",60,[[]]],[11,"deref","","",62,[[]]],[11,"deref","","",64,[[]]],[11,"deref","","",65,[[]]],[11,"deref","","",67,[[]]],[11,"deref","","",68,[[]]],[11,"deref","","",72,[[]]],[11,"deref","","",75,[[]]],[11,"deref","","",77,[[]]],[11,"deref","","",80,[[]]],[11,"deref","","",83,[[]]],[11,"deref","","",84,[[]]],[11,"deref","","",87,[[]]],[11,"deref","","",90,[[]]],[11,"deref","","",95,[[]]],[11,"deref","","",96,[[]]],[11,"deref","","",98,[[]]],[11,"deref","syn::parse","",113,[[]]],[11,"deref_mut","syn::token","",0,[[]]],[11,"deref_mut","","",53,[[]]],[11,"deref_mut","","",55,[[]]],[11,"deref_mut","","",58,[[]]],[11,"deref_mut","","",59,[[]]],[11,"deref_mut","","",60,[[]]],[11,"deref_mut","","",62,[[]]],[11,"deref_mut","","",64,[[]]],[11,"deref_mut","","",65,[[]]],[11,"deref_mut","","",67,[[]]],[11,"deref_mut","","",68,[[]]],[11,"deref_mut","","",72,[[]]],[11,"deref_mut","","",75,[[]]],[11,"deref_mut","","",77,[[]]],[11,"deref_mut","","",80,[[]]],[11,"deref_mut","","",83,[[]]],[11,"deref_mut","","",84,[[]]],[11,"deref_mut","","",87,[[]]],[11,"deref_mut","","",90,[[]]],[11,"deref_mut","","",95,[[]]],[11,"deref_mut","","",96,[[]]],[11,"deref_mut","","",98,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",298,[[["formatter",3]],["result",6]]],[11,"fmt","","",299,[[["formatter",3]],["result",6]]],[11,"fmt","","",300,[[["formatter",3]],["result",6]]],[11,"fmt","","",301,[[["formatter",3]],["result",6]]],[11,"fmt","","",302,[[["formatter",3]],["result",6]]],[11,"fmt","","",303,[[["formatter",3]],["result",6]]],[11,"fmt","","",304,[[["formatter",3]],["result",6]]],[11,"fmt","","",305,[[["formatter",3]],["result",6]]],[11,"fmt","","",306,[[["formatter",3]],["result",6]]],[11,"fmt","","",238,[[["formatter",3]],["result",6]]],[11,"fmt","syn::punctuated","",106,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",252,[[["formatter",3]],["result",6]]],[11,"fmt","","",288,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",253,[[["formatter",3]],["result",6]]],[11,"fmt","","",247,[[["formatter",3]],["result",6]]],[11,"fmt","","",289,[[["formatter",3]],["result",6]]],[11,"fmt","","",249,[[["formatter",3]],["result",6]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","","",181,[[["formatter",3]],["result",6]]],[11,"fmt","","",290,[[["formatter",3]],["result",6]]],[11,"fmt","","",242,[[["formatter",3]],["result",6]]],[11,"fmt","","",243,[[["formatter",3]],["result",6]]],[11,"fmt","","",244,[[["formatter",3]],["result",6]]],[11,"fmt","","",245,[[["formatter",3]],["result",6]]],[11,"fmt","","",246,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",169,[[["formatter",3]],["result",6]]],[11,"fmt","","",170,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",172,[[["formatter",3]],["result",6]]],[11,"fmt","","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",271,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",235,[[["formatter",3]],["result",6]]],[11,"fmt","","",194,[[["formatter",3]],["result",6]]],[11,"fmt","","",195,[[["formatter",3]],["result",6]]],[11,"fmt","","",196,[[["formatter",3]],["result",6]]],[11,"fmt","","",197,[[["formatter",3]],["result",6]]],[11,"fmt","","",198,[[["formatter",3]],["result",6]]],[11,"fmt","","",199,[[["formatter",3]],["result",6]]],[11,"fmt","","",291,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",182,[[["formatter",3]],["result",6]]],[11,"fmt","","",183,[[["formatter",3]],["result",6]]],[11,"fmt","","",200,[[["formatter",3]],["result",6]]],[11,"fmt","","",201,[[["formatter",3]],["result",6]]],[11,"fmt","","",202,[[["formatter",3]],["result",6]]],[11,"fmt","","",203,[[["formatter",3]],["result",6]]],[11,"fmt","","",204,[[["formatter",3]],["result",6]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"fmt","","",205,[[["formatter",3]],["result",6]]],[11,"fmt","","",206,[[["formatter",3]],["result",6]]],[11,"fmt","","",207,[[["formatter",3]],["result",6]]],[11,"fmt","","",208,[[["formatter",3]],["result",6]]],[11,"fmt","","",209,[[["formatter",3]],["result",6]]],[11,"fmt","","",210,[[["formatter",3]],["result",6]]],[11,"fmt","","",211,[[["formatter",3]],["result",6]]],[11,"fmt","","",212,[[["formatter",3]],["result",6]]],[11,"fmt","","",213,[[["formatter",3]],["result",6]]],[11,"fmt","","",214,[[["formatter",3]],["result",6]]],[11,"fmt","","",215,[[["formatter",3]],["result",6]]],[11,"fmt","","",216,[[["formatter",3]],["result",6]]],[11,"fmt","","",217,[[["formatter",3]],["result",6]]],[11,"fmt","","",218,[[["formatter",3]],["result",6]]],[11,"fmt","","",219,[[["formatter",3]],["result",6]]],[11,"fmt","","",220,[[["formatter",3]],["result",6]]],[11,"fmt","","",221,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",236,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","","",237,[[["formatter",3]],["result",6]]],[11,"fmt","","",250,[[["formatter",3]],["result",6]]],[11,"fmt","","",240,[[["formatter",3]],["result",6]]],[11,"fmt","","",241,[[["formatter",3]],["result",6]]],[11,"fmt","","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",292,[[["formatter",3]],["result",6]]],[11,"fmt","","",272,[[["formatter",3]],["result",6]]],[11,"fmt","","",273,[[["formatter",3]],["result",6]]],[11,"fmt","","",274,[[["formatter",3]],["result",6]]],[11,"fmt","","",275,[[["formatter",3]],["result",6]]],[11,"fmt","","",276,[[["formatter",3]],["result",6]]],[11,"fmt","","",277,[[["formatter",3]],["result",6]]],[11,"fmt","","",278,[[["formatter",3]],["result",6]]],[11,"fmt","","",279,[[["formatter",3]],["result",6]]],[11,"fmt","","",280,[[["formatter",3]],["result",6]]],[11,"fmt","","",281,[[["formatter",3]],["result",6]]],[11,"fmt","","",282,[[["formatter",3]],["result",6]]],[11,"fmt","","",283,[[["formatter",3]],["result",6]]],[11,"fmt","","",284,[[["formatter",3]],["result",6]]],[11,"fmt","","",285,[[["formatter",3]],["result",6]]],[11,"fmt","","",286,[[["formatter",3]],["result",6]]],[11,"fmt","","",287,[[["formatter",3]],["result",6]]],[11,"fmt","","",293,[[["formatter",3]],["result",6]]],[11,"fmt","","",294,[[["formatter",3]],["result",6]]],[11,"fmt","","",295,[[["formatter",3]],["result",6]]],[11,"fmt","","",185,[[["formatter",3]],["result",6]]],[11,"fmt","","",186,[[["formatter",3]],["result",6]]],[11,"fmt","","",187,[[["formatter",3]],["result",6]]],[11,"fmt","","",296,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",222,[[["formatter",3]],["result",6]]],[11,"fmt","","",254,[[["formatter",3]],["result",6]]],[11,"fmt","","",223,[[["formatter",3]],["result",6]]],[11,"fmt","","",251,[[["formatter",3]],["result",6]]],[11,"fmt","","",188,[[["formatter",3]],["result",6]]],[11,"fmt","","",189,[[["formatter",3]],["result",6]]],[11,"fmt","","",224,[[["formatter",3]],["result",6]]],[11,"fmt","","",225,[[["formatter",3]],["result",6]]],[11,"fmt","","",226,[[["formatter",3]],["result",6]]],[11,"fmt","","",227,[[["formatter",3]],["result",6]]],[11,"fmt","","",228,[[["formatter",3]],["result",6]]],[11,"fmt","","",255,[[["formatter",3]],["result",6]]],[11,"fmt","","",256,[[["formatter",3]],["result",6]]],[11,"fmt","","",257,[[["formatter",3]],["result",6]]],[11,"fmt","","",258,[[["formatter",3]],["result",6]]],[11,"fmt","","",259,[[["formatter",3]],["result",6]]],[11,"fmt","","",260,[[["formatter",3]],["result",6]]],[11,"fmt","","",261,[[["formatter",3]],["result",6]]],[11,"fmt","","",262,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",263,[[["formatter",3]],["result",6]]],[11,"fmt","","",264,[[["formatter",3]],["result",6]]],[11,"fmt","","",265,[[["formatter",3]],["result",6]]],[11,"fmt","","",266,[[["formatter",3]],["result",6]]],[11,"fmt","","",267,[[["formatter",3]],["result",6]]],[11,"fmt","","",268,[[["formatter",3]],["result",6]]],[11,"fmt","","",269,[[["formatter",3]],["result",6]]],[11,"fmt","","",248,[[["formatter",3]],["result",6]]],[11,"fmt","","",229,[[["formatter",3]],["result",6]]],[11,"fmt","","",230,[[["formatter",3]],["result",6]]],[11,"fmt","","",231,[[["formatter",3]],["result",6]]],[11,"fmt","","",232,[[["formatter",3]],["result",6]]],[11,"fmt","","",233,[[["formatter",3]],["result",6]]],[11,"fmt","","",234,[[["formatter",3]],["result",6]]],[11,"fmt","","",270,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",192,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",236,[[["formatter",3]],["result",6]]],[11,"fmt","","",305,[[["formatter",3]],["result",6]]],[11,"fmt","","",306,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"index","syn::punctuated","",106,[[]]],[11,"index_mut","","",106,[[]]],[11,"hash","syn::token","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",62,[[]]],[11,"hash","","",63,[[]]],[11,"hash","","",64,[[]]],[11,"hash","","",65,[[]]],[11,"hash","","",66,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",68,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",70,[[]]],[11,"hash","","",71,[[]]],[11,"hash","","",72,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",76,[[]]],[11,"hash","","",77,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",80,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",82,[[]]],[11,"hash","","",83,[[]]],[11,"hash","","",84,[[]]],[11,"hash","","",85,[[]]],[11,"hash","","",86,[[]]],[11,"hash","","",87,[[]]],[11,"hash","","",88,[[]]],[11,"hash","","",89,[[]]],[11,"hash","","",90,[[]]],[11,"hash","","",91,[[]]],[11,"hash","","",92,[[]]],[11,"hash","","",93,[[]]],[11,"hash","","",94,[[]]],[11,"hash","","",95,[[]]],[11,"hash","","",96,[[]]],[11,"hash","","",97,[[]]],[11,"hash","","",98,[[]]],[11,"hash","","",99,[[]]],[11,"hash","","",100,[[]]],[11,"hash","","",101,[[]]],[11,"hash","","",102,[[]]],[11,"hash","syn","",179,[[]]],[11,"hash","","",178,[[]]],[11,"hash","","",298,[[]]],[11,"hash","","",299,[[]]],[11,"hash","","",300,[[]]],[11,"hash","","",236,[[]]],[11,"hash","","",301,[[]]],[11,"hash","","",302,[[]]],[11,"hash","","",303,[[]]],[11,"hash","","",304,[[]]],[11,"hash","","",305,[[]]],[11,"hash","","",306,[[]]],[11,"hash","syn::punctuated","",106,[[]]],[11,"hash","syn","",252,[[]]],[11,"hash","","",288,[[]]],[11,"hash","","",132,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",118,[[]]],[11,"hash","","",253,[[]]],[11,"hash","","",247,[[]]],[11,"hash","","",289,[[]]],[11,"hash","","",249,[[]]],[11,"hash","","",180,[[]]],[11,"hash","","",181,[[]]],[11,"hash","","",290,[[]]],[11,"hash","","",242,[[]]],[11,"hash","","",243,[[]]],[11,"hash","","",244,[[]]],[11,"hash","","",245,[[]]],[11,"hash","","",246,[[]]],[11,"hash","","",138,[[]]],[11,"hash","","",139,[[]]],[11,"hash","","",140,[[]]],[11,"hash","","",141,[[]]],[11,"hash","","",142,[[]]],[11,"hash","","",143,[[]]],[11,"hash","","",144,[[]]],[11,"hash","","",145,[[]]],[11,"hash","","",146,[[]]],[11,"hash","","",147,[[]]],[11,"hash","","",148,[[]]],[11,"hash","","",149,[[]]],[11,"hash","","",150,[[]]],[11,"hash","","",151,[[]]],[11,"hash","","",152,[[]]],[11,"hash","","",153,[[]]],[11,"hash","","",154,[[]]],[11,"hash","","",155,[[]]],[11,"hash","","",156,[[]]],[11,"hash","","",157,[[]]],[11,"hash","","",158,[[]]],[11,"hash","","",159,[[]]],[11,"hash","","",160,[[]]],[11,"hash","","",161,[[]]],[11,"hash","","",162,[[]]],[11,"hash","","",163,[[]]],[11,"hash","","",164,[[]]],[11,"hash","","",165,[[]]],[11,"hash","","",166,[[]]],[11,"hash","","",167,[[]]],[11,"hash","","",168,[[]]],[11,"hash","","",169,[[]]],[11,"hash","","",170,[[]]],[11,"hash","","",171,[[]]],[11,"hash","","",172,[[]]],[11,"hash","","",173,[[]]],[11,"hash","","",174,[[]]],[11,"hash","","",175,[[]]],[11,"hash","","",176,[[]]],[11,"hash","","",177,[[]]],[11,"hash","","",123,[[]]],[11,"hash","","",271,[[]]],[11,"hash","","",133,[[]]],[11,"hash","","",124,[[]]],[11,"hash","","",125,[[]]],[11,"hash","","",126,[[]]],[11,"hash","","",235,[[]]],[11,"hash","","",194,[[]]],[11,"hash","","",195,[[]]],[11,"hash","","",196,[[]]],[11,"hash","","",197,[[]]],[11,"hash","","",198,[[]]],[11,"hash","","",199,[[]]],[11,"hash","","",291,[[]]],[11,"hash","","",134,[[]]],[11,"hash","","",182,[[]]],[11,"hash","","",183,[[]]],[11,"hash","","",200,[[]]],[11,"hash","","",201,[[]]],[11,"hash","","",202,[[]]],[11,"hash","","",203,[[]]],[11,"hash","","",204,[[]]],[11,"hash","","",205,[[]]],[11,"hash","","",206,[[]]],[11,"hash","","",207,[[]]],[11,"hash","","",208,[[]]],[11,"hash","","",209,[[]]],[11,"hash","","",210,[[]]],[11,"hash","","",211,[[]]],[11,"hash","","",212,[[]]],[11,"hash","","",213,[[]]],[11,"hash","","",214,[[]]],[11,"hash","","",215,[[]]],[11,"hash","","",216,[[]]],[11,"hash","","",217,[[]]],[11,"hash","","",218,[[]]],[11,"hash","","",219,[[]]],[11,"hash","","",220,[[]]],[11,"hash","","",221,[[]]],[11,"hash","","",135,[[]]],[11,"hash","","",184,[[]]],[11,"hash","","",237,[[]]],[11,"hash","","",238,[[]]],[11,"hash","","",250,[[]]],[11,"hash","","",240,[[]]],[11,"hash","","",241,[[]]],[11,"hash","","",119,[[]]],[11,"hash","","",120,[[]]],[11,"hash","","",121,[[]]],[11,"hash","","",136,[[]]],[11,"hash","","",122,[[]]],[11,"hash","","",292,[[]]],[11,"hash","","",272,[[]]],[11,"hash","","",273,[[]]],[11,"hash","","",274,[[]]],[11,"hash","","",275,[[]]],[11,"hash","","",276,[[]]],[11,"hash","","",277,[[]]],[11,"hash","","",278,[[]]],[11,"hash","","",279,[[]]],[11,"hash","","",280,[[]]],[11,"hash","","",281,[[]]],[11,"hash","","",282,[[]]],[11,"hash","","",283,[[]]],[11,"hash","","",284,[[]]],[11,"hash","","",285,[[]]],[11,"hash","","",286,[[]]],[11,"hash","","",287,[[]]],[11,"hash","","",293,[[]]],[11,"hash","","",294,[[]]],[11,"hash","","",295,[[]]],[11,"hash","","",185,[[]]],[11,"hash","","",186,[[]]],[11,"hash","","",187,[[]]],[11,"hash","","",296,[[]]],[11,"hash","","",137,[[]]],[11,"hash","","",222,[[]]],[11,"hash","","",254,[[]]],[11,"hash","","",223,[[]]],[11,"hash","","",251,[[]]],[11,"hash","","",188,[[]]],[11,"hash","","",189,[[]]],[11,"hash","","",224,[[]]],[11,"hash","","",225,[[]]],[11,"hash","","",226,[[]]],[11,"hash","","",227,[[]]],[11,"hash","","",228,[[]]],[11,"hash","","",255,[[]]],[11,"hash","","",256,[[]]],[11,"hash","","",257,[[]]],[11,"hash","","",258,[[]]],[11,"hash","","",259,[[]]],[11,"hash","","",260,[[]]],[11,"hash","","",261,[[]]],[11,"hash","","",262,[[]]],[11,"hash","","",190,[[]]],[11,"hash","","",191,[[]]],[11,"hash","","",263,[[]]],[11,"hash","","",264,[[]]],[11,"hash","","",265,[[]]],[11,"hash","","",266,[[]]],[11,"hash","","",267,[[]]],[11,"hash","","",268,[[]]],[11,"hash","","",269,[[]]],[11,"hash","","",248,[[]]],[11,"hash","","",229,[[]]],[11,"hash","","",230,[[]]],[11,"hash","","",231,[[]]],[11,"hash","","",232,[[]]],[11,"hash","","",233,[[]]],[11,"hash","","",234,[[]]],[11,"hash","","",270,[[]]],[11,"hash","","",127,[[]]],[11,"hash","","",128,[[]]],[11,"hash","","",129,[[]]],[11,"hash","","",130,[[]]],[11,"hash","","",131,[[]]],[11,"hash","","",192,[[]]],[11,"hash","","",193,[[]]],[11,"from_iter","syn::punctuated","",106,[[["intoiterator",8]]]],[11,"from_iter","","",106,[[["intoiterator",8]]]],[11,"to_tokens","syn::token","",0,[[["tokenstream",3]]]],[11,"to_tokens","","",1,[[["tokenstream",3]]]],[11,"to_tokens","","",2,[[["tokenstream",3]]]],[11,"to_tokens","","",3,[[["tokenstream",3]]]],[11,"to_tokens","","",4,[[["tokenstream",3]]]],[11,"to_tokens","","",5,[[["tokenstream",3]]]],[11,"to_tokens","","",6,[[["tokenstream",3]]]],[11,"to_tokens","","",7,[[["tokenstream",3]]]],[11,"to_tokens","","",8,[[["tokenstream",3]]]],[11,"to_tokens","","",9,[[["tokenstream",3]]]],[11,"to_tokens","","",10,[[["tokenstream",3]]]],[11,"to_tokens","","",11,[[["tokenstream",3]]]],[11,"to_tokens","","",12,[[["tokenstream",3]]]],[11,"to_tokens","","",13,[[["tokenstream",3]]]],[11,"to_tokens","","",14,[[["tokenstream",3]]]],[11,"to_tokens","","",15,[[["tokenstream",3]]]],[11,"to_tokens","","",16,[[["tokenstream",3]]]],[11,"to_tokens","","",17,[[["tokenstream",3]]]],[11,"to_tokens","","",18,[[["tokenstream",3]]]],[11,"to_tokens","","",19,[[["tokenstream",3]]]],[11,"to_tokens","","",20,[[["tokenstream",3]]]],[11,"to_tokens","","",21,[[["tokenstream",3]]]],[11,"to_tokens","","",22,[[["tokenstream",3]]]],[11,"to_tokens","","",23,[[["tokenstream",3]]]],[11,"to_tokens","","",24,[[["tokenstream",3]]]],[11,"to_tokens","","",25,[[["tokenstream",3]]]],[11,"to_tokens","","",26,[[["tokenstream",3]]]],[11,"to_tokens","","",27,[[["tokenstream",3]]]],[11,"to_tokens","","",28,[[["tokenstream",3]]]],[11,"to_tokens","","",29,[[["tokenstream",3]]]],[11,"to_tokens","","",30,[[["tokenstream",3]]]],[11,"to_tokens","","",31,[[["tokenstream",3]]]],[11,"to_tokens","","",32,[[["tokenstream",3]]]],[11,"to_tokens","","",33,[[["tokenstream",3]]]],[11,"to_tokens","","",34,[[["tokenstream",3]]]],[11,"to_tokens","","",35,[[["tokenstream",3]]]],[11,"to_tokens","","",36,[[["tokenstream",3]]]],[11,"to_tokens","","",37,[[["tokenstream",3]]]],[11,"to_tokens","","",38,[[["tokenstream",3]]]],[11,"to_tokens","","",39,[[["tokenstream",3]]]],[11,"to_tokens","","",40,[[["tokenstream",3]]]],[11,"to_tokens","","",41,[[["tokenstream",3]]]],[11,"to_tokens","","",42,[[["tokenstream",3]]]],[11,"to_tokens","","",43,[[["tokenstream",3]]]],[11,"to_tokens","","",44,[[["tokenstream",3]]]],[11,"to_tokens","","",45,[[["tokenstream",3]]]],[11,"to_tokens","","",46,[[["tokenstream",3]]]],[11,"to_tokens","","",47,[[["tokenstream",3]]]],[11,"to_tokens","","",48,[[["tokenstream",3]]]],[11,"to_tokens","","",49,[[["tokenstream",3]]]],[11,"to_tokens","","",50,[[["tokenstream",3]]]],[11,"to_tokens","","",51,[[["tokenstream",3]]]],[11,"to_tokens","","",52,[[["tokenstream",3]]]],[11,"to_tokens","","",53,[[["tokenstream",3]]]],[11,"to_tokens","","",54,[[["tokenstream",3]]]],[11,"to_tokens","","",55,[[["tokenstream",3]]]],[11,"to_tokens","","",56,[[["tokenstream",3]]]],[11,"to_tokens","","",57,[[["tokenstream",3]]]],[11,"to_tokens","","",58,[[["tokenstream",3]]]],[11,"to_tokens","","",59,[[["tokenstream",3]]]],[11,"to_tokens","","",60,[[["tokenstream",3]]]],[11,"to_tokens","","",61,[[["tokenstream",3]]]],[11,"to_tokens","","",62,[[["tokenstream",3]]]],[11,"to_tokens","","",63,[[["tokenstream",3]]]],[11,"to_tokens","","",64,[[["tokenstream",3]]]],[11,"to_tokens","","",65,[[["tokenstream",3]]]],[11,"to_tokens","","",66,[[["tokenstream",3]]]],[11,"to_tokens","","",67,[[["tokenstream",3]]]],[11,"to_tokens","","",68,[[["tokenstream",3]]]],[11,"to_tokens","","",69,[[["tokenstream",3]]]],[11,"to_tokens","","",70,[[["tokenstream",3]]]],[11,"to_tokens","","",71,[[["tokenstream",3]]]],[11,"to_tokens","","",72,[[["tokenstream",3]]]],[11,"to_tokens","","",73,[[["tokenstream",3]]]],[11,"to_tokens","","",74,[[["tokenstream",3]]]],[11,"to_tokens","","",75,[[["tokenstream",3]]]],[11,"to_tokens","","",76,[[["tokenstream",3]]]],[11,"to_tokens","","",77,[[["tokenstream",3]]]],[11,"to_tokens","","",78,[[["tokenstream",3]]]],[11,"to_tokens","","",79,[[["tokenstream",3]]]],[11,"to_tokens","","",80,[[["tokenstream",3]]]],[11,"to_tokens","","",81,[[["tokenstream",3]]]],[11,"to_tokens","","",82,[[["tokenstream",3]]]],[11,"to_tokens","","",83,[[["tokenstream",3]]]],[11,"to_tokens","","",84,[[["tokenstream",3]]]],[11,"to_tokens","","",85,[[["tokenstream",3]]]],[11,"to_tokens","","",86,[[["tokenstream",3]]]],[11,"to_tokens","","",87,[[["tokenstream",3]]]],[11,"to_tokens","","",88,[[["tokenstream",3]]]],[11,"to_tokens","","",89,[[["tokenstream",3]]]],[11,"to_tokens","","",90,[[["tokenstream",3]]]],[11,"to_tokens","","",91,[[["tokenstream",3]]]],[11,"to_tokens","","",92,[[["tokenstream",3]]]],[11,"to_tokens","","",93,[[["tokenstream",3]]]],[11,"to_tokens","","",94,[[["tokenstream",3]]]],[11,"to_tokens","","",95,[[["tokenstream",3]]]],[11,"to_tokens","","",96,[[["tokenstream",3]]]],[11,"to_tokens","","",97,[[["tokenstream",3]]]],[11,"to_tokens","","",98,[[["tokenstream",3]]]],[11,"to_tokens","syn","",119,[[["tokenstream",3]]]],[11,"to_tokens","","",122,[[["tokenstream",3]]]],[11,"to_tokens","","",118,[[["tokenstream",3]]]],[11,"to_tokens","","",120,[[["tokenstream",3]]]],[11,"to_tokens","","",121,[[["tokenstream",3]]]],[11,"to_tokens","","",124,[[["tokenstream",3]]]],[11,"to_tokens","","",131,[[["tokenstream",3]]]],[11,"to_tokens","","",127,[[["tokenstream",3]]]],[11,"to_tokens","","",125,[[["tokenstream",3]]]],[11,"to_tokens","","",126,[[["tokenstream",3]]]],[11,"to_tokens","","",123,[[["tokenstream",3]]]],[11,"to_tokens","","",129,[[["tokenstream",3]]]],[11,"to_tokens","","",128,[[["tokenstream",3]]]],[11,"to_tokens","","",130,[[["tokenstream",3]]]],[11,"to_tokens","","",138,[[["tokenstream",3]]]],[11,"to_tokens","","",146,[[["tokenstream",3]]]],[11,"to_tokens","","",139,[[["tokenstream",3]]]],[11,"to_tokens","","",148,[[["tokenstream",3]]]],[11,"to_tokens","","",162,[[["tokenstream",3]]]],[11,"to_tokens","","",136,[[["tokenstream",3]]]],[11,"to_tokens","","",134,[[["tokenstream",3]]]],[11,"to_tokens","","",172,[[["tokenstream",3]]]],[11,"to_tokens","","",144,[[["tokenstream",3]]]],[11,"to_tokens","","",174,[[["tokenstream",3]]]],[11,"to_tokens","","",158,[[["tokenstream",3]]]],[11,"to_tokens","","",149,[[["tokenstream",3]]]],[11,"to_tokens","","",173,[[["tokenstream",3]]]],[11,"to_tokens","","",157,[[["tokenstream",3]]]],[11,"to_tokens","","",155,[[["tokenstream",3]]]],[11,"to_tokens","","",176,[[["tokenstream",3]]]],[11,"to_tokens","","",153,[[["tokenstream",3]]]],[11,"to_tokens","","",159,[[["tokenstream",3]]]],[11,"to_tokens","","",161,[[["tokenstream",3]]]],[11,"to_tokens","","",142,[[["tokenstream",3]]]],[11,"to_tokens","","",143,[[["tokenstream",3]]]],[11,"to_tokens","","",171,[[["tokenstream",3]]]],[11,"to_tokens","","",177,[[["tokenstream",3]]]],[11,"to_tokens","","",150,[[["tokenstream",3]]]],[11,"to_tokens","","",175,[[["tokenstream",3]]]],[11,"to_tokens","","",145,[[["tokenstream",3]]]],[11,"to_tokens","","",140,[[["tokenstream",3]]]],[11,"to_tokens","","",141,[[["tokenstream",3]]]],[11,"to_tokens","","",152,[[["tokenstream",3]]]],[11,"to_tokens","","",179,[[["tokenstream",3]]]],[11,"to_tokens","","",178,[[["tokenstream",3]]]],[11,"to_tokens","","",156,[[["tokenstream",3]]]],[11,"to_tokens","","",165,[[["tokenstream",3]]]],[11,"to_tokens","","",164,[[["tokenstream",3]]]],[11,"to_tokens","","",166,[[["tokenstream",3]]]],[11,"to_tokens","","",147,[[["tokenstream",3]]]],[11,"to_tokens","","",151,[[["tokenstream",3]]]],[11,"to_tokens","","",168,[[["tokenstream",3]]]],[11,"to_tokens","","",160,[[["tokenstream",3]]]],[11,"to_tokens","","",169,[[["tokenstream",3]]]],[11,"to_tokens","","",167,[[["tokenstream",3]]]],[11,"to_tokens","","",154,[[["tokenstream",3]]]],[11,"to_tokens","","",163,[[["tokenstream",3]]]],[11,"to_tokens","","",170,[[["tokenstream",3]]]],[11,"to_tokens","","",135,[[["tokenstream",3]]]],[11,"to_tokens","","",133,[[["tokenstream",3]]]],[11,"to_tokens","","",132,[[["tokenstream",3]]]],[11,"to_tokens","","",182,[[["tokenstream",3]]]],[11,"to_tokens","","",191,[[["tokenstream",3]]]],[11,"to_tokens","","",193,[[["tokenstream",3]]]],[11,"to_tokens","","",183,[[["tokenstream",3]]]],[11,"to_tokens","","",298,[[["tokenstream",3]]]],[11,"to_tokens","","",299,[[["tokenstream",3]]]],[11,"to_tokens","","",300,[[["tokenstream",3]]]],[11,"to_tokens","","",180,[[["tokenstream",3]]]],[11,"to_tokens","","",184,[[["tokenstream",3]]]],[11,"to_tokens","","",190,[[["tokenstream",3]]]],[11,"to_tokens","","",188,[[["tokenstream",3]]]],[11,"to_tokens","","",189,[[["tokenstream",3]]]],[11,"to_tokens","","",181,[[["tokenstream",3]]]],[11,"to_tokens","","",192,[[["tokenstream",3]]]],[11,"to_tokens","","",187,[[["tokenstream",3]]]],[11,"to_tokens","","",186,[[["tokenstream",3]]]],[11,"to_tokens","","",185,[[["tokenstream",3]]]],[11,"to_tokens","","",205,[[["tokenstream",3]]]],[11,"to_tokens","","",234,[[["tokenstream",3]]]],[11,"to_tokens","","",195,[[["tokenstream",3]]]],[11,"to_tokens","","",224,[[["tokenstream",3]]]],[11,"to_tokens","","",200,[[["tokenstream",3]]]],[11,"to_tokens","","",194,[[["tokenstream",3]]]],[11,"to_tokens","","",208,[[["tokenstream",3]]]],[11,"to_tokens","","",221,[[["tokenstream",3]]]],[11,"to_tokens","","",215,[[["tokenstream",3]]]],[11,"to_tokens","","",206,[[["tokenstream",3]]]],[11,"to_tokens","","",209,[[["tokenstream",3]]]],[11,"to_tokens","","",214,[[["tokenstream",3]]]],[11,"to_tokens","","",210,[[["tokenstream",3]]]],[11,"to_tokens","","",219,[[["tokenstream",3]]]],[11,"to_tokens","","",207,[[["tokenstream",3]]]],[11,"to_tokens","","",216,[[["tokenstream",3]]]],[11,"to_tokens","","",220,[[["tokenstream",3]]]],[11,"to_tokens","","",217,[[["tokenstream",3]]]],[11,"to_tokens","","",218,[[["tokenstream",3]]]],[11,"to_tokens","","",211,[[["tokenstream",3]]]],[11,"to_tokens","","",212,[[["tokenstream",3]]]],[11,"to_tokens","","",213,[[["tokenstream",3]]]],[11,"to_tokens","","",232,[[["tokenstream",3]]]],[11,"to_tokens","","",231,[[["tokenstream",3]]]],[11,"to_tokens","","",233,[[["tokenstream",3]]]],[11,"to_tokens","","",229,[[["tokenstream",3]]]],[11,"to_tokens","","",230,[[["tokenstream",3]]]],[11,"to_tokens","","",225,[[["tokenstream",3]]]],[11,"to_tokens","","",227,[[["tokenstream",3]]]],[11,"to_tokens","","",228,[[["tokenstream",3]]]],[11,"to_tokens","","",226,[[["tokenstream",3]]]],[11,"to_tokens","","",201,[[["tokenstream",3]]]],[11,"to_tokens","","",203,[[["tokenstream",3]]]],[11,"to_tokens","","",204,[[["tokenstream",3]]]],[11,"to_tokens","","",202,[[["tokenstream",3]]]],[11,"to_tokens","","",196,[[["tokenstream",3]]]],[11,"to_tokens","","",198,[[["tokenstream",3]]]],[11,"to_tokens","","",199,[[["tokenstream",3]]]],[11,"to_tokens","","",197,[[["tokenstream",3]]]],[11,"to_tokens","","",223,[[["tokenstream",3]]]],[11,"to_tokens","","",222,[[["tokenstream",3]]]],[11,"to_tokens","","",235,[[["tokenstream",3]]]],[11,"to_tokens","","",236,[[["tokenstream",3]]]],[11,"to_tokens","","",237,[[["tokenstream",3]]]],[11,"to_tokens","","",301,[[["tokenstream",3]]]],[11,"to_tokens","","",302,[[["tokenstream",3]]]],[11,"to_tokens","","",303,[[["tokenstream",3]]]],[11,"to_tokens","","",304,[[["tokenstream",3]]]],[11,"to_tokens","","",305,[[["tokenstream",3]]]],[11,"to_tokens","","",306,[[["tokenstream",3]]]],[11,"to_tokens","","",238,[[["tokenstream",3]]]],[11,"to_tokens","","",240,[[["tokenstream",3]]]],[11,"to_tokens","","",246,[[["tokenstream",3]]]],[11,"to_tokens","","",247,[[["tokenstream",3]]]],[11,"to_tokens","","",248,[[["tokenstream",3]]]],[11,"to_tokens","","",249,[[["tokenstream",3]]]],[11,"to_tokens","","",251,[[["tokenstream",3]]]],[11,"to_tokens","","",250,[[["tokenstream",3]]]],[11,"to_tokens","","",255,[[["tokenstream",3]]]],[11,"to_tokens","","",267,[[["tokenstream",3]]]],[11,"to_tokens","","",256,[[["tokenstream",3]]]],[11,"to_tokens","","",265,[[["tokenstream",3]]]],[11,"to_tokens","","",266,[[["tokenstream",3]]]],[11,"to_tokens","","",257,[[["tokenstream",3]]]],[11,"to_tokens","","",262,[[["tokenstream",3]]]],[11,"to_tokens","","",269,[[["tokenstream",3]]]],[11,"to_tokens","","",264,[[["tokenstream",3]]]],[11,"to_tokens","","",268,[[["tokenstream",3]]]],[11,"to_tokens","","",259,[[["tokenstream",3]]]],[11,"to_tokens","","",258,[[["tokenstream",3]]]],[11,"to_tokens","","",263,[[["tokenstream",3]]]],[11,"to_tokens","","",260,[[["tokenstream",3]]]],[11,"to_tokens","","",261,[[["tokenstream",3]]]],[11,"to_tokens","","",254,[[["tokenstream",3]]]],[11,"to_tokens","","",253,[[["tokenstream",3]]]],[11,"to_tokens","","",270,[[["tokenstream",3]]]],[11,"to_tokens","","",252,[[["tokenstream",3]]]],[11,"to_tokens","","",272,[[["tokenstream",3]]]],[11,"to_tokens","","",287,[[["tokenstream",3]]]],[11,"to_tokens","","",274,[[["tokenstream",3]]]],[11,"to_tokens","","",283,[[["tokenstream",3]]]],[11,"to_tokens","","",285,[[["tokenstream",3]]]],[11,"to_tokens","","",286,[[["tokenstream",3]]]],[11,"to_tokens","","",278,[[["tokenstream",3]]]],[11,"to_tokens","","",284,[[["tokenstream",3]]]],[11,"to_tokens","","",273,[[["tokenstream",3]]]],[11,"to_tokens","","",280,[[["tokenstream",3]]]],[11,"to_tokens","","",281,[[["tokenstream",3]]]],[11,"to_tokens","","",275,[[["tokenstream",3]]]],[11,"to_tokens","","",279,[[["tokenstream",3]]]],[11,"to_tokens","","",282,[[["tokenstream",3]]]],[11,"to_tokens","","",276,[[["tokenstream",3]]]],[11,"to_tokens","","",277,[[["tokenstream",3]]]],[11,"to_tokens","","",271,[[["tokenstream",3]]]],[11,"to_tokens","","",293,[[["tokenstream",3]]]],[11,"to_tokens","","",295,[[["tokenstream",3]]]],[11,"to_tokens","","",294,[[["tokenstream",3]]]],[11,"to_tokens","","",291,[[["tokenstream",3]]]],[11,"to_tokens","","",288,[[["tokenstream",3]]]],[11,"to_tokens","","",289,[[["tokenstream",3]]]],[11,"to_tokens","","",290,[[["tokenstream",3]]]],[11,"to_tokens","","",292,[[["tokenstream",3]]]],[11,"to_tokens","syn::punctuated","",106,[[["tokenstream",3]]]],[11,"to_tokens","","",107,[[["tokenstream",3]]]],[11,"fmt","syn","",179,[[["formatter",3]],["result",6]]],[11,"span","","",179,[[],[["option",4],["span",3]]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"span","","",178,[[],[["option",4],["span",3]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",297,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this `Ident`.",297,[[],["span",3]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",297,[[["span",3]]]],[11,"parse_meta","","Parses the content of the attribute, consisting of the…",118,[[],[["meta",4],["result",6]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",118,[[],[["parse",8],["result",6]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given parser.",118,[[["parser",8]],["result",6]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",118,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",118,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"path","","Returns the identifier that begins this structured meta…",119,[[],["path",3]]],[11,"parse_named","","Parses a named (braced struct) field.",123,[[["parsestream",6]],["result",6]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",123,[[["parsestream",6]],["result",6]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",124,[[],[["iter",3],["field",3]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",124,[[],[["itermut",3],["field",3]]]],[11,"len","","Returns the number of fields.",124,[[]]],[11,"is_empty","","Returns `true` if there are zero fields.",124,[[]]],[11,"parse_without_eager_brace","","An alternative to the primary `Expr::parse` parser (from…",138,[[["parsestream",6]],[["result",6],["expr",4]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",183,[[],["typeparams",3]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",183,[[],["typeparamsmut",3]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",183,[[],["lifetimes",3]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",183,[[],["lifetimesmut",3]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",183,[[],["constparams",3]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",183,[[],["constparamsmut",3]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",183,[[],["whereclause",3]]],[11,"split_for_impl","","Split a type\'s generics into the pieces required for…",183,[[]]],[11,"as_turbofish","","Turn a type\'s generics like `<X, Y>` into a turbofish like…",299,[[],["turbofish",3]]],[11,"new","","",184,[[["lifetime",3]]]],[11,"receiver","","A method\'s `self` receiver, such as `&self` or `self:…",223,[[],[["option",4],["fnarg",4]]]],[11,"lifetime","","",222,[[],[["option",4],["lifetime",3]]]],[11,"new","","PanicsPanics if the lifetime does not conform to the…",236,[[["span",3]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",237,[[["literal",3]]]],[11,"suffix","","",237,[[]]],[11,"span","","",237,[[],["span",3]]],[11,"set_span","","",237,[[["span",3]]]],[11,"new","","",301,[[["span",3]]]],[11,"value","","",301,[[],["string",3]]],[11,"parse","","Parse a syntax tree node from the content of this string…",301,[[],[["parse",8],["result",6]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",301,[[["parser",8]],["result",6]]],[11,"span","","",301,[[],["span",3]]],[11,"set_span","","",301,[[["span",3]]]],[11,"suffix","","",301,[[]]],[11,"new","","",302,[[["span",3]]]],[11,"value","","",302,[[],["vec",3]]],[11,"span","","",302,[[],["span",3]]],[11,"set_span","","",302,[[["span",3]]]],[11,"suffix","","",302,[[]]],[11,"new","","",303,[[["span",3]]]],[11,"value","","",303,[[]]],[11,"span","","",303,[[],["span",3]]],[11,"set_span","","",303,[[["span",3]]]],[11,"suffix","","",303,[[]]],[11,"new","","",304,[[["span",3]]]],[11,"value","","",304,[[]]],[11,"span","","",304,[[],["span",3]]],[11,"set_span","","",304,[[["span",3]]]],[11,"suffix","","",304,[[]]],[11,"new","","",305,[[["span",3]]]],[11,"base10_digits","","",305,[[]]],[11,"base10_parse","","Parses the literal into a selected number type.",305,[[],["result",6]]],[11,"suffix","","",305,[[]]],[11,"span","","",305,[[],["span",3]]],[11,"set_span","","",305,[[["span",3]]]],[11,"new","","",306,[[["span",3]]]],[11,"base10_digits","","",306,[[]]],[11,"base10_parse","","",306,[[],["result",6]]],[11,"suffix","","",306,[[]]],[11,"span","","",306,[[],["span",3]]],[11,"set_span","","",306,[[["span",3]]]],[11,"parse_body","","Parse the tokens within the macro invocation\'s delimiters…",240,[[],[["parse",8],["result",6]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation\'s delimiters…",240,[[["parser",8]],["result",6]]],[11,"parse_within","","Parse the body of a block as zero or more statements,…",249,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"without_plus","","In some positions, types may not contain the `+`…",255,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",254,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",268,[[["parsestream",6]],["result",6]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",293,[[["parsestream",6]],["result",6]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",293,[[]]],[11,"get_ident","","If this path consists of a single ident, returns the ident.",293,[[],[["ident",3],["option",4]]]],[11,"is_empty","","",294,[[]]],[11,"visit_abi","syn::visit","",109,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",109,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",109,[[["arm",3]]]],[11,"visit_attr_style","","",109,[[["attrstyle",4]]]],[11,"visit_attribute","","",109,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",109,[[["barefnarg",3]]]],[11,"visit_bin_op","","",109,[[["binop",4]]]],[11,"visit_binding","","",109,[[["binding",3]]]],[11,"visit_block","","",109,[[["block",3]]]],[11,"visit_bound_lifetimes","","",109,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",109,[[["constparam",3]]]],[11,"visit_constraint","","",109,[[["constraint",3]]]],[11,"visit_data","","",109,[[["data",4]]]],[11,"visit_data_enum","","",109,[[["dataenum",3]]]],[11,"visit_data_struct","","",109,[[["datastruct",3]]]],[11,"visit_data_union","","",109,[[["dataunion",3]]]],[11,"visit_derive_input","","",109,[[["deriveinput",3]]]],[11,"visit_expr","","",109,[[["expr",4]]]],[11,"visit_expr_array","","",109,[[["exprarray",3]]]],[11,"visit_expr_assign","","",109,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",109,[[["exprassignop",3]]]],[11,"visit_expr_async","","",109,[[["exprasync",3]]]],[11,"visit_expr_await","","",109,[[["exprawait",3]]]],[11,"visit_expr_binary","","",109,[[["exprbinary",3]]]],[11,"visit_expr_block","","",109,[[["exprblock",3]]]],[11,"visit_expr_box","","",109,[[["exprbox",3]]]],[11,"visit_expr_break","","",109,[[["exprbreak",3]]]],[11,"visit_expr_call","","",109,[[["exprcall",3]]]],[11,"visit_expr_cast","","",109,[[["exprcast",3]]]],[11,"visit_expr_closure","","",109,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",109,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",109,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",109,[[["exprforloop",3]]]],[11,"visit_expr_group","","",109,[[["exprgroup",3]]]],[11,"visit_expr_if","","",109,[[["exprif",3]]]],[11,"visit_expr_index","","",109,[[["exprindex",3]]]],[11,"visit_expr_let","","",109,[[["exprlet",3]]]],[11,"visit_expr_lit","","",109,[[["exprlit",3]]]],[11,"visit_expr_loop","","",109,[[["exprloop",3]]]],[11,"visit_expr_macro","","",109,[[["exprmacro",3]]]],[11,"visit_expr_match","","",109,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",109,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",109,[[["exprparen",3]]]],[11,"visit_expr_path","","",109,[[["exprpath",3]]]],[11,"visit_expr_range","","",109,[[["exprrange",3]]]],[11,"visit_expr_reference","","",109,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",109,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",109,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",109,[[["exprstruct",3]]]],[11,"visit_expr_try","","",109,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",109,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",109,[[["exprtuple",3]]]],[11,"visit_expr_type","","",109,[[["exprtype",3]]]],[11,"visit_expr_unary","","",109,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",109,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",109,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",109,[[["expryield",3]]]],[11,"visit_field","","",109,[[["field",3]]]],[11,"visit_field_pat","","",109,[[["fieldpat",3]]]],[11,"visit_field_value","","",109,[[["fieldvalue",3]]]],[11,"visit_fields","","",109,[[["fields",4]]]],[11,"visit_fields_named","","",109,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",109,[[["fieldsunnamed",3]]]],[11,"visit_file","","",109,[[["file",3]]]],[11,"visit_fn_arg","","",109,[[["fnarg",4]]]],[11,"visit_foreign_item","","",109,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",109,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",109,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",109,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",109,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",109,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",109,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",109,[[["genericparam",4]]]],[11,"visit_generics","","",109,[[["generics",3]]]],[11,"visit_ident","","",109,[[["ident",3]]]],[11,"visit_impl_item","","",109,[[["implitem",4]]]],[11,"visit_impl_item_const","","",109,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",109,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",109,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",109,[[["implitemtype",3]]]],[11,"visit_index","","",109,[[["index",3]]]],[11,"visit_item","","",109,[[["item",4]]]],[11,"visit_item_const","","",109,[[["itemconst",3]]]],[11,"visit_item_enum","","",109,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",109,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",109,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",109,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",109,[[["itemimpl",3]]]],[11,"visit_item_macro","","",109,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",109,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",109,[[["itemmod",3]]]],[11,"visit_item_static","","",109,[[["itemstatic",3]]]],[11,"visit_item_struct","","",109,[[["itemstruct",3]]]],[11,"visit_item_trait","","",109,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",109,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",109,[[["itemtype",3]]]],[11,"visit_item_union","","",109,[[["itemunion",3]]]],[11,"visit_item_use","","",109,[[["itemuse",3]]]],[11,"visit_label","","",109,[[["label",3]]]],[11,"visit_lifetime","","",109,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",109,[[["lifetimedef",3]]]],[11,"visit_lit","","",109,[[["lit",4]]]],[11,"visit_lit_bool","","",109,[[["litbool",3]]]],[11,"visit_lit_byte","","",109,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",109,[[["litbytestr",3]]]],[11,"visit_lit_char","","",109,[[["litchar",3]]]],[11,"visit_lit_float","","",109,[[["litfloat",3]]]],[11,"visit_lit_int","","",109,[[["litint",3]]]],[11,"visit_lit_str","","",109,[[["litstr",3]]]],[11,"visit_local","","",109,[[["local",3]]]],[11,"visit_macro","","",109,[[["macro",3]]]],[11,"visit_macro_delimiter","","",109,[[["macrodelimiter",4]]]],[11,"visit_member","","",109,[[["member",4]]]],[11,"visit_meta","","",109,[[["meta",4]]]],[11,"visit_meta_list","","",109,[[["metalist",3]]]],[11,"visit_meta_name_value","","",109,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",109,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",109,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",109,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",109,[[["pat",4]]]],[11,"visit_pat_box","","",109,[[["patbox",3]]]],[11,"visit_pat_ident","","",109,[[["patident",3]]]],[11,"visit_pat_lit","","",109,[[["patlit",3]]]],[11,"visit_pat_macro","","",109,[[["patmacro",3]]]],[11,"visit_pat_or","","",109,[[["pator",3]]]],[11,"visit_pat_path","","",109,[[["patpath",3]]]],[11,"visit_pat_range","","",109,[[["patrange",3]]]],[11,"visit_pat_reference","","",109,[[["patreference",3]]]],[11,"visit_pat_rest","","",109,[[["patrest",3]]]],[11,"visit_pat_slice","","",109,[[["patslice",3]]]],[11,"visit_pat_struct","","",109,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",109,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",109,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",109,[[["pattype",3]]]],[11,"visit_pat_wild","","",109,[[["patwild",3]]]],[11,"visit_path","","",109,[[["path",3]]]],[11,"visit_path_arguments","","",109,[[["patharguments",4]]]],[11,"visit_path_segment","","",109,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",109,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",109,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",109,[[["predicatetype",3]]]],[11,"visit_qself","","",109,[[["qself",3]]]],[11,"visit_range_limits","","",109,[[["rangelimits",4]]]],[11,"visit_receiver","","",109,[[["receiver",3]]]],[11,"visit_return_type","","",109,[[["returntype",4]]]],[11,"visit_signature","","",109,[[["signature",3]]]],[11,"visit_span","","",109,[[["span",3]]]],[11,"visit_stmt","","",109,[[["stmt",4]]]],[11,"visit_trait_bound","","",109,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",109,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",109,[[["traititem",4]]]],[11,"visit_trait_item_const","","",109,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",109,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",109,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",109,[[["traititemtype",3]]]],[11,"visit_type","","",109,[[["type",4]]]],[11,"visit_type_array","","",109,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",109,[[["typebarefn",3]]]],[11,"visit_type_group","","",109,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",109,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",109,[[["typeinfer",3]]]],[11,"visit_type_macro","","",109,[[["typemacro",3]]]],[11,"visit_type_never","","",109,[[["typenever",3]]]],[11,"visit_type_param","","",109,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",109,[[["typeparambound",4]]]],[11,"visit_type_paren","","",109,[[["typeparen",3]]]],[11,"visit_type_path","","",109,[[["typepath",3]]]],[11,"visit_type_ptr","","",109,[[["typeptr",3]]]],[11,"visit_type_reference","","",109,[[["typereference",3]]]],[11,"visit_type_slice","","",109,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",109,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",109,[[["typetuple",3]]]],[11,"visit_un_op","","",109,[[["unop",4]]]],[11,"visit_use_glob","","",109,[[["useglob",3]]]],[11,"visit_use_group","","",109,[[["usegroup",3]]]],[11,"visit_use_name","","",109,[[["usename",3]]]],[11,"visit_use_path","","",109,[[["usepath",3]]]],[11,"visit_use_rename","","",109,[[["userename",3]]]],[11,"visit_use_tree","","",109,[[["usetree",4]]]],[11,"visit_variadic","","",109,[[["variadic",3]]]],[11,"visit_variant","","",109,[[["variant",3]]]],[11,"visit_vis_crate","","",109,[[["viscrate",3]]]],[11,"visit_vis_public","","",109,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",109,[[["visrestricted",3]]]],[11,"visit_visibility","","",109,[[["visibility",4]]]],[11,"visit_where_clause","","",109,[[["whereclause",3]]]],[11,"visit_where_predicate","","",109,[[["wherepredicate",4]]]],[11,"visit_abi_mut","syn::visit_mut","",110,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments_mut","","",110,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm_mut","","",110,[[["arm",3]]]],[11,"visit_attr_style_mut","","",110,[[["attrstyle",4]]]],[11,"visit_attribute_mut","","",110,[[["attribute",3]]]],[11,"visit_bare_fn_arg_mut","","",110,[[["barefnarg",3]]]],[11,"visit_bin_op_mut","","",110,[[["binop",4]]]],[11,"visit_binding_mut","","",110,[[["binding",3]]]],[11,"visit_block_mut","","",110,[[["block",3]]]],[11,"visit_bound_lifetimes_mut","","",110,[[["boundlifetimes",3]]]],[11,"visit_const_param_mut","","",110,[[["constparam",3]]]],[11,"visit_constraint_mut","","",110,[[["constraint",3]]]],[11,"visit_data_mut","","",110,[[["data",4]]]],[11,"visit_data_enum_mut","","",110,[[["dataenum",3]]]],[11,"visit_data_struct_mut","","",110,[[["datastruct",3]]]],[11,"visit_data_union_mut","","",110,[[["dataunion",3]]]],[11,"visit_derive_input_mut","","",110,[[["deriveinput",3]]]],[11,"visit_expr_mut","","",110,[[["expr",4]]]],[11,"visit_expr_array_mut","","",110,[[["exprarray",3]]]],[11,"visit_expr_assign_mut","","",110,[[["exprassign",3]]]],[11,"visit_expr_assign_op_mut","","",110,[[["exprassignop",3]]]],[11,"visit_expr_async_mut","","",110,[[["exprasync",3]]]],[11,"visit_expr_await_mut","","",110,[[["exprawait",3]]]],[11,"visit_expr_binary_mut","","",110,[[["exprbinary",3]]]],[11,"visit_expr_block_mut","","",110,[[["exprblock",3]]]],[11,"visit_expr_box_mut","","",110,[[["exprbox",3]]]],[11,"visit_expr_break_mut","","",110,[[["exprbreak",3]]]],[11,"visit_expr_call_mut","","",110,[[["exprcall",3]]]],[11,"visit_expr_cast_mut","","",110,[[["exprcast",3]]]],[11,"visit_expr_closure_mut","","",110,[[["exprclosure",3]]]],[11,"visit_expr_continue_mut","","",110,[[["exprcontinue",3]]]],[11,"visit_expr_field_mut","","",110,[[["exprfield",3]]]],[11,"visit_expr_for_loop_mut","","",110,[[["exprforloop",3]]]],[11,"visit_expr_group_mut","","",110,[[["exprgroup",3]]]],[11,"visit_expr_if_mut","","",110,[[["exprif",3]]]],[11,"visit_expr_index_mut","","",110,[[["exprindex",3]]]],[11,"visit_expr_let_mut","","",110,[[["exprlet",3]]]],[11,"visit_expr_lit_mut","","",110,[[["exprlit",3]]]],[11,"visit_expr_loop_mut","","",110,[[["exprloop",3]]]],[11,"visit_expr_macro_mut","","",110,[[["exprmacro",3]]]],[11,"visit_expr_match_mut","","",110,[[["exprmatch",3]]]],[11,"visit_expr_method_call_mut","","",110,[[["exprmethodcall",3]]]],[11,"visit_expr_paren_mut","","",110,[[["exprparen",3]]]],[11,"visit_expr_path_mut","","",110,[[["exprpath",3]]]],[11,"visit_expr_range_mut","","",110,[[["exprrange",3]]]],[11,"visit_expr_reference_mut","","",110,[[["exprreference",3]]]],[11,"visit_expr_repeat_mut","","",110,[[["exprrepeat",3]]]],[11,"visit_expr_return_mut","","",110,[[["exprreturn",3]]]],[11,"visit_expr_struct_mut","","",110,[[["exprstruct",3]]]],[11,"visit_expr_try_mut","","",110,[[["exprtry",3]]]],[11,"visit_expr_try_block_mut","","",110,[[["exprtryblock",3]]]],[11,"visit_expr_tuple_mut","","",110,[[["exprtuple",3]]]],[11,"visit_expr_type_mut","","",110,[[["exprtype",3]]]],[11,"visit_expr_unary_mut","","",110,[[["exprunary",3]]]],[11,"visit_expr_unsafe_mut","","",110,[[["exprunsafe",3]]]],[11,"visit_expr_while_mut","","",110,[[["exprwhile",3]]]],[11,"visit_expr_yield_mut","","",110,[[["expryield",3]]]],[11,"visit_field_mut","","",110,[[["field",3]]]],[11,"visit_field_pat_mut","","",110,[[["fieldpat",3]]]],[11,"visit_field_value_mut","","",110,[[["fieldvalue",3]]]],[11,"visit_fields_mut","","",110,[[["fields",4]]]],[11,"visit_fields_named_mut","","",110,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed_mut","","",110,[[["fieldsunnamed",3]]]],[11,"visit_file_mut","","",110,[[["file",3]]]],[11,"visit_fn_arg_mut","","",110,[[["fnarg",4]]]],[11,"visit_foreign_item_mut","","",110,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn_mut","","",110,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro_mut","","",110,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static_mut","","",110,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type_mut","","",110,[[["foreignitemtype",3]]]],[11,"visit_generic_argument_mut","","",110,[[["genericargument",4]]]],[11,"visit_generic_method_argument_mut","","",110,[[["genericmethodargument",4]]]],[11,"visit_generic_param_mut","","",110,[[["genericparam",4]]]],[11,"visit_generics_mut","","",110,[[["generics",3]]]],[11,"visit_ident_mut","","",110,[[["ident",3]]]],[11,"visit_impl_item_mut","","",110,[[["implitem",4]]]],[11,"visit_impl_item_const_mut","","",110,[[["implitemconst",3]]]],[11,"visit_impl_item_macro_mut","","",110,[[["implitemmacro",3]]]],[11,"visit_impl_item_method_mut","","",110,[[["implitemmethod",3]]]],[11,"visit_impl_item_type_mut","","",110,[[["implitemtype",3]]]],[11,"visit_index_mut","","",110,[[["index",3]]]],[11,"visit_item_mut","","",110,[[["item",4]]]],[11,"visit_item_const_mut","","",110,[[["itemconst",3]]]],[11,"visit_item_enum_mut","","",110,[[["itemenum",3]]]],[11,"visit_item_extern_crate_mut","","",110,[[["itemexterncrate",3]]]],[11,"visit_item_fn_mut","","",110,[[["itemfn",3]]]],[11,"visit_item_foreign_mod_mut","","",110,[[["itemforeignmod",3]]]],[11,"visit_item_impl_mut","","",110,[[["itemimpl",3]]]],[11,"visit_item_macro_mut","","",110,[[["itemmacro",3]]]],[11,"visit_item_macro2_mut","","",110,[[["itemmacro2",3]]]],[11,"visit_item_mod_mut","","",110,[[["itemmod",3]]]],[11,"visit_item_static_mut","","",110,[[["itemstatic",3]]]],[11,"visit_item_struct_mut","","",110,[[["itemstruct",3]]]],[11,"visit_item_trait_mut","","",110,[[["itemtrait",3]]]],[11,"visit_item_trait_alias_mut","","",110,[[["itemtraitalias",3]]]],[11,"visit_item_type_mut","","",110,[[["itemtype",3]]]],[11,"visit_item_union_mut","","",110,[[["itemunion",3]]]],[11,"visit_item_use_mut","","",110,[[["itemuse",3]]]],[11,"visit_label_mut","","",110,[[["label",3]]]],[11,"visit_lifetime_mut","","",110,[[["lifetime",3]]]],[11,"visit_lifetime_def_mut","","",110,[[["lifetimedef",3]]]],[11,"visit_lit_mut","","",110,[[["lit",4]]]],[11,"visit_lit_bool_mut","","",110,[[["litbool",3]]]],[11,"visit_lit_byte_mut","","",110,[[["litbyte",3]]]],[11,"visit_lit_byte_str_mut","","",110,[[["litbytestr",3]]]],[11,"visit_lit_char_mut","","",110,[[["litchar",3]]]],[11,"visit_lit_float_mut","","",110,[[["litfloat",3]]]],[11,"visit_lit_int_mut","","",110,[[["litint",3]]]],[11,"visit_lit_str_mut","","",110,[[["litstr",3]]]],[11,"visit_local_mut","","",110,[[["local",3]]]],[11,"visit_macro_mut","","",110,[[["macro",3]]]],[11,"visit_macro_delimiter_mut","","",110,[[["macrodelimiter",4]]]],[11,"visit_member_mut","","",110,[[["member",4]]]],[11,"visit_meta_mut","","",110,[[["meta",4]]]],[11,"visit_meta_list_mut","","",110,[[["metalist",3]]]],[11,"visit_meta_name_value_mut","","",110,[[["metanamevalue",3]]]],[11,"visit_method_turbofish_mut","","",110,[[["methodturbofish",3]]]],[11,"visit_nested_meta_mut","","",110,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments_mut","","",110,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat_mut","","",110,[[["pat",4]]]],[11,"visit_pat_box_mut","","",110,[[["patbox",3]]]],[11,"visit_pat_ident_mut","","",110,[[["patident",3]]]],[11,"visit_pat_lit_mut","","",110,[[["patlit",3]]]],[11,"visit_pat_macro_mut","","",110,[[["patmacro",3]]]],[11,"visit_pat_or_mut","","",110,[[["pator",3]]]],[11,"visit_pat_path_mut","","",110,[[["patpath",3]]]],[11,"visit_pat_range_mut","","",110,[[["patrange",3]]]],[11,"visit_pat_reference_mut","","",110,[[["patreference",3]]]],[11,"visit_pat_rest_mut","","",110,[[["patrest",3]]]],[11,"visit_pat_slice_mut","","",110,[[["patslice",3]]]],[11,"visit_pat_struct_mut","","",110,[[["patstruct",3]]]],[11,"visit_pat_tuple_mut","","",110,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct_mut","","",110,[[["pattuplestruct",3]]]],[11,"visit_pat_type_mut","","",110,[[["pattype",3]]]],[11,"visit_pat_wild_mut","","",110,[[["patwild",3]]]],[11,"visit_path_mut","","",110,[[["path",3]]]],[11,"visit_path_arguments_mut","","",110,[[["patharguments",4]]]],[11,"visit_path_segment_mut","","",110,[[["pathsegment",3]]]],[11,"visit_predicate_eq_mut","","",110,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime_mut","","",110,[[["predicatelifetime",3]]]],[11,"visit_predicate_type_mut","","",110,[[["predicatetype",3]]]],[11,"visit_qself_mut","","",110,[[["qself",3]]]],[11,"visit_range_limits_mut","","",110,[[["rangelimits",4]]]],[11,"visit_receiver_mut","","",110,[[["receiver",3]]]],[11,"visit_return_type_mut","","",110,[[["returntype",4]]]],[11,"visit_signature_mut","","",110,[[["signature",3]]]],[11,"visit_span_mut","","",110,[[["span",3]]]],[11,"visit_stmt_mut","","",110,[[["stmt",4]]]],[11,"visit_trait_bound_mut","","",110,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier_mut","","",110,[[["traitboundmodifier",4]]]],[11,"visit_trait_item_mut","","",110,[[["traititem",4]]]],[11,"visit_trait_item_const_mut","","",110,[[["traititemconst",3]]]],[11,"visit_trait_item_macro_mut","","",110,[[["traititemmacro",3]]]],[11,"visit_trait_item_method_mut","","",110,[[["traititemmethod",3]]]],[11,"visit_trait_item_type_mut","","",110,[[["traititemtype",3]]]],[11,"visit_type_mut","","",110,[[["type",4]]]],[11,"visit_type_array_mut","","",110,[[["typearray",3]]]],[11,"visit_type_bare_fn_mut","","",110,[[["typebarefn",3]]]],[11,"visit_type_group_mut","","",110,[[["typegroup",3]]]],[11,"visit_type_impl_trait_mut","","",110,[[["typeimpltrait",3]]]],[11,"visit_type_infer_mut","","",110,[[["typeinfer",3]]]],[11,"visit_type_macro_mut","","",110,[[["typemacro",3]]]],[11,"visit_type_never_mut","","",110,[[["typenever",3]]]],[11,"visit_type_param_mut","","",110,[[["typeparam",3]]]],[11,"visit_type_param_bound_mut","","",110,[[["typeparambound",4]]]],[11,"visit_type_paren_mut","","",110,[[["typeparen",3]]]],[11,"visit_type_path_mut","","",110,[[["typepath",3]]]],[11,"visit_type_ptr_mut","","",110,[[["typeptr",3]]]],[11,"visit_type_reference_mut","","",110,[[["typereference",3]]]],[11,"visit_type_slice_mut","","",110,[[["typeslice",3]]]],[11,"visit_type_trait_object_mut","","",110,[[["typetraitobject",3]]]],[11,"visit_type_tuple_mut","","",110,[[["typetuple",3]]]],[11,"visit_un_op_mut","","",110,[[["unop",4]]]],[11,"visit_use_glob_mut","","",110,[[["useglob",3]]]],[11,"visit_use_group_mut","","",110,[[["usegroup",3]]]],[11,"visit_use_name_mut","","",110,[[["usename",3]]]],[11,"visit_use_path_mut","","",110,[[["usepath",3]]]],[11,"visit_use_rename_mut","","",110,[[["userename",3]]]],[11,"visit_use_tree_mut","","",110,[[["usetree",4]]]],[11,"visit_variadic_mut","","",110,[[["variadic",3]]]],[11,"visit_variant_mut","","",110,[[["variant",3]]]],[11,"visit_vis_crate_mut","","",110,[[["viscrate",3]]]],[11,"visit_vis_public_mut","","",110,[[["vispublic",3]]]],[11,"visit_vis_restricted_mut","","",110,[[["visrestricted",3]]]],[11,"visit_visibility_mut","","",110,[[["visibility",4]]]],[11,"visit_where_clause_mut","","",110,[[["whereclause",3]]]],[11,"visit_where_predicate_mut","","",110,[[["wherepredicate",4]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",313,[[["peek",8]]]],[11,"error","","Triggers an error at the current position of the parse…",313,[[],["error",3]]]],"p":[[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[3,"Punctuated"],[4,"Pair"],[8,"Spanned"],[8,"Visit"],[8,"VisitMut"],[8,"Speculative"],[8,"Parse"],[3,"StepCursor"],[3,"ParseBuffer"],[8,"Parser"],[3,"Error"],[4,"AttrStyle"],[3,"Attribute"],[4,"Meta"],[3,"MetaList"],[3,"MetaNameValue"],[4,"NestedMeta"],[3,"Field"],[4,"Fields"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[4,"Visibility"],[3,"Arm"],[3,"FieldValue"],[4,"GenericMethodArgument"],[3,"Label"],[3,"MethodTurbofish"],[4,"RangeLimits"],[4,"Expr"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[4,"Member"],[3,"BoundLifetimes"],[3,"ConstParam"],[4,"GenericParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[4,"TraitBoundModifier"],[3,"TypeParam"],[4,"TypeParamBound"],[3,"WhereClause"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[4,"ImplItem"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[4,"Item"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,"Signature"],[4,"TraitItem"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[4,"UseTree"],[3,"File"],[3,"Lifetime"],[4,"Lit"],[3,"LitBool"],[4,"StrStyle"],[3,"Macro"],[4,"MacroDelimiter"],[4,"Data"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[4,"BinOp"],[4,"UnOp"],[3,"Block"],[3,"Local"],[4,"Stmt"],[3,"Abi"],[3,"BareFnArg"],[4,"ReturnType"],[4,"Type"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"FieldPat"],[4,"Pat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[4,"GenericArgument"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[4,"PathArguments"],[3,"PathSegment"],[3,"QSelf"],[3,"Ident"],[3,"ImplGenerics"],[3,"TypeGenerics"],[3,"Turbofish"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]},\
"unicode_xid":{"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid…",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[]]]],"p":[[8,"UnicodeXID"]]},\
"wasi":{"doc":"","i":[[5,"main","wasi","",null,[[]]]],"p":[]},\
"wasi_common":{"doc":"","i":[[0,"fs","wasi_common","A very experimental module modeled providing a high-level…",null,null],[3,"Dir","wasi_common::fs","A reference to an open directory on the filesystem.",null,null],[3,"DirBuilder","","A builder used to create directories in various manners.",null,null],[3,"DirEntry","","Entries returned by the ReadDir iterator.",null,null],[3,"File","","A reference to an open file on the filesystem.",null,null],[3,"FileType","","A structure representing a type of file with accessors for…",null,null],[3,"Metadata","","Metadata information about a file.",null,null],[3,"OpenOptions","","Options and flags which can be used to configure how a…",null,null],[3,"Permissions","","Representation of the various permissions on a file.",null,null],[3,"ReadDir","","Iterator over the entries in a directory.",null,null],[0,"snapshots","wasi_common","",null,null],[0,"wasi_snapshot_preview1","wasi_common::snapshots","",null,null],[0,"wasi_unstable","","",null,null],[0,"types","wasi_common::snapshots::wasi_unstable","",null,null],[6,"Size","wasi_common::snapshots::wasi_unstable::types","",null,null],[6,"Filesize","","",null,null],[6,"Timestamp","","",null,null],[4,"Clockid","","",null,null],[13,"Realtime","","",0,null],[13,"Monotonic","","",0,null],[13,"ProcessCputimeId","","",0,null],[13,"ThreadCputimeId","","",0,null],[4,"Errno","","",null,null],[13,"Success","","",1,null],[13,"TooBig","","",1,null],[13,"Acces","","",1,null],[13,"Addrinuse","","",1,null],[13,"Addrnotavail","","",1,null],[13,"Afnosupport","","",1,null],[13,"Again","","",1,null],[13,"Already","","",1,null],[13,"Badf","","",1,null],[13,"Badmsg","","",1,null],[13,"Busy","","",1,null],[13,"Canceled","","",1,null],[13,"Child","","",1,null],[13,"Connaborted","","",1,null],[13,"Connrefused","","",1,null],[13,"Connreset","","",1,null],[13,"Deadlk","","",1,null],[13,"Destaddrreq","","",1,null],[13,"Dom","","",1,null],[13,"Dquot","","",1,null],[13,"Exist","","",1,null],[13,"Fault","","",1,null],[13,"Fbig","","",1,null],[13,"Hostunreach","","",1,null],[13,"Idrm","","",1,null],[13,"Ilseq","","",1,null],[13,"Inprogress","","",1,null],[13,"Intr","","",1,null],[13,"Inval","","",1,null],[13,"Io","","",1,null],[13,"Isconn","","",1,null],[13,"Isdir","","",1,null],[13,"Loop","","",1,null],[13,"Mfile","","",1,null],[13,"Mlink","","",1,null],[13,"Msgsize","","",1,null],[13,"Multihop","","",1,null],[13,"Nametoolong","","",1,null],[13,"Netdown","","",1,null],[13,"Netreset","","",1,null],[13,"Netunreach","","",1,null],[13,"Nfile","","",1,null],[13,"Nobufs","","",1,null],[13,"Nodev","","",1,null],[13,"Noent","","",1,null],[13,"Noexec","","",1,null],[13,"Nolck","","",1,null],[13,"Nolink","","",1,null],[13,"Nomem","","",1,null],[13,"Nomsg","","",1,null],[13,"Noprotoopt","","",1,null],[13,"Nospc","","",1,null],[13,"Nosys","","",1,null],[13,"Notconn","","",1,null],[13,"Notdir","","",1,null],[13,"Notempty","","",1,null],[13,"Notrecoverable","","",1,null],[13,"Notsock","","",1,null],[13,"Notsup","","",1,null],[13,"Notty","","",1,null],[13,"Nxio","","",1,null],[13,"Overflow","","",1,null],[13,"Ownerdead","","",1,null],[13,"Perm","","",1,null],[13,"Pipe","","",1,null],[13,"Proto","","",1,null],[13,"Protonosupport","","",1,null],[13,"Prototype","","",1,null],[13,"Range","","",1,null],[13,"Rofs","","",1,null],[13,"Spipe","","",1,null],[13,"Srch","","",1,null],[13,"Stale","","",1,null],[13,"Timedout","","",1,null],[13,"Txtbsy","","",1,null],[13,"Xdev","","",1,null],[13,"Notcapable","","",1,null],[3,"Rights","","",null,null],[18,"FD_DATASYNC","","",2,null],[18,"FD_READ","","",2,null],[18,"FD_SEEK","","",2,null],[18,"FD_FDSTAT_SET_FLAGS","","",2,null],[18,"FD_SYNC","","",2,null],[18,"FD_TELL","","",2,null],[18,"FD_WRITE","","",2,null],[18,"FD_ADVISE","","",2,null],[18,"FD_ALLOCATE","","",2,null],[18,"PATH_CREATE_DIRECTORY","","",2,null],[18,"PATH_CREATE_FILE","","",2,null],[18,"PATH_LINK_SOURCE","","",2,null],[18,"PATH_LINK_TARGET","","",2,null],[18,"PATH_OPEN","","",2,null],[18,"FD_READDIR","","",2,null],[18,"PATH_READLINK","","",2,null],[18,"PATH_RENAME_SOURCE","","",2,null],[18,"PATH_RENAME_TARGET","","",2,null],[18,"PATH_FILESTAT_GET","","",2,null],[18,"PATH_FILESTAT_SET_SIZE","","",2,null],[18,"PATH_FILESTAT_SET_TIMES","","",2,null],[18,"FD_FILESTAT_GET","","",2,null],[18,"FD_FILESTAT_SET_SIZE","","",2,null],[18,"FD_FILESTAT_SET_TIMES","","",2,null],[18,"PATH_SYMLINK","","",2,null],[18,"PATH_REMOVE_DIRECTORY","","",2,null],[18,"PATH_UNLINK_FILE","","",2,null],[18,"POLL_FD_READWRITE","","",2,null],[18,"SOCK_SHUTDOWN","","",2,null],[11,"empty","","Returns an empty set of flags",2,[[],["rights",3]]],[11,"all","","Returns the set containing all flags.",2,[[],["rights",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",2,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",2,[[],[["option",4],["rights",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",2,[[],["rights",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",2,[[],["rights",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",2,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",2,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",2,[[["rights",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",2,[[["rights",3]]]],[11,"insert","","Inserts the specified flags in-place.",2,[[["rights",3]]]],[11,"remove","","Removes the specified flags in-place.",2,[[["rights",3]]]],[11,"toggle","","Toggles the specified flags in-place.",2,[[["rights",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",2,[[["rights",3]]]],[3,"Fd","","",null,null],[11,"inner","","",3,[[]]],[3,"Iovec","","",null,null],[12,"buf","","",4,null],[12,"buf_len","","",4,null],[3,"Ciovec","","",null,null],[12,"buf","","",5,null],[12,"buf_len","","",5,null],[6,"IovecArray","","",null,null],[6,"CiovecArray","","",null,null],[6,"Filedelta","","",null,null],[4,"Whence","","",null,null],[13,"Cur","","",6,null],[13,"End","","",6,null],[13,"Set","","",6,null],[6,"Dircookie","","",null,null],[6,"Dirnamlen","","",null,null],[6,"Inode","","",null,null],[4,"Filetype","","",null,null],[13,"Unknown","","",7,null],[13,"BlockDevice","","",7,null],[13,"CharacterDevice","","",7,null],[13,"Directory","","",7,null],[13,"RegularFile","","",7,null],[13,"SocketDgram","","",7,null],[13,"SocketStream","","",7,null],[13,"SymbolicLink","","",7,null],[3,"Dirent","","",null,null],[12,"d_next","","",8,null],[12,"d_ino","","",8,null],[12,"d_namlen","","",8,null],[12,"d_type","","",8,null],[4,"Advice","","",null,null],[13,"Normal","","",9,null],[13,"Sequential","","",9,null],[13,"Random","","",9,null],[13,"Willneed","","",9,null],[13,"Dontneed","","",9,null],[13,"Noreuse","","",9,null],[3,"Fdflags","","",null,null],[18,"APPEND","","",10,null],[18,"DSYNC","","",10,null],[18,"NONBLOCK","","",10,null],[18,"RSYNC","","",10,null],[18,"SYNC","","",10,null],[11,"empty","","Returns an empty set of flags",10,[[],["fdflags",3]]],[11,"all","","Returns the set containing all flags.",10,[[],["fdflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",10,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",10,[[],[["fdflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",10,[[],["fdflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",10,[[],["fdflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",10,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",10,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",10,[[["fdflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",10,[[["fdflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",10,[[["fdflags",3]]]],[11,"remove","","Removes the specified flags in-place.",10,[[["fdflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",10,[[["fdflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",10,[[["fdflags",3]]]],[3,"Fdstat","","",null,null],[12,"fs_filetype","","",11,null],[12,"fs_flags","","",11,null],[12,"fs_rights_base","","",11,null],[12,"fs_rights_inheriting","","",11,null],[6,"Device","","",null,null],[3,"Fstflags","","",null,null],[18,"ATIM","","",12,null],[18,"ATIM_NOW","","",12,null],[18,"MTIM","","",12,null],[18,"MTIM_NOW","","",12,null],[11,"empty","","Returns an empty set of flags",12,[[],["fstflags",3]]],[11,"all","","Returns the set containing all flags.",12,[[],["fstflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",12,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",12,[[],[["option",4],["fstflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",12,[[],["fstflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",12,[[],["fstflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",12,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",12,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",12,[[["fstflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",12,[[["fstflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",12,[[["fstflags",3]]]],[11,"remove","","Removes the specified flags in-place.",12,[[["fstflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",12,[[["fstflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",12,[[["fstflags",3]]]],[3,"Lookupflags","","",null,null],[18,"SYMLINK_FOLLOW","","",13,null],[11,"empty","","Returns an empty set of flags",13,[[],["lookupflags",3]]],[11,"all","","Returns the set containing all flags.",13,[[],["lookupflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",13,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",13,[[],[["lookupflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",13,[[],["lookupflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",13,[[],["lookupflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",13,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",13,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",13,[[["lookupflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",13,[[["lookupflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",13,[[["lookupflags",3]]]],[11,"remove","","Removes the specified flags in-place.",13,[[["lookupflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",13,[[["lookupflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",13,[[["lookupflags",3]]]],[3,"Oflags","","",null,null],[18,"CREAT","","",14,null],[18,"DIRECTORY","","",14,null],[18,"EXCL","","",14,null],[18,"TRUNC","","",14,null],[11,"empty","","Returns an empty set of flags",14,[[],["oflags",3]]],[11,"all","","Returns the set containing all flags.",14,[[],["oflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",14,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",14,[[],[["option",4],["oflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",14,[[],["oflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",14,[[],["oflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",14,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",14,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",14,[[["oflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",14,[[["oflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",14,[[["oflags",3]]]],[11,"remove","","Removes the specified flags in-place.",14,[[["oflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",14,[[["oflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",14,[[["oflags",3]]]],[6,"Linkcount","","",null,null],[3,"Filestat","","",null,null],[12,"dev","","",15,null],[12,"ino","","",15,null],[12,"filetype","","",15,null],[12,"nlink","","",15,null],[12,"size","","",15,null],[12,"atim","","",15,null],[12,"mtim","","",15,null],[12,"ctim","","",15,null],[6,"Userdata","","",null,null],[4,"Eventtype","","",null,null],[13,"Clock","","",16,null],[13,"FdRead","","",16,null],[13,"FdWrite","","",16,null],[3,"Eventrwflags","","",null,null],[18,"FD_READWRITE_HANGUP","","",17,null],[11,"empty","","Returns an empty set of flags",17,[[],["eventrwflags",3]]],[11,"all","","Returns the set containing all flags.",17,[[],["eventrwflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",17,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",17,[[],[["option",4],["eventrwflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",17,[[],["eventrwflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",17,[[],["eventrwflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",17,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",17,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",17,[[["eventrwflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",17,[[["eventrwflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",17,[[["eventrwflags",3]]]],[11,"remove","","Removes the specified flags in-place.",17,[[["eventrwflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",17,[[["eventrwflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",17,[[["eventrwflags",3]]]],[3,"EventFdReadwrite","","",null,null],[12,"nbytes","","",18,null],[12,"flags","","",18,null],[3,"Event","","",null,null],[12,"userdata","","",19,null],[12,"error","","",19,null],[12,"type_","","",19,null],[12,"fd_readwrite","","",19,null],[3,"Subclockflags","","",null,null],[18,"SUBSCRIPTION_CLOCK_ABSTIME","","",20,null],[11,"empty","","Returns an empty set of flags",20,[[],["subclockflags",3]]],[11,"all","","Returns the set containing all flags.",20,[[],["subclockflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",20,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",20,[[],[["option",4],["subclockflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",20,[[],["subclockflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",20,[[],["subclockflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",20,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",20,[[["subclockflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",20,[[["subclockflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",20,[[["subclockflags",3]]]],[11,"remove","","Removes the specified flags in-place.",20,[[["subclockflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",20,[[["subclockflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",20,[[["subclockflags",3]]]],[3,"SubscriptionClock","","",null,null],[12,"identifier","","",21,null],[12,"id","","",21,null],[12,"timeout","","",21,null],[12,"precision","","",21,null],[12,"flags","","",21,null],[3,"SubscriptionFdReadwrite","","",null,null],[12,"file_descriptor","","",22,null],[4,"SubscriptionU","","",null,null],[13,"Clock","","",23,null],[13,"FdRead","","",23,null],[13,"FdWrite","","",23,null],[3,"Subscription","","",null,null],[12,"userdata","","",24,null],[12,"u","","",24,null],[6,"Exitcode","","",null,null],[4,"Signal","","",null,null],[13,"None","","",25,null],[13,"Hup","","",25,null],[13,"Int","","",25,null],[13,"Quit","","",25,null],[13,"Ill","","",25,null],[13,"Trap","","",25,null],[13,"Abrt","","",25,null],[13,"Bus","","",25,null],[13,"Fpe","","",25,null],[13,"Kill","","",25,null],[13,"Usr1","","",25,null],[13,"Segv","","",25,null],[13,"Usr2","","",25,null],[13,"Pipe","","",25,null],[13,"Alrm","","",25,null],[13,"Term","","",25,null],[13,"Chld","","",25,null],[13,"Cont","","",25,null],[13,"Stop","","",25,null],[13,"Tstp","","",25,null],[13,"Ttin","","",25,null],[13,"Ttou","","",25,null],[13,"Urg","","",25,null],[13,"Xcpu","","",25,null],[13,"Xfsz","","",25,null],[13,"Vtalrm","","",25,null],[13,"Prof","","",25,null],[13,"Winch","","",25,null],[13,"Poll","","",25,null],[13,"Pwr","","",25,null],[13,"Sys","","",25,null],[3,"Riflags","","",null,null],[18,"RECV_PEEK","","",26,null],[18,"RECV_WAITALL","","",26,null],[11,"empty","","Returns an empty set of flags",26,[[],["riflags",3]]],[11,"all","","Returns the set containing all flags.",26,[[],["riflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",26,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",26,[[],[["riflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",26,[[],["riflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",26,[[],["riflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",26,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",26,[[["riflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",26,[[["riflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",26,[[["riflags",3]]]],[11,"remove","","Removes the specified flags in-place.",26,[[["riflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",26,[[["riflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",26,[[["riflags",3]]]],[3,"Roflags","","",null,null],[18,"RECV_DATA_TRUNCATED","","",27,null],[11,"empty","","Returns an empty set of flags",27,[[],["roflags",3]]],[11,"all","","Returns the set containing all flags.",27,[[],["roflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",27,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",27,[[],[["option",4],["roflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",27,[[],["roflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",27,[[],["roflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",27,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",27,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",27,[[["roflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",27,[[["roflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",27,[[["roflags",3]]]],[11,"remove","","Removes the specified flags in-place.",27,[[["roflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",27,[[["roflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",27,[[["roflags",3]]]],[6,"Siflags","","",null,null],[3,"Sdflags","","",null,null],[18,"RD","","",28,null],[18,"WR","","",28,null],[11,"empty","","Returns an empty set of flags",28,[[],["sdflags",3]]],[11,"all","","Returns the set containing all flags.",28,[[],["sdflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",28,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",28,[[],[["option",4],["sdflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",28,[[],["sdflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",28,[[],["sdflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",28,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",28,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",28,[[["sdflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",28,[[["sdflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",28,[[["sdflags",3]]]],[11,"remove","","Removes the specified flags in-place.",28,[[["sdflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",28,[[["sdflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",28,[[["sdflags",3]]]],[4,"Preopentype","","",null,null],[13,"Dir","","",29,null],[3,"PrestatDir","","",null,null],[12,"pr_name_len","","",30,null],[4,"Prestat","","",null,null],[13,"Dir","","",31,null],[8,"GuestErrorConversion","","",null,null],[10,"into_errno","","",32,[[["guesterror",4]],["errno",4]]],[8,"UserErrorConversion","","",null,null],[10,"errno_from_error","","",33,[[["error",4]],[["errno",4],["trap",4],["result",4]]]],[0,"wasi_unstable","wasi_common::snapshots::wasi_unstable","",null,null],[5,"args_get","wasi_common::snapshots::wasi_unstable::wasi_unstable","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"args_sizes_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"environ_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"environ_sizes_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"clock_res_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"clock_time_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_advise","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_allocate","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_close","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_datasync","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_fdstat_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_fdstat_set_flags","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_fdstat_set_rights","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_filestat_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_filestat_set_size","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_filestat_set_times","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_pread","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_prestat_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_prestat_dir_name","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_pwrite","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_read","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_readdir","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_renumber","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_seek","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_sync","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_tell","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_write","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_create_directory","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_filestat_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_filestat_set_times","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_link","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_open","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_readlink","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_remove_directory","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_rename","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_symlink","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_unlink_file","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"poll_oneoff","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"proc_exit","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"proc_raise","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"sched_yield","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"random_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"sock_recv","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"sock_send","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"sock_shutdown","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[8,"WasiUnstable","","",null,null],[10,"args_get","","",34,[[["guestptr",3],["guestptr",3]],[["result",4],["error",4]]]],[10,"args_sizes_get","","",34,[[],[["result",4],["error",4]]]],[10,"environ_get","","",34,[[["guestptr",3],["guestptr",3]],[["result",4],["error",4]]]],[10,"environ_sizes_get","","",34,[[],[["result",4],["error",4]]]],[10,"clock_res_get","","",34,[[["clockid",4]],[["timestamp",6],["result",4],["error",4]]]],[10,"clock_time_get","","",34,[[["timestamp",6],["clockid",4]],[["timestamp",6],["result",4],["error",4]]]],[10,"fd_advise","","",34,[[["fd",3],["filesize",6],["advice",4]],[["result",4],["error",4]]]],[10,"fd_allocate","","",34,[[["fd",3],["filesize",6]],[["result",4],["error",4]]]],[10,"fd_close","","",34,[[["fd",3]],[["result",4],["error",4]]]],[10,"fd_datasync","","",34,[[["fd",3]],[["result",4],["error",4]]]],[10,"fd_fdstat_get","","",34,[[["fd",3]],[["result",4],["error",4],["fdstat",3]]]],[10,"fd_fdstat_set_flags","","",34,[[["fdflags",3],["fd",3]],[["result",4],["error",4]]]],[10,"fd_fdstat_set_rights","","",34,[[["fd",3],["rights",3]],[["result",4],["error",4]]]],[10,"fd_filestat_get","","",34,[[["fd",3]],[["result",4],["filestat",3],["error",4]]]],[10,"fd_filestat_set_size","","",34,[[["fd",3],["filesize",6]],[["result",4],["error",4]]]],[10,"fd_filestat_set_times","","",34,[[["fd",3],["timestamp",6],["fstflags",3]],[["result",4],["error",4]]]],[10,"fd_pread","","",34,[[["fd",3],["iovecarray",6],["filesize",6]],[["error",4],["size",6],["result",4]]]],[10,"fd_prestat_get","","",34,[[["fd",3]],[["result",4],["error",4],["prestat",4]]]],[10,"fd_prestat_dir_name","","",34,[[["fd",3],["guestptr",3],["size",6]],[["result",4],["error",4]]]],[10,"fd_pwrite","","",34,[[["fd",3],["ciovecarray",6],["filesize",6]],[["error",4],["size",6],["result",4]]]],[10,"fd_read","","",34,[[["fd",3],["iovecarray",6]],[["error",4],["size",6],["result",4]]]],[10,"fd_readdir","","",34,[[["guestptr",3],["dircookie",6],["fd",3],["size",6]],[["error",4],["size",6],["result",4]]]],[10,"fd_renumber","","",34,[[["fd",3]],[["result",4],["error",4]]]],[10,"fd_seek","","",34,[[["whence",4],["fd",3],["filedelta",6]],[["result",4],["filesize",6],["error",4]]]],[10,"fd_sync","","",34,[[["fd",3]],[["result",4],["error",4]]]],[10,"fd_tell","","",34,[[["fd",3]],[["result",4],["filesize",6],["error",4]]]],[10,"fd_write","","",34,[[["fd",3],["ciovecarray",6]],[["error",4],["size",6],["result",4]]]],[10,"path_create_directory","","",34,[[["fd",3],["guestptr",3]],[["result",4],["error",4]]]],[10,"path_filestat_get","","",34,[[["guestptr",3],["fd",3],["lookupflags",3]],[["result",4],["filestat",3],["error",4]]]],[10,"path_filestat_set_times","","",34,[[["lookupflags",3],["fstflags",3],["fd",3],["timestamp",6],["guestptr",3]],[["result",4],["error",4]]]],[10,"path_link","","",34,[[["lookupflags",3],["fd",3],["guestptr",3]],[["result",4],["error",4]]]],[10,"path_open","","",34,[[["lookupflags",3],["oflags",3],["rights",3],["fdflags",3],["fd",3],["guestptr",3]],[["result",4],["fd",3],["error",4]]]],[10,"path_readlink","","",34,[[["guestptr",3],["fd",3],["size",6],["guestptr",3]],[["error",4],["size",6],["result",4]]]],[10,"path_remove_directory","","",34,[[["fd",3],["guestptr",3]],[["result",4],["error",4]]]],[10,"path_rename","","",34,[[["fd",3],["guestptr",3]],[["result",4],["error",4]]]],[10,"path_symlink","","",34,[[["fd",3],["guestptr",3]],[["result",4],["error",4]]]],[10,"path_unlink_file","","",34,[[["fd",3],["guestptr",3]],[["result",4],["error",4]]]],[10,"poll_oneoff","","",34,[[["guestptr",3],["guestptr",3],["size",6]],[["error",4],["size",6],["result",4]]]],[10,"proc_exit","","",34,[[["exitcode",6]],["trap",4]]],[10,"proc_raise","","",34,[[["signal",4]],[["result",4],["error",4]]]],[10,"sched_yield","","",34,[[],[["result",4],["error",4]]]],[10,"random_get","","",34,[[["guestptr",3],["size",6]],[["result",4],["error",4]]]],[10,"sock_recv","","",34,[[["riflags",3],["fd",3],["iovecarray",6]],[["result",4],["error",4]]]],[10,"sock_send","","",34,[[["fd",3],["ciovecarray",6],["siflags",6]],[["error",4],["size",6],["result",4]]]],[10,"sock_shutdown","","",34,[[["fd",3],["sdflags",3]],[["result",4],["error",4]]]],[0,"metadata","wasi_common::snapshots::wasi_unstable","",null,null],[17,"DOC_TEXT","wasi_common::snapshots::wasi_unstable::metadata","",null,null],[5,"document","","",null,[[],["document",3]]],[0,"virtfs","wasi_common","",null,null],[0,"pipe","wasi_common::virtfs","Virtual pipes.",null,null],[3,"ReadPipe","wasi_common::virtfs::pipe","A virtual pipe read end.",null,null],[11,"new","","Create a new pipe from a `Read` type.",35,[[]]],[11,"from_shared","","Create a new pipe from a shareable `Read` type.",35,[[["rwlock",3],["arc",3]]]],[11,"try_into_inner","","Try to convert this `ReadPipe<R>` back to the underlying…",35,[[],["result",4]]],[3,"WritePipe","","A virtual pipe write end.",null,null],[11,"new","","Create a new pipe from a `Write` type.",36,[[]]],[11,"from_shared","","Create a new pipe from a shareable `Write` type.",36,[[["arc",3],["rwlock",3]]]],[11,"try_into_inner","","Try to convert this `WritePipe<W>` back to the underlying…",36,[[],["result",4]]],[11,"new_in_memory","","Create a new writable virtual pipe backed by a `Vec<u8>`…",36,[[]]],[4,"VirtualDirEntry","wasi_common::virtfs","An entry in a virtual filesystem",null,null],[13,"Directory","","The contents of a child directory",37,null],[13,"File","","A file",37,null],[11,"empty_directory","","Construct an empty directory",37,[[]]],[8,"FileContents","","",null,null],[10,"max_size","","The implementation-defined maximum size of the store…",38,[[],["filesize",6]]],[10,"size","","The current number of bytes this `FileContents` describes.",38,[[],["filesize",6]]],[10,"resize","","Resize to hold `new_size` number of bytes, or error if…",38,[[["filesize",6]],["result",6]]],[10,"pwritev","","Write a list of `IoSlice` starting at `offset`. `offset`…",38,[[["filesize",6]],["result",6]]],[10,"preadv","","Read from the file from `offset`, filling a list of…",38,[[["filesize",6]],["result",6]]],[10,"pwrite","","Write contents from `buf` to this file starting at…",38,[[["filesize",6]],["result",6]]],[10,"pread","","Read from the file at `offset`, filling `buf`. The…",38,[[["filesize",6]],["result",6]]],[3,"VecFileContents","","",null,null],[11,"new","","",39,[[]]],[11,"with_content","","",39,[[["vec",3]]]],[3,"InMemoryFile","","An `InMemoryFile` is a shared handle to some underlying…",null,null],[11,"memory_backed","","",40,[[]]],[11,"new","","",40,[[["filecontents",8],["box",3]]]],[3,"VirtualDir","","A clonable read/write directory.",null,null],[11,"new","","",41,[[]]],[11,"with_dir","","",41,[[["asref",8],["path",3]]]],[11,"add_dir","","",41,[[["asref",8],["path",3]]]],[11,"with_file","","",41,[[["filecontents",8],["asref",8],["box",3],["path",3]]]],[11,"add_file","","",41,[[["filecontents",8],["asref",8],["box",3],["path",3]]]],[0,"wasi","wasi_common","",null,null],[0,"types","wasi_common::wasi","",null,null],[6,"Size","wasi_common::wasi::types","",null,null],[6,"Filesize","","",null,null],[6,"Timestamp","","",null,null],[4,"Clockid","","",null,null],[13,"Realtime","","",42,null],[13,"Monotonic","","",42,null],[13,"ProcessCputimeId","","",42,null],[13,"ThreadCputimeId","","",42,null],[4,"Errno","","",null,null],[13,"Success","","",43,null],[13,"TooBig","","",43,null],[13,"Acces","","",43,null],[13,"Addrinuse","","",43,null],[13,"Addrnotavail","","",43,null],[13,"Afnosupport","","",43,null],[13,"Again","","",43,null],[13,"Already","","",43,null],[13,"Badf","","",43,null],[13,"Badmsg","","",43,null],[13,"Busy","","",43,null],[13,"Canceled","","",43,null],[13,"Child","","",43,null],[13,"Connaborted","","",43,null],[13,"Connrefused","","",43,null],[13,"Connreset","","",43,null],[13,"Deadlk","","",43,null],[13,"Destaddrreq","","",43,null],[13,"Dom","","",43,null],[13,"Dquot","","",43,null],[13,"Exist","","",43,null],[13,"Fault","","",43,null],[13,"Fbig","","",43,null],[13,"Hostunreach","","",43,null],[13,"Idrm","","",43,null],[13,"Ilseq","","",43,null],[13,"Inprogress","","",43,null],[13,"Intr","","",43,null],[13,"Inval","","",43,null],[13,"Io","","",43,null],[13,"Isconn","","",43,null],[13,"Isdir","","",43,null],[13,"Loop","","",43,null],[13,"Mfile","","",43,null],[13,"Mlink","","",43,null],[13,"Msgsize","","",43,null],[13,"Multihop","","",43,null],[13,"Nametoolong","","",43,null],[13,"Netdown","","",43,null],[13,"Netreset","","",43,null],[13,"Netunreach","","",43,null],[13,"Nfile","","",43,null],[13,"Nobufs","","",43,null],[13,"Nodev","","",43,null],[13,"Noent","","",43,null],[13,"Noexec","","",43,null],[13,"Nolck","","",43,null],[13,"Nolink","","",43,null],[13,"Nomem","","",43,null],[13,"Nomsg","","",43,null],[13,"Noprotoopt","","",43,null],[13,"Nospc","","",43,null],[13,"Nosys","","",43,null],[13,"Notconn","","",43,null],[13,"Notdir","","",43,null],[13,"Notempty","","",43,null],[13,"Notrecoverable","","",43,null],[13,"Notsock","","",43,null],[13,"Notsup","","",43,null],[13,"Notty","","",43,null],[13,"Nxio","","",43,null],[13,"Overflow","","",43,null],[13,"Ownerdead","","",43,null],[13,"Perm","","",43,null],[13,"Pipe","","",43,null],[13,"Proto","","",43,null],[13,"Protonosupport","","",43,null],[13,"Prototype","","",43,null],[13,"Range","","",43,null],[13,"Rofs","","",43,null],[13,"Spipe","","",43,null],[13,"Srch","","",43,null],[13,"Stale","","",43,null],[13,"Timedout","","",43,null],[13,"Txtbsy","","",43,null],[13,"Xdev","","",43,null],[13,"Notcapable","","",43,null],[3,"Rights","","",null,null],[18,"FD_DATASYNC","","",44,null],[18,"FD_READ","","",44,null],[18,"FD_SEEK","","",44,null],[18,"FD_FDSTAT_SET_FLAGS","","",44,null],[18,"FD_SYNC","","",44,null],[18,"FD_TELL","","",44,null],[18,"FD_WRITE","","",44,null],[18,"FD_ADVISE","","",44,null],[18,"FD_ALLOCATE","","",44,null],[18,"PATH_CREATE_DIRECTORY","","",44,null],[18,"PATH_CREATE_FILE","","",44,null],[18,"PATH_LINK_SOURCE","","",44,null],[18,"PATH_LINK_TARGET","","",44,null],[18,"PATH_OPEN","","",44,null],[18,"FD_READDIR","","",44,null],[18,"PATH_READLINK","","",44,null],[18,"PATH_RENAME_SOURCE","","",44,null],[18,"PATH_RENAME_TARGET","","",44,null],[18,"PATH_FILESTAT_GET","","",44,null],[18,"PATH_FILESTAT_SET_SIZE","","",44,null],[18,"PATH_FILESTAT_SET_TIMES","","",44,null],[18,"FD_FILESTAT_GET","","",44,null],[18,"FD_FILESTAT_SET_SIZE","","",44,null],[18,"FD_FILESTAT_SET_TIMES","","",44,null],[18,"PATH_SYMLINK","","",44,null],[18,"PATH_REMOVE_DIRECTORY","","",44,null],[18,"PATH_UNLINK_FILE","","",44,null],[18,"POLL_FD_READWRITE","","",44,null],[18,"SOCK_SHUTDOWN","","",44,null],[11,"empty","","Returns an empty set of flags",44,[[],["rights",3]]],[11,"all","","Returns the set containing all flags.",44,[[],["rights",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",44,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",44,[[],[["option",4],["rights",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",44,[[],["rights",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",44,[[],["rights",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",44,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",44,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",44,[[["rights",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",44,[[["rights",3]]]],[11,"insert","","Inserts the specified flags in-place.",44,[[["rights",3]]]],[11,"remove","","Removes the specified flags in-place.",44,[[["rights",3]]]],[11,"toggle","","Toggles the specified flags in-place.",44,[[["rights",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",44,[[["rights",3]]]],[3,"Fd","","",null,null],[11,"inner","","",45,[[]]],[3,"Iovec","","",null,null],[12,"buf","","",46,null],[12,"buf_len","","",46,null],[3,"Ciovec","","",null,null],[12,"buf","","",47,null],[12,"buf_len","","",47,null],[6,"IovecArray","","",null,null],[6,"CiovecArray","","",null,null],[6,"Filedelta","","",null,null],[4,"Whence","","",null,null],[13,"Set","","",48,null],[13,"Cur","","",48,null],[13,"End","","",48,null],[6,"Dircookie","","",null,null],[6,"Dirnamlen","","",null,null],[6,"Inode","","",null,null],[4,"Filetype","","",null,null],[13,"Unknown","","",49,null],[13,"BlockDevice","","",49,null],[13,"CharacterDevice","","",49,null],[13,"Directory","","",49,null],[13,"RegularFile","","",49,null],[13,"SocketDgram","","",49,null],[13,"SocketStream","","",49,null],[13,"SymbolicLink","","",49,null],[3,"Dirent","","",null,null],[12,"d_next","","",50,null],[12,"d_ino","","",50,null],[12,"d_namlen","","",50,null],[12,"d_type","","",50,null],[4,"Advice","","",null,null],[13,"Normal","","",51,null],[13,"Sequential","","",51,null],[13,"Random","","",51,null],[13,"Willneed","","",51,null],[13,"Dontneed","","",51,null],[13,"Noreuse","","",51,null],[3,"Fdflags","","",null,null],[18,"APPEND","","",52,null],[18,"DSYNC","","",52,null],[18,"NONBLOCK","","",52,null],[18,"RSYNC","","",52,null],[18,"SYNC","","",52,null],[11,"empty","","Returns an empty set of flags",52,[[],["fdflags",3]]],[11,"all","","Returns the set containing all flags.",52,[[],["fdflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",52,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",52,[[],[["option",4],["fdflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",52,[[],["fdflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",52,[[],["fdflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",52,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",52,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",52,[[["fdflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",52,[[["fdflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",52,[[["fdflags",3]]]],[11,"remove","","Removes the specified flags in-place.",52,[[["fdflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",52,[[["fdflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",52,[[["fdflags",3]]]],[3,"Fdstat","","",null,null],[12,"fs_filetype","","",53,null],[12,"fs_flags","","",53,null],[12,"fs_rights_base","","",53,null],[12,"fs_rights_inheriting","","",53,null],[6,"Device","","",null,null],[3,"Fstflags","","",null,null],[18,"ATIM","","",54,null],[18,"ATIM_NOW","","",54,null],[18,"MTIM","","",54,null],[18,"MTIM_NOW","","",54,null],[11,"empty","","Returns an empty set of flags",54,[[],["fstflags",3]]],[11,"all","","Returns the set containing all flags.",54,[[],["fstflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",54,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",54,[[],[["option",4],["fstflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",54,[[],["fstflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",54,[[],["fstflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",54,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",54,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",54,[[["fstflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",54,[[["fstflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",54,[[["fstflags",3]]]],[11,"remove","","Removes the specified flags in-place.",54,[[["fstflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",54,[[["fstflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",54,[[["fstflags",3]]]],[3,"Lookupflags","","",null,null],[18,"SYMLINK_FOLLOW","","",55,null],[11,"empty","","Returns an empty set of flags",55,[[],["lookupflags",3]]],[11,"all","","Returns the set containing all flags.",55,[[],["lookupflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",55,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",55,[[],[["lookupflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",55,[[],["lookupflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",55,[[],["lookupflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",55,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",55,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",55,[[["lookupflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",55,[[["lookupflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",55,[[["lookupflags",3]]]],[11,"remove","","Removes the specified flags in-place.",55,[[["lookupflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",55,[[["lookupflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",55,[[["lookupflags",3]]]],[3,"Oflags","","",null,null],[18,"CREAT","","",56,null],[18,"DIRECTORY","","",56,null],[18,"EXCL","","",56,null],[18,"TRUNC","","",56,null],[11,"empty","","Returns an empty set of flags",56,[[],["oflags",3]]],[11,"all","","Returns the set containing all flags.",56,[[],["oflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",56,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",56,[[],[["option",4],["oflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",56,[[],["oflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",56,[[],["oflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",56,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",56,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",56,[[["oflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",56,[[["oflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",56,[[["oflags",3]]]],[11,"remove","","Removes the specified flags in-place.",56,[[["oflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",56,[[["oflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",56,[[["oflags",3]]]],[6,"Linkcount","","",null,null],[3,"Filestat","","",null,null],[12,"dev","","",57,null],[12,"ino","","",57,null],[12,"filetype","","",57,null],[12,"nlink","","",57,null],[12,"size","","",57,null],[12,"atim","","",57,null],[12,"mtim","","",57,null],[12,"ctim","","",57,null],[6,"Userdata","","",null,null],[4,"Eventtype","","",null,null],[13,"Clock","","",58,null],[13,"FdRead","","",58,null],[13,"FdWrite","","",58,null],[3,"Eventrwflags","","",null,null],[18,"FD_READWRITE_HANGUP","","",59,null],[11,"empty","","Returns an empty set of flags",59,[[],["eventrwflags",3]]],[11,"all","","Returns the set containing all flags.",59,[[],["eventrwflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",59,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",59,[[],[["option",4],["eventrwflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",59,[[],["eventrwflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",59,[[],["eventrwflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",59,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",59,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",59,[[["eventrwflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",59,[[["eventrwflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",59,[[["eventrwflags",3]]]],[11,"remove","","Removes the specified flags in-place.",59,[[["eventrwflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",59,[[["eventrwflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",59,[[["eventrwflags",3]]]],[3,"EventFdReadwrite","","",null,null],[12,"nbytes","","",60,null],[12,"flags","","",60,null],[3,"Event","","",null,null],[12,"userdata","","",61,null],[12,"error","","",61,null],[12,"type_","","",61,null],[12,"fd_readwrite","","",61,null],[3,"Subclockflags","","",null,null],[18,"SUBSCRIPTION_CLOCK_ABSTIME","","",62,null],[11,"empty","","Returns an empty set of flags",62,[[],["subclockflags",3]]],[11,"all","","Returns the set containing all flags.",62,[[],["subclockflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",62,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",62,[[],[["option",4],["subclockflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",62,[[],["subclockflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",62,[[],["subclockflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",62,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",62,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",62,[[["subclockflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",62,[[["subclockflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",62,[[["subclockflags",3]]]],[11,"remove","","Removes the specified flags in-place.",62,[[["subclockflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",62,[[["subclockflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",62,[[["subclockflags",3]]]],[3,"SubscriptionClock","","",null,null],[12,"id","","",63,null],[12,"timeout","","",63,null],[12,"precision","","",63,null],[12,"flags","","",63,null],[3,"SubscriptionFdReadwrite","","",null,null],[12,"file_descriptor","","",64,null],[4,"SubscriptionU","","",null,null],[13,"Clock","","",65,null],[13,"FdRead","","",65,null],[13,"FdWrite","","",65,null],[3,"Subscription","","",null,null],[12,"userdata","","",66,null],[12,"u","","",66,null],[6,"Exitcode","","",null,null],[4,"Signal","","",null,null],[13,"None","","",67,null],[13,"Hup","","",67,null],[13,"Int","","",67,null],[13,"Quit","","",67,null],[13,"Ill","","",67,null],[13,"Trap","","",67,null],[13,"Abrt","","",67,null],[13,"Bus","","",67,null],[13,"Fpe","","",67,null],[13,"Kill","","",67,null],[13,"Usr1","","",67,null],[13,"Segv","","",67,null],[13,"Usr2","","",67,null],[13,"Pipe","","",67,null],[13,"Alrm","","",67,null],[13,"Term","","",67,null],[13,"Chld","","",67,null],[13,"Cont","","",67,null],[13,"Stop","","",67,null],[13,"Tstp","","",67,null],[13,"Ttin","","",67,null],[13,"Ttou","","",67,null],[13,"Urg","","",67,null],[13,"Xcpu","","",67,null],[13,"Xfsz","","",67,null],[13,"Vtalrm","","",67,null],[13,"Prof","","",67,null],[13,"Winch","","",67,null],[13,"Poll","","",67,null],[13,"Pwr","","",67,null],[13,"Sys","","",67,null],[3,"Riflags","","",null,null],[18,"RECV_PEEK","","",68,null],[18,"RECV_WAITALL","","",68,null],[11,"empty","","Returns an empty set of flags",68,[[],["riflags",3]]],[11,"all","","Returns the set containing all flags.",68,[[],["riflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",68,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",68,[[],[["riflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",68,[[],["riflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",68,[[],["riflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",68,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",68,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",68,[[["riflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",68,[[["riflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",68,[[["riflags",3]]]],[11,"remove","","Removes the specified flags in-place.",68,[[["riflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",68,[[["riflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",68,[[["riflags",3]]]],[3,"Roflags","","",null,null],[18,"RECV_DATA_TRUNCATED","","",69,null],[11,"empty","","Returns an empty set of flags",69,[[],["roflags",3]]],[11,"all","","Returns the set containing all flags.",69,[[],["roflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",69,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",69,[[],[["option",4],["roflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",69,[[],["roflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",69,[[],["roflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",69,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",69,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",69,[[["roflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",69,[[["roflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",69,[[["roflags",3]]]],[11,"remove","","Removes the specified flags in-place.",69,[[["roflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",69,[[["roflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",69,[[["roflags",3]]]],[6,"Siflags","","",null,null],[3,"Sdflags","","",null,null],[18,"RD","","",70,null],[18,"WR","","",70,null],[11,"empty","","Returns an empty set of flags",70,[[],["sdflags",3]]],[11,"all","","Returns the set containing all flags.",70,[[],["sdflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",70,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",70,[[],[["sdflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",70,[[],["sdflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",70,[[],["sdflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",70,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",70,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",70,[[["sdflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",70,[[["sdflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",70,[[["sdflags",3]]]],[11,"remove","","Removes the specified flags in-place.",70,[[["sdflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",70,[[["sdflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",70,[[["sdflags",3]]]],[4,"Preopentype","","",null,null],[13,"Dir","","",71,null],[3,"PrestatDir","","",null,null],[12,"pr_name_len","","",72,null],[4,"Prestat","","",null,null],[13,"Dir","","",73,null],[8,"GuestErrorConversion","","",null,null],[10,"into_errno","","",74,[[["guesterror",4]],["errno",4]]],[8,"UserErrorConversion","","",null,null],[10,"errno_from_error","","",75,[[["error",4]],[["result",4],["errno",4],["trap",4]]]],[0,"wasi_snapshot_preview1","wasi_common::wasi","",null,null],[5,"args_get","wasi_common::wasi::wasi_snapshot_preview1","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"args_sizes_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"environ_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"environ_sizes_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"clock_res_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"clock_time_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_advise","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_allocate","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_close","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_datasync","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_fdstat_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_fdstat_set_flags","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_fdstat_set_rights","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_filestat_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_filestat_set_size","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_filestat_set_times","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_pread","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_prestat_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_prestat_dir_name","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_pwrite","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_read","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_readdir","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_renumber","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_seek","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_sync","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_tell","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"fd_write","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_create_directory","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_filestat_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_filestat_set_times","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_link","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_open","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_readlink","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_remove_directory","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_rename","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_symlink","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"path_unlink_file","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"poll_oneoff","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"proc_exit","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"proc_raise","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"sched_yield","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"random_get","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"sock_recv","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"sock_send","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[5,"sock_shutdown","","",null,[[["wasictx",3],["guestmemory",8]],[["result",4],["trap",4]]]],[8,"WasiSnapshotPreview1","","",null,null],[10,"args_get","","",76,[[["guestptr",3],["guestptr",3]],[["result",4],["error",4]]]],[10,"args_sizes_get","","",76,[[],[["result",4],["error",4]]]],[10,"environ_get","","",76,[[["guestptr",3],["guestptr",3]],[["result",4],["error",4]]]],[10,"environ_sizes_get","","",76,[[],[["result",4],["error",4]]]],[10,"clock_res_get","","",76,[[["clockid",4]],[["result",4],["timestamp",6],["error",4]]]],[10,"clock_time_get","","",76,[[["timestamp",6],["clockid",4]],[["result",4],["timestamp",6],["error",4]]]],[10,"fd_advise","","",76,[[["fd",3],["filesize",6],["advice",4]],[["result",4],["error",4]]]],[10,"fd_allocate","","",76,[[["fd",3],["filesize",6]],[["result",4],["error",4]]]],[10,"fd_close","","",76,[[["fd",3]],[["result",4],["error",4]]]],[10,"fd_datasync","","",76,[[["fd",3]],[["result",4],["error",4]]]],[10,"fd_fdstat_get","","",76,[[["fd",3]],[["result",4],["error",4],["fdstat",3]]]],[10,"fd_fdstat_set_flags","","",76,[[["fd",3],["fdflags",3]],[["result",4],["error",4]]]],[10,"fd_fdstat_set_rights","","",76,[[["fd",3],["rights",3]],[["result",4],["error",4]]]],[10,"fd_filestat_get","","",76,[[["fd",3]],[["filestat",3],["result",4],["error",4]]]],[10,"fd_filestat_set_size","","",76,[[["fd",3],["filesize",6]],[["result",4],["error",4]]]],[10,"fd_filestat_set_times","","",76,[[["fd",3],["timestamp",6],["fstflags",3]],[["result",4],["error",4]]]],[10,"fd_pread","","",76,[[["fd",3],["iovecarray",6],["filesize",6]],[["result",4],["size",6],["error",4]]]],[10,"fd_prestat_get","","",76,[[["fd",3]],[["result",4],["prestat",4],["error",4]]]],[10,"fd_prestat_dir_name","","",76,[[["fd",3],["guestptr",3],["size",6]],[["result",4],["error",4]]]],[10,"fd_pwrite","","",76,[[["fd",3],["ciovecarray",6],["filesize",6]],[["result",4],["size",6],["error",4]]]],[10,"fd_read","","",76,[[["fd",3],["iovecarray",6]],[["result",4],["size",6],["error",4]]]],[10,"fd_readdir","","",76,[[["size",6],["guestptr",3],["fd",3],["dircookie",6]],[["result",4],["size",6],["error",4]]]],[10,"fd_renumber","","",76,[[["fd",3]],[["result",4],["error",4]]]],[10,"fd_seek","","",76,[[["fd",3],["whence",4],["filedelta",6]],[["error",4],["filesize",6],["result",4]]]],[10,"fd_sync","","",76,[[["fd",3]],[["result",4],["error",4]]]],[10,"fd_tell","","",76,[[["fd",3]],[["error",4],["filesize",6],["result",4]]]],[10,"fd_write","","",76,[[["fd",3],["ciovecarray",6]],[["result",4],["size",6],["error",4]]]],[10,"path_create_directory","","",76,[[["fd",3],["guestptr",3]],[["result",4],["error",4]]]],[10,"path_filestat_get","","",76,[[["fd",3],["lookupflags",3],["guestptr",3]],[["filestat",3],["result",4],["error",4]]]],[10,"path_filestat_set_times","","",76,[[["timestamp",6],["lookupflags",3],["fd",3],["fstflags",3],["guestptr",3]],[["result",4],["error",4]]]],[10,"path_link","","",76,[[["lookupflags",3],["fd",3],["guestptr",3]],[["result",4],["error",4]]]],[10,"path_open","","",76,[[["lookupflags",3],["rights",3],["fd",3],["oflags",3],["fdflags",3],["guestptr",3]],[["fd",3],["error",4],["result",4]]]],[10,"path_readlink","","",76,[[["size",6],["guestptr",3],["fd",3],["guestptr",3]],[["result",4],["size",6],["error",4]]]],[10,"path_remove_directory","","",76,[[["fd",3],["guestptr",3]],[["result",4],["error",4]]]],[10,"path_rename","","",76,[[["fd",3],["guestptr",3]],[["result",4],["error",4]]]],[10,"path_symlink","","",76,[[["fd",3],["guestptr",3]],[["result",4],["error",4]]]],[10,"path_unlink_file","","",76,[[["fd",3],["guestptr",3]],[["result",4],["error",4]]]],[10,"poll_oneoff","","",76,[[["guestptr",3],["size",6],["guestptr",3]],[["result",4],["size",6],["error",4]]]],[10,"proc_exit","","",76,[[["exitcode",6]],["trap",4]]],[10,"proc_raise","","",76,[[["signal",4]],[["result",4],["error",4]]]],[10,"sched_yield","","",76,[[],[["result",4],["error",4]]]],[10,"random_get","","",76,[[["size",6],["guestptr",3]],[["result",4],["error",4]]]],[10,"sock_recv","","",76,[[["fd",3],["iovecarray",6],["riflags",3]],[["error",4],["result",4]]]],[10,"sock_send","","",76,[[["fd",3],["ciovecarray",6],["siflags",6]],[["result",4],["size",6],["error",4]]]],[10,"sock_shutdown","","",76,[[["fd",3],["sdflags",3]],[["result",4],["error",4]]]],[0,"metadata","wasi_common::wasi","",null,null],[17,"DOC_TEXT","wasi_common::wasi::metadata","",null,null],[5,"document","","",null,[[],["document",3]]],[3,"WasiCtx","wasi_common","",null,null],[3,"WasiCtxBuilder","","A builder allowing customizable construction of `WasiCtx`…",null,null],[4,"WasiCtxBuilderError","","Possible errors when `WasiCtxBuilder` fails building…",null,null],[13,"Io","","General I/O error was encountered.",77,null],[13,"Args","","Error constructing arguments",77,null],[13,"Env","","Error constructing environment",77,null],[13,"VirtualDirEntryRootNotADirectory","","The root of a VirtualDirEntry tree must be a…",77,null],[13,"TooManyFilesOpen","","`WasiCtx` has too many opened files.",77,null],[4,"Error","","Internal error type for the `wasi-common` crate. Contains…",null,null],[13,"Guest","","",78,null],[13,"TryFromInt","","",78,null],[13,"Utf8","","",78,null],[13,"GetRandom","","",78,null],[13,"Unsupported","","Some corners of the WASI standard are unsupported.",78,null],[13,"UnexpectedIo","","The host OS may return an io error that doesn\'t match one…",78,null],[13,"TooBig","","Errno::TooBig: Argument list too long",78,null],[13,"Acces","","Errno::Acces: Permission denied",78,null],[13,"Badf","","Errno::Badf: Bad file descriptor",78,null],[13,"Busy","","Errno::Busy: Device or resource busy",78,null],[13,"Exist","","Errno::Exist: File exists",78,null],[13,"Fault","","Errno::Fault: Bad address",78,null],[13,"Fbig","","Errno::Fbig: File too large",78,null],[13,"Ilseq","","Errno::Ilseq: Illegal byte sequence",78,null],[13,"Inval","","Errno::Inval: Invalid argument",78,null],[13,"Io","","Errno::Io: I/O error",78,null],[13,"Isdir","","Errno::Isdir: Is a directory",78,null],[13,"Loop","","Errno::Loop: Too many levels of symbolic links",78,null],[13,"Mfile","","Errno::Mfile: File descriptor value too large",78,null],[13,"Mlink","","Errno::Mlink: Too many links",78,null],[13,"Nametoolong","","Errno::Nametoolong: Filename too long",78,null],[13,"Nfile","","Errno::Nfile: Too many files open in system",78,null],[13,"Noent","","Errno::Noent: No such file or directory",78,null],[13,"Nomem","","Errno::Nomem: Not enough space",78,null],[13,"Nospc","","Errno::Nospc: No space left on device",78,null],[13,"Notdir","","Errno::Notdir: Not a directory or a symbolic link to a…",78,null],[13,"Notempty","","Errno::Notempty: Directory not empty.",78,null],[13,"Notsup","","Errno::Notsup: Not supported, or operation not supported…",78,null],[13,"Overflow","","Errno::Overflow: Value too large to be stored in data type.",78,null],[13,"Pipe","","Errno::Pipe: Broken pipe",78,null],[13,"Perm","","Errno::Perm: Operation not permitted",78,null],[13,"Spipe","","Errno::Spipe: Invalid seek",78,null],[13,"Notcapable","","Errno::Notcapable: Extension: Capabilities insufficient",78,null],[6,"Result","","",null,null],[8,"Handle","","Generic interface for all WASI-compatible handles. We…",null,null],[10,"as_any","","",79,[[],["any",8]]],[10,"try_clone","","",79,[[],[["result",6],["box",3]]]],[10,"get_file_type","","",79,[[],["filetype",4]]],[11,"get_rights","","",79,[[],["handlerights",3]]],[10,"set_rights","","",79,[[["handlerights",3]]]],[11,"is_directory","","",79,[[]]],[11,"is_tty","","Test whether this descriptor is considered a tty within…",79,[[]]],[11,"advise","","",79,[[["filesize",6],["advice",4]],["result",6]]],[11,"allocate","","",79,[[["filesize",6]],["result",6]]],[11,"datasync","","",79,[[],["result",6]]],[11,"fdstat_get","","",79,[[],[["result",6],["fdflags",3]]]],[11,"fdstat_set_flags","","",79,[[["fdflags",3]],["result",6]]],[11,"filestat_get","","",79,[[],[["filestat",3],["result",6]]]],[11,"filestat_set_size","","",79,[[["filesize",6]],["result",6]]],[11,"filestat_set_times","","",79,[[["timestamp",6],["fstflags",3]],["result",6]]],[11,"preadv","","",79,[[],["result",6]]],[11,"pwritev","","",79,[[],["result",6]]],[11,"read_vectored","","",79,[[],["result",6]]],[11,"readdir","","",79,[[["dircookie",6]],[["result",6],["box",3]]]],[11,"seek","","",79,[[["seekfrom",4]],["result",6]]],[11,"sync","","",79,[[],["result",6]]],[11,"write_vectored","","",79,[[],["result",6]]],[11,"create_directory","","",79,[[],["result",6]]],[11,"filestat_get_at","","",79,[[],[["filestat",3],["result",6]]]],[11,"filestat_set_times_at","","",79,[[["timestamp",6],["fstflags",3]],["result",6]]],[11,"openat","","",79,[[["oflags",3],["fdflags",3]],[["result",6],["box",3]]]],[11,"link","","",79,[[["handle",8],["box",3]],["result",6]]],[11,"readlink","","",79,[[],["result",6]]],[11,"readlinkat","","",79,[[],[["result",6],["string",3]]]],[11,"remove_directory","","",79,[[],["result",6]]],[11,"rename","","",79,[[["handle",8],["box",3]],["result",6]]],[11,"symlink","","",79,[[],["result",6]]],[11,"unlink_file","","",79,[[],["result",6]]],[3,"HandleRights","","Represents rights of a `Handle`, either already held or…",null,null],[3,"OsDir","","A directory in the operating system\'s file system. Its…",null,null],[3,"OsFile","","A file backed by the operating system\'s file system.…",null,null],[3,"OsOther","","`OsOther` is something of a catch-all for everything not…",null,null],[5,"preopen_dir","","",null,[[["asref",8],["path",3]],[["file",3],["result",6]]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_string","","",77,[[],["string",3]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"debug","","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"debug","","",80,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"debug","","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_string","","",78,[[],["string",3]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"debug","","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","wasi_common::fs","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"debug","","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"debug","","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"debug","","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"debug","","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"debug","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"debug","","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"debug","","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"debug","","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"into_iter","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"debug","","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","wasi_common","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"to_string","","",91,[[],["string",3]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"debug","","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","wasi_common::snapshots::wasi_unstable::types","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"debug","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"debug","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"debug","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"debug","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"debug","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"debug","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"debug","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"debug","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"debug","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"debug","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"debug","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"debug","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"debug","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"debug","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"debug","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"debug","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"debug","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"debug","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"debug","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"debug","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"debug","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"debug","","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"debug","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"debug","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"debug","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"debug","","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"debug","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"debug","","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"debug","","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"debug","","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"debug","","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"debug","","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","wasi_common","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"debug","","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"debug","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"debug","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","wasi_common::virtfs::pipe","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"debug","","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"debug","","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","wasi_common::virtfs","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"debug","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"debug","","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"debug","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"debug","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","wasi_common::wasi::types","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"debug","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"debug","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"debug","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"debug","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"debug","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"debug","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"debug","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"debug","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"debug","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"debug","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"to_string","","",52,[[],["string",3]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"debug","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"debug","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"debug","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"to_string","","",55,[[],["string",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"debug","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"debug","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"debug","","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"to_string","","",58,[[],["string",3]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"debug","","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"to_string","","",59,[[],["string",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"debug","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"debug","","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"debug","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"debug","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"debug","","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"debug","","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"debug","","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"debug","","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"to_string","","",67,[[],["string",3]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"debug","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"to_string","","",68,[[],["string",3]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"debug","","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"to_string","","",69,[[],["string",3]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"debug","","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"to_string","","",70,[[],["string",3]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"debug","","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"to_string","","",71,[[],["string",3]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"debug","","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"debug","","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"debug","","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"as_any","wasi_common","",94,[[],["any",8]]],[11,"try_clone","","",94,[[],[["result",6],["box",3]]]],[11,"get_file_type","","",94,[[],["filetype",4]]],[11,"get_rights","","",94,[[],["handlerights",3]]],[11,"set_rights","","",94,[[["handlerights",3]]]],[11,"fdstat_get","","",94,[[],[["result",6],["fdflags",3]]]],[11,"fdstat_set_flags","","",94,[[["fdflags",3]],["result",6]]],[11,"filestat_get","","",94,[[],[["filestat",3],["result",6]]]],[11,"filestat_set_times","","",94,[[["timestamp",6],["fstflags",3]],["result",6]]],[11,"readdir","","",94,[[["dircookie",6]],[["result",6],["box",3]]]],[11,"create_directory","","",94,[[],["result",6]]],[11,"filestat_get_at","","",94,[[],[["filestat",3],["result",6]]]],[11,"filestat_set_times_at","","",94,[[["timestamp",6],["fstflags",3]],["result",6]]],[11,"openat","","",94,[[["oflags",3],["fdflags",3]],[["result",6],["box",3]]]],[11,"link","","",94,[[["handle",8],["box",3]],["result",6]]],[11,"symlink","","",94,[[],["result",6]]],[11,"readlink","","",94,[[],["result",6]]],[11,"readlinkat","","",94,[[],[["result",6],["string",3]]]],[11,"rename","","",94,[[["handle",8],["box",3]],["result",6]]],[11,"remove_directory","","",94,[[],["result",6]]],[11,"unlink_file","","",94,[[],["result",6]]],[11,"as_any","","",92,[[],["any",8]]],[11,"try_clone","","",92,[[],[["result",6],["box",3]]]],[11,"get_file_type","","",92,[[],["filetype",4]]],[11,"get_rights","","",92,[[],["handlerights",3]]],[11,"set_rights","","",92,[[["handlerights",3]]]],[11,"advise","","",92,[[["filesize",6],["advice",4]],["result",6]]],[11,"allocate","","",92,[[["filesize",6]],["result",6]]],[11,"datasync","","",92,[[],["result",6]]],[11,"fdstat_get","","",92,[[],[["result",6],["fdflags",3]]]],[11,"fdstat_set_flags","","",92,[[["fdflags",3]],["result",6]]],[11,"filestat_get","","",92,[[],[["filestat",3],["result",6]]]],[11,"filestat_set_size","","",92,[[["filesize",6]],["result",6]]],[11,"filestat_set_times","","",92,[[["timestamp",6],["fstflags",3]],["result",6]]],[11,"preadv","","",92,[[],["result",6]]],[11,"pwritev","","",92,[[],["result",6]]],[11,"read_vectored","","",92,[[],["result",6]]],[11,"seek","","",92,[[["seekfrom",4]],["result",6]]],[11,"sync","","",92,[[],["result",6]]],[11,"write_vectored","","",92,[[],["result",6]]],[11,"as_any","","",93,[[],["any",8]]],[11,"try_clone","","",93,[[],[["result",6],["box",3]]]],[11,"get_file_type","","",93,[[],["filetype",4]]],[11,"get_rights","","",93,[[],["handlerights",3]]],[11,"set_rights","","",93,[[["handlerights",3]]]],[11,"fdstat_get","","",93,[[],[["result",6],["fdflags",3]]]],[11,"fdstat_set_flags","","",93,[[["fdflags",3]],["result",6]]],[11,"read_vectored","","",93,[[],["result",6]]],[11,"write_vectored","","",93,[[],["result",6]]],[11,"as_any","wasi_common::virtfs::pipe","",35,[[],["any",8]]],[11,"try_clone","","",35,[[],[["result",6],["box",3]]]],[11,"get_file_type","","",35,[[],["filetype",4]]],[11,"get_rights","","",35,[[],["handlerights",3]]],[11,"set_rights","","",35,[[["handlerights",3]]]],[11,"advise","","",35,[[["filesize",6],["advice",4]],["result",6]]],[11,"allocate","","",35,[[["filesize",6]],["result",6]]],[11,"fdstat_set_flags","","",35,[[["fdflags",3]],["result",6]]],[11,"filestat_get","","",35,[[],[["filestat",3],["result",6]]]],[11,"filestat_set_size","","",35,[[["filesize",6]],["result",6]]],[11,"preadv","","",35,[[["filesize",6]],["result",6]]],[11,"seek","","",35,[[["seekfrom",4]],[["result",6],["filesize",6]]]],[11,"read_vectored","","",35,[[],["result",6]]],[11,"create_directory","","",35,[[],["result",6]]],[11,"openat","","",35,[[["oflags",3],["fdflags",3]],[["result",6],["box",3]]]],[11,"link","","",35,[[["handle",8],["box",3]],["result",6]]],[11,"readlink","","",35,[[],["result",6]]],[11,"readlinkat","","",35,[[],[["result",6],["string",3]]]],[11,"rename","","",35,[[["handle",8],["box",3]],["result",6]]],[11,"remove_directory","","",35,[[],["result",6]]],[11,"symlink","","",35,[[],["result",6]]],[11,"unlink_file","","",35,[[],["result",6]]],[11,"as_any","","",36,[[],["any",8]]],[11,"try_clone","","",36,[[],[["result",6],["box",3]]]],[11,"get_file_type","","",36,[[],["filetype",4]]],[11,"get_rights","","",36,[[],["handlerights",3]]],[11,"set_rights","","",36,[[["handlerights",3]]]],[11,"advise","","",36,[[["filesize",6],["advice",4]],["result",6]]],[11,"allocate","","",36,[[["filesize",6]],["result",6]]],[11,"fdstat_set_flags","","",36,[[["fdflags",3]],["result",6]]],[11,"filestat_get","","",36,[[],[["filestat",3],["result",6]]]],[11,"filestat_set_size","","",36,[[["filesize",6]],["result",6]]],[11,"pwritev","","",36,[[["filesize",6]],["result",6]]],[11,"seek","","",36,[[["seekfrom",4]],[["result",6],["filesize",6]]]],[11,"write_vectored","","",36,[[],["result",6]]],[11,"create_directory","","",36,[[],["result",6]]],[11,"openat","","",36,[[["oflags",3],["fdflags",3]],[["result",6],["box",3]]]],[11,"link","","",36,[[["handle",8],["box",3]],["result",6]]],[11,"readlink","","",36,[[],["result",6]]],[11,"readlinkat","","",36,[[],[["result",6],["string",3]]]],[11,"rename","","",36,[[["handle",8],["box",3]],["result",6]]],[11,"remove_directory","","",36,[[],["result",6]]],[11,"symlink","","",36,[[],["result",6]]],[11,"unlink_file","","",36,[[],["result",6]]],[11,"as_any","wasi_common::virtfs","",40,[[],["any",8]]],[11,"try_clone","","",40,[[],[["result",6],["box",3]]]],[11,"get_file_type","","",40,[[],["filetype",4]]],[11,"get_rights","","",40,[[],["handlerights",3]]],[11,"set_rights","","",40,[[["handlerights",3]]]],[11,"advise","","",40,[[["filesize",6],["advice",4]],["result",6]]],[11,"allocate","","",40,[[["filesize",6]],["result",6]]],[11,"fdstat_get","","",40,[[],[["result",6],["fdflags",3]]]],[11,"fdstat_set_flags","","",40,[[["fdflags",3]],["result",6]]],[11,"filestat_get","","",40,[[],[["filestat",3],["result",6]]]],[11,"filestat_set_size","","",40,[[["filesize",6]],["result",6]]],[11,"preadv","","",40,[[["filesize",6]],["result",6]]],[11,"pwritev","","",40,[[["filesize",6]],["result",6]]],[11,"read_vectored","","",40,[[],["result",6]]],[11,"seek","","",40,[[["seekfrom",4]],[["result",6],["filesize",6]]]],[11,"write_vectored","","",40,[[],["result",6]]],[11,"create_directory","","",40,[[],["result",6]]],[11,"openat","","",40,[[["oflags",3],["fdflags",3]],[["result",6],["box",3]]]],[11,"link","","",40,[[["handle",8],["box",3]],["result",6]]],[11,"readlink","","",40,[[],["result",6]]],[11,"readlinkat","","",40,[[],[["result",6],["string",3]]]],[11,"rename","","",40,[[["handle",8],["box",3]],["result",6]]],[11,"remove_directory","","",40,[[],["result",6]]],[11,"symlink","","",40,[[],["result",6]]],[11,"unlink_file","","",40,[[],["result",6]]],[11,"as_any","","",41,[[],["any",8]]],[11,"try_clone","","",41,[[],[["result",6],["box",3]]]],[11,"get_file_type","","",41,[[],["filetype",4]]],[11,"get_rights","","",41,[[],["handlerights",3]]],[11,"set_rights","","",41,[[["handlerights",3]]]],[11,"filestat_get","","",41,[[],[["filestat",3],["result",6]]]],[11,"readdir","","",41,[[["dircookie",6]],[["result",6],["box",3]]]],[11,"create_directory","","",41,[[],["result",6]]],[11,"filestat_get_at","","",41,[[],[["filestat",3],["result",6]]]],[11,"filestat_set_times_at","","",41,[[["timestamp",6],["fstflags",3]],["result",6]]],[11,"openat","","",41,[[["oflags",3],["fdflags",3]],[["result",6],["box",3]]]],[11,"readlinkat","","",41,[[],[["result",6],["string",3]]]],[11,"remove_directory","","",41,[[],["result",6]]],[11,"unlink_file","","",41,[[],["result",6]]],[11,"max_size","","",39,[[],["filesize",6]]],[11,"size","","",39,[[],["filesize",6]]],[11,"resize","","",39,[[["filesize",6]],["result",6]]],[11,"preadv","","",39,[[["filesize",6]],["result",6]]],[11,"pwritev","","",39,[[["filesize",6]],["result",6]]],[11,"pread","","",39,[[["filesize",6]],["result",6]]],[11,"pwrite","","",39,[[["filesize",6]],["result",6]]],[11,"into_errno","wasi_common","",81,[[["guesterror",4]],["errno",4]]],[11,"errno_from_error","","",81,[[["error",4]],[["errno",4],["trap",4],["result",4]]]],[11,"args_get","","",81,[[["guestptr",3],["guestptr",3]],[["error",4],["result",4]]]],[11,"args_sizes_get","","",81,[[],[["error",4],["result",4]]]],[11,"environ_get","","",81,[[["guestptr",3],["guestptr",3]],[["error",4],["result",4]]]],[11,"environ_sizes_get","","",81,[[],[["error",4],["result",4]]]],[11,"clock_res_get","","",81,[[["clockid",4]],[["result",4],["timestamp",6],["error",4]]]],[11,"clock_time_get","","",81,[[["timestamp",6],["clockid",4]],[["result",4],["timestamp",6],["error",4]]]],[11,"fd_advise","","",81,[[["fd",3],["filesize",6],["advice",4]],[["error",4],["result",4]]]],[11,"fd_allocate","","",81,[[["fd",3],["filesize",6]],[["error",4],["result",4]]]],[11,"fd_close","","",81,[[["fd",3]],[["error",4],["result",4]]]],[11,"fd_datasync","","",81,[[["fd",3]],[["error",4],["result",4]]]],[11,"fd_fdstat_get","","",81,[[["fd",3]],[["error",4],["result",4],["fdstat",3]]]],[11,"fd_fdstat_set_flags","","",81,[[["fdflags",3],["fd",3]],[["error",4],["result",4]]]],[11,"fd_fdstat_set_rights","","",81,[[["fd",3],["rights",3]],[["error",4],["result",4]]]],[11,"fd_filestat_get","","",81,[[["fd",3]],[["result",4],["filestat",3],["error",4]]]],[11,"fd_filestat_set_size","","",81,[[["fd",3],["filesize",6]],[["error",4],["result",4]]]],[11,"fd_filestat_set_times","","",81,[[["fd",3],["timestamp",6],["fstflags",3]],[["error",4],["result",4]]]],[11,"fd_pread","","",81,[[["fd",3],["iovecarray",6],["filesize",6]],[["error",4],["size",6],["result",4]]]],[11,"fd_prestat_get","","",81,[[["fd",3]],[["result",4],["error",4],["prestat",4]]]],[11,"fd_prestat_dir_name","","",81,[[["fd",3],["guestptr",3],["size",6]],[["error",4],["result",4]]]],[11,"fd_pwrite","","",81,[[["fd",3],["ciovecarray",6],["filesize",6]],[["error",4],["size",6],["result",4]]]],[11,"fd_read","","",81,[[["fd",3],["iovecarray",6]],[["error",4],["size",6],["result",4]]]],[11,"fd_readdir","","",81,[[["guestptr",3],["dircookie",6],["fd",3],["size",6]],[["error",4],["size",6],["result",4]]]],[11,"fd_renumber","","",81,[[["fd",3]],[["error",4],["result",4]]]],[11,"fd_seek","","",81,[[["whence",4],["fd",3],["filedelta",6]],[["result",4],["filesize",6],["error",4]]]],[11,"fd_sync","","",81,[[["fd",3]],[["error",4],["result",4]]]],[11,"fd_tell","","",81,[[["fd",3]],[["result",4],["filesize",6],["error",4]]]],[11,"fd_write","","",81,[[["fd",3],["ciovecarray",6]],[["error",4],["size",6],["result",4]]]],[11,"path_create_directory","","",81,[[["fd",3],["guestptr",3]],[["error",4],["result",4]]]],[11,"path_filestat_get","","",81,[[["guestptr",3],["fd",3],["lookupflags",3]],[["result",4],["filestat",3],["error",4]]]],[11,"path_filestat_set_times","","",81,[[["lookupflags",3],["fstflags",3],["fd",3],["timestamp",6],["guestptr",3]],[["error",4],["result",4]]]],[11,"path_link","","",81,[[["lookupflags",3],["fd",3],["guestptr",3]],[["error",4],["result",4]]]],[11,"path_open","","",81,[[["lookupflags",3],["oflags",3],["rights",3],["fdflags",3],["fd",3],["guestptr",3]],[["result",4],["fd",3],["error",4]]]],[11,"path_readlink","","",81,[[["guestptr",3],["fd",3],["size",6],["guestptr",3]],[["error",4],["size",6],["result",4]]]],[11,"path_remove_directory","","",81,[[["fd",3],["guestptr",3]],[["error",4],["result",4]]]],[11,"path_rename","","",81,[[["fd",3],["guestptr",3]],[["error",4],["result",4]]]],[11,"path_symlink","","",81,[[["fd",3],["guestptr",3]],[["error",4],["result",4]]]],[11,"path_unlink_file","","",81,[[["fd",3],["guestptr",3]],[["error",4],["result",4]]]],[11,"poll_oneoff","","",81,[[["guestptr",3],["guestptr",3],["size",6]],[["error",4],["size",6],["result",4]]]],[11,"proc_exit","","",81,[[["exitcode",6]],["trap",4]]],[11,"proc_raise","","",81,[[["signal",4]],[["error",4],["result",4]]]],[11,"sched_yield","","",81,[[],[["error",4],["result",4]]]],[11,"random_get","","",81,[[["guestptr",3],["size",6]],[["error",4],["result",4]]]],[11,"sock_recv","","",81,[[["riflags",3],["fd",3],["iovecarray",6]],[["error",4],["result",4]]]],[11,"sock_send","","",81,[[["fd",3],["ciovecarray",6],["siflags",6]],[["error",4],["size",6],["result",4]]]],[11,"sock_shutdown","","",81,[[["fd",3],["sdflags",3]],[["error",4],["result",4]]]],[11,"into_errno","","",81,[[["guesterror",4]],["errno",4]]],[11,"errno_from_error","","",81,[[["error",4]],[["result",4],["errno",4],["trap",4]]]],[11,"args_get","","",81,[[["guestptr",3],["guestptr",3]],["result",6]]],[11,"args_sizes_get","","",81,[[],["result",6]]],[11,"environ_get","","",81,[[["guestptr",3],["guestptr",3]],["result",6]]],[11,"environ_sizes_get","","",81,[[],["result",6]]],[11,"clock_res_get","","",81,[[["clockid",4]],[["result",6],["timestamp",6]]]],[11,"clock_time_get","","",81,[[["clockid",4],["timestamp",6]],[["result",6],["timestamp",6]]]],[11,"fd_advise","","",81,[[["filesize",6],["advice",4],["fd",3]],["result",6]]],[11,"fd_allocate","","",81,[[["filesize",6],["fd",3]],["result",6]]],[11,"fd_close","","",81,[[["fd",3]],["result",6]]],[11,"fd_datasync","","",81,[[["fd",3]],["result",6]]],[11,"fd_fdstat_get","","",81,[[["fd",3]],[["fdstat",3],["result",6]]]],[11,"fd_fdstat_set_flags","","",81,[[["fdflags",3],["fd",3]],["result",6]]],[11,"fd_fdstat_set_rights","","",81,[[["rights",3],["fd",3]],["result",6]]],[11,"fd_filestat_get","","",81,[[["fd",3]],[["filestat",3],["result",6]]]],[11,"fd_filestat_set_size","","",81,[[["filesize",6],["fd",3]],["result",6]]],[11,"fd_filestat_set_times","","",81,[[["timestamp",6],["fstflags",3],["fd",3]],["result",6]]],[11,"fd_pread","","",81,[[["iovecarray",6],["filesize",6],["fd",3]],[["size",6],["result",6]]]],[11,"fd_prestat_get","","",81,[[["fd",3]],[["result",6],["prestat",4]]]],[11,"fd_prestat_dir_name","","",81,[[["guestptr",3],["size",6],["fd",3]],["result",6]]],[11,"fd_pwrite","","",81,[[["ciovecarray",6],["filesize",6],["fd",3]],[["size",6],["result",6]]]],[11,"fd_read","","",81,[[["iovecarray",6],["fd",3]],[["size",6],["result",6]]]],[11,"fd_readdir","","",81,[[["dircookie",6],["guestptr",3],["size",6],["fd",3]],[["size",6],["result",6]]]],[11,"fd_renumber","","",81,[[["fd",3]],["result",6]]],[11,"fd_seek","","",81,[[["filedelta",6],["whence",4],["fd",3]],[["filesize",6],["result",6]]]],[11,"fd_sync","","",81,[[["fd",3]],["result",6]]],[11,"fd_tell","","",81,[[["fd",3]],[["filesize",6],["result",6]]]],[11,"fd_write","","",81,[[["ciovecarray",6],["fd",3]],[["size",6],["result",6]]]],[11,"path_create_directory","","",81,[[["guestptr",3],["fd",3]],["result",6]]],[11,"path_filestat_get","","",81,[[["guestptr",3],["lookupflags",3],["fd",3]],[["filestat",3],["result",6]]]],[11,"path_filestat_set_times","","",81,[[["lookupflags",3],["fstflags",3],["guestptr",3],["timestamp",6],["fd",3]],["result",6]]],[11,"path_link","","",81,[[["lookupflags",3],["guestptr",3],["fd",3]],["result",6]]],[11,"path_open","","",81,[[["lookupflags",3],["oflags",3],["guestptr",3],["rights",3],["fdflags",3],["fd",3]],[["result",6],["fd",3]]]],[11,"path_readlink","","",81,[[["guestptr",3],["guestptr",3],["size",6],["fd",3]],[["size",6],["result",6]]]],[11,"path_remove_directory","","",81,[[["guestptr",3],["fd",3]],["result",6]]],[11,"path_rename","","",81,[[["guestptr",3],["fd",3]],["result",6]]],[11,"path_symlink","","",81,[[["guestptr",3],["fd",3]],["result",6]]],[11,"path_unlink_file","","",81,[[["guestptr",3],["fd",3]],["result",6]]],[11,"poll_oneoff","","",81,[[["size",6],["guestptr",3],["guestptr",3]],[["size",6],["result",6]]]],[11,"proc_exit","","",81,[[["exitcode",6]],["trap",4]]],[11,"proc_raise","","",81,[[["signal",4]],["result",6]]],[11,"sched_yield","","",81,[[],["result",6]]],[11,"random_get","","",81,[[["guestptr",3],["size",6]],["result",6]]],[11,"sock_recv","","",81,[[["iovecarray",6],["riflags",3],["fd",3]],["result",6]]],[11,"sock_send","","",81,[[["ciovecarray",6],["siflags",6],["fd",3]],[["size",6],["result",6]]]],[11,"sock_shutdown","","",81,[[["sdflags",3],["fd",3]],["result",6]]],[11,"drop","wasi_common::fs","",82,[[]]],[11,"drop","","",85,[[]]],[11,"from","wasi_common","",77,[[["error",3]]]],[11,"from","","",78,[[["guesterror",4]]]],[11,"from","","",78,[[["tryfrominterror",3]]]],[11,"from","","",78,[[["utf8error",3]]]],[11,"from","","",78,[[["error",3]]]],[11,"from","","",78,[[["infallible",4]]]],[11,"from","","",78,[[["error",3]]]],[11,"from","wasi_common::wasi::types","",49,[[["filetype",3]]]],[11,"from","wasi_common::snapshots::wasi_unstable::types","",3,[[],["fd",3]]],[11,"from","","",3,[[],["fd",3]]],[11,"from","","",1,[[["guesterror",4]]]],[11,"from","wasi_common::wasi::types","",42,[[["clockid",4]],["clockid",4]]],[11,"from","","",45,[[["fd",3]],["fd",3]]],[11,"from","wasi_common::snapshots::wasi_unstable::types","",3,[[["fd",3]],["fd",3]]],[11,"from","wasi_common::wasi::types","",51,[[["advice",4]],["advice",4]]],[11,"from","wasi_common::snapshots::wasi_unstable::types","",11,[[["fdstat",3]],["fdstat",3]]],[11,"from","wasi_common::wasi::types","",44,[[["rights",3]],["rights",3]]],[11,"from","wasi_common::snapshots::wasi_unstable::types","",2,[[["rights",3]],["rights",3]]],[11,"from","wasi_common::wasi::types","",49,[[["filetype",4]],["filetype",4]]],[11,"from","wasi_common::snapshots::wasi_unstable::types","",7,[[["filetype",4]],["filetype",4]]],[11,"from","wasi_common::wasi::types","",52,[[["fdflags",3]],["fdflags",3]]],[11,"from","wasi_common::snapshots::wasi_unstable::types","",10,[[["fdflags",3]],["fdflags",3]]],[11,"from","wasi_common::wasi::types","",54,[[["fstflags",3]],["fstflags",3]]],[11,"from","wasi_common::snapshots::wasi_unstable::types","",12,[[["fstflags",3]],["fstflags",3]]],[11,"from","","",31,[[["prestat",4]],["prestat",4]]],[11,"from","","",30,[[["prestatdir",3]],["prestatdir",3]]],[11,"from","wasi_common::wasi::types","",48,[[["whence",4]],["whence",4]]],[11,"from","","",55,[[["lookupflags",3]],["lookupflags",3]]],[11,"from","","",56,[[["oflags",3]],["oflags",3]]],[11,"from","","",70,[[["sdflags",3]],["sdflags",3]]],[11,"from","","",67,[[["signal",4]],["signal",4]]],[11,"from","","",68,[[["riflags",3]],["riflags",3]]],[11,"from","wasi_common::snapshots::wasi_unstable::types","",27,[[["roflags",3]],["roflags",3]]],[11,"from","wasi_common::wasi::types","",66,[[["subscription",3]],["subscription",3]]],[11,"from","","",65,[[["subscriptionu",4]],["subscriptionu",4]]],[11,"from","","",62,[[["subclockflags",3]],["subclockflags",3]]],[11,"from","wasi_common::snapshots::wasi_unstable::types","",19,[[["event",3]],["event",3]]],[11,"from","","",1,[[["errno",4]],["errno",4]]],[11,"from","","",16,[[["eventtype",4]],["eventtype",4]]],[11,"from","","",18,[[["eventfdreadwrite",3]],["eventfdreadwrite",3]]],[11,"from","","",17,[[["eventrwflags",3]],["eventrwflags",3]]],[11,"from","wasi_common::wasi::types","",52,[[["oflags",3]]]],[11,"from","","",49,[[["filetype",4]]]],[11,"from","wasi_common::virtfs::pipe","",35,[[["vec",3]]]],[11,"from","","",35,[[]]],[11,"from","","",35,[[["string",3]]]],[11,"from","","",35,[[]]],[11,"from","wasi_common::wasi::types","",45,[[],["fd",3]]],[11,"from","","",45,[[],["fd",3]]],[11,"from","","",43,[[["guesterror",4]]]],[11,"extend","wasi_common::snapshots::wasi_unstable::types","",2,[[["intoiterator",8]]]],[11,"extend","","",10,[[["intoiterator",8]]]],[11,"extend","","",12,[[["intoiterator",8]]]],[11,"extend","","",13,[[["intoiterator",8]]]],[11,"extend","","",14,[[["intoiterator",8]]]],[11,"extend","","",17,[[["intoiterator",8]]]],[11,"extend","","",20,[[["intoiterator",8]]]],[11,"extend","","",26,[[["intoiterator",8]]]],[11,"extend","","",27,[[["intoiterator",8]]]],[11,"extend","","",28,[[["intoiterator",8]]]],[11,"extend","wasi_common::wasi::types","",44,[[["intoiterator",8]]]],[11,"extend","","",52,[[["intoiterator",8]]]],[11,"extend","","",54,[[["intoiterator",8]]]],[11,"extend","","",55,[[["intoiterator",8]]]],[11,"extend","","",56,[[["intoiterator",8]]]],[11,"extend","","",59,[[["intoiterator",8]]]],[11,"extend","","",62,[[["intoiterator",8]]]],[11,"extend","","",68,[[["intoiterator",8]]]],[11,"extend","","",69,[[["intoiterator",8]]]],[11,"extend","","",70,[[["intoiterator",8]]]],[11,"next","wasi_common::fs","TODO: Not yet implemented.",90,[[],["option",4]]],[11,"clone","","",86,[[],["filetype",3]]],[11,"clone","","",87,[[],["metadata",3]]],[11,"clone","","",89,[[],["permissions",3]]],[11,"clone","wasi_common","",91,[[],["handlerights",3]]],[11,"clone","wasi_common::snapshots::wasi_unstable::types","",0,[[],["clockid",4]]],[11,"clone","","",1,[[],["errno",4]]],[11,"clone","","",2,[[],["rights",3]]],[11,"clone","","",3,[[],["fd",3]]],[11,"clone","","",4,[[],["iovec",3]]],[11,"clone","","",5,[[],["ciovec",3]]],[11,"clone","","",6,[[],["whence",4]]],[11,"clone","","",7,[[],["filetype",4]]],[11,"clone","","",8,[[],["dirent",3]]],[11,"clone","","",9,[[],["advice",4]]],[11,"clone","","",10,[[],["fdflags",3]]],[11,"clone","","",11,[[],["fdstat",3]]],[11,"clone","","",12,[[],["fstflags",3]]],[11,"clone","","",13,[[],["lookupflags",3]]],[11,"clone","","",14,[[],["oflags",3]]],[11,"clone","","",15,[[],["filestat",3]]],[11,"clone","","",16,[[],["eventtype",4]]],[11,"clone","","",17,[[],["eventrwflags",3]]],[11,"clone","","",18,[[],["eventfdreadwrite",3]]],[11,"clone","","",19,[[],["event",3]]],[11,"clone","","",20,[[],["subclockflags",3]]],[11,"clone","","",21,[[],["subscriptionclock",3]]],[11,"clone","","",22,[[],["subscriptionfdreadwrite",3]]],[11,"clone","","",23,[[],["subscriptionu",4]]],[11,"clone","","",24,[[],["subscription",3]]],[11,"clone","","",25,[[],["signal",4]]],[11,"clone","","",26,[[],["riflags",3]]],[11,"clone","","",27,[[],["roflags",3]]],[11,"clone","","",28,[[],["sdflags",3]]],[11,"clone","","",29,[[],["preopentype",4]]],[11,"clone","","",30,[[],["prestatdir",3]]],[11,"clone","","",31,[[],["prestat",4]]],[11,"clone","wasi_common::virtfs::pipe","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","wasi_common::wasi::types","",42,[[],["clockid",4]]],[11,"clone","","",43,[[],["errno",4]]],[11,"clone","","",44,[[],["rights",3]]],[11,"clone","","",45,[[],["fd",3]]],[11,"clone","","",46,[[],["iovec",3]]],[11,"clone","","",47,[[],["ciovec",3]]],[11,"clone","","",48,[[],["whence",4]]],[11,"clone","","",49,[[],["filetype",4]]],[11,"clone","","",50,[[],["dirent",3]]],[11,"clone","","",51,[[],["advice",4]]],[11,"clone","","",52,[[],["fdflags",3]]],[11,"clone","","",53,[[],["fdstat",3]]],[11,"clone","","",54,[[],["fstflags",3]]],[11,"clone","","",55,[[],["lookupflags",3]]],[11,"clone","","",56,[[],["oflags",3]]],[11,"clone","","",57,[[],["filestat",3]]],[11,"clone","","",58,[[],["eventtype",4]]],[11,"clone","","",59,[[],["eventrwflags",3]]],[11,"clone","","",60,[[],["eventfdreadwrite",3]]],[11,"clone","","",61,[[],["event",3]]],[11,"clone","","",62,[[],["subclockflags",3]]],[11,"clone","","",63,[[],["subscriptionclock",3]]],[11,"clone","","",64,[[],["subscriptionfdreadwrite",3]]],[11,"clone","","",65,[[],["subscriptionu",4]]],[11,"clone","","",66,[[],["subscription",3]]],[11,"clone","","",67,[[],["signal",4]]],[11,"clone","","",68,[[],["riflags",3]]],[11,"clone","","",69,[[],["roflags",3]]],[11,"clone","","",70,[[],["sdflags",3]]],[11,"clone","","",71,[[],["preopentype",4]]],[11,"clone","","",72,[[],["prestatdir",3]]],[11,"clone","","",73,[[],["prestat",4]]],[11,"cmp","wasi_common::snapshots::wasi_unstable::types","",2,[[["rights",3]],["ordering",4]]],[11,"cmp","","",10,[[["fdflags",3]],["ordering",4]]],[11,"cmp","","",12,[[["fstflags",3]],["ordering",4]]],[11,"cmp","","",13,[[["lookupflags",3]],["ordering",4]]],[11,"cmp","","",14,[[["oflags",3]],["ordering",4]]],[11,"cmp","","",17,[[["eventrwflags",3]],["ordering",4]]],[11,"cmp","","",20,[[["subclockflags",3]],["ordering",4]]],[11,"cmp","","",26,[[["riflags",3]],["ordering",4]]],[11,"cmp","","",27,[[["roflags",3]],["ordering",4]]],[11,"cmp","","",28,[[["sdflags",3]],["ordering",4]]],[11,"cmp","wasi_common::wasi::types","",44,[[["rights",3]],["ordering",4]]],[11,"cmp","","",52,[[["fdflags",3]],["ordering",4]]],[11,"cmp","","",54,[[["fstflags",3]],["ordering",4]]],[11,"cmp","","",55,[[["lookupflags",3]],["ordering",4]]],[11,"cmp","","",56,[[["oflags",3]],["ordering",4]]],[11,"cmp","","",59,[[["eventrwflags",3]],["ordering",4]]],[11,"cmp","","",62,[[["subclockflags",3]],["ordering",4]]],[11,"cmp","","",68,[[["riflags",3]],["ordering",4]]],[11,"cmp","","",69,[[["roflags",3]],["ordering",4]]],[11,"cmp","","",70,[[["sdflags",3]],["ordering",4]]],[11,"eq","wasi_common::fs","",86,[[["filetype",3]]]],[11,"eq","","",89,[[["permissions",3]]]],[11,"eq","wasi_common::snapshots::wasi_unstable::types","",0,[[["clockid",4]]]],[11,"eq","","",1,[[["errno",4]]]],[11,"eq","","",2,[[["rights",3]]]],[11,"ne","","",2,[[["rights",3]]]],[11,"eq","","",3,[[["fd",3]]]],[11,"ne","","",3,[[["fd",3]]]],[11,"eq","","",6,[[["whence",4]]]],[11,"eq","","",7,[[["filetype",4]]]],[11,"eq","","",8,[[["dirent",3]]]],[11,"ne","","",8,[[["dirent",3]]]],[11,"eq","","",9,[[["advice",4]]]],[11,"eq","","",10,[[["fdflags",3]]]],[11,"ne","","",10,[[["fdflags",3]]]],[11,"eq","","",11,[[["fdstat",3]]]],[11,"ne","","",11,[[["fdstat",3]]]],[11,"eq","","",12,[[["fstflags",3]]]],[11,"ne","","",12,[[["fstflags",3]]]],[11,"eq","","",13,[[["lookupflags",3]]]],[11,"ne","","",13,[[["lookupflags",3]]]],[11,"eq","","",14,[[["oflags",3]]]],[11,"ne","","",14,[[["oflags",3]]]],[11,"eq","","",15,[[["filestat",3]]]],[11,"ne","","",15,[[["filestat",3]]]],[11,"eq","","",16,[[["eventtype",4]]]],[11,"eq","","",17,[[["eventrwflags",3]]]],[11,"ne","","",17,[[["eventrwflags",3]]]],[11,"eq","","",18,[[["eventfdreadwrite",3]]]],[11,"ne","","",18,[[["eventfdreadwrite",3]]]],[11,"eq","","",19,[[["event",3]]]],[11,"ne","","",19,[[["event",3]]]],[11,"eq","","",20,[[["subclockflags",3]]]],[11,"ne","","",20,[[["subclockflags",3]]]],[11,"eq","","",21,[[["subscriptionclock",3]]]],[11,"ne","","",21,[[["subscriptionclock",3]]]],[11,"eq","","",22,[[["subscriptionfdreadwrite",3]]]],[11,"ne","","",22,[[["subscriptionfdreadwrite",3]]]],[11,"eq","","",23,[[["subscriptionu",4]]]],[11,"ne","","",23,[[["subscriptionu",4]]]],[11,"eq","","",24,[[["subscription",3]]]],[11,"ne","","",24,[[["subscription",3]]]],[11,"eq","","",25,[[["signal",4]]]],[11,"eq","","",26,[[["riflags",3]]]],[11,"ne","","",26,[[["riflags",3]]]],[11,"eq","","",27,[[["roflags",3]]]],[11,"ne","","",27,[[["roflags",3]]]],[11,"eq","","",28,[[["sdflags",3]]]],[11,"ne","","",28,[[["sdflags",3]]]],[11,"eq","","",29,[[["preopentype",4]]]],[11,"eq","","",30,[[["prestatdir",3]]]],[11,"ne","","",30,[[["prestatdir",3]]]],[11,"eq","","",31,[[["prestat",4]]]],[11,"ne","","",31,[[["prestat",4]]]],[11,"eq","wasi_common::wasi::types","",42,[[["clockid",4]]]],[11,"eq","","",43,[[["errno",4]]]],[11,"eq","","",44,[[["rights",3]]]],[11,"ne","","",44,[[["rights",3]]]],[11,"eq","","",45,[[["fd",3]]]],[11,"ne","","",45,[[["fd",3]]]],[11,"eq","","",48,[[["whence",4]]]],[11,"eq","","",49,[[["filetype",4]]]],[11,"eq","","",50,[[["dirent",3]]]],[11,"ne","","",50,[[["dirent",3]]]],[11,"eq","","",51,[[["advice",4]]]],[11,"eq","","",52,[[["fdflags",3]]]],[11,"ne","","",52,[[["fdflags",3]]]],[11,"eq","","",53,[[["fdstat",3]]]],[11,"ne","","",53,[[["fdstat",3]]]],[11,"eq","","",54,[[["fstflags",3]]]],[11,"ne","","",54,[[["fstflags",3]]]],[11,"eq","","",55,[[["lookupflags",3]]]],[11,"ne","","",55,[[["lookupflags",3]]]],[11,"eq","","",56,[[["oflags",3]]]],[11,"ne","","",56,[[["oflags",3]]]],[11,"eq","","",57,[[["filestat",3]]]],[11,"ne","","",57,[[["filestat",3]]]],[11,"eq","","",58,[[["eventtype",4]]]],[11,"eq","","",59,[[["eventrwflags",3]]]],[11,"ne","","",59,[[["eventrwflags",3]]]],[11,"eq","","",60,[[["eventfdreadwrite",3]]]],[11,"ne","","",60,[[["eventfdreadwrite",3]]]],[11,"eq","","",61,[[["event",3]]]],[11,"ne","","",61,[[["event",3]]]],[11,"eq","","",62,[[["subclockflags",3]]]],[11,"ne","","",62,[[["subclockflags",3]]]],[11,"eq","","",63,[[["subscriptionclock",3]]]],[11,"ne","","",63,[[["subscriptionclock",3]]]],[11,"eq","","",64,[[["subscriptionfdreadwrite",3]]]],[11,"ne","","",64,[[["subscriptionfdreadwrite",3]]]],[11,"eq","","",65,[[["subscriptionu",4]]]],[11,"ne","","",65,[[["subscriptionu",4]]]],[11,"eq","","",66,[[["subscription",3]]]],[11,"ne","","",66,[[["subscription",3]]]],[11,"eq","","",67,[[["signal",4]]]],[11,"eq","","",68,[[["riflags",3]]]],[11,"ne","","",68,[[["riflags",3]]]],[11,"eq","","",69,[[["roflags",3]]]],[11,"ne","","",69,[[["roflags",3]]]],[11,"eq","","",70,[[["sdflags",3]]]],[11,"ne","","",70,[[["sdflags",3]]]],[11,"eq","","",71,[[["preopentype",4]]]],[11,"eq","","",72,[[["prestatdir",3]]]],[11,"ne","","",72,[[["prestatdir",3]]]],[11,"eq","","",73,[[["prestat",4]]]],[11,"ne","","",73,[[["prestat",4]]]],[11,"partial_cmp","wasi_common::snapshots::wasi_unstable::types","",2,[[["rights",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["rights",3]]]],[11,"le","","",2,[[["rights",3]]]],[11,"gt","","",2,[[["rights",3]]]],[11,"ge","","",2,[[["rights",3]]]],[11,"partial_cmp","","",10,[[["fdflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",10,[[["fdflags",3]]]],[11,"le","","",10,[[["fdflags",3]]]],[11,"gt","","",10,[[["fdflags",3]]]],[11,"ge","","",10,[[["fdflags",3]]]],[11,"partial_cmp","","",12,[[["fstflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",12,[[["fstflags",3]]]],[11,"le","","",12,[[["fstflags",3]]]],[11,"gt","","",12,[[["fstflags",3]]]],[11,"ge","","",12,[[["fstflags",3]]]],[11,"partial_cmp","","",13,[[["lookupflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",13,[[["lookupflags",3]]]],[11,"le","","",13,[[["lookupflags",3]]]],[11,"gt","","",13,[[["lookupflags",3]]]],[11,"ge","","",13,[[["lookupflags",3]]]],[11,"partial_cmp","","",14,[[["oflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",14,[[["oflags",3]]]],[11,"le","","",14,[[["oflags",3]]]],[11,"gt","","",14,[[["oflags",3]]]],[11,"ge","","",14,[[["oflags",3]]]],[11,"partial_cmp","","",17,[[["eventrwflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",17,[[["eventrwflags",3]]]],[11,"le","","",17,[[["eventrwflags",3]]]],[11,"gt","","",17,[[["eventrwflags",3]]]],[11,"ge","","",17,[[["eventrwflags",3]]]],[11,"partial_cmp","","",20,[[["subclockflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",20,[[["subclockflags",3]]]],[11,"le","","",20,[[["subclockflags",3]]]],[11,"gt","","",20,[[["subclockflags",3]]]],[11,"ge","","",20,[[["subclockflags",3]]]],[11,"partial_cmp","","",26,[[["riflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",26,[[["riflags",3]]]],[11,"le","","",26,[[["riflags",3]]]],[11,"gt","","",26,[[["riflags",3]]]],[11,"ge","","",26,[[["riflags",3]]]],[11,"partial_cmp","","",27,[[["roflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",27,[[["roflags",3]]]],[11,"le","","",27,[[["roflags",3]]]],[11,"gt","","",27,[[["roflags",3]]]],[11,"ge","","",27,[[["roflags",3]]]],[11,"partial_cmp","","",28,[[["sdflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",28,[[["sdflags",3]]]],[11,"le","","",28,[[["sdflags",3]]]],[11,"gt","","",28,[[["sdflags",3]]]],[11,"ge","","",28,[[["sdflags",3]]]],[11,"partial_cmp","wasi_common::wasi::types","",44,[[["rights",3]],[["ordering",4],["option",4]]]],[11,"lt","","",44,[[["rights",3]]]],[11,"le","","",44,[[["rights",3]]]],[11,"gt","","",44,[[["rights",3]]]],[11,"ge","","",44,[[["rights",3]]]],[11,"partial_cmp","","",52,[[["fdflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",52,[[["fdflags",3]]]],[11,"le","","",52,[[["fdflags",3]]]],[11,"gt","","",52,[[["fdflags",3]]]],[11,"ge","","",52,[[["fdflags",3]]]],[11,"partial_cmp","","",54,[[["fstflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",54,[[["fstflags",3]]]],[11,"le","","",54,[[["fstflags",3]]]],[11,"gt","","",54,[[["fstflags",3]]]],[11,"ge","","",54,[[["fstflags",3]]]],[11,"partial_cmp","","",55,[[["lookupflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",55,[[["lookupflags",3]]]],[11,"le","","",55,[[["lookupflags",3]]]],[11,"gt","","",55,[[["lookupflags",3]]]],[11,"ge","","",55,[[["lookupflags",3]]]],[11,"partial_cmp","","",56,[[["oflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",56,[[["oflags",3]]]],[11,"le","","",56,[[["oflags",3]]]],[11,"gt","","",56,[[["oflags",3]]]],[11,"ge","","",56,[[["oflags",3]]]],[11,"partial_cmp","","",59,[[["eventrwflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",59,[[["eventrwflags",3]]]],[11,"le","","",59,[[["eventrwflags",3]]]],[11,"gt","","",59,[[["eventrwflags",3]]]],[11,"ge","","",59,[[["eventrwflags",3]]]],[11,"partial_cmp","","",62,[[["subclockflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",62,[[["subclockflags",3]]]],[11,"le","","",62,[[["subclockflags",3]]]],[11,"gt","","",62,[[["subclockflags",3]]]],[11,"ge","","",62,[[["subclockflags",3]]]],[11,"partial_cmp","","",68,[[["riflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",68,[[["riflags",3]]]],[11,"le","","",68,[[["riflags",3]]]],[11,"gt","","",68,[[["riflags",3]]]],[11,"ge","","",68,[[["riflags",3]]]],[11,"partial_cmp","","",69,[[["roflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",69,[[["roflags",3]]]],[11,"le","","",69,[[["roflags",3]]]],[11,"gt","","",69,[[["roflags",3]]]],[11,"ge","","",69,[[["roflags",3]]]],[11,"partial_cmp","","",70,[[["sdflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",70,[[["sdflags",3]]]],[11,"le","","",70,[[["sdflags",3]]]],[11,"gt","","",70,[[["sdflags",3]]]],[11,"ge","","",70,[[["sdflags",3]]]],[11,"deref","wasi_common","",94,[[]]],[11,"deref","","",92,[[]]],[11,"deref","","",93,[[]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","wasi_common::snapshots::wasi_unstable::types","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","wasi_common","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","wasi_common::virtfs::pipe","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","wasi_common::wasi::types","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","wasi_common","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","wasi_common::snapshots::wasi_unstable::types","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","wasi_common::wasi::types","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"sub","wasi_common::snapshots::wasi_unstable::types","Returns the set difference of the two sets of flags.",2,[[["rights",3]],["rights",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",10,[[["fdflags",3]],["fdflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",12,[[["fstflags",3]],["fstflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",13,[[["lookupflags",3]],["lookupflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",14,[[["oflags",3]],["oflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",17,[[["eventrwflags",3]],["eventrwflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",20,[[["subclockflags",3]],["subclockflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",26,[[["riflags",3]],["riflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",27,[[["roflags",3]],["roflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",28,[[["sdflags",3]],["sdflags",3]]],[11,"sub","wasi_common::wasi::types","Returns the set difference of the two sets of flags.",44,[[["rights",3]],["rights",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",52,[[["fdflags",3]],["fdflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",54,[[["fstflags",3]],["fstflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",55,[[["lookupflags",3]],["lookupflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",56,[[["oflags",3]],["oflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",59,[[["eventrwflags",3]],["eventrwflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",62,[[["subclockflags",3]],["subclockflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",68,[[["riflags",3]],["riflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",69,[[["roflags",3]],["roflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",70,[[["sdflags",3]],["sdflags",3]]],[11,"sub_assign","wasi_common::snapshots::wasi_unstable::types","Disables all flags enabled in the set.",2,[[["rights",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",10,[[["fdflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",12,[[["fstflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",13,[[["lookupflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",14,[[["oflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",17,[[["eventrwflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",20,[[["subclockflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",26,[[["riflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",27,[[["roflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",28,[[["sdflags",3]]]],[11,"sub_assign","wasi_common::wasi::types","Disables all flags enabled in the set.",44,[[["rights",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",52,[[["fdflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",54,[[["fstflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",55,[[["lookupflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",56,[[["oflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",59,[[["eventrwflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",62,[[["subclockflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",68,[[["riflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",69,[[["roflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",70,[[["sdflags",3]]]],[11,"not","wasi_common::snapshots::wasi_unstable::types","Returns the complement of this set of flags.",2,[[],["rights",3]]],[11,"not","","Returns the complement of this set of flags.",10,[[],["fdflags",3]]],[11,"not","","Returns the complement of this set of flags.",12,[[],["fstflags",3]]],[11,"not","","Returns the complement of this set of flags.",13,[[],["lookupflags",3]]],[11,"not","","Returns the complement of this set of flags.",14,[[],["oflags",3]]],[11,"not","","Returns the complement of this set of flags.",17,[[],["eventrwflags",3]]],[11,"not","","Returns the complement of this set of flags.",20,[[],["subclockflags",3]]],[11,"not","","Returns the complement of this set of flags.",26,[[],["riflags",3]]],[11,"not","","Returns the complement of this set of flags.",27,[[],["roflags",3]]],[11,"not","","Returns the complement of this set of flags.",28,[[],["sdflags",3]]],[11,"not","wasi_common::wasi::types","Returns the complement of this set of flags.",44,[[],["rights",3]]],[11,"not","","Returns the complement of this set of flags.",52,[[],["fdflags",3]]],[11,"not","","Returns the complement of this set of flags.",54,[[],["fstflags",3]]],[11,"not","","Returns the complement of this set of flags.",55,[[],["lookupflags",3]]],[11,"not","","Returns the complement of this set of flags.",56,[[],["oflags",3]]],[11,"not","","Returns the complement of this set of flags.",59,[[],["eventrwflags",3]]],[11,"not","","Returns the complement of this set of flags.",62,[[],["subclockflags",3]]],[11,"not","","Returns the complement of this set of flags.",68,[[],["riflags",3]]],[11,"not","","Returns the complement of this set of flags.",69,[[],["roflags",3]]],[11,"not","","Returns the complement of this set of flags.",70,[[],["sdflags",3]]],[11,"bitand","wasi_common::snapshots::wasi_unstable::types","Returns the intersection between the two sets of flags.",2,[[["rights",3]],["rights",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",10,[[["fdflags",3]],["fdflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",12,[[["fstflags",3]],["fstflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",13,[[["lookupflags",3]],["lookupflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",14,[[["oflags",3]],["oflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",17,[[["eventrwflags",3]],["eventrwflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",20,[[["subclockflags",3]],["subclockflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",26,[[["riflags",3]],["riflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",27,[[["roflags",3]],["roflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",28,[[["sdflags",3]],["sdflags",3]]],[11,"bitand","wasi_common::wasi::types","Returns the intersection between the two sets of flags.",44,[[["rights",3]],["rights",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",52,[[["fdflags",3]],["fdflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",54,[[["fstflags",3]],["fstflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",55,[[["lookupflags",3]],["lookupflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",56,[[["oflags",3]],["oflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",59,[[["eventrwflags",3]],["eventrwflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",62,[[["subclockflags",3]],["subclockflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",68,[[["riflags",3]],["riflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",69,[[["roflags",3]],["roflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",70,[[["sdflags",3]],["sdflags",3]]],[11,"bitor","wasi_common::snapshots::wasi_unstable::types","Returns the union of the two sets of flags.",2,[[["rights",3]],["rights",3]]],[11,"bitor","","Returns the union of the two sets of flags.",10,[[["fdflags",3]],["fdflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",12,[[["fstflags",3]],["fstflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",13,[[["lookupflags",3]],["lookupflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",14,[[["oflags",3]],["oflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",17,[[["eventrwflags",3]],["eventrwflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",20,[[["subclockflags",3]],["subclockflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",26,[[["riflags",3]],["riflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",27,[[["roflags",3]],["roflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",28,[[["sdflags",3]],["sdflags",3]]],[11,"bitor","wasi_common::wasi::types","Returns the union of the two sets of flags.",44,[[["rights",3]],["rights",3]]],[11,"bitor","","Returns the union of the two sets of flags.",52,[[["fdflags",3]],["fdflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",54,[[["fstflags",3]],["fstflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",55,[[["lookupflags",3]],["lookupflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",56,[[["oflags",3]],["oflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",59,[[["eventrwflags",3]],["eventrwflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",62,[[["subclockflags",3]],["subclockflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",68,[[["riflags",3]],["riflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",69,[[["roflags",3]],["roflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",70,[[["sdflags",3]],["sdflags",3]]],[11,"bitxor","wasi_common::snapshots::wasi_unstable::types","Returns the left flags, but with all the right flags…",2,[[["rights",3]],["rights",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",10,[[["fdflags",3]],["fdflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",12,[[["fstflags",3]],["fstflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",13,[[["lookupflags",3]],["lookupflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",14,[[["oflags",3]],["oflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",17,[[["eventrwflags",3]],["eventrwflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",20,[[["subclockflags",3]],["subclockflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",26,[[["riflags",3]],["riflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",27,[[["roflags",3]],["roflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",28,[[["sdflags",3]],["sdflags",3]]],[11,"bitxor","wasi_common::wasi::types","Returns the left flags, but with all the right flags…",44,[[["rights",3]],["rights",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",52,[[["fdflags",3]],["fdflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",54,[[["fstflags",3]],["fstflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",55,[[["lookupflags",3]],["lookupflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",56,[[["oflags",3]],["oflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",59,[[["eventrwflags",3]],["eventrwflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",62,[[["subclockflags",3]],["subclockflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",68,[[["riflags",3]],["riflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",69,[[["roflags",3]],["roflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",70,[[["sdflags",3]],["sdflags",3]]],[11,"bitand_assign","wasi_common::snapshots::wasi_unstable::types","Disables all flags disabled in the set.",2,[[["rights",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",10,[[["fdflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",12,[[["fstflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",13,[[["lookupflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",14,[[["oflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",17,[[["eventrwflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",20,[[["subclockflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",26,[[["riflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",27,[[["roflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",28,[[["sdflags",3]]]],[11,"bitand_assign","wasi_common::wasi::types","Disables all flags disabled in the set.",44,[[["rights",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",52,[[["fdflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",54,[[["fstflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",55,[[["lookupflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",56,[[["oflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",59,[[["eventrwflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",62,[[["subclockflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",68,[[["riflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",69,[[["roflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",70,[[["sdflags",3]]]],[11,"bitor_assign","wasi_common::snapshots::wasi_unstable::types","Adds the set of flags.",2,[[["rights",3]]]],[11,"bitor_assign","","Adds the set of flags.",10,[[["fdflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",12,[[["fstflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",13,[[["lookupflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",14,[[["oflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",17,[[["eventrwflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",20,[[["subclockflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",26,[[["riflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",27,[[["roflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",28,[[["sdflags",3]]]],[11,"bitor_assign","wasi_common::wasi::types","Adds the set of flags.",44,[[["rights",3]]]],[11,"bitor_assign","","Adds the set of flags.",52,[[["fdflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",54,[[["fstflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",55,[[["lookupflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",56,[[["oflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",59,[[["eventrwflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",62,[[["subclockflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",68,[[["riflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",69,[[["roflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",70,[[["sdflags",3]]]],[11,"bitxor_assign","wasi_common::snapshots::wasi_unstable::types","Toggles the set of flags.",2,[[["rights",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",10,[[["fdflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",12,[[["fstflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",13,[[["lookupflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",14,[[["oflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",17,[[["eventrwflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",20,[[["subclockflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",26,[[["riflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",27,[[["roflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",28,[[["sdflags",3]]]],[11,"bitxor_assign","wasi_common::wasi::types","Toggles the set of flags.",44,[[["rights",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",52,[[["fdflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",54,[[["fstflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",55,[[["lookupflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",56,[[["oflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",59,[[["eventrwflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",62,[[["subclockflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",68,[[["riflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",69,[[["roflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",70,[[["sdflags",3]]]],[11,"hash","wasi_common::fs","",86,[[]]],[11,"hash","wasi_common::snapshots::wasi_unstable::types","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","wasi_common::wasi::types","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",62,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",68,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",70,[[]]],[11,"hash","","",71,[[]]],[11,"try_from","wasi_common::snapshots::wasi_unstable::types","",0,[[],[["result",4],["clockid",4],["guesterror",4]]]],[11,"try_from","","",0,[[],[["result",4],["clockid",4],["guesterror",4]]]],[11,"try_from","","",1,[[],[["result",4],["guesterror",4],["errno",4]]]],[11,"try_from","","",1,[[],[["result",4],["guesterror",4],["errno",4]]]],[11,"try_from","","",2,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",2,[[],[["result",4],["rights",3],["guesterror",4]]]],[11,"try_from","","",6,[[],[["whence",4],["result",4],["guesterror",4]]]],[11,"try_from","","",6,[[],[["whence",4],["result",4],["guesterror",4]]]],[11,"try_from","","",7,[[],[["result",4],["guesterror",4],["filetype",4]]]],[11,"try_from","","",7,[[],[["result",4],["guesterror",4],["filetype",4]]]],[11,"try_from","","",9,[[],[["result",4],["advice",4],["guesterror",4]]]],[11,"try_from","","",9,[[],[["result",4],["advice",4],["guesterror",4]]]],[11,"try_from","","",10,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",10,[[],[["result",4],["fdflags",3],["guesterror",4]]]],[11,"try_from","","",12,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",12,[[],[["result",4],["guesterror",4],["fstflags",3]]]],[11,"try_from","","",13,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",13,[[],[["result",4],["guesterror",4],["lookupflags",3]]]],[11,"try_from","","",14,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",14,[[],[["result",4],["guesterror",4],["oflags",3]]]],[11,"try_from","","",16,[[],[["guesterror",4],["result",4],["eventtype",4]]]],[11,"try_from","","",16,[[],[["guesterror",4],["result",4],["eventtype",4]]]],[11,"try_from","","",17,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",17,[[],[["eventrwflags",3],["guesterror",4],["result",4]]]],[11,"try_from","","",20,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",20,[[],[["result",4],["subclockflags",3],["guesterror",4]]]],[11,"try_from","","",25,[[],[["signal",4],["guesterror",4],["result",4]]]],[11,"try_from","","",25,[[],[["signal",4],["guesterror",4],["result",4]]]],[11,"try_from","","",26,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",26,[[],[["riflags",3],["result",4],["guesterror",4]]]],[11,"try_from","","",27,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",27,[[],[["result",4],["guesterror",4],["roflags",3]]]],[11,"try_from","","",28,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",28,[[],[["guesterror",4],["sdflags",3],["result",4]]]],[11,"try_from","","",29,[[],[["preopentype",4],["result",4],["guesterror",4]]]],[11,"try_from","","",29,[[],[["preopentype",4],["result",4],["guesterror",4]]]],[11,"try_from","","",1,[[["error",4]],[["errno",4],["trap",4],["result",4]]]],[11,"try_from","","",15,[[["filestat",3]],[["result",4],["filestat",3],["error",4]]]],[11,"try_from","wasi_common","",94,[[["file",3]],["result",6]]],[11,"try_from","","",92,[[["file",3]],["result",6]]],[11,"try_from","","",93,[[["file",3]],["result",6]]],[11,"try_from","wasi_common::wasi::types","",57,[[["stat",3]],["result",6]]],[11,"try_from","","",42,[[],[["guesterror",4],["clockid",4],["result",4]]]],[11,"try_from","","",42,[[],[["guesterror",4],["clockid",4],["result",4]]]],[11,"try_from","","",43,[[],[["errno",4],["result",4],["guesterror",4]]]],[11,"try_from","","",43,[[],[["errno",4],["result",4],["guesterror",4]]]],[11,"try_from","","",44,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",44,[[],[["guesterror",4],["result",4],["rights",3]]]],[11,"try_from","","",48,[[],[["whence",4],["guesterror",4],["result",4]]]],[11,"try_from","","",48,[[],[["whence",4],["guesterror",4],["result",4]]]],[11,"try_from","","",49,[[],[["guesterror",4],["result",4],["filetype",4]]]],[11,"try_from","","",49,[[],[["guesterror",4],["result",4],["filetype",4]]]],[11,"try_from","","",51,[[],[["advice",4],["guesterror",4],["result",4]]]],[11,"try_from","","",51,[[],[["advice",4],["guesterror",4],["result",4]]]],[11,"try_from","","",52,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",52,[[],[["guesterror",4],["fdflags",3],["result",4]]]],[11,"try_from","","",54,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",54,[[],[["guesterror",4],["result",4],["fstflags",3]]]],[11,"try_from","","",55,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",55,[[],[["guesterror",4],["lookupflags",3],["result",4]]]],[11,"try_from","","",56,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",56,[[],[["oflags",3],["guesterror",4],["result",4]]]],[11,"try_from","","",58,[[],[["result",4],["guesterror",4],["eventtype",4]]]],[11,"try_from","","",58,[[],[["result",4],["guesterror",4],["eventtype",4]]]],[11,"try_from","","",59,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",59,[[],[["result",4],["eventrwflags",3],["guesterror",4]]]],[11,"try_from","","",62,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",62,[[],[["result",4],["subclockflags",3],["guesterror",4]]]],[11,"try_from","","",67,[[],[["result",4],["signal",4],["guesterror",4]]]],[11,"try_from","","",67,[[],[["result",4],["signal",4],["guesterror",4]]]],[11,"try_from","","",68,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",68,[[],[["riflags",3],["guesterror",4],["result",4]]]],[11,"try_from","","",69,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",69,[[],[["guesterror",4],["result",4],["roflags",3]]]],[11,"try_from","","",70,[[],[["result",4],["guesterror",4]]]],[11,"try_from","","",70,[[],[["result",4],["sdflags",3],["guesterror",4]]]],[11,"try_from","","",71,[[],[["result",4],["preopentype",4],["guesterror",4]]]],[11,"try_from","","",71,[[],[["result",4],["preopentype",4],["guesterror",4]]]],[11,"try_from","","",43,[[["error",4]],[["result",4],["errno",4],["trap",4]]]],[11,"from_iter","wasi_common::snapshots::wasi_unstable::types","",2,[[["intoiterator",8]],["rights",3]]],[11,"from_iter","","",10,[[["intoiterator",8]],["fdflags",3]]],[11,"from_iter","","",12,[[["intoiterator",8]],["fstflags",3]]],[11,"from_iter","","",13,[[["intoiterator",8]],["lookupflags",3]]],[11,"from_iter","","",14,[[["intoiterator",8]],["oflags",3]]],[11,"from_iter","","",17,[[["intoiterator",8]],["eventrwflags",3]]],[11,"from_iter","","",20,[[["intoiterator",8]],["subclockflags",3]]],[11,"from_iter","","",26,[[["intoiterator",8]],["riflags",3]]],[11,"from_iter","","",27,[[["intoiterator",8]],["roflags",3]]],[11,"from_iter","","",28,[[["intoiterator",8]],["sdflags",3]]],[11,"from_iter","wasi_common::wasi::types","",44,[[["intoiterator",8]],["rights",3]]],[11,"from_iter","","",52,[[["intoiterator",8]],["fdflags",3]]],[11,"from_iter","","",54,[[["intoiterator",8]],["fstflags",3]]],[11,"from_iter","","",55,[[["intoiterator",8]],["lookupflags",3]]],[11,"from_iter","","",56,[[["intoiterator",8]],["oflags",3]]],[11,"from_iter","","",59,[[["intoiterator",8]],["eventrwflags",3]]],[11,"from_iter","","",62,[[["intoiterator",8]],["subclockflags",3]]],[11,"from_iter","","",68,[[["intoiterator",8]],["riflags",3]]],[11,"from_iter","","",69,[[["intoiterator",8]],["roflags",3]]],[11,"from_iter","","",70,[[["intoiterator",8]],["sdflags",3]]],[11,"fmt","wasi_common::snapshots::wasi_unstable::types","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","wasi_common::wasi::types","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","wasi_common::snapshots::wasi_unstable::types","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","wasi_common::wasi::types","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","wasi_common::snapshots::wasi_unstable::types","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","wasi_common::wasi::types","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","wasi_common::snapshots::wasi_unstable::types","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","wasi_common::wasi::types","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"source","wasi_common","",77,[[],[["error",8],["option",4]]]],[11,"source","","",78,[[],[["error",8],["option",4]]]],[11,"read","wasi_common::fs","TODO: Not yet implemented. See the comment in…",85,[[],["result",6]]],[11,"success","wasi_common::snapshots::wasi_unstable::types","",1,[[]]],[11,"success","wasi_common::wasi::types","",43,[[]]],[11,"guest_size","wasi_common::snapshots::wasi_unstable::types","",0,[[]]],[11,"guest_align","","",0,[[]]],[11,"read","","",0,[[["guestptr",3]],[["result",4],["clockid",4],["guesterror",4]]]],[11,"write","","",0,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",1,[[]]],[11,"guest_align","","",1,[[]]],[11,"read","","",1,[[["guestptr",3]],[["result",4],["guesterror",4],["errno",4]]]],[11,"write","","",1,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",2,[[]]],[11,"guest_align","","",2,[[]]],[11,"read","","",2,[[["guestptr",3]],[["result",4],["rights",3],["guesterror",4]]]],[11,"write","","",2,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",3,[[]]],[11,"guest_align","","",3,[[]]],[11,"read","","",3,[[["guestptr",3]],[["result",4],["fd",3],["guesterror",4]]]],[11,"write","","",3,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",4,[[]]],[11,"guest_align","","",4,[[]]],[11,"read","","",4,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",4,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",5,[[]]],[11,"guest_align","","",5,[[]]],[11,"read","","",5,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",5,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",6,[[]]],[11,"guest_align","","",6,[[]]],[11,"read","","",6,[[["guestptr",3]],[["whence",4],["result",4],["guesterror",4]]]],[11,"write","","",6,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",7,[[]]],[11,"guest_align","","",7,[[]]],[11,"read","","",7,[[["guestptr",3]],[["result",4],["guesterror",4],["filetype",4]]]],[11,"write","","",7,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",8,[[]]],[11,"guest_align","","",8,[[]]],[11,"read","","",8,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",8,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",9,[[]]],[11,"guest_align","","",9,[[]]],[11,"read","","",9,[[["guestptr",3]],[["result",4],["advice",4],["guesterror",4]]]],[11,"write","","",9,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",10,[[]]],[11,"guest_align","","",10,[[]]],[11,"read","","",10,[[["guestptr",3]],[["result",4],["fdflags",3],["guesterror",4]]]],[11,"write","","",10,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",11,[[]]],[11,"guest_align","","",11,[[]]],[11,"read","","",11,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",11,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",12,[[]]],[11,"guest_align","","",12,[[]]],[11,"read","","",12,[[["guestptr",3]],[["result",4],["guesterror",4],["fstflags",3]]]],[11,"write","","",12,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",13,[[]]],[11,"guest_align","","",13,[[]]],[11,"read","","",13,[[["guestptr",3]],[["result",4],["guesterror",4],["lookupflags",3]]]],[11,"write","","",13,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",14,[[]]],[11,"guest_align","","",14,[[]]],[11,"read","","",14,[[["guestptr",3]],[["result",4],["guesterror",4],["oflags",3]]]],[11,"write","","",14,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",15,[[]]],[11,"guest_align","","",15,[[]]],[11,"read","","",15,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",15,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",16,[[]]],[11,"guest_align","","",16,[[]]],[11,"read","","",16,[[["guestptr",3]],[["guesterror",4],["result",4],["eventtype",4]]]],[11,"write","","",16,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",17,[[]]],[11,"guest_align","","",17,[[]]],[11,"read","","",17,[[["guestptr",3]],[["eventrwflags",3],["guesterror",4],["result",4]]]],[11,"write","","",17,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",18,[[]]],[11,"guest_align","","",18,[[]]],[11,"read","","",18,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",18,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",19,[[]]],[11,"guest_align","","",19,[[]]],[11,"read","","",19,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",19,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",20,[[]]],[11,"guest_align","","",20,[[]]],[11,"read","","",20,[[["guestptr",3]],[["result",4],["subclockflags",3],["guesterror",4]]]],[11,"write","","",20,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",21,[[]]],[11,"guest_align","","",21,[[]]],[11,"read","","",21,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",21,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",22,[[]]],[11,"guest_align","","",22,[[]]],[11,"read","","",22,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",22,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",23,[[]]],[11,"guest_align","","",23,[[]]],[11,"read","","",23,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",23,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",24,[[]]],[11,"guest_align","","",24,[[]]],[11,"read","","",24,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",24,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",25,[[]]],[11,"guest_align","","",25,[[]]],[11,"read","","",25,[[["guestptr",3]],[["signal",4],["guesterror",4],["result",4]]]],[11,"write","","",25,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",26,[[]]],[11,"guest_align","","",26,[[]]],[11,"read","","",26,[[["guestptr",3]],[["riflags",3],["result",4],["guesterror",4]]]],[11,"write","","",26,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",27,[[]]],[11,"guest_align","","",27,[[]]],[11,"read","","",27,[[["guestptr",3]],[["result",4],["guesterror",4],["roflags",3]]]],[11,"write","","",27,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",28,[[]]],[11,"guest_align","","",28,[[]]],[11,"read","","",28,[[["guestptr",3]],[["guesterror",4],["sdflags",3],["result",4]]]],[11,"write","","",28,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",29,[[]]],[11,"guest_align","","",29,[[]]],[11,"read","","",29,[[["guestptr",3]],[["preopentype",4],["result",4],["guesterror",4]]]],[11,"write","","",29,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",30,[[]]],[11,"guest_align","","",30,[[]]],[11,"read","","",30,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",30,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",31,[[]]],[11,"guest_align","","",31,[[]]],[11,"read","","",31,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",31,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","wasi_common::wasi::types","",42,[[]]],[11,"guest_align","","",42,[[]]],[11,"read","","",42,[[["guestptr",3]],[["guesterror",4],["clockid",4],["result",4]]]],[11,"write","","",42,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",43,[[]]],[11,"guest_align","","",43,[[]]],[11,"read","","",43,[[["guestptr",3]],[["errno",4],["result",4],["guesterror",4]]]],[11,"write","","",43,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",44,[[]]],[11,"guest_align","","",44,[[]]],[11,"read","","",44,[[["guestptr",3]],[["guesterror",4],["result",4],["rights",3]]]],[11,"write","","",44,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",45,[[]]],[11,"guest_align","","",45,[[]]],[11,"read","","",45,[[["guestptr",3]],[["fd",3],["result",4],["guesterror",4]]]],[11,"write","","",45,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",46,[[]]],[11,"guest_align","","",46,[[]]],[11,"read","","",46,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",46,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",47,[[]]],[11,"guest_align","","",47,[[]]],[11,"read","","",47,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",47,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",48,[[]]],[11,"guest_align","","",48,[[]]],[11,"read","","",48,[[["guestptr",3]],[["whence",4],["guesterror",4],["result",4]]]],[11,"write","","",48,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",49,[[]]],[11,"guest_align","","",49,[[]]],[11,"read","","",49,[[["guestptr",3]],[["guesterror",4],["result",4],["filetype",4]]]],[11,"write","","",49,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",50,[[]]],[11,"guest_align","","",50,[[]]],[11,"read","","",50,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",50,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",51,[[]]],[11,"guest_align","","",51,[[]]],[11,"read","","",51,[[["guestptr",3]],[["advice",4],["guesterror",4],["result",4]]]],[11,"write","","",51,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",52,[[]]],[11,"guest_align","","",52,[[]]],[11,"read","","",52,[[["guestptr",3]],[["guesterror",4],["fdflags",3],["result",4]]]],[11,"write","","",52,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",53,[[]]],[11,"guest_align","","",53,[[]]],[11,"read","","",53,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",53,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",54,[[]]],[11,"guest_align","","",54,[[]]],[11,"read","","",54,[[["guestptr",3]],[["guesterror",4],["result",4],["fstflags",3]]]],[11,"write","","",54,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",55,[[]]],[11,"guest_align","","",55,[[]]],[11,"read","","",55,[[["guestptr",3]],[["guesterror",4],["lookupflags",3],["result",4]]]],[11,"write","","",55,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",56,[[]]],[11,"guest_align","","",56,[[]]],[11,"read","","",56,[[["guestptr",3]],[["oflags",3],["guesterror",4],["result",4]]]],[11,"write","","",56,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",57,[[]]],[11,"guest_align","","",57,[[]]],[11,"read","","",57,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",57,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",58,[[]]],[11,"guest_align","","",58,[[]]],[11,"read","","",58,[[["guestptr",3]],[["result",4],["guesterror",4],["eventtype",4]]]],[11,"write","","",58,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",59,[[]]],[11,"guest_align","","",59,[[]]],[11,"read","","",59,[[["guestptr",3]],[["result",4],["eventrwflags",3],["guesterror",4]]]],[11,"write","","",59,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",60,[[]]],[11,"guest_align","","",60,[[]]],[11,"read","","",60,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",60,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",61,[[]]],[11,"guest_align","","",61,[[]]],[11,"read","","",61,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",61,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",62,[[]]],[11,"guest_align","","",62,[[]]],[11,"read","","",62,[[["guestptr",3]],[["result",4],["subclockflags",3],["guesterror",4]]]],[11,"write","","",62,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",63,[[]]],[11,"guest_align","","",63,[[]]],[11,"read","","",63,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",63,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",64,[[]]],[11,"guest_align","","",64,[[]]],[11,"read","","",64,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",64,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",65,[[]]],[11,"guest_align","","",65,[[]]],[11,"read","","",65,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",65,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",66,[[]]],[11,"guest_align","","",66,[[]]],[11,"read","","",66,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",66,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",67,[[]]],[11,"guest_align","","",67,[[]]],[11,"read","","",67,[[["guestptr",3]],[["result",4],["signal",4],["guesterror",4]]]],[11,"write","","",67,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",68,[[]]],[11,"guest_align","","",68,[[]]],[11,"read","","",68,[[["guestptr",3]],[["riflags",3],["guesterror",4],["result",4]]]],[11,"write","","",68,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",69,[[]]],[11,"guest_align","","",69,[[]]],[11,"read","","",69,[[["guestptr",3]],[["guesterror",4],["result",4],["roflags",3]]]],[11,"write","","",69,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",70,[[]]],[11,"guest_align","","",70,[[]]],[11,"read","","",70,[[["guestptr",3]],[["result",4],["sdflags",3],["guesterror",4]]]],[11,"write","","",70,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",71,[[]]],[11,"guest_align","","",71,[[]]],[11,"read","","",71,[[["guestptr",3]],[["result",4],["preopentype",4],["guesterror",4]]]],[11,"write","","",71,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",72,[[]]],[11,"guest_align","","",72,[[]]],[11,"read","","",72,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",72,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",73,[[]]],[11,"guest_align","","",73,[[]]],[11,"read","","",73,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"write","","",73,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"validate","wasi_common::snapshots::wasi_unstable::types","",0,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",1,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",2,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",3,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",6,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",7,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",8,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",9,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",10,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",11,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",12,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",13,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",14,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",15,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",16,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",17,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",18,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",19,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",20,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",21,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",22,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",25,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",26,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",27,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",28,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",29,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",30,[[],[["result",4],["guesterror",4]]]],[11,"validate","wasi_common::wasi::types","",42,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",43,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",44,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",45,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",48,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",49,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",50,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",51,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",52,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",53,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",54,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",55,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",56,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",57,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",58,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",59,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",60,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",61,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",62,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",63,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",64,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",67,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",68,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",69,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",70,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",71,[[],[["result",4],["guesterror",4]]]],[11,"validate","","",72,[[],[["result",4],["guesterror",4]]]],[11,"new","wasi_common","Builder for a new `WasiCtx`.",80,[[]]],[11,"args","","Add arguments to the command-line arguments list.",80,[[]]],[11,"arg","","Add an argument to the command-line arguments list.",80,[[["asref",8]]]],[11,"inherit_args","","Inherit the command-line arguments from the host process.",80,[[]]],[11,"inherit_stdin","","Inherit stdin from the host process.",80,[[]]],[11,"inherit_stdout","","Inherit stdout from the host process.",80,[[]]],[11,"inherit_stderr","","Inherit stderr from the host process.",80,[[]]],[11,"inherit_stdio","","Inherit the stdin, stdout, and stderr streams from the…",80,[[]]],[11,"inherit_env","","Inherit the environment variables from the host process.",80,[[]]],[11,"env","","Add an entry to the environment.",80,[[["asref",8]]]],[11,"envs","","Add entries to the environment.",80,[[]]],[11,"stdin","","Provide a `Handle` to use as stdin",80,[[["handle",8]]]],[11,"stdout","","Provide a `Handle` to use as stdout",80,[[["handle",8]]]],[11,"stderr","","Provide a `Handle` to use as stderr",80,[[["handle",8]]]],[11,"preopened_dir","","Add a preopened directory.",80,[[["asref",8],["path",3],["file",3]]]],[11,"preopened_virt","","Add a preopened virtual directory.",80,[[["asref",8],["virtualdirentry",4],["path",3]]]],[11,"build","","Build a `WasiCtx`, consuming this `WasiCtxBuilder`.",80,[[],[["wasictx",3],["wasictxbuildererror",4],["result",4]]]],[11,"new","","Make a new `WasiCtx` with some default settings.",81,[[],[["result",4],["wasictxbuildererror",4]]]],[11,"from_raw_wasi_fd","wasi_common::fs","Constructs a new instance of `Self` from the given raw…",82,[[["wasictx",3],["fd",3]]]],[11,"open_file","","Attempts to open a file in read-only mode.",82,[[["asref",8],["path",3]],[["result",6],["file",3]]]],[11,"open_file_with","","Opens a file at `path` with the options specified by `self`.",82,[[["asref",8],["path",3],["openoptions",3]],[["result",6],["file",3]]]],[11,"open_dir","","Attempts to open a directory.",82,[[["asref",8],["path",3]],["result",6]]],[11,"create_file","","Opens a file in write-only mode.",82,[[["asref",8],["path",3]],[["result",6],["file",3]]]],[11,"read","","Returns an iterator over the entries within a directory.",82,[[],[["readdir",3],["result",6]]]],[11,"into_read","","Consumes self and returns an iterator over the entries…",82,[[],["readdir",3]]],[11,"read_file","","Read the entire contents of a file into a bytes vector.",82,[[["asref",8],["path",3]],[["vec",3],["result",6]]]],[11,"read_dir","","Returns an iterator over the entries within a directory.",82,[[["asref",8],["path",3]],[["readdir",3],["result",6]]]],[11,"new","","Creates a new set of options with default mode/security…",83,[[]]],[11,"recursive","","Indicates that directories should be created recursively,…",83,[[]]],[11,"create","","Creates the specified directory with the options…",83,[[["asref",8],["path",3]],["result",6]]],[11,"metadata","","Returns the metadata for the file that this entry points at.",84,[[],[["result",6],["metadata",3]]]],[11,"file_type","","Returns the file type for the file that this entry points…",84,[[],[["result",6],["filetype",3]]]],[11,"file_name","","Returns the bare file name of this directory entry without…",84,[[],["string",3]]],[11,"from_raw_wasi_fd","","Constructs a new instance of `Self` from the given raw…",85,[[["wasictx",3],["fd",3]]]],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",85,[[],["result",6]]],[11,"sync_data","","This function is similar to `sync_all`, except that it may…",85,[[],["result",6]]],[11,"set_len","","Truncates or extends the underlying file, updating the…",85,[[],["result",6]]],[11,"metadata","","Queries metadata about the underlying file.",85,[[],[["result",6],["metadata",3]]]],[11,"is_dir","","Tests whether this file type represents a directory.",86,[[]]],[11,"is_file","","Tests whether this file type represents a regular file.",86,[[]]],[11,"is_symlink","","Tests whether this file type represents a symbolic link.",86,[[]]],[11,"file_type","","Returns the file type for this metadata.",87,[[],["filetype",3]]],[11,"is_dir","","Returns true if this metadata is for a directory.",87,[[]]],[11,"is_file","","Returns true if this metadata is for a regular file.",87,[[]]],[11,"len","","Returns the size of the file, in bytes, this metadata is…",87,[[]]],[11,"permissions","","Returns the permissions of the file this metadata is for.",87,[[],["permissions",3]]],[11,"modified","","Returns the last modification time listed in this metadata.",87,[[],[["result",6],["systemtime",3]]]],[11,"accessed","","Returns the last access time of this metadata.",87,[[],[["result",6],["systemtime",3]]]],[11,"created","","Returns the creation time listed in this metadata.",87,[[],[["result",6],["systemtime",3]]]],[11,"new","","Creates a blank new set of options ready for configuration.",88,[[]]],[11,"read","","Sets the option for read access.",88,[[]]],[11,"write","","Sets the option for write access.",88,[[]]],[11,"append","","Sets the option for the append mode.",88,[[]]],[11,"truncate","","Sets the option for truncating a previous file.",88,[[]]],[11,"create","","Sets the option to create a new file.",88,[[]]],[11,"create_new","","Sets the option to always create a new file.",88,[[]]],[11,"readonly","","Returns true if these permissions describe a readonly…",89,[[]]],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",89,[[]]],[11,"from_raw_wasi_fd","","Constructs a new instance of `Self` from the given raw…",90,[[["fd",3]]]],[11,"new","wasi_common","Creates new `HandleRights` instance from `base` and…",91,[[["rights",3]]]],[11,"from_base","","Creates new `HandleRights` instance from `base` rights…",91,[[["rights",3]]]],[11,"empty","","Creates new `HandleRights` instance with both `base` and…",91,[[]]],[11,"contains","","Checks if `other` is a subset of those rights.",91,[[]]],[11,"base","","Returns base rights.",91,[[],["rights",3]]],[11,"inheriting","","Returns inheriting rights.",91,[[],["rights",3]]],[11,"get_rights","","",79,[[],["handlerights",3]]],[11,"is_directory","","",79,[[]]],[11,"is_tty","","Test whether this descriptor is considered a tty within…",79,[[]]],[11,"advise","","",79,[[["filesize",6],["advice",4]],["result",6]]],[11,"allocate","","",79,[[["filesize",6]],["result",6]]],[11,"datasync","","",79,[[],["result",6]]],[11,"fdstat_get","","",79,[[],[["result",6],["fdflags",3]]]],[11,"fdstat_set_flags","","",79,[[["fdflags",3]],["result",6]]],[11,"filestat_get","","",79,[[],[["filestat",3],["result",6]]]],[11,"filestat_set_size","","",79,[[["filesize",6]],["result",6]]],[11,"filestat_set_times","","",79,[[["timestamp",6],["fstflags",3]],["result",6]]],[11,"preadv","","",79,[[],["result",6]]],[11,"pwritev","","",79,[[],["result",6]]],[11,"read_vectored","","",79,[[],["result",6]]],[11,"readdir","","",79,[[["dircookie",6]],[["result",6],["box",3]]]],[11,"seek","","",79,[[["seekfrom",4]],["result",6]]],[11,"sync","","",79,[[],["result",6]]],[11,"write_vectored","","",79,[[],["result",6]]],[11,"create_directory","","",79,[[],["result",6]]],[11,"filestat_get_at","","",79,[[],[["filestat",3],["result",6]]]],[11,"filestat_set_times_at","","",79,[[["timestamp",6],["fstflags",3]],["result",6]]],[11,"openat","","",79,[[["oflags",3],["fdflags",3]],[["result",6],["box",3]]]],[11,"link","","",79,[[["handle",8],["box",3]],["result",6]]],[11,"readlink","","",79,[[],["result",6]]],[11,"readlinkat","","",79,[[],[["result",6],["string",3]]]],[11,"remove_directory","","",79,[[],["result",6]]],[11,"rename","","",79,[[["handle",8],["box",3]],["result",6]]],[11,"symlink","","",79,[[],["result",6]]],[11,"unlink_file","","",79,[[],["result",6]]]],"p":[[4,"Clockid"],[4,"Errno"],[3,"Rights"],[3,"Fd"],[3,"Iovec"],[3,"Ciovec"],[4,"Whence"],[4,"Filetype"],[3,"Dirent"],[4,"Advice"],[3,"Fdflags"],[3,"Fdstat"],[3,"Fstflags"],[3,"Lookupflags"],[3,"Oflags"],[3,"Filestat"],[4,"Eventtype"],[3,"Eventrwflags"],[3,"EventFdReadwrite"],[3,"Event"],[3,"Subclockflags"],[3,"SubscriptionClock"],[3,"SubscriptionFdReadwrite"],[4,"SubscriptionU"],[3,"Subscription"],[4,"Signal"],[3,"Riflags"],[3,"Roflags"],[3,"Sdflags"],[4,"Preopentype"],[3,"PrestatDir"],[4,"Prestat"],[8,"GuestErrorConversion"],[8,"UserErrorConversion"],[8,"WasiUnstable"],[3,"ReadPipe"],[3,"WritePipe"],[4,"VirtualDirEntry"],[8,"FileContents"],[3,"VecFileContents"],[3,"InMemoryFile"],[3,"VirtualDir"],[4,"Clockid"],[4,"Errno"],[3,"Rights"],[3,"Fd"],[3,"Iovec"],[3,"Ciovec"],[4,"Whence"],[4,"Filetype"],[3,"Dirent"],[4,"Advice"],[3,"Fdflags"],[3,"Fdstat"],[3,"Fstflags"],[3,"Lookupflags"],[3,"Oflags"],[3,"Filestat"],[4,"Eventtype"],[3,"Eventrwflags"],[3,"EventFdReadwrite"],[3,"Event"],[3,"Subclockflags"],[3,"SubscriptionClock"],[3,"SubscriptionFdReadwrite"],[4,"SubscriptionU"],[3,"Subscription"],[4,"Signal"],[3,"Riflags"],[3,"Roflags"],[3,"Sdflags"],[4,"Preopentype"],[3,"PrestatDir"],[4,"Prestat"],[8,"GuestErrorConversion"],[8,"UserErrorConversion"],[8,"WasiSnapshotPreview1"],[4,"WasiCtxBuilderError"],[4,"Error"],[8,"Handle"],[3,"WasiCtxBuilder"],[3,"WasiCtx"],[3,"Dir"],[3,"DirBuilder"],[3,"DirEntry"],[3,"File"],[3,"FileType"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"ReadDir"],[3,"HandleRights"],[3,"OsFile"],[3,"OsOther"],[3,"OsDir"]]},\
"wasi_crypto":{"doc":"","i":[[4,"KeyPairEncoding","wasi_crypto","",null,null],[13,"Raw","","",0,null],[13,"Pkcs8","","",0,null],[13,"Pem","","",0,null],[13,"Local","","",0,null],[4,"PublicKeyEncoding","","",null,null],[13,"Raw","","",1,null],[13,"Pkcs8","","",1,null],[13,"Pem","","",1,null],[13,"Sec","","",1,null],[13,"CompressedSec","","",1,null],[13,"Local","","",1,null],[4,"SecretKeyEncoding","","",null,null],[13,"Raw","","",2,null],[13,"Pkcs8","","",2,null],[13,"Pem","","",2,null],[13,"Sec","","",2,null],[13,"CompressedSec","","",2,null],[13,"Local","","",2,null],[4,"CryptoError","","",null,null],[13,"Success","","",3,null],[13,"GuestError","","",3,null],[13,"NotImplemented","","",3,null],[13,"UnsupportedFeature","","",3,null],[13,"ProhibitedOperation","","",3,null],[13,"UnsupportedEncoding","","",3,null],[13,"UnsupportedAlgorithm","","",3,null],[13,"UnsupportedOption","","",3,null],[13,"InvalidKey","","",3,null],[13,"InvalidLength","","",3,null],[13,"VerificationFailed","","",3,null],[13,"RNGError","","",3,null],[13,"AlgorithmFailure","","",3,null],[13,"InvalidSignature","","",3,null],[13,"Closed","","",3,null],[13,"InvalidHandle","","",3,null],[13,"Overflow","","",3,null],[13,"InternalError","","",3,null],[13,"TooManyHandles","","",3,null],[13,"KeyNotSupported","","",3,null],[13,"KeyRequired","","",3,null],[13,"InvalidTag","","",3,null],[13,"InvalidOperation","","",3,null],[13,"NonceRequired","","",3,null],[13,"InvalidNonce","","",3,null],[13,"OptionNotSet","","",3,null],[13,"NotFound","","",3,null],[13,"ParametersMissing","","",3,null],[13,"IncompatibleKeys","","",3,null],[13,"Expired","","",3,null],[6,"Handle","","",null,null],[4,"SignatureEncoding","","",null,null],[13,"Raw","","",4,null],[13,"Der","","",4,null],[3,"Version","","",null,null],[12,"0","","",5,null],[4,"AlgorithmType","","",null,null],[13,"Signatures","","",6,null],[13,"Symmetric","","",6,null],[13,"KeyExchange","","",6,null],[3,"CryptoCtx","","",null,null],[11,"new","","",7,[[]]],[14,"ensure","","",null,null],[14,"bail","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",3,[[["error",3]]]],[11,"from","","",3,[[["tryfrominterror",3]]]],[11,"clone","","",0,[[],["keypairencoding",4]]],[11,"clone","","",1,[[],["publickeyencoding",4]]],[11,"clone","","",2,[[],["secretkeyencoding",4]]],[11,"clone","","",4,[[],["signatureencoding",4]]],[11,"clone","","",5,[[],["version",3]]],[11,"clone","","",6,[[],["algorithmtype",4]]],[11,"eq","","",0,[[["keypairencoding",4]]]],[11,"eq","","",1,[[["publickeyencoding",4]]]],[11,"eq","","",2,[[["secretkeyencoding",4]]]],[11,"eq","","",4,[[["signatureencoding",4]]]],[11,"eq","","",5,[[["version",3]]]],[11,"ne","","",5,[[["version",3]]]],[11,"eq","","",6,[[["algorithmtype",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"source","","",3,[[],[["error",8],["option",4]]]],[11,"array_output_len","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"array_output_pull","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"keypair_generate","","",7,[[["option",4],["algorithmtype",4],["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"keypair_import","","",7,[[["keypairencoding",4],["algorithmtype",4]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"keypair_id","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"keypair_from_pk_and_sk","","",7,[[["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"keypair_export","","",7,[[["keypairencoding",4],["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"keypair_publickey","","",7,[[["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"keypair_secretkey","","",7,[[["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"keypair_close","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"keypair_generate_managed","","",7,[[["option",4],["handle",6],["algorithmtype",4]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"keypair_store_managed","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"keypair_replace_managed","","",7,[[["handle",6]],[["cryptoerror",4],["result",4],["version",3]]]],[11,"keypair_from_id","","",7,[[["handle",6],["version",3]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"publickey_import","","",7,[[["publickeyencoding",4],["algorithmtype",4]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"publickey_export","","",7,[[["publickeyencoding",4],["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"publickey_verify","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"publickey_close","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"secretkey_import","","",7,[[["secretkeyencoding",4],["algorithmtype",4]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"secretkey_export","","",7,[[["secretkeyencoding",4],["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"publickey","","",7,[[["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"secretkey_close","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"kx_encapsulate","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"kx_dh","","",7,[[["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"kx_decapsulate","","",7,[[["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"options_open","","",7,[[["algorithmtype",4]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"options_close","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"options_set","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"options_set_guest_buffer","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"options_set_u64","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"options_get","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"options_get_u64","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"secrets_manager_open","","",7,[[["option",4],["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"secrets_manager_close","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"secrets_manager_invalidate","","",7,[[["handle",6],["version",3]],[["result",4],["cryptoerror",4]]]],[11,"signature_export","","",7,[[["signatureencoding",4],["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"signature_import","","",7,[[["signatureencoding",4]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"signature_state_open","","",7,[[["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"signature_state_update","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"signature_state_sign","","",7,[[["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"signature_state_close","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"signature_verification_state_open","","",7,[[["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"signature_verification_state_update","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"signature_verification_state_verify","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"signature_verification_state_close","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"signature_close","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"symmetric_key_generate","","",7,[[["option",4],["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"symmetric_key_import","","",7,[[],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"symmetric_key_export","","",7,[[["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"symmetric_key_id","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"symmetric_key_close","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"symmetric_key_generate_managed","","",7,[[["option",4],["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"symmetric_key_store_managed","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"symmetric_key_replace_managed","","",7,[[["handle",6]],[["cryptoerror",4],["result",4],["version",3]]]],[11,"symmetric_key_from_id","","",7,[[["handle",6],["version",3]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"symmetric_state_open","","",7,[[["option",4],["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"symmetric_state_options_get","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"symmetric_state_options_get_u64","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"symmetric_state_close","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"symmetric_state_absorb","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"symmetric_state_squeeze","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"symmetric_state_squeeze_tag","","",7,[[["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"symmetric_state_squeeze_key","","",7,[[["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"symmetric_state_max_tag_len","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"symmetric_state_encrypt","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"symmetric_state_encrypt_detached","","",7,[[["handle",6]],[["cryptoerror",4],["handle",6],["result",4]]]],[11,"symmetric_state_decrypt","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"symmetric_state_decrypt_detached","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"symmetric_state_ratchet","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"symmetric_tag_len","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"symmetric_tag_pull","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"symmetric_tag_verify","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[11,"symmetric_tag_close","","",7,[[["handle",6]],[["result",4],["cryptoerror",4]]]],[18,"UNSPECIFIED","","",5,null],[18,"LATEST","","",5,null],[18,"ALL","","",5,null]],"p":[[4,"KeyPairEncoding"],[4,"PublicKeyEncoding"],[4,"SecretKeyEncoding"],[4,"CryptoError"],[4,"SignatureEncoding"],[3,"Version"],[4,"AlgorithmType"],[3,"CryptoCtx"]]},\
"wasi_fs":{"doc":"","i":[[5,"main","wasi_fs","",null,[[]]]],"p":[]},\
"wasmtime":{"doc":"Wasmtime\'s embedding API","i":[[0,"unix","wasmtime","Unix-specific extension for the `wasmtime` crate.",null,null],[8,"StoreExt","wasmtime::unix","Extensions for the [`Store`] type only available on Unix.",null,null],[10,"set_signal_handler","","The signal handler must be async-signal-safe.",0,[[]]],[3,"Config","wasmtime","Global configuration options used to create an `Engine`…",null,null],[4,"Strategy","","Possible Compilation strategies for a wasm module.",null,null],[13,"Auto","","An indicator that the compilation strategy should be…",1,null],[13,"Cranelift","","Currently the default backend, Cranelift aims to be a…",1,null],[13,"Lightbeam","","A single-pass code generator that is faster than Cranelift…",1,null],[4,"OptLevel","","Possible optimization levels for the Cranelift codegen…",null,null],[13,"None","","No optimizations performed, minimizes compilation time by…",2,null],[13,"Speed","","Generates the fastest possible code, but may take longer.",2,null],[13,"SpeedAndSize","","Similar to `speed`, but also performs transformations…",2,null],[4,"ProfilingStrategy","","Select which profiling technique to support.",null,null],[13,"None","","No profiler support.",3,null],[13,"JitDump","","Collect profiling info for \\\"jitdump\\\" file format, used…",3,null],[13,"VTune","","Collect profiling info using the \\\"ittapi\\\", used with…",3,null],[4,"WasmBacktraceDetails","","Select how wasm backtrace detailed information is handled.",null,null],[13,"Enable","","Support is unconditionally enabled and wasmtime will parse…",4,null],[13,"Disable","","Support is disabled, and wasmtime will not parse debug…",4,null],[13,"Environment","","Support for backtrace details is conditional on the…",4,null],[3,"Engine","","An `Engine` which is a global context for compilation and…",null,null],[4,"Extern","","An external item to a WebAssembly module, or a list of…",null,null],[13,"Func","","A WebAssembly `func` which can be called.",5,null],[13,"Global","","A WebAssembly `global` which acts like a `Cell<T>` of…",5,null],[13,"Table","","A WebAssembly `table` which is an array of `Val` types.",5,null],[13,"Memory","","A WebAssembly linear memory.",5,null],[13,"Instance","","A WebAssembly instance.",5,null],[13,"Module","","A WebAssembly module.",5,null],[3,"Global","","A WebAssembly `global` value which can be read and written…",null,null],[3,"Table","","A WebAssembly `table`, or an array of values.",null,null],[3,"Export","","An exported WebAssembly value.",null,null],[3,"FrameInfo","","Description of a frame in a backtrace for a `Trap`.",null,null],[3,"FrameSymbol","","Debug information for a symbol that is attached to a…",null,null],[3,"Func","","A WebAssembly function which can be called.",null,null],[8,"WasmTy","","A trait implemented for types which can be arguments to…",null,null],[8,"WasmRet","","A trait implemented for types which can be returned from…",null,null],[8,"IntoFunc","","Internal trait implemented for all arguments that can be…",null,null],[3,"Caller","","A structure representing the caller\'s context when…",null,null],[3,"Instance","","An instantiated WebAssembly module.",null,null],[3,"Linker","","Structure used to link wasm modules/instances together.",null,null],[3,"MemoryAccessError","","Error for out of bounds [`Memory`] access.",null,null],[3,"Memory","","A WebAssembly linear memory.",null,null],[8,"LinearMemory","","A linear memory. This trait provides an interface for raw…",null,null],[10,"size","","Returns the number of allocated wasm pages.",6,[[]]],[10,"grow","","Grow memory by the specified amount of wasm pages.",6,[[],["option",4]]],[10,"as_ptr","","Return the allocated memory as a mutable pointer to u8.",6,[[]]],[8,"MemoryCreator","","A memory creator. Can be used to provide a memory creator…",null,null],[10,"new_memory","","Create a new `LinearMemory` object from the specified…",7,[[["memorytype",3],["option",4]],[["result",6],["string",3],["box",3]]]],[3,"Module","","A compiled WebAssembly module, ready to be instantiated.",null,null],[3,"ExternRef","","Represents an opaque reference to any data within…",null,null],[3,"Store","","A `Store` is a collection of WebAssembly instances and…",null,null],[3,"InterruptHandle","","A threadsafe handle used to interrupt instances executing…",null,null],[3,"Trap","","A struct representing an aborted instruction execution,…",null,null],[4,"TrapCode","","A trap code describing the reason for a trap.",null,null],[13,"StackOverflow","","The current stack space was exhausted.",8,null],[13,"MemoryOutOfBounds","","An out-of-bounds memory access.",8,null],[13,"HeapMisaligned","","A wasm atomic operation was presented with a…",8,null],[13,"TableOutOfBounds","","An out-of-bounds access to a table.",8,null],[13,"IndirectCallToNull","","Indirect call to a null table entry.",8,null],[13,"BadSignature","","Signature mismatch on indirect call.",8,null],[13,"IntegerOverflow","","An integer arithmetic operation caused an overflow.",8,null],[13,"IntegerDivisionByZero","","An integer division by zero.",8,null],[13,"BadConversionToInteger","","Failed float-to-int conversion.",8,null],[13,"UnreachableCodeReached","","Code that was supposed to have been unreachable was reached.",8,null],[13,"Interrupt","","Execution has potentially run too long and may be…",8,null],[4,"Mutability","","Indicator of whether a global is mutable or not",null,null],[13,"Const","","The global is constant and its value does not change",9,null],[13,"Var","","The value of the global can change over time",9,null],[3,"Limits","","Limits of tables/memories where the units of the limits…",null,null],[4,"ValType","","A list of all possible value types in WebAssembly.",null,null],[13,"I32","","Signed 32 bit integer.",10,null],[13,"I64","","Signed 64 bit integer.",10,null],[13,"F32","","Floating point 32 bit integer.",10,null],[13,"F64","","Floating point 64 bit integer.",10,null],[13,"V128","","A 128 bit number.",10,null],[13,"ExternRef","","A reference to opaque data in the Wasm instance.",10,null],[13,"FuncRef","","A reference to a Wasm function.",10,null],[4,"ExternType","","A list of all possible types which can be externally…",null,null],[13,"Func","","This external type is the type of a WebAssembly function.",11,null],[13,"Global","","This external type is the type of a WebAssembly global.",11,null],[13,"Table","","This external type is the type of a WebAssembly table.",11,null],[13,"Memory","","This external type is the type of a WebAssembly memory.",11,null],[13,"Instance","","This external type is the type of a WebAssembly instance.",11,null],[13,"Module","","This external type is the type of a WebAssembly module.",11,null],[3,"FuncType","","A descriptor for a function in a WebAssembly module.",null,null],[3,"GlobalType","","A WebAssembly global descriptor.",null,null],[3,"TableType","","A descriptor for a table in a WebAssembly module.",null,null],[3,"MemoryType","","A descriptor for a WebAssembly memory type.",null,null],[3,"ModuleType","","A descriptor for a WebAssembly module type.",null,null],[3,"InstanceType","","A descriptor for a WebAssembly instance type.",null,null],[3,"ImportType","","A descriptor for an imported value into a wasm module.",null,null],[3,"ExportType","","A descriptor for an exported WebAssembly value.",null,null],[4,"Val","","Possible runtime values that a WebAssembly module can…",null,null],[13,"I32","","A 32-bit integer",12,null],[13,"I64","","A 64-bit integer",12,null],[13,"F32","","A 32-bit float.",12,null],[13,"F64","","A 64-bit float.",12,null],[13,"ExternRef","","An `externref` value which can hold opaque data to the…",12,null],[13,"FuncRef","","A first-class reference to a WebAssembly function.",12,null],[13,"V128","","A 128-bit number",12,null],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"equivalent","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"equivalent","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"equivalent","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"equivalent","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"equivalent","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"equivalent","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"equivalent","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"equivalent","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"set_signal_handler","","",28,[[]]],[11,"from","","",5,[[["func",3]]]],[11,"from","","",5,[[["global",3]]]],[11,"from","","",5,[[["memory",3]]]],[11,"from","","",5,[[["table",3]]]],[11,"from","","",5,[[["instance",3]]]],[11,"from","","",5,[[["module",3]]]],[11,"from","","",30,[[["error",3]],["trap",3]]],[11,"from","","",30,[[["box",3],["error",8]],["trap",3]]],[11,"from","","",11,[[["functype",3]],["externtype",4]]],[11,"from","","",11,[[["globaltype",3]],["externtype",4]]],[11,"from","","",11,[[["memorytype",3]],["externtype",4]]],[11,"from","","",11,[[["tabletype",3]],["externtype",4]]],[11,"from","","",11,[[["moduletype",3]],["externtype",4]]],[11,"from","","",11,[[["instancetype",3]],["externtype",4]]],[11,"from","","",12,[[],["val",4]]],[11,"from","","",12,[[],["val",4]]],[11,"from","","",12,[[],["val",4]]],[11,"from","","",12,[[],["val",4]]],[11,"from","","",12,[[["externref",3]],["val",4]]],[11,"from","","",12,[[["option",4],["externref",3]],["val",4]]],[11,"from","","",12,[[["option",4],["func",3]],["val",4]]],[11,"from","","",12,[[["func",3]],["val",4]]],[11,"clone","","",13,[[],["config",3]]],[11,"clone","","",1,[[],["strategy",4]]],[11,"clone","","",2,[[],["optlevel",4]]],[11,"clone","","",3,[[],["profilingstrategy",4]]],[11,"clone","","",4,[[],["wasmbacktracedetails",4]]],[11,"clone","","",14,[[],["engine",3]]],[11,"clone","","",5,[[],["extern",4]]],[11,"clone","","",15,[[],["global",3]]],[11,"clone","","",16,[[],["table",3]]],[11,"clone","","",17,[[],["export",3]]],[11,"clone","","",20,[[],["func",3]]],[11,"clone","","",22,[[],["instance",3]]],[11,"clone","","",25,[[],["memory",3]]],[11,"clone","","",26,[[],["module",3]]],[11,"clone","","",27,[[],["externref",3]]],[11,"clone","","",28,[[],["store",3]]],[11,"clone","","",30,[[],["trap",3]]],[11,"clone","","",8,[[],["trapcode",4]]],[11,"clone","","",9,[[],["mutability",4]]],[11,"clone","","",31,[[],["limits",3]]],[11,"clone","","",10,[[],["valtype",4]]],[11,"clone","","",11,[[],["externtype",4]]],[11,"clone","","",32,[[],["functype",3]]],[11,"clone","","",33,[[],["globaltype",3]]],[11,"clone","","",34,[[],["tabletype",3]]],[11,"clone","","",35,[[],["memorytype",3]]],[11,"clone","","",36,[[],["moduletype",3]]],[11,"clone","","",37,[[],["instancetype",3]]],[11,"clone","","",38,[[],["importtype",3]]],[11,"clone","","",39,[[],["exporttype",3]]],[11,"clone","","",12,[[],["val",4]]],[11,"default","","",13,[[],["config",3]]],[11,"default","","",14,[[],["engine",3]]],[11,"default","","",28,[[],["store",3]]],[11,"eq","","",8,[[["trapcode",4]]]],[11,"eq","","",9,[[["mutability",4]]]],[11,"eq","","",31,[[["limits",3]]]],[11,"ne","","",31,[[["limits",3]]]],[11,"eq","","",10,[[["valtype",4]]]],[11,"eq","","",32,[[["functype",3]]]],[11,"ne","","",32,[[["functype",3]]]],[11,"eq","","",33,[[["globaltype",3]]]],[11,"ne","","",33,[[["globaltype",3]]]],[11,"eq","","",34,[[["tabletype",3]]]],[11,"ne","","",34,[[["tabletype",3]]]],[11,"eq","","",35,[[["memorytype",3]]]],[11,"ne","","",35,[[["memorytype",3]]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",35,[[]]],[11,"source","","",30,[[],[["option",4],["error",8]]]],[11,"as_any","","",28,[[],["any",8]]],[11,"is_wasm_trap","","",28,[[]]],[11,"custom_signal_handler","","",28,[[["fn",8]]]],[11,"max_wasm_stack","","",28,[[]]],[11,"new","","Creates a new configuration object with the default…",13,[[],["config",3]]],[11,"debug_info","","Configures whether DWARF debug information will be emitted…",13,[[]]],[11,"wasm_backtrace_details","","Configures backtraces in `Trap` will parse debuginfo in…",13,[[["wasmbacktracedetails",4]]]],[11,"interruptable","","Configures whether functions and loops will be…",13,[[]]],[11,"max_wasm_stack","","Configures the maximum amount of native stack space…",13,[[]]],[11,"wasm_threads","","Configures whether the WebAssembly threads proposal will…",13,[[]]],[11,"wasm_reference_types","","Configures whether the WebAssembly reference types…",13,[[]]],[11,"wasm_simd","","Configures whether the WebAssembly SIMD proposal will be…",13,[[]]],[11,"wasm_bulk_memory","","Configures whether the WebAssembly bulk memory operations…",13,[[]]],[11,"wasm_multi_value","","Configures whether the WebAssembly multi-value proposal…",13,[[]]],[11,"wasm_multi_memory","","Configures whether the WebAssembly multi-memory proposal…",13,[[]]],[11,"wasm_module_linking","","Configures whether the WebAssembly module linking proposal…",13,[[]]],[11,"strategy","","Configures which compilation strategy will be used for…",13,[[["strategy",4]],["result",6]]],[11,"profiler","","Creates a default profiler based on the profiling strategy…",13,[[["profilingstrategy",4]],["result",6]]],[11,"cranelift_debug_verifier","","Configures whether the debug verifier of Cranelift is…",13,[[]]],[11,"cranelift_opt_level","","Configures the Cranelift code generator optimization level.",13,[[["optlevel",4]]]],[11,"cranelift_nan_canonicalization","","Configures whether Cranelift should perform a…",13,[[]]],[11,"cranelift_clear_cpu_flags","","Clears native CPU flags inferred from the host.",13,[[]]],[11,"cranelift_other_flag","","Allows settings another Cranelift flag defined by a flag…",13,[[],["result",6]]],[11,"cache_config_load","","Loads cache configuration specified at `path`.",13,[[],["result",6]]],[11,"cache_config_load_default","","Loads cache configuration from the system default path.",13,[[],["result",6]]],[11,"with_host_memory","","Sets a custom memory creator",13,[[["memorycreator",8],["arc",3]]]],[11,"static_memory_maximum_size","","Configures the maximum size, in bytes, where a linear…",13,[[]]],[11,"static_memory_guard_size","","Configures the size, in bytes, of the guard region used at…",13,[[]]],[11,"dynamic_memory_guard_size","","Configures the size, in bytes, of the guard region used at…",13,[[]]],[11,"max_instances","","Configures the maximum number of instances which can be…",13,[[]]],[11,"max_tables","","Configures the maximum number of tables which can be…",13,[[]]],[11,"max_memories","","Configures the maximum number of memories which can be…",13,[[]]],[11,"new","","Creates a new [`Engine`] with the specified compilation…",14,[[["config",3]],["engine",3]]],[11,"config","","Returns the configuration settings that this engine is…",14,[[],["config",3]]],[11,"same","","Returns whether the engine `a` and `b` refer to the same…",14,[[["engine",3]]]],[11,"into_func","","Returns the underlying `Func`, if this external is a…",5,[[],[["option",4],["func",3]]]],[11,"into_global","","Returns the underlying `Global`, if this external is a…",5,[[],[["option",4],["global",3]]]],[11,"into_table","","Returns the underlying `Table`, if this external is a table.",5,[[],[["option",4],["table",3]]]],[11,"into_memory","","Returns the underlying `Memory`, if this external is a…",5,[[],[["option",4],["memory",3]]]],[11,"into_instance","","Returns the underlying `Instance`, if this external is a…",5,[[],[["option",4],["instance",3]]]],[11,"into_module","","Returns the underlying `Module`, if this external is a…",5,[[],[["option",4],["module",3]]]],[11,"ty","","Returns the type associated with this `Extern`.",5,[[],["externtype",4]]],[11,"new","","Creates a new WebAssembly `global` value with the provide…",15,[[["val",4],["store",3],["globaltype",3]],[["result",6],["global",3]]]],[11,"ty","","Returns the underlying type of this `global`.",15,[[],["globaltype",3]]],[11,"val_type","","Returns the value type of this `global`.",15,[[],["valtype",4]]],[11,"mutability","","Returns the underlying mutability of this `global`.",15,[[],["mutability",4]]],[11,"get","","Returns the current [`Val`] of this global.",15,[[],["val",4]]],[11,"set","","Attempts to set the current value of this global to [`Val`].",15,[[["val",4]],["result",6]]],[11,"new","","Creates a new `Table` with the given parameters.",16,[[["val",4],["store",3],["tabletype",3]],[["result",6],["table",3]]]],[11,"ty","","Returns the underlying type of this table, including its…",16,[[],["tabletype",3]]],[11,"get","","Returns the table element value at `index`.",16,[[],[["val",4],["option",4]]]],[11,"set","","Writes the `val` provided into `index` within this table.",16,[[["val",4]],["result",6]]],[11,"size","","Returns the current size of this table.",16,[[]]],[11,"grow","","Grows the size of this table by `delta` more elements,…",16,[[["val",4]],["result",6]]],[11,"copy","","Copy `len` elements from `src_table[src_index..]` into…",16,[[["table",3]],["result",6]]],[11,"fill","","Fill `table[dst..(dst + len)]` with the given value.",16,[[["val",4]],["result",6]]],[11,"name","","Returns the name by which this export is known.",17,[[]]],[11,"ty","","Return the `ExternType` of this export.",17,[[],["externtype",4]]],[11,"into_extern","","Consume this `Export` and return the contained `Extern`.",17,[[],["extern",4]]],[11,"into_func","","Consume this `Export` and return the contained `Func`, if…",17,[[],[["option",4],["func",3]]]],[11,"into_table","","Consume this `Export` and return the contained `Table`, if…",17,[[],[["option",4],["table",3]]]],[11,"into_memory","","Consume this `Export` and return the contained `Memory`,…",17,[[],[["option",4],["memory",3]]]],[11,"into_global","","Consume this `Export` and return the contained `Global`,…",17,[[],[["option",4],["global",3]]]],[11,"func_index","","Returns the WebAssembly function index for this frame.",18,[[]]],[11,"module_name","","Returns the identifer of the module that this frame is for.",18,[[],["option",4]]],[11,"func_name","","Returns a descriptive name of the function for this frame,…",18,[[],["option",4]]],[11,"module_offset","","Returns the offset within the original wasm module this…",18,[[]]],[11,"func_offset","","Returns the offset from the original wasm module\'s…",18,[[]]],[11,"symbols","","Returns the debug symbols found, if any, for this function…",18,[[]]],[11,"name","","Returns the function name associated with this symbol.",19,[[],["option",4]]],[11,"file","","Returns the source code filename this symbol was defined in.",19,[[],["option",4]]],[11,"line","","Returns the 1-indexed source code line number this symbol…",19,[[],["option",4]]],[11,"column","","Returns the 1-indexed source code column number this…",19,[[],["option",4]]],[11,"new","","Creates a new `Func` with the given arguments, typically…",20,[[["functype",3],["store",3]]]],[11,"wrap","","Creates a new `Func` from the given Rust closure.",20,[[["store",3]],["func",3]]],[11,"ty","","Returns the underlying wasm type that this `Func` has.",20,[[],["functype",3]]],[11,"param_arity","","Returns the number of parameters that this function takes.",20,[[]]],[11,"result_arity","","Returns the number of results this function produces.",20,[[]]],[11,"call","","Invokes this function with the `params` given, returning…",20,[[],[["box",3],["result",6]]]],[11,"get0","","Extracts a natively-callable object from this `Func`, if…",20,[[],["result",6]]],[11,"get1","","Extracts a natively-callable object from this `Func`, if…",20,[[],["result",6]]],[11,"get2","","Extracts a natively-callable object from this `Func`, if…",20,[[],["result",6]]],[11,"get3","","Extracts a natively-callable object from this `Func`, if…",20,[[],["result",6]]],[11,"get4","","Extracts a natively-callable object from this `Func`, if…",20,[[],["result",6]]],[11,"get5","","Extracts a natively-callable object from this `Func`, if…",20,[[],["result",6]]],[11,"get6","","Extracts a natively-callable object from this `Func`, if…",20,[[],["result",6]]],[11,"get7","","Extracts a natively-callable object from this `Func`, if…",20,[[],["result",6]]],[11,"get8","","Extracts a natively-callable object from this `Func`, if…",20,[[],["result",6]]],[11,"get9","","Extracts a natively-callable object from this `Func`, if…",20,[[],["result",6]]],[11,"get10","","Extracts a natively-callable object from this `Func`, if…",20,[[],["result",6]]],[11,"get11","","Extracts a natively-callable object from this `Func`, if…",20,[[],["result",6]]],[11,"get12","","Extracts a natively-callable object from this `Func`, if…",20,[[],["result",6]]],[11,"get13","","Extracts a natively-callable object from this `Func`, if…",20,[[],["result",6]]],[11,"get14","","Extracts a natively-callable object from this `Func`, if…",20,[[],["result",6]]],[11,"get15","","Extracts a natively-callable object from this `Func`, if…",20,[[],["result",6]]],[11,"store","","Get a reference to this function\'s store.",20,[[],["store",3]]],[11,"get_export","","Looks up an export from the caller\'s module by the `name`…",21,[[],[["option",4],["extern",4]]]],[11,"store","","Get a handle to this caller\'s store.",21,[[],["store",3]]],[11,"new","","Creates a new [`Instance`] from the previously compiled…",22,[[["store",3],["module",3]],[["instance",3],["result",6],["error",3]]]],[11,"ty","","Returns the type signature of this instance.",22,[[],["instancetype",3]]],[11,"store","","Returns the associated [`Store`] that this `Instance` is…",22,[[],["store",3]]],[11,"exports","","Returns the list of exported items from this [`Instance`].",22,[[]]],[11,"get_export","","Looks up an exported [`Extern`] value by name.",22,[[],[["option",4],["extern",4]]]],[11,"get_func","","Looks up an exported [`Func`] value by name.",22,[[],[["option",4],["func",3]]]],[11,"get_table","","Looks up an exported [`Table`] value by name.",22,[[],[["option",4],["table",3]]]],[11,"get_memory","","Looks up an exported [`Memory`] value by name.",22,[[],[["option",4],["memory",3]]]],[11,"get_global","","Looks up an exported [`Global`] value by name.",22,[[],[["option",4],["global",3]]]],[11,"new","","Creates a new [`Linker`].",23,[[["store",3]],["linker",3]]],[11,"allow_shadowing","","Configures whether this [`Linker`] will shadow previous…",23,[[],["linker",3]]],[11,"define","","Defines a new item in this [`Linker`].",23,[[],["result",6]]],[11,"func","","Convenience wrapper to define a function import.",23,[[],["result",6]]],[11,"instance","","Convenience wrapper to define an entire [`Instance`] in…",23,[[["instance",3]],["result",6]]],[11,"module","","Define automatic instantiations of a [`Module`] in this…",23,[[["module",3]],["result",6]]],[11,"alias","","Aliases one module\'s name as another.",23,[[],["result",6]]],[11,"instantiate","","Attempts to instantiate the `module` provided.",23,[[["module",3]],[["result",6],["instance",3]]]],[11,"store","","Returns the [`Store`] that this linker is connected to.",23,[[],["store",3]]],[11,"iter","","Returns an iterator over all items defined in this…",23,[[]]],[11,"get","","Looks up a value in this `Linker` which matches the…",23,[[["importtype",3]],[["option",4],["extern",4]]]],[11,"get_by_name","","Returns all items defined for the `module` and `name` pair.",23,[[["option",4]]]],[11,"get_one_by_name","","Returns the single item defined for the `module` and…",23,[[["option",4]],[["result",6],["extern",4]]]],[11,"get_default","","Returns the \\\"default export\\\" of a module.",23,[[],[["result",6],["func",3]]]],[11,"new","","Creates a new WebAssembly memory given the configuration…",25,[[["memorytype",3],["store",3]],["memory",3]]],[11,"ty","","Returns the underlying type of this memory.",25,[[],["memorytype",3]]],[11,"read","","Safely reads memory contents at the given offset into a…",25,[[],[["result",6],["memoryaccesserror",3]]]],[11,"write","","Safely writes contents of a buffer to this memory at the…",25,[[],[["result",6],["memoryaccesserror",3]]]],[11,"data_unchecked","","Returns this memory as a slice view that can be read…",25,[[]]],[11,"data_unchecked_mut","","Returns this memory as a slice view that can be read and…",25,[[]]],[11,"data_ptr","","Returns the base pointer, in the host\'s address space,…",25,[[]]],[11,"data_size","","Returns the byte length of this memory.",25,[[]]],[11,"size","","Returns the size, in pages, of this wasm memory.",25,[[]]],[11,"grow","","Grows this WebAssembly memory by `delta` pages.",25,[[],["result",6]]],[11,"new","","Creates a new WebAssembly `Module` from the given…",26,[[["engine",3]],[["module",3],["result",6]]]],[11,"new_with_name","","Creates a new WebAssembly `Module` from the given…",26,[[["engine",3]],[["module",3],["result",6]]]],[11,"from_file","","Creates a new WebAssembly `Module` from the contents of…",26,[[["engine",3]],[["module",3],["result",6]]]],[11,"from_binary","","Creates a new WebAssembly `Module` from the given…",26,[[["engine",3]],[["module",3],["result",6]]]],[11,"validate","","Validates `binary` input data as a WebAssembly binary…",26,[[["engine",3]],["result",6]]],[11,"ty","","Returns the type signature of this module.",26,[[],["moduletype",3]]],[11,"serialize","","Serialize compilation artifacts to the buffer. See also…",26,[[],[["result",6],["vec",3]]]],[11,"deserialize","","Deserializes and creates a module from the compilation…",26,[[["engine",3]],[["module",3],["result",6]]]],[11,"name","","Returns identifier/name that this [`Module`] has. This…",26,[[],["option",4]]],[11,"imports","","Returns the list of imports that this [`Module`] has and…",26,[[]]],[11,"exports","","Returns the list of exports that this [`Module`] has and…",26,[[]]],[11,"get_export","","Looks up an export in this [`Module`] by name.",26,[[],[["externtype",4],["option",4]]]],[11,"engine","","Returns the [`Engine`] that this [`Module`] was compiled by.",26,[[],["engine",3]]],[11,"new","","Creates a new instance of `ExternRef` wrapping the given…",27,[[],["externref",3]]],[11,"data","","Get the underlying data for this `ExternRef`.",27,[[],["any",8]]],[11,"strong_count","","Get the strong reference count for this `ExternRef`.",27,[[]]],[11,"ptr_eq","","Does this `ExternRef` point to the same inner value as…",27,[[["externref",3]]]],[11,"new","","Creates a new store to be associated with the given…",28,[[["engine",3]],["store",3]]],[11,"engine","","Returns the [`Engine`] that this store is associated with.",28,[[],["engine",3]]],[11,"same","","Returns whether the stores `a` and `b` refer to the same…",28,[[["store",3]]]],[11,"interrupt_handle","","Creates an [`InterruptHandle`] which can be used to…",28,[[],[["interrupthandle",3],["result",6]]]],[11,"gc","","Perform garbage collection of `ExternRef`s.",28,[[]]],[11,"interrupt","","Flags that execution within this handle\'s original…",29,[[]]],[11,"new","","Creates a new `Trap` with `message`.",30,[[["into",8],["string",3]]]],[11,"i32_exit","","Creates a new `Trap` representing an explicit program exit…",30,[[]]],[11,"i32_exit_status","","If the trap was the result of an explicit program exit…",30,[[],["option",4]]],[11,"trace","","Returns a list of function frames in WebAssembly code that…",30,[[]]],[11,"trap_code","","Code of a trap that happened while executing a WASM…",30,[[],[["trapcode",4],["option",4]]]],[11,"new","","Creates a new set of limits with the minimum and maximum…",31,[[["option",4]],["limits",3]]],[11,"at_least","","Creates a new `Limits` with the `min` specified and no…",31,[[],["limits",3]]],[11,"min","","Returns the minimum amount for these limits.",31,[[]]],[11,"max","","Returns the maximum amount for these limits, if specified.",31,[[],["option",4]]],[11,"is_num","","Returns true if `ValType` matches any of the numeric…",10,[[]]],[11,"is_ref","","Returns true if `ValType` matches either of the reference…",10,[[]]],[11,"func","","Attempt to return the underlying type of this external…",11,[[],[["option",4],["functype",3]]]],[11,"unwrap_func","","Returns the underlying descriptor of this [`ExternType`],…",11,[[],["functype",3]]],[11,"global","","Attempt to return the underlying type of this external…",11,[[],[["globaltype",3],["option",4]]]],[11,"unwrap_global","","Returns the underlying descriptor of this [`ExternType`],…",11,[[],["globaltype",3]]],[11,"table","","Attempt to return the underlying type of this external…",11,[[],[["tabletype",3],["option",4]]]],[11,"unwrap_table","","Returns the underlying descriptor of this [`ExternType`],…",11,[[],["tabletype",3]]],[11,"memory","","Attempt to return the underlying type of this external…",11,[[],[["memorytype",3],["option",4]]]],[11,"unwrap_memory","","Returns the underlying descriptor of this [`ExternType`],…",11,[[],["memorytype",3]]],[11,"module","","Attempt to return the underlying type of this external…",11,[[],[["option",4],["moduletype",3]]]],[11,"unwrap_module","","Returns the underlying descriptor of this [`ExternType`],…",11,[[],["moduletype",3]]],[11,"instance","","Attempt to return the underlying type of this external…",11,[[],[["option",4],["instancetype",3]]]],[11,"unwrap_instance","","Returns the underlying descriptor of this [`ExternType`],…",11,[[],["instancetype",3]]],[11,"new","","Creates a new function descriptor from the given…",32,[[],["functype",3]]],[11,"params","","Returns the list of parameter types for this function.",32,[[]]],[11,"results","","Returns the list of result types for this function.",32,[[]]],[11,"new","","Creates a new global descriptor of the specified `content`…",33,[[["mutability",4],["valtype",4]],["globaltype",3]]],[11,"content","","Returns the value type of this global descriptor.",33,[[],["valtype",4]]],[11,"mutability","","Returns whether or not this global is mutable.",33,[[],["mutability",4]]],[11,"new","","Creates a new table descriptor which will contain the…",34,[[["limits",3],["valtype",4]],["tabletype",3]]],[11,"element","","Returns the element value type of this table.",34,[[],["valtype",4]]],[11,"limits","","Returns the limits, in units of elements, of this table.",34,[[],["limits",3]]],[11,"new","","Creates a new descriptor for a WebAssembly memory given…",35,[[["limits",3]],["memorytype",3]]],[11,"limits","","Returns the limits (in pages) that are configured for this…",35,[[],["limits",3]]],[11,"new","","Creates a new empty module type.",36,[[],["moduletype",3]]],[11,"add_named_export","","Adds a new export to this `ModuleType`.",36,[[["externtype",4]]]],[11,"add_named_import","","Adds a new import to this `ModuleType`.",36,[[["externtype",4],["option",4]]]],[11,"imports","","Returns the list of imports associated with this module…",36,[[]]],[11,"exports","","Returns the list of exports associated with this module…",36,[[]]],[11,"new","","Creates a new empty instance type.",37,[[],["instancetype",3]]],[11,"add_named_export","","Adds a new export to this `ModuleType`.",37,[[["externtype",4]]]],[11,"exports","","Returns the list of exports associated with this module…",37,[[]]],[11,"module","","Returns the module name that this import is expected to…",38,[[]]],[11,"name","","Returns the field name of the module that this import is…",38,[[],["option",4]]],[11,"ty","","Returns the expected type of this import.",38,[[],["externtype",4]]],[11,"name","","Returns the name by which this export is known.",39,[[]]],[11,"ty","","Returns the type of this export.",39,[[],["externtype",4]]],[11,"null","","Returns a null `externref` value.",12,[[],["val",4]]],[11,"ty","","Returns the corresponding [`ValType`] for this `Val`.",12,[[],["valtype",4]]],[11,"i32","","Attempt to access the underlying value of this `Val`,…",12,[[],["option",4]]],[11,"unwrap_i32","","Returns the underlying value of this `Val`, panicking if…",12,[[]]],[11,"i64","","Attempt to access the underlying value of this `Val`,…",12,[[],["option",4]]],[11,"unwrap_i64","","Returns the underlying value of this `Val`, panicking if…",12,[[]]],[11,"f32","","Attempt to access the underlying value of this `Val`,…",12,[[],["option",4]]],[11,"unwrap_f32","","Returns the underlying value of this `Val`, panicking if…",12,[[]]],[11,"f64","","Attempt to access the underlying value of this `Val`,…",12,[[],["option",4]]],[11,"unwrap_f64","","Returns the underlying value of this `Val`, panicking if…",12,[[]]],[11,"funcref","","Attempt to access the underlying value of this `Val`,…",12,[[],[["option",4],["option",4]]]],[11,"unwrap_funcref","","Returns the underlying value of this `Val`, panicking if…",12,[[],[["option",4],["func",3]]]],[11,"v128","","Attempt to access the underlying value of this `Val`,…",12,[[],["option",4]]],[11,"unwrap_v128","","Returns the underlying value of this `Val`, panicking if…",12,[[]]],[11,"externref","","Attempt to access the underlying `externref` value of this…",12,[[],[["option",4],["option",4]]]],[11,"unwrap_externref","","Returns the underlying `externref` value of this `Val`,…",12,[[],[["option",4],["externref",3]]]]],"p":[[8,"StoreExt"],[4,"Strategy"],[4,"OptLevel"],[4,"ProfilingStrategy"],[4,"WasmBacktraceDetails"],[4,"Extern"],[8,"LinearMemory"],[8,"MemoryCreator"],[4,"TrapCode"],[4,"Mutability"],[4,"ValType"],[4,"ExternType"],[4,"Val"],[3,"Config"],[3,"Engine"],[3,"Global"],[3,"Table"],[3,"Export"],[3,"FrameInfo"],[3,"FrameSymbol"],[3,"Func"],[3,"Caller"],[3,"Instance"],[3,"Linker"],[3,"MemoryAccessError"],[3,"Memory"],[3,"Module"],[3,"ExternRef"],[3,"Store"],[3,"InterruptHandle"],[3,"Trap"],[3,"Limits"],[3,"FuncType"],[3,"GlobalType"],[3,"TableType"],[3,"MemoryType"],[3,"ModuleType"],[3,"InstanceType"],[3,"ImportType"],[3,"ExportType"]]},\
"wasmtime_bench_api":{"doc":"A C API for benchmarking Wasmtime\'s WebAssembly…","i":[[6,"ExitCode","wasmtime_bench_api","",null,null],[17,"OK","","",null,null],[17,"ERR","","",null,null],[5,"wasm_bench_create","","Exposes a C-compatible way of creating the engine from the…",null,[[],["exitcode",6]]],[5,"wasm_bench_free","","Free the engine state allocated by this library.",null,[[]]],[5,"wasm_bench_compile","","Compile the Wasm benchmark module.",null,[[],["exitcode",6]]],[5,"wasm_bench_instantiate","","Instantiate the Wasm benchmark module.",null,[[],["exitcode",6]]],[5,"wasm_bench_execute","","Execute the Wasm benchmark module.",null,[[],["exitcode",6]]]],"p":[]},\
"wasmtime_c_api_macros":{"doc":"A set of convenience macros for our wasmtime-c-api crate.","i":[[14,"declare_own","wasmtime_c_api_macros","",null,null],[14,"declare_ty","","",null,null],[14,"declare_ref","","",null,null]],"p":[]},\
"wasmtime_cache":{"doc":"","i":[[5,"create_new_config","wasmtime_cache","Creates a new configuration file at specified path, or…",null,[[["debug",8],["asref",8],["option",4],["path",3]],[["result",6],["pathbuf",3]]]],[3,"CacheConfig","","Global configuration for how the cache is managed",null,null],[3,"ModuleCacheEntry","","Module level cache entry.",null,null],[11,"new","","Create the cache entry.",0,[[["cacheconfig",3]]]],[11,"get_data","","Gets cached data if state matches, otherwise calls the…",0,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",1,[[],["cacheconfig",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"worker_event_queue_size","","Returns `$setting`.",1,[[]]],[11,"baseline_compression_level","","Returns `$setting`.",1,[[]]],[11,"optimized_compression_level","","Returns `$setting`.",1,[[]]],[11,"optimized_compression_usage_counter_threshold","","Returns `$setting`.",1,[[]]],[11,"cleanup_interval","","Returns `$setting`.",1,[[],["duration",3]]],[11,"optimizing_compression_task_timeout","","Returns `$setting`.",1,[[],["duration",3]]],[11,"allowed_clock_drift_for_files_from_future","","Returns `$setting`.",1,[[],["duration",3]]],[11,"file_count_soft_limit","","Returns `$setting`.",1,[[]]],[11,"files_total_size_soft_limit","","Returns `$setting`.",1,[[]]],[11,"file_count_limit_percent_if_deleting","","Returns `$setting`.",1,[[]]],[11,"files_total_size_limit_percent_if_deleting","","Returns `$setting`.",1,[[]]],[11,"enabled","","Returns true if and only if the cache is enabled.",1,[[]]],[11,"directory","","Returns path to the cache directory.",1,[[],["pathbuf",3]]],[11,"new_cache_disabled","","Creates a new set of configuration which represents a…",1,[[]]],[11,"from_file","","Parses cache configuration from the file specified",1,[[["option",4],["path",3]],["result",6]]],[11,"cache_hits","","Returns the number of cache hits seen so far",1,[[]]],[11,"cache_misses","","Returns the number of cache misses seen so far",1,[[]]]],"p":[[3,"ModuleCacheEntry"],[3,"CacheConfig"]]},\
"wasmtime_cranelift":{"doc":"Support for compiling with Cranelift.","i":[[3,"Cranelift","wasmtime_cranelift","A compiler that compiles a WebAssembly module with…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"default","","",0,[[],["cranelift",3]]],[11,"compile_function","","",0,[[["typetables",3],["functionbodydata",3],["definedfuncindex",3],["targetisa",8],["moduletranslation",3],["tunables",3]],[["result",4],["compiledfunction",3],["compileerror",4]]]]],"p":[[3,"Cranelift"]]},\
"wasmtime_debug":{"doc":"Debug utils for WebAssembly using Cranelift.","i":[[5,"emit_dwarf","wasmtime_debug","",null,[[["modulememoryoffset",4],["targetisa",8],["debuginfodata",3],["compiledfunctions",6]],[["result",6],["vec",3]]]],[3,"DwarfSection","","",null,null],[12,"name","","",0,null],[12,"body","","",0,null],[12,"relocs","","",0,null],[4,"DwarfSectionRelocTarget","","",null,null],[13,"Func","","",1,null],[13,"Section","","",1,null],[5,"create_gdbjit_image","","",null,[[["vec",3]],[["error",3],["result",4],["vec",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",1,[[],["dwarfsectionreloctarget",4]]]],"p":[[3,"DwarfSection"],[4,"DwarfSectionRelocTarget"]]},\
"wasmtime_environ":{"doc":"Standalone environment for WebAssembly using Cranelift.…","i":[[0,"ir","wasmtime_environ","",null,null],[4,"Reloc","wasmtime_environ::ir","Relocation kinds for every ISA",null,null],[13,"Abs4","","absolute 4-byte",0,null],[13,"Abs8","","absolute 8-byte",0,null],[13,"X86PCRel4","","x86 PC-relative 4-byte",0,null],[13,"X86PCRelRodata4","","x86 PC-relative 4-byte offset to trailing rodata",0,null],[13,"X86CallPCRel4","","x86 call to PC-relative 4-byte",0,null],[13,"X86CallPLTRel4","","x86 call to PLT-relative 4-byte",0,null],[13,"X86GOTPCRel4","","x86 GOT PC-relative 4-byte",0,null],[13,"Arm32Call","","Arm32 call target",0,null],[13,"Arm64Call","","Arm64 call target. Encoded as bottom 26 bits of…",0,null],[13,"RiscvCall","","RISC-V call target",0,null],[13,"ElfX86_64TlsGd","","Elf x86_64 32 bit signed PC relative offset to two GOT…",0,null],[13,"MachOX86_64Tlv","","Mach-O x86_64 32 bit signed PC relative offset to a…",0,null],[3,"StackMap","","Stack maps record which words in a stack frame contain…",null,null],[0,"types","","Common types for the Cranelift code generator.",null,null],[3,"Type","wasmtime_environ::ir::types","The type of an SSA value.",null,null],[17,"INVALID","","Not a valid type. Can\'t be loaded or stored. Can\'t be part…",null,null],[17,"IFLAGS","","CPU flags representing the result of an integer…",null,null],[17,"FFLAGS","","CPU flags representing the result of a floating point…",null,null],[17,"SARG_T","","After legalization sarg_t arguments will get this type.",null,null],[17,"B1","","A boolean type with 1 bits.",null,null],[17,"B8","","A boolean type with 8 bits.",null,null],[17,"B16","","A boolean type with 16 bits.",null,null],[17,"B32","","A boolean type with 32 bits.",null,null],[17,"B64","","A boolean type with 64 bits.",null,null],[17,"B128","","A boolean type with 128 bits.",null,null],[17,"I8","","An integer type with 8 bits. WARNING: arithmetic on 8bit…",null,null],[17,"I16","","An integer type with 16 bits. WARNING: arithmetic on 16bit…",null,null],[17,"I32","","An integer type with 32 bits.",null,null],[17,"I64","","An integer type with 64 bits.",null,null],[17,"I128","","An integer type with 128 bits.",null,null],[17,"F32","","A 32-bit floating point type represented in the IEEE…",null,null],[17,"F64","","A 64-bit floating point type represented in the IEEE…",null,null],[17,"R32","","An opaque reference type with 32 bits.",null,null],[17,"R64","","An opaque reference type with 64 bits.",null,null],[17,"B8X8","","A SIMD vector with 8 lanes containing a `b8` each.",null,null],[17,"B16X4","","A SIMD vector with 4 lanes containing a `b16` each.",null,null],[17,"B32X2","","A SIMD vector with 2 lanes containing a `b32` each.",null,null],[17,"I8X8","","A SIMD vector with 8 lanes containing a `i8` each.",null,null],[17,"I16X4","","A SIMD vector with 4 lanes containing a `i16` each.",null,null],[17,"I32X2","","A SIMD vector with 2 lanes containing a `i32` each.",null,null],[17,"F32X2","","A SIMD vector with 2 lanes containing a `f32` each.",null,null],[17,"B8X16","","A SIMD vector with 16 lanes containing a `b8` each.",null,null],[17,"B16X8","","A SIMD vector with 8 lanes containing a `b16` each.",null,null],[17,"B32X4","","A SIMD vector with 4 lanes containing a `b32` each.",null,null],[17,"B64X2","","A SIMD vector with 2 lanes containing a `b64` each.",null,null],[17,"I8X16","","A SIMD vector with 16 lanes containing a `i8` each.",null,null],[17,"I16X8","","A SIMD vector with 8 lanes containing a `i16` each.",null,null],[17,"I32X4","","A SIMD vector with 4 lanes containing a `i32` each.",null,null],[17,"I64X2","","A SIMD vector with 2 lanes containing a `i64` each.",null,null],[17,"F32X4","","A SIMD vector with 4 lanes containing a `f32` each.",null,null],[17,"F64X2","","A SIMD vector with 2 lanes containing a `f64` each.",null,null],[17,"B8X32","","A SIMD vector with 32 lanes containing a `b8` each.",null,null],[17,"B16X16","","A SIMD vector with 16 lanes containing a `b16` each.",null,null],[17,"B32X8","","A SIMD vector with 8 lanes containing a `b32` each.",null,null],[17,"B64X4","","A SIMD vector with 4 lanes containing a `b64` each.",null,null],[17,"B128X2","","A SIMD vector with 2 lanes containing a `b128` each.",null,null],[17,"I8X32","","A SIMD vector with 32 lanes containing a `i8` each.",null,null],[17,"I16X16","","A SIMD vector with 16 lanes containing a `i16` each.",null,null],[17,"I32X8","","A SIMD vector with 8 lanes containing a `i32` each.",null,null],[17,"I64X4","","A SIMD vector with 4 lanes containing a `i64` each.",null,null],[17,"I128X2","","A SIMD vector with 2 lanes containing a `i128` each.",null,null],[17,"F32X8","","A SIMD vector with 8 lanes containing a `f32` each.",null,null],[17,"F64X4","","A SIMD vector with 4 lanes containing a `f64` each.",null,null],[17,"B8X64","","A SIMD vector with 64 lanes containing a `b8` each.",null,null],[17,"B16X32","","A SIMD vector with 32 lanes containing a `b16` each.",null,null],[17,"B32X16","","A SIMD vector with 16 lanes containing a `b32` each.",null,null],[17,"B64X8","","A SIMD vector with 8 lanes containing a `b64` each.",null,null],[17,"B128X4","","A SIMD vector with 4 lanes containing a `b128` each.",null,null],[17,"I8X64","","A SIMD vector with 64 lanes containing a `i8` each.",null,null],[17,"I16X32","","A SIMD vector with 32 lanes containing a `i16` each.",null,null],[17,"I32X16","","A SIMD vector with 16 lanes containing a `i32` each.",null,null],[17,"I64X8","","A SIMD vector with 8 lanes containing a `i64` each.",null,null],[17,"I128X4","","A SIMD vector with 4 lanes containing a `i128` each.",null,null],[17,"F32X16","","A SIMD vector with 16 lanes containing a `f32` each.",null,null],[17,"F64X8","","A SIMD vector with 8 lanes containing a `f64` each.",null,null],[3,"AbiParam","wasmtime_environ::ir","Function parameter or return value descriptor.",null,null],[12,"value_type","","Type of the argument value.",1,null],[12,"purpose","","Special purpose of argument, or `Normal`.",1,null],[12,"extension","","Method for extending argument to a full register.",1,null],[12,"location","","ABI-specific location of this argument, or `Unassigned`…",1,null],[12,"legalized_to_pointer","","Was the argument converted to pointer during legalization?",1,null],[4,"ArgumentPurpose","","The special purpose of a function argument.",null,null],[13,"Normal","","A normal user program value passed to or from a function.",2,null],[13,"StructArgument","","A C struct passed as argument.",2,null],[13,"StructReturn","","Struct return pointer.",2,null],[13,"Link","","The link register.",2,null],[13,"FramePointer","","The frame pointer.",2,null],[13,"CalleeSaved","","A callee-saved register.",2,null],[13,"VMContext","","A VM context pointer.",2,null],[13,"SignatureId","","A signature identifier.",2,null],[13,"StackLimit","","A stack limit pointer.",2,null],[13,"CalleeTLS","","A callee TLS value.",2,null],[13,"CallerTLS","","A caller TLS value.",2,null],[6,"JumpTableOffsets","","Code offsets for Jump Tables.",null,null],[4,"LabelValueLoc","","The particular location for a value.",null,null],[13,"ValueLoc","","Old-backend location: RegUnit, StackSlot, or Unassigned.",3,null],[13,"Reg","","New-backend Reg.",3,null],[13,"SPOffset","","New-backend offset from stack pointer.",3,null],[4,"LibCall","","The name of a runtime library routine.",null,null],[13,"Probestack","","probe for stack overflow. These are emitted for functions…",4,null],[13,"UdivI64","","udiv.i64",4,null],[13,"SdivI64","","sdiv.i64",4,null],[13,"UremI64","","urem.i64",4,null],[13,"SremI64","","srem.i64",4,null],[13,"IshlI64","","ishl.i64",4,null],[13,"UshrI64","","ushr.i64",4,null],[13,"SshrI64","","sshr.i64",4,null],[13,"CeilF32","","ceil.f32",4,null],[13,"CeilF64","","ceil.f64",4,null],[13,"FloorF32","","floor.f32",4,null],[13,"FloorF64","","floor.f64",4,null],[13,"TruncF32","","trunc.f32",4,null],[13,"TruncF64","","frunc.f64",4,null],[13,"NearestF32","","nearest.f32",4,null],[13,"NearestF64","","nearest.f64",4,null],[13,"Memcpy","","libc.memcpy",4,null],[13,"Memset","","libc.memset",4,null],[13,"Memmove","","libc.memmove",4,null],[13,"ElfTlsGetAddr","","Elf __tls_get_addr",4,null],[3,"Signature","","Function signature.",null,null],[12,"params","","The arguments passed to the function.",5,null],[12,"returns","","Values returned from the function.",5,null],[12,"call_conv","","Calling convention.",5,null],[3,"SourceLoc","","A source location.",null,null],[3,"StackSlots","","Stack frame manager.",null,null],[12,"layout_info","","Layout information computed from `layout_stack`.",6,null],[4,"TrapCode","","A trap code describing the reason for a trap.",null,null],[13,"StackOverflow","","The current stack space was exhausted.",7,null],[13,"HeapOutOfBounds","","A `heap_addr` instruction detected an out-of-bounds error.",7,null],[13,"HeapMisaligned","","A wasm atomic operation was presented with a…",7,null],[13,"TableOutOfBounds","","A `table_addr` instruction detected an out-of-bounds error.",7,null],[13,"IndirectCallToNull","","Indirect call to a null table entry.",7,null],[13,"BadSignature","","Signature mismatch on indirect call.",7,null],[13,"IntegerOverflow","","An integer arithmetic operation caused an overflow.",7,null],[13,"IntegerDivisionByZero","","An integer division by zero.",7,null],[13,"BadConversionToInteger","","Failed float-to-int conversion.",7,null],[13,"UnreachableCodeReached","","Code that was supposed to have been unreachable was reached.",7,null],[13,"Interrupt","","Execution has potentially run too long and may be…",7,null],[13,"User","","A user-defined trap code.",7,null],[3,"Type","","The type of an SSA value.",null,null],[3,"ValueLabel","","Marked with a label value.",null,null],[4,"ValueLoc","","Value location.",null,null],[13,"Unassigned","","This value has not been assigned to a location yet.",8,null],[13,"Reg","","Value is assigned to a register.",8,null],[13,"Stack","","Value is assigned to a stack slot.",8,null],[6,"ValueLabelsRanges","","Resulting map of Value labels and their ranges/locations.",null,null],[3,"ValueLocRange","","Value location range.",null,null],[12,"loc","","The ValueLoc containing a ValueLabel during this range.",9,null],[12,"start","","The start of the range. It is an offset in the generated…",9,null],[12,"end","","The end of the range. It is an offset in the generated code.",9,null],[0,"settings","wasmtime_environ","",null,null],[5,"builder","wasmtime_environ::settings","Create a `settings::Builder` for the shared settings group.",null,[[],["builder",3]]],[3,"Builder","","Collect settings values based on a template.",null,null],[8,"Configurable","","A string-based configurator for settings groups.",null,null],[10,"set","","Set the string value of any setting by name.",10,[[],[["result",4],["seterror",4]]]],[10,"enable","","Enable a boolean setting or apply a preset.",10,[[],[["result",4],["seterror",4]]]],[3,"Flags","","Flags group `shared`.",null,null],[4,"SetError","","An error produced when changing a setting.",null,null],[13,"BadName","","No setting by this name exists.",11,null],[13,"BadType","","Type mismatch for setting (e.g., setting an enum setting…",11,null],[13,"BadValue","","This is not a valid value for this setting.",11,null],[0,"isa","wasmtime_environ","",null,null],[0,"unwind","wasmtime_environ::isa","Represents information relating to function unwinding.",null,null],[0,"systemv","wasmtime_environ::isa::unwind","System V ABI unwind information.",null,null],[4,"RegisterMappingError","wasmtime_environ::isa::unwind::systemv","Enumerate the errors possible in mapping Cranelift…",null,null],[13,"MissingBank","","",12,null],[13,"UnsupportedArchitecture","","",12,null],[13,"UnsupportedRegisterBank","","",12,null],[3,"UnwindInfo","","Represents unwind information for a single System V ABI…",null,null],[0,"winx64","wasmtime_environ::isa::unwind","Windows x64 ABI unwind information.",null,null],[3,"UnwindInfo","wasmtime_environ::isa::unwind::winx64","Represents Windows x64 unwind information.",null,null],[4,"UnwindInfo","wasmtime_environ::isa::unwind","Represents unwind information for a single function.",null,null],[13,"WindowsX64","","Windows x64 ABI unwind information.",13,null],[13,"SystemV","","System V ABI unwind information.",13,null],[0,"input","","Intermediate representation for the unwind information…",null,null],[4,"UnwindCode","wasmtime_environ::isa::unwind::input","Elementary operation in the unwind operations.",null,null],[13,"SaveRegister","","Defines that a register is saved at the specified offset.",14,null],[12,"reg","wasmtime_environ::isa::unwind::input::UnwindCode","The saved register.",15,null],[12,"stack_offset","","The specified offset relative to the stack pointer.",15,null],[13,"RestoreRegister","wasmtime_environ::isa::unwind::input","Defines that a register is as defined before call.",14,null],[12,"reg","wasmtime_environ::isa::unwind::input::UnwindCode","The restored register.",16,null],[13,"StackAlloc","wasmtime_environ::isa::unwind::input","The stack pointer was adjusted to allocate the stack.",14,null],[12,"size","wasmtime_environ::isa::unwind::input::UnwindCode","Size to allocate.",17,null],[13,"StackDealloc","wasmtime_environ::isa::unwind::input","The stack pointer was adjusted to free the stack.",14,null],[12,"size","wasmtime_environ::isa::unwind::input::UnwindCode","Size to deallocate.",18,null],[13,"SetFramePointer","wasmtime_environ::isa::unwind::input","The alternative register was assigned as frame pointer base.",14,null],[12,"reg","wasmtime_environ::isa::unwind::input::UnwindCode","The specified register.",19,null],[13,"RestoreFramePointer","wasmtime_environ::isa::unwind::input","Restores a frame pointer base to default register.",14,null],[13,"RememberState","","Saves the state.",14,null],[13,"RestoreState","","Restores the state.",14,null],[3,"UnwindInfo","","Unwind information as generated by a backend.",null,null],[12,"prologue_size","","Size of the prologue.",20,null],[12,"prologue_unwind_codes","","Unwind codes for prologue.",20,null],[12,"epilogues_unwind_codes","","Unwind codes for epilogues.",20,null],[12,"function_size","","Entire function size.",20,null],[12,"word_size","","Platform word size in bytes.",20,null],[12,"initial_sp_offset","","Initial stack pointer offset.",20,null],[3,"Builder","wasmtime_environ::isa","Builder for a `TargetIsa`. Modify the ISA-specific…",null,null],[4,"CallConv","","Calling convention identifiers.",null,null],[13,"Fast","","Best performance, not ABI-stable",21,null],[13,"Cold","","Smallest caller code size, not ABI-stable",21,null],[13,"SystemV","","System V-style convention used on many platforms",21,null],[13,"WindowsFastcall","","Windows \\\"fastcall\\\" convention, also used for x64 and ARM",21,null],[13,"BaldrdashSystemV","","SpiderMonkey WebAssembly convention on systems using…",21,null],[13,"BaldrdashWindows","","SpiderMonkey WebAssembly convention on Windows",21,null],[13,"Baldrdash2020","","SpiderMonkey WebAssembly convention for \\\"ABI-2020\\\", with…",21,null],[13,"Probestack","","Specialized convention for the probestack function",21,null],[6,"RegUnit","","Register units are the smallest units of register…",null,null],[3,"TargetFrontendConfig","","This struct provides information that a frontend may need…",null,null],[12,"default_call_conv","","The default calling convention of the target.",22,null],[12,"pointer_width","","The pointer width of the target.",22,null],[8,"TargetIsa","","Methods that are specialized to a target ISA. Implies a…",null,null],[10,"name","","Get the name of this ISA.",23,[[]]],[10,"triple","","Get the target triple that was used to make this trait…",23,[[],["triple",3]]],[10,"flags","","Get the ISA-independent flags that were used to make this…",23,[[],["flags",3]]],[10,"hash_all_flags","","Hashes all flags, both ISA-independent and ISA-specific,…",23,[[["hasher",8]]]],[11,"default_call_conv","","Get the default calling convention of this target.",23,[[],["callconv",4]]],[11,"endianness","","Get the endianness of this ISA.",23,[[],["endianness",4]]],[11,"pointer_type","","Get the pointer type of this ISA.",23,[[],["type",3]]],[11,"pointer_width","","Get the width of pointers on this ISA.",23,[[],["pointerwidth",4]]],[11,"pointer_bits","","Get the width of pointers on this ISA, in units of bits.",23,[[]]],[11,"pointer_bytes","","Get the width of pointers on this ISA, in units of bytes.",23,[[]]],[11,"frontend_config","","Get the information needed by frontends producing…",23,[[],["targetfrontendconfig",3]]],[11,"uses_cpu_flags","","Does the CPU implement scalar comparisons using a CPU…",23,[[]]],[11,"uses_complex_addresses","","Does the CPU implement multi-register addressing?",23,[[]]],[10,"register_info","","Get a data structure describing the registers in this ISA.",23,[[],["reginfo",3]]],[11,"map_dwarf_register","","Map a Cranelift register to its corresponding DWARF…",23,[[],[["result",4],["registermappingerror",4]]]],[11,"map_regalloc_reg_to_dwarf","","Map a regalloc::Reg to its corresponding DWARF register.",23,[[["reg",3]],[["result",4],["registermappingerror",4]]]],[10,"legal_encodings","","Returns an iterator over legal encodings for the…",23,[[["instructiondata",4],["function",3],["type",3]],["encodings",3]]],[11,"encode","","Encode an instruction after determining it is legal.",23,[[["instructiondata",4],["type",3],["function",3]],[["result",4],["encoding",3]]]],[10,"encoding_info","","Get a data structure describing the instruction encodings…",23,[[],["encinfo",3]]],[10,"legalize_signature","","Legalize a function signature.",23,[[["cow",4]]]],[10,"regclass_for_abi_type","","Get the register class that should be used to represent an…",23,[[["type",3]],["regclassdata",3]]],[10,"allocatable_registers","","Get the set of allocatable registers that can be used when…",23,[[["function",3]],["registerset",3]]],[11,"prologue_epilogue","","Compute the stack layout and insert prologue and epilogue…",23,[[["function",3]],[["codegenerror",4],["result",4]]]],[10,"emit_inst","","Emit binary machine code for a single instruction into the…",23,[[["codesink",8],["inst",3],["regdiversions",3],["function",3]]]],[10,"emit_function_to_memory","","Emit a whole function into memory.",23,[[["memorycodesink",3],["function",3]]]],[10,"unsigned_add_overflow_condition","","IntCC condition for Unsigned Addition Overflow (Carry).",23,[[],["intcc",4]]],[10,"unsigned_sub_overflow_condition","","IntCC condition for Unsigned Subtraction Overflow…",23,[[],["intcc",4]]],[11,"create_unwind_info","","Creates unwind information for the function.",23,[[["function",3]],[["option",4],["codegenerror",4],["result",4]]]],[11,"create_systemv_cie","","Creates a new System V Common Information Entry for the ISA.",23,[[],[["commoninformationentry",3],["option",4]]]],[11,"get_mach_backend","","Get the new-style MachBackend, if this is an adapter…",23,[[],[["option",4],["machbackend",8]]]],[10,"as_any","","Return an [Any] reference for downcasting to the…",23,[[],["any",8]]],[0,"entity","wasmtime_environ","",null,null],[0,"packed_option","wasmtime_environ::entity","Compact representation of `Option<T>` for types with a…",null,null],[8,"ReservedValue","wasmtime_environ::entity::packed_option","Types that have a reserved value which can\'t be created…",null,null],[10,"reserved_value","","Create an instance of the reserved value.",24,[[]]],[10,"is_reserved_value","","Checks whether value is the reserved one.",24,[[]]],[3,"PackedOption","","Packed representation of `Option<T>`.",null,null],[3,"BoxedSlice","wasmtime_environ::entity","A slice mapping `K -> V` allocating dense entity references.",null,null],[8,"EntityRef","","A type wrapping a small integer index should implement…",null,null],[10,"new","","Create a new entity reference from a small integer. This…",25,[[]]],[10,"index","","Get the index that was used to create this entity reference.",25,[[]]],[3,"PrimaryMap","","A primary mapping `K -> V` allocating dense entity…",null,null],[0,"wasm","wasmtime_environ","",null,null],[17,"VERSION","wasmtime_environ::wasm","Version number of this crate.",null,null],[14,"wasm_unsupported","","Return an `Err(WasmError::Unsupported(msg))` where `msg`…",null,null],[4,"Alias","","An entry in the alias section of a wasm module (from the…",null,null],[13,"OuterModule","","An outer module\'s module is being aliased into our own…",26,null],[12,"relative_depth","wasmtime_environ::wasm::Alias","The number of modules above us that we\'re referencing.",27,null],[12,"index","","The module index in the outer module\'s index space we\'re…",27,null],[13,"OuterType","wasmtime_environ::wasm","An outer module\'s type is being aliased into our own index…",26,null],[12,"relative_depth","wasmtime_environ::wasm::Alias","The number of modules above us that we\'re referencing.",28,null],[12,"index","","The type index in the outer module\'s index space we\'re…",28,null],[13,"InstanceExport","wasmtime_environ::wasm","A previously created instance is having one of its exports…",26,null],[12,"instance","wasmtime_environ::wasm::Alias","The index we\'re aliasing.",29,null],[12,"export","","The nth export that we\'re inserting into our own index…",29,null],[3,"DummyEnvironment","wasmtime_environ::wasm","This `ModuleEnvironment` implementation is a \\\"naïve\\\" one,…",null,null],[12,"info","","Module information.",30,null],[12,"func_bytecode_sizes","","Vector of wasm bytecode size for each function.",30,null],[12,"module_name","","Name of the module from the wasm file.",30,null],[8,"FuncEnvironment","","Environment affecting the translation of a single…",null,null],[11,"is_wasm_parameter","","Is the given parameter of the given function a wasm-level…",31,[[["signature",3]]]],[11,"is_wasm_return","","Is the given return of the given function a wasm-level…",31,[[["signature",3]]]],[11,"return_mode","","Should the code be structured to use a single…",31,[[],["returnmode",4]]],[10,"make_global","","Set up the necessary preamble definitions in `func` to…",31,[[["globalindex",3],["function",3]],[["wasmerror",4],["globalvariable",4],["result",4]]]],[10,"make_heap","","Set up the necessary preamble definitions in `func` to…",31,[[["function",3],["memoryindex",3]],[["heap",3],["result",4],["wasmerror",4]]]],[10,"make_table","","Set up the necessary preamble definitions in `func` to…",31,[[["function",3],["tableindex",3]],[["table",3],["wasmerror",4],["result",4]]]],[10,"make_indirect_sig","","Set up a signature definition in the preamble of `func`…",31,[[["typeindex",3],["function",3]],[["wasmerror",4],["result",4],["sigref",3]]]],[10,"make_direct_func","","Set up an external function definition in the preamble of…",31,[[["function",3],["funcindex",3]],[["result",4],["funcref",3],["wasmerror",4]]]],[10,"translate_call_indirect","","Translate a `call_indirect` WebAssembly instruction at…",31,[[["typeindex",3],["funccursor",3],["sigref",3],["table",3],["value",3],["tableindex",3]],[["inst",3],["result",4],["wasmerror",4]]]],[11,"translate_call","","Translate a `call` WebAssembly instruction at `pos`.",31,[[["funcref",3],["funccursor",3],["funcindex",3]],[["inst",3],["result",4],["wasmerror",4]]]],[10,"translate_memory_grow","","Translate a `memory.grow` WebAssembly instruction.",31,[[["heap",3],["funccursor",3],["memoryindex",3],["value",3]],[["result",4],["value",3],["wasmerror",4]]]],[10,"translate_memory_size","","Translates a `memory.size` WebAssembly instruction.",31,[[["heap",3],["funccursor",3],["memoryindex",3]],[["result",4],["value",3],["wasmerror",4]]]],[10,"translate_memory_copy","","Translate a `memory.copy` WebAssembly instruction.",31,[[["heap",3],["funccursor",3],["memoryindex",3],["value",3]],[["result",4],["wasmerror",4]]]],[10,"translate_memory_fill","","Translate a `memory.fill` WebAssembly instruction.",31,[[["heap",3],["funccursor",3],["memoryindex",3],["value",3]],[["result",4],["wasmerror",4]]]],[10,"translate_memory_init","","Translate a `memory.init` WebAssembly instruction.",31,[[["heap",3],["funccursor",3],["memoryindex",3],["value",3]],[["result",4],["wasmerror",4]]]],[10,"translate_data_drop","","Translate a `data.drop` WebAssembly instruction.",31,[[["funccursor",3]],[["result",4],["wasmerror",4]]]],[10,"translate_table_size","","Translate a `table.size` WebAssembly instruction.",31,[[["table",3],["funccursor",3],["tableindex",3]],[["result",4],["value",3],["wasmerror",4]]]],[10,"translate_table_grow","","Translate a `table.grow` WebAssembly instruction.",31,[[["funccursor",3],["table",3],["value",3],["tableindex",3]],[["result",4],["value",3],["wasmerror",4]]]],[10,"translate_table_get","","Translate a `table.get` WebAssembly instruction.",31,[[["functionbuilder",3],["table",3],["value",3],["tableindex",3]],[["result",4],["value",3],["wasmerror",4]]]],[10,"translate_table_set","","Translate a `table.set` WebAssembly instruction.",31,[[["functionbuilder",3],["table",3],["value",3],["tableindex",3]],[["result",4],["wasmerror",4]]]],[10,"translate_table_copy","","Translate a `table.copy` WebAssembly instruction.",31,[[["funccursor",3],["table",3],["value",3],["tableindex",3]],[["result",4],["wasmerror",4]]]],[10,"translate_table_fill","","Translate a `table.fill` WebAssembly instruction.",31,[[["funccursor",3],["value",3],["tableindex",3]],[["result",4],["wasmerror",4]]]],[10,"translate_table_init","","Translate a `table.init` WebAssembly instruction.",31,[[["funccursor",3],["table",3],["value",3],["tableindex",3]],[["result",4],["wasmerror",4]]]],[10,"translate_elem_drop","","Translate a `elem.drop` WebAssembly instruction.",31,[[["funccursor",3]],[["result",4],["wasmerror",4]]]],[11,"translate_ref_null","","Translate a `ref.null T` WebAssembly instruction.",31,[[["funccursor",3],["wasmtype",4]],[["result",4],["value",3],["wasmerror",4]]]],[11,"translate_ref_is_null","","Translate a `ref.is_null` WebAssembly instruction.",31,[[["funccursor",3],["value",3]],[["result",4],["value",3],["wasmerror",4]]]],[10,"translate_ref_func","","Translate a `ref.func` WebAssembly instruction.",31,[[["funccursor",3],["funcindex",3]],[["result",4],["value",3],["wasmerror",4]]]],[10,"translate_custom_global_get","","Translate a `global.get` WebAssembly instruction at `pos`…",31,[[["globalindex",3],["funccursor",3]],[["result",4],["value",3],["wasmerror",4]]]],[10,"translate_custom_global_set","","Translate a `global.set` WebAssembly instruction at `pos`…",31,[[["globalindex",3],["funccursor",3],["value",3]],[["result",4],["wasmerror",4]]]],[10,"translate_atomic_wait","","Translate an `i32.atomic.wait` or `i64.atomic.wait`…",31,[[["heap",3],["funccursor",3],["memoryindex",3],["value",3]],[["result",4],["value",3],["wasmerror",4]]]],[10,"translate_atomic_notify","","Translate an `atomic.notify` WebAssembly instruction. The…",31,[[["heap",3],["funccursor",3],["memoryindex",3],["value",3]],[["result",4],["value",3],["wasmerror",4]]]],[11,"translate_loop_header","","Emit code at the beginning of every wasm loop.",31,[[["funccursor",3]],[["result",4],["wasmerror",4]]]],[11,"before_translate_operator","","Optional callback for the `FunctionEnvironment` performing…",31,[[["functranslationstate",3],["functionbuilder",3],["operator",4]],[["result",4],["wasmerror",4]]]],[11,"after_translate_operator","","Optional callback for the `FunctionEnvironment` performing…",31,[[["functranslationstate",3],["functionbuilder",3],["operator",4]],[["result",4],["wasmerror",4]]]],[11,"before_translate_function","","Optional callback for the `FunctionEnvironment` performing…",31,[[["functranslationstate",3],["functionbuilder",3]],[["result",4],["wasmerror",4]]]],[11,"after_translate_function","","Optional callback for the `FunctionEnvironment` performing…",31,[[["functranslationstate",3],["functionbuilder",3]],[["result",4],["wasmerror",4]]]],[4,"GlobalVariable","","The value of a WebAssembly global variable.",null,null],[13,"Const","","This is a constant global with a value known at compile…",32,null],[13,"Memory","","This is a variable in memory that should be referenced…",32,null],[12,"gv","wasmtime_environ::wasm::GlobalVariable","The address of the global variable storage.",33,null],[12,"offset","","An offset to add to the address.",33,null],[12,"ty","","The global variable\'s type.",33,null],[13,"Custom","wasmtime_environ::wasm","This is a global variable that needs to be handled by the…",32,null],[8,"ModuleEnvironment","","An object satisfying the `ModuleEnvironment` trait can be…",null,null],[11,"reserve_types","","Provides the number of types up front. By default this…",34,[[],[["result",4],["wasmerror",4]]]],[10,"declare_type_func","","Declares a function signature to the environment.",34,[[["wasmfunctype",3],["signature",3]],[["result",4],["wasmerror",4]]]],[11,"declare_type_module","","Declares a module type signature to the environment.",34,[[],[["result",4],["wasmerror",4]]]],[11,"declare_type_instance","","Declares an instance type signature to the environment.",34,[[],[["result",4],["wasmerror",4]]]],[11,"type_to_signature","","Translates a type index to its signature index, only…",34,[[["typeindex",3]],[["result",4],["wasmerror",4],["signatureindex",3]]]],[11,"type_to_module_type","","Translates a type index to its module type index, only…",34,[[["typeindex",3]],[["result",4],["moduletypeindex",3],["wasmerror",4]]]],[11,"type_to_instance_type","","Translates a type index to its instance type index, only…",34,[[["typeindex",3]],[["wasmerror",4],["instancetypeindex",3],["result",4]]]],[11,"reserve_imports","","Provides the number of imports up front. By default this…",34,[[],[["result",4],["wasmerror",4]]]],[10,"declare_func_import","","Declares a function import to the environment.",34,[[["typeindex",3],["option",4]],[["result",4],["wasmerror",4]]]],[10,"declare_table_import","","Declares a table import to the environment.",34,[[["table",3],["option",4]],[["result",4],["wasmerror",4]]]],[10,"declare_memory_import","","Declares a memory import to the environment.",34,[[["option",4],["memory",3]],[["result",4],["wasmerror",4]]]],[11,"declare_event_import","","Declares an event import to the environment.",34,[[["event",3],["option",4]],[["result",4],["wasmerror",4]]]],[10,"declare_global_import","","Declares a global import to the environment.",34,[[["global",3],["option",4]],[["result",4],["wasmerror",4]]]],[11,"declare_module_import","","Declares a module import to the environment.",34,[[["typeindex",3],["option",4]],[["result",4],["wasmerror",4]]]],[11,"declare_instance_import","","Declares an instance import to the environment.",34,[[["typeindex",3],["option",4]],[["result",4],["wasmerror",4]]]],[11,"finish_imports","","Notifies the implementation that all imports have been…",34,[[],[["result",4],["wasmerror",4]]]],[11,"reserve_func_types","","Provides the number of defined functions up front. By…",34,[[],[["result",4],["wasmerror",4]]]],[10,"declare_func_type","","Declares the type (signature) of a local function in the…",34,[[["typeindex",3]],[["result",4],["wasmerror",4]]]],[11,"reserve_tables","","Provides the number of defined tables up front. By default…",34,[[],[["result",4],["wasmerror",4]]]],[10,"declare_table","","Declares a table to the environment.",34,[[["table",3]],[["result",4],["wasmerror",4]]]],[11,"reserve_memories","","Provides the number of defined memories up front. By…",34,[[],[["result",4],["wasmerror",4]]]],[10,"declare_memory","","Declares a memory to the environment",34,[[["memory",3]],[["result",4],["wasmerror",4]]]],[11,"reserve_events","","Provides the number of defined events up front. By default…",34,[[],[["result",4],["wasmerror",4]]]],[11,"declare_event","","Declares an event to the environment",34,[[["event",3]],[["result",4],["wasmerror",4]]]],[11,"reserve_globals","","Provides the number of defined globals up front. By…",34,[[],[["result",4],["wasmerror",4]]]],[10,"declare_global","","Declares a global to the environment.",34,[[["global",3]],[["result",4],["wasmerror",4]]]],[11,"reserve_exports","","Provides the number of exports up front. By default this…",34,[[],[["result",4],["wasmerror",4]]]],[10,"declare_func_export","","Declares a function export to the environment.",34,[[["funcindex",3]],[["result",4],["wasmerror",4]]]],[10,"declare_table_export","","Declares a table export to the environment.",34,[[["tableindex",3]],[["result",4],["wasmerror",4]]]],[10,"declare_memory_export","","Declares a memory export to the environment.",34,[[["memoryindex",3]],[["result",4],["wasmerror",4]]]],[11,"declare_event_export","","Declares an event export to the environment.",34,[[["eventindex",3]],[["result",4],["wasmerror",4]]]],[10,"declare_global_export","","Declares a global export to the environment.",34,[[["globalindex",3]],[["result",4],["wasmerror",4]]]],[11,"declare_instance_export","","Declares an instance export to the environment.",34,[[["instanceindex",3]],[["result",4],["wasmerror",4]]]],[11,"declare_module_export","","Declares an instance export to the environment.",34,[[["moduleindex",3]],[["result",4],["wasmerror",4]]]],[11,"finish_exports","","Notifies the implementation that all exports have been…",34,[[],[["result",4],["wasmerror",4]]]],[10,"declare_start_func","","Declares the optional start function.",34,[[["funcindex",3]],[["result",4],["wasmerror",4]]]],[11,"reserve_table_elements","","Provides the number of element initializers up front. By…",34,[[],[["result",4],["wasmerror",4]]]],[10,"declare_table_elements","","Fills a declared table with references to functions in the…",34,[[["tableindex",3],["box",3],["globalindex",3],["global",3],["option",4]],[["result",4],["wasmerror",4]]]],[10,"declare_passive_element","","Declare a passive element segment.",34,[[["global",3],["elemindex",3],["box",3]],[["result",4],["wasmerror",4]]]],[11,"reserve_passive_data","","Provides the number of passive data segments up front.",34,[[],[["result",4],["wasmerror",4]]]],[10,"declare_passive_data","","Declare a passive data segment.",34,[[["dataindex",3]],[["result",4],["wasmerror",4]]]],[11,"reserve_function_bodies","","Indicates how many functions the code section reports and…",34,[[]]],[10,"define_function_body","","Provides the contents of a function body.",34,[[["funcvalidator",3],["validatorresources",3],["functionbody",3]],[["result",4],["wasmerror",4]]]],[11,"reserve_data_initializers","","Provides the number of data initializers up front. By…",34,[[],[["result",4],["wasmerror",4]]]],[10,"declare_data_initialization","","Fills a declared memory with bytes at module instantiation.",34,[[["globalindex",3],["option",4],["memoryindex",3]],[["result",4],["wasmerror",4]]]],[11,"declare_module_name","","Declares the name of a module to the environment.",34,[[]]],[11,"declare_func_name","","Declares the name of a function to the environment.",34,[[["funcindex",3]]]],[11,"declare_local_name","","Declares the name of a function\'s local to the environment.",34,[[["funcindex",3]]]],[11,"custom_section","","Indicates that a custom section has been found in the wasm…",34,[[],[["result",4],["wasmerror",4]]]],[11,"wasm_features","","Returns the list of enabled wasm features this translation…",34,[[],["wasmfeatures",3]]],[11,"reserve_modules","","Indicates that this module will have `amount` submodules.",34,[[]]],[11,"module_start","","Called at the beginning of translating a module.",34,[[]]],[11,"module_end","","Called at the end of translating a module.",34,[[]]],[11,"reserve_instances","","Indicates that this module will have `amount` instances.",34,[[]]],[11,"declare_instance","","Declares a new instance which this module will instantiate…",34,[[["moduleindex",3],["global",3],["vec",3]],[["result",4],["wasmerror",4]]]],[11,"declare_alias","","Declares a new alias being added to this module.",34,[[["alias",4]],[["result",4],["wasmerror",4]]]],[4,"ReturnMode","","How to return from functions.",null,null],[13,"NormalReturns","","Use normal return instructions as needed.",35,null],[13,"FallthroughReturn","","Use a single fallthrough return at the end of the function.",35,null],[8,"TargetEnvironment","","Environment affecting the translation of a WebAssembly.",null,null],[10,"target_config","","Get the information needed to produce Cranelift IR for the…",36,[[],["targetfrontendconfig",3]]],[11,"pointer_type","","Get the Cranelift integer type to use for native pointers.",36,[[],["type",3]]],[11,"pointer_bytes","","Get the size of a native pointer, in bytes.",36,[[]]],[11,"reference_type","","Get the Cranelift reference type to use for the given Wasm…",36,[[["wasmtype",4]],["type",3]]],[4,"WasmError","","A WebAssembly translation error.",null,null],[13,"InvalidWebAssembly","","The input WebAssembly code is invalid.",37,null],[12,"message","wasmtime_environ::wasm::WasmError","A string describing the validation error.",38,null],[12,"offset","","The bytecode offset where the error occurred.",38,null],[13,"Unsupported","wasmtime_environ::wasm","A feature used by the WebAssembly code is not supported by…",37,null],[13,"ImplLimitExceeded","","An implementation limit was exceeded.",37,null],[13,"User","","Any user-defined error.",37,null],[3,"WasmFuncType","","WebAssembly function type -- equivalent of `wasmparser`\'s…",null,null],[12,"params","","Function params types.",39,null],[12,"returns","","Returns params types.",39,null],[6,"WasmResult","","A convenient alias for a `Result` that uses `WasmError` as…",null,null],[4,"WasmType","","WebAssembly value type -- equivalent of `wasmparser`\'s Type.",null,null],[13,"I32","","I32 type",40,null],[13,"I64","","I64 type",40,null],[13,"F32","","F32 type",40,null],[13,"F64","","F64 type",40,null],[13,"V128","","V128 type",40,null],[13,"FuncRef","","FuncRef type",40,null],[13,"ExternRef","","ExternRef type",40,null],[13,"ExnRef","","ExnRef type",40,null],[3,"FuncTranslator","","WebAssembly to Cranelift IR function translator.",null,null],[5,"translate_module","","Translate a sequence of bytes forming a valid Wasm binary…",null,[[["moduleenvironment",8]],[["result",4],["moduletranslationstate",3],["wasmerror",4]]]],[3,"FuncTranslationState","","Contains information passed along during a function\'s…",null,null],[3,"ModuleTranslationState","","Contains information decoded from the Wasm module that…",null,null],[3,"FunctionBuilder","","Temporary object used to build a single Cranelift IR…",null,null],[12,"func","","The function currently being built. This field is public…",41,null],[3,"BinaryReader","wasmtime_environ::wasm::wasmparser","A binary reader of the WebAssembly structures and types.",null,null],[3,"Range","","Bytecode range in the WebAssembly module.",null,null],[12,"start","","The start bound of the range.",42,null],[12,"end","","The end bound of the range.",42,null],[8,"WasmFuncType","","Types that qualify as Wasm function types for validation…",null,null],[10,"len_inputs","","Returns the number of input types.",43,[[]]],[10,"len_outputs","","Returns the number of output types.",43,[[]]],[10,"input_at","","Returns the type at given index if any.",43,[[],[["type",4],["option",4]]]],[10,"output_at","","Returns the type at given index if any.",43,[[],[["type",4],["option",4]]]],[11,"inputs","","Returns the list of inputs as an iterator.",43,[[],["wasmfunctypeinputs",3]]],[11,"outputs","","Returns the list of outputs as an iterator.",43,[[],["wasmfunctypeoutputs",3]]],[3,"WasmFuncTypeInputs","","Iterator over the inputs of a Wasm function type.",null,null],[3,"WasmFuncTypeOutputs","","Iterator over the outputs of a Wasm function type.",null,null],[8,"WasmModuleResources","","Types  that qualify as Wasm valiation database.",null,null],[16,"FuncType","","The function type used for validation.",44,null],[10,"table_at","","Returns the table at given index if any.",44,[[],[["option",4],["tabletype",3]]]],[10,"memory_at","","Returns the linear memory at given index.",44,[[],[["option",4],["memorytype",4]]]],[10,"event_at","","Returns the event at given index.",44,[[],["option",4]]],[10,"global_at","","Returns the global variable at given index.",44,[[],[["option",4],["globaltype",3]]]],[10,"func_type_at","","Returns the `FuncType` associated with the given type index.",44,[[],["option",4]]],[10,"type_of_function","","Returns the `FuncType` associated with the given function…",44,[[],["option",4]]],[10,"element_type_at","","Returns the element type at the given index.",44,[[],[["type",4],["option",4]]]],[10,"element_count","","Returns the number of elements.",44,[[]]],[10,"data_count","","Returns the number of bytes in the Wasm data section.",44,[[]]],[10,"is_function_referenced","","Returns whether the function index is referenced in the…",44,[[]]],[4,"Payload","","Values that can be parsed from a wasm module.",null,null],[13,"Version","","Indicates the header of a WebAssembly binary.",45,null],[12,"num","wasmtime_environ::wasm::wasmparser::Payload","The version number found",46,null],[12,"range","","The range of bytes that were parsed to consume the header…",46,null],[13,"TypeSection","wasmtime_environ::wasm::wasmparser","A type section was received, and the provided reader can…",45,null],[13,"ImportSection","","A import section was received, and the provided reader can…",45,null],[13,"AliasSection","","An alias section was received, and the provided reader can…",45,null],[13,"InstanceSection","","An instance section was received, and the provided reader…",45,null],[13,"FunctionSection","","A function section was received, and the provided reader…",45,null],[13,"TableSection","","A table section was received, and the provided reader can…",45,null],[13,"MemorySection","","A memory section was received, and the provided reader can…",45,null],[13,"EventSection","","An event section was received, and the provided reader can…",45,null],[13,"GlobalSection","","A global section was received, and the provided reader can…",45,null],[13,"ExportSection","","An export section was received, and the provided reader…",45,null],[13,"StartSection","","A start section was received, and the `u32` here is the…",45,null],[12,"func","wasmtime_environ::wasm::wasmparser::Payload","The start function index",47,null],[12,"range","","The range of bytes that specify the `func` field,…",47,null],[13,"ElementSection","wasmtime_environ::wasm::wasmparser","An element section was received, and the provided reader…",45,null],[13,"DataCountSection","","A data count section was received, and the `u32` here is…",45,null],[12,"count","wasmtime_environ::wasm::wasmparser::Payload","The number of data segments.",48,null],[12,"range","","The range of bytes that specify the `count` field,…",48,null],[13,"DataSection","wasmtime_environ::wasm::wasmparser","A data section was received, and the provided reader can…",45,null],[13,"CustomSection","","A custom section was found.",45,null],[12,"name","wasmtime_environ::wasm::wasmparser::Payload","The name of the custom section.",49,null],[12,"data_offset","","The offset, relative to the start of the original module,…",49,null],[12,"data","","The actual contents of the custom section.",49,null],[13,"CodeSectionStart","wasmtime_environ::wasm::wasmparser","Indicator of the start of the code section.",45,null],[12,"count","wasmtime_environ::wasm::wasmparser::Payload","The number of functions in this section.",50,null],[12,"range","","The range of bytes that represent this section, specified…",50,null],[12,"size","","The size, in bytes, of the remaining contents of this…",50,null],[13,"CodeSectionEntry","wasmtime_environ::wasm::wasmparser","An entry of the code section, a function, was parsed.",45,null],[13,"ModuleSectionStart","","Indicator of the start of the module code section.",45,null],[12,"count","wasmtime_environ::wasm::wasmparser::Payload","The number of inline modules in this section.",51,null],[12,"range","","The range of bytes that represent this section, specified…",51,null],[12,"size","","The size, in bytes, of the remaining contents of this…",51,null],[13,"ModuleSectionEntry","wasmtime_environ::wasm::wasmparser","An entry of the module code section, a module, was parsed.",45,null],[12,"parser","wasmtime_environ::wasm::wasmparser::Payload","The parser to use to parse the contents of the nested…",52,null],[12,"range","","The range of bytes, relative to the start of the input…",52,null],[13,"UnknownSection","wasmtime_environ::wasm::wasmparser","An unknown section was found.",45,null],[12,"id","wasmtime_environ::wasm::wasmparser::Payload","The 8-bit identifier for this section.",53,null],[12,"contents","","The contents of this section.",53,null],[12,"range","","The range of bytes, relative to the start of the original…",53,null],[13,"End","wasmtime_environ::wasm::wasmparser","The end of the WebAssembly module was reached.",45,null],[6,"Result","","",null,null],[6,"SIMDLaneIndex","","",null,null],[5,"validate","","Test whether the given buffer contains a valid WebAssembly…",null,[[],[["binaryreadererror",3],["result",4]]]],[4,"ValidPayload","","Possible return values from [`Validator::payload`].",null,null],[13,"Ok","","The payload validated, no further action need be taken.",54,null],[13,"Submodule","","The payload validated, but it started a nested module.",54,null],[13,"Func","","A function was found to be validate.",54,null],[3,"ValidatorResources","","The implementation of [`WasmModuleResources`] used by…",null,null],[3,"EventType","","",null,null],[12,"type_index","","",55,null],[3,"ExportType","","",null,null],[12,"name","","",56,null],[12,"ty","","",56,null],[3,"Import","","",null,null],[12,"module","","",57,null],[12,"field","","",57,null],[12,"ty","","",57,null],[4,"ImportSectionEntryType","","",null,null],[13,"Function","","",58,null],[13,"Table","","",58,null],[13,"Memory","","",58,null],[13,"Event","","",58,null],[13,"Global","","",58,null],[13,"Module","","",58,null],[13,"Instance","","",58,null],[3,"InstanceType","","",null,null],[12,"exports","","",59,null],[3,"ModuleType","","",null,null],[12,"imports","","",60,null],[12,"exports","","",60,null],[3,"FuncType","","",null,null],[12,"params","","",61,null],[12,"returns","","",61,null],[3,"GlobalType","","",null,null],[12,"content_type","","",62,null],[12,"mutable","","",62,null],[4,"MemoryType","","",null,null],[13,"M32","","",63,null],[12,"limits","wasmtime_environ::wasm::wasmparser::MemoryType","",64,null],[12,"shared","","",64,null],[13,"M64","wasmtime_environ::wasm::wasmparser","",63,null],[12,"limits","wasmtime_environ::wasm::wasmparser::MemoryType","",65,null],[12,"shared","","",65,null],[3,"TableType","wasmtime_environ::wasm::wasmparser","",null,null],[12,"element_type","","",66,null],[12,"limits","","",66,null],[4,"Type","","Types as defined here.",null,null],[13,"I32","","",67,null],[13,"I64","","",67,null],[13,"F32","","",67,null],[13,"F64","","",67,null],[13,"V128","","",67,null],[13,"FuncRef","","",67,null],[13,"ExternRef","","",67,null],[13,"ExnRef","","",67,null],[13,"Func","","",67,null],[13,"EmptyBlockType","","",67,null],[3,"BinaryReaderError","","",null,null],[3,"WasmFeatures","","Flags for features that are enabled for validation.",null,null],[12,"reference_types","","The WebAssembly reference types proposal",68,null],[12,"module_linking","","The WebAssembly module linking proposal",68,null],[12,"simd","","The WebAssembly SIMD proposal",68,null],[12,"multi_value","","The WebAssembly multi-value proposal (enabled by default)",68,null],[12,"threads","","The WebAssembly threads proposal",68,null],[12,"tail_call","","The WebAssembly tail-call proposal",68,null],[12,"bulk_memory","","The WebAssembly bulk memory operations proposal",68,null],[12,"deterministic_only","","Whether or not only deterministic instructions are allowed",68,null],[12,"multi_memory","","The WebAssembly multi memory proposal",68,null],[12,"exceptions","","The WebAssembly exception handling proposal",68,null],[12,"memory64","","The WebAssembly memory64 proposal",68,null],[3,"EventSectionReader","","",null,null],[3,"AliasSectionReader","","",null,null],[3,"InstanceSectionReader","","",null,null],[3,"FunctionBody","","",null,null],[3,"DataSectionReader","","",null,null],[3,"ElementSectionReader","","",null,null],[3,"ExportSectionReader","","",null,null],[3,"FunctionSectionReader","","",null,null],[3,"ImportSectionReader","","",null,null],[3,"TypeSectionReader","","",null,null],[3,"GlobalSectionReader","","",null,null],[3,"MemorySectionReader","","",null,null],[3,"TableSectionReader","","",null,null],[4,"ExternalKind","","External types as defined here.",null,null],[13,"Function","","",69,null],[13,"Table","","",69,null],[13,"Memory","","",69,null],[13,"Event","","",69,null],[13,"Global","","",69,null],[13,"Type","","",69,null],[13,"Module","","",69,null],[13,"Instance","","",69,null],[4,"LinkingType","","",null,null],[13,"StackPointer","","",70,null],[4,"NameType","","",null,null],[13,"Module","","",71,null],[13,"Function","","",71,null],[13,"Local","","",71,null],[3,"Naming","","",null,null],[12,"index","","",72,null],[12,"name","","",72,null],[4,"Operator","","Instructions as defined here.",null,null],[13,"Unreachable","","",73,null],[13,"Nop","","",73,null],[13,"Block","","",73,null],[12,"ty","wasmtime_environ::wasm::wasmparser::Operator","",74,null],[13,"Loop","wasmtime_environ::wasm::wasmparser","",73,null],[12,"ty","wasmtime_environ::wasm::wasmparser::Operator","",75,null],[13,"If","wasmtime_environ::wasm::wasmparser","",73,null],[12,"ty","wasmtime_environ::wasm::wasmparser::Operator","",76,null],[13,"Else","wasmtime_environ::wasm::wasmparser","",73,null],[13,"Try","","",73,null],[12,"ty","wasmtime_environ::wasm::wasmparser::Operator","",77,null],[13,"Catch","wasmtime_environ::wasm::wasmparser","",73,null],[12,"index","wasmtime_environ::wasm::wasmparser::Operator","",78,null],[13,"Throw","wasmtime_environ::wasm::wasmparser","",73,null],[12,"index","wasmtime_environ::wasm::wasmparser::Operator","",79,null],[13,"Rethrow","wasmtime_environ::wasm::wasmparser","",73,null],[12,"relative_depth","wasmtime_environ::wasm::wasmparser::Operator","",80,null],[13,"Unwind","wasmtime_environ::wasm::wasmparser","",73,null],[13,"End","","",73,null],[13,"Br","","",73,null],[12,"relative_depth","wasmtime_environ::wasm::wasmparser::Operator","",81,null],[13,"BrIf","wasmtime_environ::wasm::wasmparser","",73,null],[12,"relative_depth","wasmtime_environ::wasm::wasmparser::Operator","",82,null],[13,"BrTable","wasmtime_environ::wasm::wasmparser","",73,null],[12,"table","wasmtime_environ::wasm::wasmparser::Operator","",83,null],[13,"Return","wasmtime_environ::wasm::wasmparser","",73,null],[13,"Call","","",73,null],[12,"function_index","wasmtime_environ::wasm::wasmparser::Operator","",84,null],[13,"CallIndirect","wasmtime_environ::wasm::wasmparser","",73,null],[12,"index","wasmtime_environ::wasm::wasmparser::Operator","",85,null],[12,"table_index","","",85,null],[13,"ReturnCall","wasmtime_environ::wasm::wasmparser","",73,null],[12,"function_index","wasmtime_environ::wasm::wasmparser::Operator","",86,null],[13,"ReturnCallIndirect","wasmtime_environ::wasm::wasmparser","",73,null],[12,"index","wasmtime_environ::wasm::wasmparser::Operator","",87,null],[12,"table_index","","",87,null],[13,"Drop","wasmtime_environ::wasm::wasmparser","",73,null],[13,"Select","","",73,null],[13,"TypedSelect","","",73,null],[12,"ty","wasmtime_environ::wasm::wasmparser::Operator","",88,null],[13,"LocalGet","wasmtime_environ::wasm::wasmparser","",73,null],[12,"local_index","wasmtime_environ::wasm::wasmparser::Operator","",89,null],[13,"LocalSet","wasmtime_environ::wasm::wasmparser","",73,null],[12,"local_index","wasmtime_environ::wasm::wasmparser::Operator","",90,null],[13,"LocalTee","wasmtime_environ::wasm::wasmparser","",73,null],[12,"local_index","wasmtime_environ::wasm::wasmparser::Operator","",91,null],[13,"GlobalGet","wasmtime_environ::wasm::wasmparser","",73,null],[12,"global_index","wasmtime_environ::wasm::wasmparser::Operator","",92,null],[13,"GlobalSet","wasmtime_environ::wasm::wasmparser","",73,null],[12,"global_index","wasmtime_environ::wasm::wasmparser::Operator","",93,null],[13,"I32Load","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",94,null],[13,"I64Load","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",95,null],[13,"F32Load","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",96,null],[13,"F64Load","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",97,null],[13,"I32Load8S","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",98,null],[13,"I32Load8U","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",99,null],[13,"I32Load16S","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",100,null],[13,"I32Load16U","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",101,null],[13,"I64Load8S","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",102,null],[13,"I64Load8U","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",103,null],[13,"I64Load16S","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",104,null],[13,"I64Load16U","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",105,null],[13,"I64Load32S","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",106,null],[13,"I64Load32U","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",107,null],[13,"I32Store","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",108,null],[13,"I64Store","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",109,null],[13,"F32Store","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",110,null],[13,"F64Store","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",111,null],[13,"I32Store8","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",112,null],[13,"I32Store16","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",113,null],[13,"I64Store8","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",114,null],[13,"I64Store16","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",115,null],[13,"I64Store32","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",116,null],[13,"MemorySize","wasmtime_environ::wasm::wasmparser","",73,null],[12,"mem","wasmtime_environ::wasm::wasmparser::Operator","",117,null],[12,"mem_byte","","",117,null],[13,"MemoryGrow","wasmtime_environ::wasm::wasmparser","",73,null],[12,"mem","wasmtime_environ::wasm::wasmparser::Operator","",118,null],[12,"mem_byte","","",118,null],[13,"I32Const","wasmtime_environ::wasm::wasmparser","",73,null],[12,"value","wasmtime_environ::wasm::wasmparser::Operator","",119,null],[13,"I64Const","wasmtime_environ::wasm::wasmparser","",73,null],[12,"value","wasmtime_environ::wasm::wasmparser::Operator","",120,null],[13,"F32Const","wasmtime_environ::wasm::wasmparser","",73,null],[12,"value","wasmtime_environ::wasm::wasmparser::Operator","",121,null],[13,"F64Const","wasmtime_environ::wasm::wasmparser","",73,null],[12,"value","wasmtime_environ::wasm::wasmparser::Operator","",122,null],[13,"RefNull","wasmtime_environ::wasm::wasmparser","",73,null],[12,"ty","wasmtime_environ::wasm::wasmparser::Operator","",123,null],[13,"RefIsNull","wasmtime_environ::wasm::wasmparser","",73,null],[13,"RefFunc","","",73,null],[12,"function_index","wasmtime_environ::wasm::wasmparser::Operator","",124,null],[13,"I32Eqz","wasmtime_environ::wasm::wasmparser","",73,null],[13,"I32Eq","","",73,null],[13,"I32Ne","","",73,null],[13,"I32LtS","","",73,null],[13,"I32LtU","","",73,null],[13,"I32GtS","","",73,null],[13,"I32GtU","","",73,null],[13,"I32LeS","","",73,null],[13,"I32LeU","","",73,null],[13,"I32GeS","","",73,null],[13,"I32GeU","","",73,null],[13,"I64Eqz","","",73,null],[13,"I64Eq","","",73,null],[13,"I64Ne","","",73,null],[13,"I64LtS","","",73,null],[13,"I64LtU","","",73,null],[13,"I64GtS","","",73,null],[13,"I64GtU","","",73,null],[13,"I64LeS","","",73,null],[13,"I64LeU","","",73,null],[13,"I64GeS","","",73,null],[13,"I64GeU","","",73,null],[13,"F32Eq","","",73,null],[13,"F32Ne","","",73,null],[13,"F32Lt","","",73,null],[13,"F32Gt","","",73,null],[13,"F32Le","","",73,null],[13,"F32Ge","","",73,null],[13,"F64Eq","","",73,null],[13,"F64Ne","","",73,null],[13,"F64Lt","","",73,null],[13,"F64Gt","","",73,null],[13,"F64Le","","",73,null],[13,"F64Ge","","",73,null],[13,"I32Clz","","",73,null],[13,"I32Ctz","","",73,null],[13,"I32Popcnt","","",73,null],[13,"I32Add","","",73,null],[13,"I32Sub","","",73,null],[13,"I32Mul","","",73,null],[13,"I32DivS","","",73,null],[13,"I32DivU","","",73,null],[13,"I32RemS","","",73,null],[13,"I32RemU","","",73,null],[13,"I32And","","",73,null],[13,"I32Or","","",73,null],[13,"I32Xor","","",73,null],[13,"I32Shl","","",73,null],[13,"I32ShrS","","",73,null],[13,"I32ShrU","","",73,null],[13,"I32Rotl","","",73,null],[13,"I32Rotr","","",73,null],[13,"I64Clz","","",73,null],[13,"I64Ctz","","",73,null],[13,"I64Popcnt","","",73,null],[13,"I64Add","","",73,null],[13,"I64Sub","","",73,null],[13,"I64Mul","","",73,null],[13,"I64DivS","","",73,null],[13,"I64DivU","","",73,null],[13,"I64RemS","","",73,null],[13,"I64RemU","","",73,null],[13,"I64And","","",73,null],[13,"I64Or","","",73,null],[13,"I64Xor","","",73,null],[13,"I64Shl","","",73,null],[13,"I64ShrS","","",73,null],[13,"I64ShrU","","",73,null],[13,"I64Rotl","","",73,null],[13,"I64Rotr","","",73,null],[13,"F32Abs","","",73,null],[13,"F32Neg","","",73,null],[13,"F32Ceil","","",73,null],[13,"F32Floor","","",73,null],[13,"F32Trunc","","",73,null],[13,"F32Nearest","","",73,null],[13,"F32Sqrt","","",73,null],[13,"F32Add","","",73,null],[13,"F32Sub","","",73,null],[13,"F32Mul","","",73,null],[13,"F32Div","","",73,null],[13,"F32Min","","",73,null],[13,"F32Max","","",73,null],[13,"F32Copysign","","",73,null],[13,"F64Abs","","",73,null],[13,"F64Neg","","",73,null],[13,"F64Ceil","","",73,null],[13,"F64Floor","","",73,null],[13,"F64Trunc","","",73,null],[13,"F64Nearest","","",73,null],[13,"F64Sqrt","","",73,null],[13,"F64Add","","",73,null],[13,"F64Sub","","",73,null],[13,"F64Mul","","",73,null],[13,"F64Div","","",73,null],[13,"F64Min","","",73,null],[13,"F64Max","","",73,null],[13,"F64Copysign","","",73,null],[13,"I32WrapI64","","",73,null],[13,"I32TruncF32S","","",73,null],[13,"I32TruncF32U","","",73,null],[13,"I32TruncF64S","","",73,null],[13,"I32TruncF64U","","",73,null],[13,"I64ExtendI32S","","",73,null],[13,"I64ExtendI32U","","",73,null],[13,"I64TruncF32S","","",73,null],[13,"I64TruncF32U","","",73,null],[13,"I64TruncF64S","","",73,null],[13,"I64TruncF64U","","",73,null],[13,"F32ConvertI32S","","",73,null],[13,"F32ConvertI32U","","",73,null],[13,"F32ConvertI64S","","",73,null],[13,"F32ConvertI64U","","",73,null],[13,"F32DemoteF64","","",73,null],[13,"F64ConvertI32S","","",73,null],[13,"F64ConvertI32U","","",73,null],[13,"F64ConvertI64S","","",73,null],[13,"F64ConvertI64U","","",73,null],[13,"F64PromoteF32","","",73,null],[13,"I32ReinterpretF32","","",73,null],[13,"I64ReinterpretF64","","",73,null],[13,"F32ReinterpretI32","","",73,null],[13,"F64ReinterpretI64","","",73,null],[13,"I32Extend8S","","",73,null],[13,"I32Extend16S","","",73,null],[13,"I64Extend8S","","",73,null],[13,"I64Extend16S","","",73,null],[13,"I64Extend32S","","",73,null],[13,"I32TruncSatF32S","","",73,null],[13,"I32TruncSatF32U","","",73,null],[13,"I32TruncSatF64S","","",73,null],[13,"I32TruncSatF64U","","",73,null],[13,"I64TruncSatF32S","","",73,null],[13,"I64TruncSatF32U","","",73,null],[13,"I64TruncSatF64S","","",73,null],[13,"I64TruncSatF64U","","",73,null],[13,"MemoryInit","","",73,null],[12,"segment","wasmtime_environ::wasm::wasmparser::Operator","",125,null],[12,"mem","","",125,null],[13,"DataDrop","wasmtime_environ::wasm::wasmparser","",73,null],[12,"segment","wasmtime_environ::wasm::wasmparser::Operator","",126,null],[13,"MemoryCopy","wasmtime_environ::wasm::wasmparser","",73,null],[12,"src","wasmtime_environ::wasm::wasmparser::Operator","",127,null],[12,"dst","","",127,null],[13,"MemoryFill","wasmtime_environ::wasm::wasmparser","",73,null],[12,"mem","wasmtime_environ::wasm::wasmparser::Operator","",128,null],[13,"TableInit","wasmtime_environ::wasm::wasmparser","",73,null],[12,"segment","wasmtime_environ::wasm::wasmparser::Operator","",129,null],[12,"table","","",129,null],[13,"ElemDrop","wasmtime_environ::wasm::wasmparser","",73,null],[12,"segment","wasmtime_environ::wasm::wasmparser::Operator","",130,null],[13,"TableCopy","wasmtime_environ::wasm::wasmparser","",73,null],[12,"dst_table","wasmtime_environ::wasm::wasmparser::Operator","",131,null],[12,"src_table","","",131,null],[13,"TableFill","wasmtime_environ::wasm::wasmparser","",73,null],[12,"table","wasmtime_environ::wasm::wasmparser::Operator","",132,null],[13,"TableGet","wasmtime_environ::wasm::wasmparser","",73,null],[12,"table","wasmtime_environ::wasm::wasmparser::Operator","",133,null],[13,"TableSet","wasmtime_environ::wasm::wasmparser","",73,null],[12,"table","wasmtime_environ::wasm::wasmparser::Operator","",134,null],[13,"TableGrow","wasmtime_environ::wasm::wasmparser","",73,null],[12,"table","wasmtime_environ::wasm::wasmparser::Operator","",135,null],[13,"TableSize","wasmtime_environ::wasm::wasmparser","",73,null],[12,"table","wasmtime_environ::wasm::wasmparser::Operator","",136,null],[13,"MemoryAtomicNotify","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",137,null],[13,"MemoryAtomicWait32","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",138,null],[13,"MemoryAtomicWait64","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",139,null],[13,"AtomicFence","wasmtime_environ::wasm::wasmparser","",73,null],[12,"flags","wasmtime_environ::wasm::wasmparser::Operator","",140,null],[13,"I32AtomicLoad","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",141,null],[13,"I64AtomicLoad","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",142,null],[13,"I32AtomicLoad8U","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",143,null],[13,"I32AtomicLoad16U","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",144,null],[13,"I64AtomicLoad8U","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",145,null],[13,"I64AtomicLoad16U","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",146,null],[13,"I64AtomicLoad32U","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",147,null],[13,"I32AtomicStore","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",148,null],[13,"I64AtomicStore","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",149,null],[13,"I32AtomicStore8","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",150,null],[13,"I32AtomicStore16","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",151,null],[13,"I64AtomicStore8","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",152,null],[13,"I64AtomicStore16","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",153,null],[13,"I64AtomicStore32","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",154,null],[13,"I32AtomicRmwAdd","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",155,null],[13,"I64AtomicRmwAdd","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",156,null],[13,"I32AtomicRmw8AddU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",157,null],[13,"I32AtomicRmw16AddU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",158,null],[13,"I64AtomicRmw8AddU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",159,null],[13,"I64AtomicRmw16AddU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",160,null],[13,"I64AtomicRmw32AddU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",161,null],[13,"I32AtomicRmwSub","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",162,null],[13,"I64AtomicRmwSub","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",163,null],[13,"I32AtomicRmw8SubU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",164,null],[13,"I32AtomicRmw16SubU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",165,null],[13,"I64AtomicRmw8SubU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",166,null],[13,"I64AtomicRmw16SubU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",167,null],[13,"I64AtomicRmw32SubU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",168,null],[13,"I32AtomicRmwAnd","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",169,null],[13,"I64AtomicRmwAnd","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",170,null],[13,"I32AtomicRmw8AndU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",171,null],[13,"I32AtomicRmw16AndU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",172,null],[13,"I64AtomicRmw8AndU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",173,null],[13,"I64AtomicRmw16AndU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",174,null],[13,"I64AtomicRmw32AndU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",175,null],[13,"I32AtomicRmwOr","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",176,null],[13,"I64AtomicRmwOr","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",177,null],[13,"I32AtomicRmw8OrU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",178,null],[13,"I32AtomicRmw16OrU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",179,null],[13,"I64AtomicRmw8OrU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",180,null],[13,"I64AtomicRmw16OrU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",181,null],[13,"I64AtomicRmw32OrU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",182,null],[13,"I32AtomicRmwXor","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",183,null],[13,"I64AtomicRmwXor","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",184,null],[13,"I32AtomicRmw8XorU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",185,null],[13,"I32AtomicRmw16XorU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",186,null],[13,"I64AtomicRmw8XorU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",187,null],[13,"I64AtomicRmw16XorU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",188,null],[13,"I64AtomicRmw32XorU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",189,null],[13,"I32AtomicRmwXchg","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",190,null],[13,"I64AtomicRmwXchg","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",191,null],[13,"I32AtomicRmw8XchgU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",192,null],[13,"I32AtomicRmw16XchgU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",193,null],[13,"I64AtomicRmw8XchgU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",194,null],[13,"I64AtomicRmw16XchgU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",195,null],[13,"I64AtomicRmw32XchgU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",196,null],[13,"I32AtomicRmwCmpxchg","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",197,null],[13,"I64AtomicRmwCmpxchg","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",198,null],[13,"I32AtomicRmw8CmpxchgU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",199,null],[13,"I32AtomicRmw16CmpxchgU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",200,null],[13,"I64AtomicRmw8CmpxchgU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",201,null],[13,"I64AtomicRmw16CmpxchgU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",202,null],[13,"I64AtomicRmw32CmpxchgU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",203,null],[13,"V128Load","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",204,null],[13,"V128Store","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",205,null],[13,"V128Const","wasmtime_environ::wasm::wasmparser","",73,null],[12,"value","wasmtime_environ::wasm::wasmparser::Operator","",206,null],[13,"I8x16Splat","wasmtime_environ::wasm::wasmparser","",73,null],[13,"I8x16ExtractLaneS","","",73,null],[12,"lane","wasmtime_environ::wasm::wasmparser::Operator","",207,null],[13,"I8x16ExtractLaneU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"lane","wasmtime_environ::wasm::wasmparser::Operator","",208,null],[13,"I8x16ReplaceLane","wasmtime_environ::wasm::wasmparser","",73,null],[12,"lane","wasmtime_environ::wasm::wasmparser::Operator","",209,null],[13,"I16x8Splat","wasmtime_environ::wasm::wasmparser","",73,null],[13,"I16x8ExtractLaneS","","",73,null],[12,"lane","wasmtime_environ::wasm::wasmparser::Operator","",210,null],[13,"I16x8ExtractLaneU","wasmtime_environ::wasm::wasmparser","",73,null],[12,"lane","wasmtime_environ::wasm::wasmparser::Operator","",211,null],[13,"I16x8ReplaceLane","wasmtime_environ::wasm::wasmparser","",73,null],[12,"lane","wasmtime_environ::wasm::wasmparser::Operator","",212,null],[13,"I32x4Splat","wasmtime_environ::wasm::wasmparser","",73,null],[13,"I32x4ExtractLane","","",73,null],[12,"lane","wasmtime_environ::wasm::wasmparser::Operator","",213,null],[13,"I32x4ReplaceLane","wasmtime_environ::wasm::wasmparser","",73,null],[12,"lane","wasmtime_environ::wasm::wasmparser::Operator","",214,null],[13,"I64x2Splat","wasmtime_environ::wasm::wasmparser","",73,null],[13,"I64x2ExtractLane","","",73,null],[12,"lane","wasmtime_environ::wasm::wasmparser::Operator","",215,null],[13,"I64x2ReplaceLane","wasmtime_environ::wasm::wasmparser","",73,null],[12,"lane","wasmtime_environ::wasm::wasmparser::Operator","",216,null],[13,"F32x4Splat","wasmtime_environ::wasm::wasmparser","",73,null],[13,"F32x4ExtractLane","","",73,null],[12,"lane","wasmtime_environ::wasm::wasmparser::Operator","",217,null],[13,"F32x4ReplaceLane","wasmtime_environ::wasm::wasmparser","",73,null],[12,"lane","wasmtime_environ::wasm::wasmparser::Operator","",218,null],[13,"F64x2Splat","wasmtime_environ::wasm::wasmparser","",73,null],[13,"F64x2ExtractLane","","",73,null],[12,"lane","wasmtime_environ::wasm::wasmparser::Operator","",219,null],[13,"F64x2ReplaceLane","wasmtime_environ::wasm::wasmparser","",73,null],[12,"lane","wasmtime_environ::wasm::wasmparser::Operator","",220,null],[13,"I8x16Eq","wasmtime_environ::wasm::wasmparser","",73,null],[13,"I8x16Ne","","",73,null],[13,"I8x16LtS","","",73,null],[13,"I8x16LtU","","",73,null],[13,"I8x16GtS","","",73,null],[13,"I8x16GtU","","",73,null],[13,"I8x16LeS","","",73,null],[13,"I8x16LeU","","",73,null],[13,"I8x16GeS","","",73,null],[13,"I8x16GeU","","",73,null],[13,"I16x8Eq","","",73,null],[13,"I16x8Ne","","",73,null],[13,"I16x8LtS","","",73,null],[13,"I16x8LtU","","",73,null],[13,"I16x8GtS","","",73,null],[13,"I16x8GtU","","",73,null],[13,"I16x8LeS","","",73,null],[13,"I16x8LeU","","",73,null],[13,"I16x8GeS","","",73,null],[13,"I16x8GeU","","",73,null],[13,"I32x4Eq","","",73,null],[13,"I32x4Ne","","",73,null],[13,"I32x4LtS","","",73,null],[13,"I32x4LtU","","",73,null],[13,"I32x4GtS","","",73,null],[13,"I32x4GtU","","",73,null],[13,"I32x4LeS","","",73,null],[13,"I32x4LeU","","",73,null],[13,"I32x4GeS","","",73,null],[13,"I32x4GeU","","",73,null],[13,"F32x4Eq","","",73,null],[13,"F32x4Ne","","",73,null],[13,"F32x4Lt","","",73,null],[13,"F32x4Gt","","",73,null],[13,"F32x4Le","","",73,null],[13,"F32x4Ge","","",73,null],[13,"F64x2Eq","","",73,null],[13,"F64x2Ne","","",73,null],[13,"F64x2Lt","","",73,null],[13,"F64x2Gt","","",73,null],[13,"F64x2Le","","",73,null],[13,"F64x2Ge","","",73,null],[13,"V128Not","","",73,null],[13,"V128And","","",73,null],[13,"V128AndNot","","",73,null],[13,"V128Or","","",73,null],[13,"V128Xor","","",73,null],[13,"V128Bitselect","","",73,null],[13,"V128AnyTrue","","",73,null],[13,"I8x16Abs","","",73,null],[13,"I8x16Neg","","",73,null],[13,"I8x16AllTrue","","",73,null],[13,"I8x16Bitmask","","",73,null],[13,"I8x16Shl","","",73,null],[13,"I8x16ShrS","","",73,null],[13,"I8x16ShrU","","",73,null],[13,"I8x16Add","","",73,null],[13,"I8x16AddSatS","","",73,null],[13,"I8x16AddSatU","","",73,null],[13,"I8x16Sub","","",73,null],[13,"I8x16SubSatS","","",73,null],[13,"I8x16SubSatU","","",73,null],[13,"I8x16MinS","","",73,null],[13,"I8x16MinU","","",73,null],[13,"I8x16MaxS","","",73,null],[13,"I8x16MaxU","","",73,null],[13,"I16x8Abs","","",73,null],[13,"I16x8Neg","","",73,null],[13,"I16x8AllTrue","","",73,null],[13,"I16x8Bitmask","","",73,null],[13,"I16x8Shl","","",73,null],[13,"I16x8ShrS","","",73,null],[13,"I16x8ShrU","","",73,null],[13,"I16x8Add","","",73,null],[13,"I16x8AddSatS","","",73,null],[13,"I16x8AddSatU","","",73,null],[13,"I16x8Sub","","",73,null],[13,"I16x8SubSatS","","",73,null],[13,"I16x8SubSatU","","",73,null],[13,"I16x8Mul","","",73,null],[13,"I16x8MinS","","",73,null],[13,"I16x8MinU","","",73,null],[13,"I16x8MaxS","","",73,null],[13,"I16x8MaxU","","",73,null],[13,"I32x4Abs","","",73,null],[13,"I32x4Neg","","",73,null],[13,"I32x4AllTrue","","",73,null],[13,"I32x4Bitmask","","",73,null],[13,"I32x4Shl","","",73,null],[13,"I32x4ShrS","","",73,null],[13,"I32x4ShrU","","",73,null],[13,"I32x4Add","","",73,null],[13,"I32x4Sub","","",73,null],[13,"I32x4Mul","","",73,null],[13,"I32x4MinS","","",73,null],[13,"I32x4MinU","","",73,null],[13,"I32x4MaxS","","",73,null],[13,"I32x4MaxU","","",73,null],[13,"I32x4DotI16x8S","","",73,null],[13,"I64x2Neg","","",73,null],[13,"I64x2Bitmask","","",73,null],[13,"I64x2Shl","","",73,null],[13,"I64x2ShrS","","",73,null],[13,"I64x2ShrU","","",73,null],[13,"I64x2Add","","",73,null],[13,"I64x2Sub","","",73,null],[13,"I64x2Mul","","",73,null],[13,"F32x4Ceil","","",73,null],[13,"F32x4Floor","","",73,null],[13,"F32x4Trunc","","",73,null],[13,"F32x4Nearest","","",73,null],[13,"F64x2Ceil","","",73,null],[13,"F64x2Floor","","",73,null],[13,"F64x2Trunc","","",73,null],[13,"F64x2Nearest","","",73,null],[13,"F32x4Abs","","",73,null],[13,"F32x4Neg","","",73,null],[13,"F32x4Sqrt","","",73,null],[13,"F32x4Add","","",73,null],[13,"F32x4Sub","","",73,null],[13,"F32x4Mul","","",73,null],[13,"F32x4Div","","",73,null],[13,"F32x4Min","","",73,null],[13,"F32x4Max","","",73,null],[13,"F32x4PMin","","",73,null],[13,"F32x4PMax","","",73,null],[13,"F64x2Abs","","",73,null],[13,"F64x2Neg","","",73,null],[13,"F64x2Sqrt","","",73,null],[13,"F64x2Add","","",73,null],[13,"F64x2Sub","","",73,null],[13,"F64x2Mul","","",73,null],[13,"F64x2Div","","",73,null],[13,"F64x2Min","","",73,null],[13,"F64x2Max","","",73,null],[13,"F64x2PMin","","",73,null],[13,"F64x2PMax","","",73,null],[13,"I32x4TruncSatF32x4S","","",73,null],[13,"I32x4TruncSatF32x4U","","",73,null],[13,"F32x4ConvertI32x4S","","",73,null],[13,"F32x4ConvertI32x4U","","",73,null],[13,"I8x16Swizzle","","",73,null],[13,"I8x16Shuffle","","",73,null],[12,"lanes","wasmtime_environ::wasm::wasmparser::Operator","",221,null],[13,"V128Load8Splat","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",222,null],[13,"V128Load16Splat","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",223,null],[13,"V128Load32Splat","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",224,null],[13,"V128Load32Zero","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",225,null],[13,"V128Load64Splat","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",226,null],[13,"V128Load64Zero","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",227,null],[13,"I8x16NarrowI16x8S","wasmtime_environ::wasm::wasmparser","",73,null],[13,"I8x16NarrowI16x8U","","",73,null],[13,"I16x8NarrowI32x4S","","",73,null],[13,"I16x8NarrowI32x4U","","",73,null],[13,"I16x8WidenLowI8x16S","","",73,null],[13,"I16x8WidenHighI8x16S","","",73,null],[13,"I16x8WidenLowI8x16U","","",73,null],[13,"I16x8WidenHighI8x16U","","",73,null],[13,"I32x4WidenLowI16x8S","","",73,null],[13,"I32x4WidenHighI16x8S","","",73,null],[13,"I32x4WidenLowI16x8U","","",73,null],[13,"I32x4WidenHighI16x8U","","",73,null],[13,"I64x2WidenLowI32x4S","","",73,null],[13,"I64x2WidenHighI32x4S","","",73,null],[13,"I64x2WidenLowI32x4U","","",73,null],[13,"I64x2WidenHighI32x4U","","",73,null],[13,"I16x8ExtMulLowI8x16S","","",73,null],[13,"I16x8ExtMulHighI8x16S","","",73,null],[13,"I16x8ExtMulLowI8x16U","","",73,null],[13,"I16x8ExtMulHighI8x16U","","",73,null],[13,"I32x4ExtMulLowI16x8S","","",73,null],[13,"I32x4ExtMulHighI16x8S","","",73,null],[13,"I32x4ExtMulLowI16x8U","","",73,null],[13,"I32x4ExtMulHighI16x8U","","",73,null],[13,"I64x2ExtMulLowI32x4S","","",73,null],[13,"I64x2ExtMulHighI32x4S","","",73,null],[13,"I64x2ExtMulLowI32x4U","","",73,null],[13,"I64x2ExtMulHighI32x4U","","",73,null],[13,"V128Load8x8S","","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",228,null],[13,"V128Load8x8U","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",229,null],[13,"V128Load16x4S","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",230,null],[13,"V128Load16x4U","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",231,null],[13,"V128Load32x2S","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",232,null],[13,"V128Load32x2U","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",233,null],[13,"V128Load8Lane","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",234,null],[12,"lane","","",234,null],[13,"V128Load16Lane","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",235,null],[12,"lane","","",235,null],[13,"V128Load32Lane","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",236,null],[12,"lane","","",236,null],[13,"V128Load64Lane","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",237,null],[12,"lane","","",237,null],[13,"V128Store8Lane","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",238,null],[12,"lane","","",238,null],[13,"V128Store16Lane","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",239,null],[12,"lane","","",239,null],[13,"V128Store32Lane","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",240,null],[12,"lane","","",240,null],[13,"V128Store64Lane","wasmtime_environ::wasm::wasmparser","",73,null],[12,"memarg","wasmtime_environ::wasm::wasmparser::Operator","",241,null],[12,"lane","","",241,null],[13,"I8x16RoundingAverageU","wasmtime_environ::wasm::wasmparser","",73,null],[13,"I16x8RoundingAverageU","","",73,null],[13,"I16x8Q15MulrSatS","","",73,null],[4,"RelocType","","",null,null],[13,"FunctionIndexLEB","","",242,null],[13,"TableIndexSLEB","","",242,null],[13,"TableIndexI32","","",242,null],[13,"GlobalAddrLEB","","",242,null],[13,"GlobalAddrSLEB","","",242,null],[13,"GlobalAddrI32","","",242,null],[13,"TypeIndexLEB","","",242,null],[13,"GlobalIndexLEB","","",242,null],[4,"SectionCode","","Section code as defined here.",null,null],[13,"Custom","","",243,null],[12,"name","wasmtime_environ::wasm::wasmparser::SectionCode","",244,null],[12,"kind","","",244,null],[13,"Type","wasmtime_environ::wasm::wasmparser","",243,null],[13,"Alias","","",243,null],[13,"Import","","",243,null],[13,"Module","","",243,null],[13,"Instance","","",243,null],[13,"Function","","",243,null],[13,"Table","","",243,null],[13,"Memory","","",243,null],[13,"Global","","",243,null],[13,"Export","","",243,null],[13,"Start","","",243,null],[13,"Element","","",243,null],[13,"ModuleCode","","",243,null],[13,"Code","","",243,null],[13,"Data","","",243,null],[13,"DataCount","","",243,null],[13,"Event","","",243,null],[3,"LocalsReader","","",null,null],[3,"CodeSectionReader","","",null,null],[3,"LocalsIterator","","",null,null],[3,"ElementItemsReader","","",null,null],[3,"ElementItemsIterator","","",null,null],[3,"LinkingSectionReader","","",null,null],[3,"ModuleSectionReader","","",null,null],[3,"NamingReader","","",null,null],[3,"FunctionLocalReader","","",null,null],[3,"NameSectionReader","","",null,null],[3,"OperatorsIterator","","",null,null],[3,"OperatorsIteratorWithOffsets","","",null,null],[3,"ProducersFieldValuesReader","","",null,null],[3,"ProducersFieldValuesIterator","","",null,null],[3,"ProducersSectionReader","","",null,null],[3,"RelocSectionReader","","",null,null],[8,"SectionReader","","",null,null],[16,"Item","","",245,null],[10,"read","","",245,[[],[["binaryreadererror",3],["result",4]]]],[10,"eof","","",245,[[]]],[10,"original_position","","",245,[[]]],[10,"range","","",245,[[],["range",3]]],[11,"ensure_end","","",245,[[],[["binaryreadererror",3],["result",4]]]],[8,"SectionWithLimitedItems","","",null,null],[10,"get_count","","",246,[[]]],[3,"SectionIterator","","",null,null],[3,"SectionIteratorLimited","","",null,null],[4,"TypeDef","","",null,null],[13,"Func","","",247,null],[13,"Instance","","",247,null],[13,"Module","","",247,null],[3,"ResizableLimits64","","",null,null],[12,"initial","","",248,null],[12,"maximum","","",248,null],[4,"Alias","","",null,null],[13,"OuterType","","",249,null],[12,"relative_depth","wasmtime_environ::wasm::wasmparser::Alias","",250,null],[12,"index","","",250,null],[13,"OuterModule","wasmtime_environ::wasm::wasmparser","",249,null],[12,"relative_depth","wasmtime_environ::wasm::wasmparser::Alias","",251,null],[12,"index","","",251,null],[13,"InstanceExport","wasmtime_environ::wasm::wasmparser","",249,null],[12,"instance","wasmtime_environ::wasm::wasmparser::Alias","",252,null],[12,"kind","","",252,null],[12,"export","","",252,null],[4,"DataKind","wasmtime_environ::wasm::wasmparser","",null,null],[13,"Passive","","",253,null],[13,"Active","","",253,null],[12,"memory_index","wasmtime_environ::wasm::wasmparser::DataKind","",254,null],[12,"init_expr","","",254,null],[4,"ElementItem","wasmtime_environ::wasm::wasmparser","",null,null],[13,"Null","","",255,null],[13,"Func","","",255,null],[4,"ElementKind","","",null,null],[13,"Passive","","",256,null],[13,"Active","","",256,null],[12,"table_index","wasmtime_environ::wasm::wasmparser::ElementKind","",257,null],[12,"init_expr","","",257,null],[13,"Declared","wasmtime_environ::wasm::wasmparser","",256,null],[3,"InitExpr","","",null,null],[3,"Instance","","",null,null],[3,"ResizableLimits","","",null,null],[12,"initial","","",258,null],[12,"maximum","","",258,null],[3,"Parser","","An incremental parser of a binary WebAssembly module.",null,null],[3,"FuncValidator","","Validation context for a WebAssembly function.",null,null],[4,"Chunk","","A successful return payload from [`Parser::parse`].",null,null],[13,"NeedMoreData","","This can be returned at any time and indicates that more…",259,null],[13,"Parsed","","A chunk was successfully parsed.",259,null],[12,"consumed","wasmtime_environ::wasm::wasmparser::Chunk","This many bytes of the `data` input to [`Parser::parse`]…",260,null],[12,"payload","","The value that we actually parsed.",260,null],[4,"CustomSectionKind","wasmtime_environ::wasm::wasmparser","",null,null],[13,"Unknown","","",261,null],[13,"Name","","",261,null],[13,"Producers","","",261,null],[13,"SourceMappingURL","","",261,null],[13,"Reloc","","",261,null],[13,"Linking","","",261,null],[4,"TypeOrFuncType","","Either a value type or a function type.",null,null],[13,"Type","","A value type.",262,null],[13,"FuncType","","A function type (referenced as an index into the types…",262,null],[3,"MemoryImmediate","","",null,null],[12,"align","","Alignment, stored as `n` where the actual alignment is `2^n`",263,null],[12,"offset","","",263,null],[12,"memory","","",263,null],[3,"BrTable","","A br_table entries representation.",null,null],[3,"Ieee32","","An IEEE binary32 immediate floating point value,…",null,null],[3,"Ieee64","","An IEEE binary64 immediate floating point value,…",null,null],[3,"V128","","",null,null],[3,"Data","","",null,null],[12,"kind","","",264,null],[12,"data","","",264,null],[3,"Element","","",null,null],[12,"kind","","",265,null],[12,"items","","",265,null],[12,"ty","","",265,null],[3,"ElementItems","","",null,null],[3,"Export","","",null,null],[12,"field","","",266,null],[12,"kind","","",266,null],[12,"index","","",266,null],[3,"Global","","",null,null],[12,"ty","","",267,null],[12,"init_expr","","",267,null],[3,"InstanceArgsReader","","",null,null],[3,"InstanceArg","","",null,null],[12,"name","","",268,null],[12,"kind","","",268,null],[12,"index","","",268,null],[3,"NestedModule","","",null,null],[3,"ModuleName","","",null,null],[3,"FunctionName","","",null,null],[3,"FunctionLocalName","","",null,null],[12,"func_index","","",269,null],[3,"LocalName","","",null,null],[4,"Name","","",null,null],[13,"Module","","",270,null],[13,"Function","","",270,null],[13,"Local","","",270,null],[3,"OperatorsReader","","",null,null],[3,"ProducersFieldValue","","",null,null],[12,"name","","",271,null],[12,"version","","",271,null],[3,"ProducersField","","",null,null],[12,"name","","",272,null],[3,"Reloc","","",null,null],[12,"ty","","",273,null],[12,"offset","","",273,null],[12,"index","","",273,null],[12,"addend","","",273,null],[3,"Validator","","Validator for a WebAssembly binary module.",null,null],[5,"type_to_type","wasmtime_environ::wasm","Helper function translating wasmparser types to Cranelift…",null,[[["type",4]],[["wasmerror",4],["result",4],["type",3]]]],[5,"tabletype_to_type","","Helper function translating wasmparser possible table…",null,[[["type",4]],[["wasmerror",4],["result",4],["option",4]]]],[5,"blocktype_params_results","","Get the parameter and result types for the given Wasm…",null,[[["typeorfunctype",4],["funcvalidator",3]],[["result",4],["wasmerror",4]]]],[5,"block_with_params","","Create a `Block` with the given Wasm parameters.",null,[[["functionbuilder",3]],[["block",3],["result",4],["wasmerror",4]]]],[5,"f32_translation","","Turns a `wasmparser` `f32` into a `Cranelift` one.",null,[[["ieee32",3]],["ieee32",3]]],[5,"f64_translation","","Turns a `wasmparser` `f64` into a `Cranelift` one.",null,[[["ieee64",3]],["ieee64",3]]],[5,"get_vmctx_value_label","","Special VMContext value label. It is tracked as…",null,[[],["valuelabel",3]]],[3,"FuncIndex","","Index type of a function (imported or defined) inside the…",null,null],[3,"DefinedFuncIndex","","Index type of a defined function inside the WebAssembly…",null,null],[3,"DefinedTableIndex","","Index type of a defined table inside the WebAssembly module.",null,null],[3,"DefinedMemoryIndex","","Index type of a defined memory inside the WebAssembly…",null,null],[3,"DefinedGlobalIndex","","Index type of a defined global inside the WebAssembly…",null,null],[3,"TableIndex","","Index type of a table (imported or defined) inside the…",null,null],[3,"GlobalIndex","","Index type of a global variable (imported or defined)…",null,null],[3,"MemoryIndex","","Index type of a linear memory (imported or defined) inside…",null,null],[3,"SignatureIndex","","Index type of a signature (imported or defined) inside the…",null,null],[3,"DataIndex","","Index type of a passive data segment inside the…",null,null],[3,"ElemIndex","","Index type of a passive element segment inside the…",null,null],[3,"TypeIndex","","Index type of a type inside the WebAssembly module.",null,null],[3,"ModuleIndex","","Index type of a module inside the WebAssembly module.",null,null],[3,"InstanceIndex","","Index type of an instance inside the WebAssembly module.",null,null],[3,"EventIndex","","Index type of an event inside the WebAssembly module.",null,null],[3,"ModuleTypeIndex","","Specialized index for just module types.",null,null],[3,"InstanceTypeIndex","","Specialized index for just instance types.",null,null],[4,"EntityIndex","","An index of an entity.",null,null],[13,"Function","","Function index.",274,null],[13,"Table","","Table index.",274,null],[13,"Memory","","Memory index.",274,null],[13,"Global","","Global index.",274,null],[13,"Module","","Module index.",274,null],[13,"Instance","","Instance index.",274,null],[4,"EntityType","","A type of an item in a wasm module where an item is…",null,null],[13,"Global","","A global variable with the specified content type",275,null],[13,"Memory","","A linear memory with the specified limits",275,null],[13,"Event","","An event definition.",275,null],[13,"Table","","A table with the specified element type and limits",275,null],[13,"Function","","A function type where the index points to the type section…",275,null],[13,"Instance","","An instance where the index points to the type section and…",275,null],[13,"Module","","A module where the index points to the type section and…",275,null],[3,"Global","","A WebAssembly global.",null,null],[12,"wasm_ty","","The Wasm type of the value stored in the global.",276,null],[12,"ty","","The Cranelift IR type of the value stored in the global.",276,null],[12,"mutability","","A flag indicating whether the value may change at runtime.",276,null],[12,"initializer","","The source of the initial value.",276,null],[4,"GlobalInit","","Globals are initialized via the `const` operators or by…",null,null],[13,"I32Const","","An `i32.const`.",277,null],[13,"I64Const","","An `i64.const`.",277,null],[13,"F32Const","","An `f32.const`.",277,null],[13,"F64Const","","An `f64.const`.",277,null],[13,"V128Const","","A `vconst`.",277,null],[13,"GetGlobal","","A `global.get` of another global.",277,null],[13,"RefNullConst","","A `ref.null`.",277,null],[13,"RefFunc","","A `ref.func <index>`.",277,null],[13,"Import","","< The global is imported from, and thus initialized by, a…",277,null],[3,"Table","","WebAssembly table.",null,null],[12,"wasm_ty","","The table elements\' Wasm type.",278,null],[12,"ty","","The table elements\' Cranelift type.",278,null],[12,"minimum","","The minimum number of elements in the table.",278,null],[12,"maximum","","The maximum number of elements in the table.",278,null],[4,"TableElementType","","WebAssembly table element. Can be a function or a scalar…",null,null],[13,"Val","","A scalar type.",279,null],[13,"Func","","A function.",279,null],[3,"Memory","","WebAssembly linear memory.",null,null],[12,"minimum","","The minimum number of pages in the memory.",280,null],[12,"maximum","","The maximum number of pages in the memory.",280,null],[12,"shared","","Whether the memory may be shared between multiple threads.",280,null],[3,"Event","","WebAssembly event.",null,null],[12,"ty","","The event signature type.",281,null],[3,"InstructionAddressMap","wasmtime_environ","Single source location to generated address mapping.",null,null],[12,"srcloc","","Where in the source this instruction comes from.",282,null],[12,"code_offset","","Offset from the start of the function\'s compiled code to…",282,null],[3,"FunctionAddressMap","","Function and its instructions addresses mappings.",null,null],[12,"instructions","","An array of data for the instructions in this function,…",283,null],[12,"start_srcloc","","Function start source location (normally declaration).",283,null],[12,"end_srcloc","","Function end source location.",283,null],[12,"body_offset","","Generated function body offset if applicable, otherwise 0.",283,null],[12,"body_len","","Generated function body length.",283,null],[4,"ModuleMemoryOffset","","Memory definition offset in the VMContext structure.",null,null],[13,"None","","Not available.",284,null],[13,"Defined","","Offset to the defined memory.",284,null],[13,"Imported","","Offset to the imported memory.",284,null],[3,"BuiltinFunctionIndex","","An index type for builtin functions.",null,null],[6,"CompiledFunctions","","",null,null],[3,"CompiledFunction","","Compiled function: machine code body, jump table offsets,…",null,null],[12,"body","","The machine code for this function.",285,null],[12,"jt_offsets","","The jump tables offsets (in the body).",285,null],[12,"unwind_info","","The unwind information.",285,null],[12,"relocations","","",285,null],[12,"address_map","","",285,null],[12,"value_labels_ranges","","",285,null],[12,"stack_slots","","",285,null],[12,"traps","","",285,null],[12,"stack_maps","","",285,null],[3,"Relocation","","A record of a relocation to perform.",null,null],[12,"reloc","","The relocation code.",286,null],[12,"reloc_target","","Relocation target.",286,null],[12,"offset","","The offset where to apply the relocation.",286,null],[12,"addend","","The addend to add to the relocation value.",286,null],[4,"RelocationTarget","","Destination function. Can be either user function or some…",null,null],[13,"UserFunc","","The user function index.",287,null],[13,"LibCall","","A compiler-generated libcall.",287,null],[13,"JumpTable","","Jump table index.",287,null],[3,"TrapInformation","","Information about trap.",null,null],[12,"code_offset","","The offset of the trapping instruction in native code. It…",288,null],[12,"trap_code","","Code of the trap.",288,null],[3,"StackMapInformation","","The offset within a function of a GC safepoint, and its…",null,null],[12,"code_offset","","The offset of the GC safepoint within the function\'s…",289,null],[12,"stack_map","","The stack map for identifying live GC refs at the GC…",289,null],[4,"CompileError","","An error while compiling WebAssembly to machine code.",null,null],[13,"Wasm","","A wasm translation error occured.",290,null],[13,"Codegen","","A compilation error occured.",290,null],[13,"DebugInfoNotSupported","","A compilation error occured.",290,null],[8,"Compiler","","An implementation of a compiler from parsed WebAssembly…",null,null],[10,"compile_function","","Compile a function with the given `TargetIsa`.",291,[[["moduletranslation",3],["functionbodydata",3],["definedfuncindex",3],["tunables",3],["targetisa",8],["typetables",3]],[["compileerror",4],["result",4],["compiledfunction",3]]]],[3,"TableElements","","A WebAssembly table initializer.",null,null],[12,"table_index","","The index of a table to initialize.",292,null],[12,"base","","Optionally, a global variable giving a base index.",292,null],[12,"offset","","The offset to add to the base.",292,null],[12,"elements","","The values to write into the table elements.",292,null],[4,"MemoryStyle","","Implemenation styles for WebAssembly linear memory.",null,null],[13,"Dynamic","","The actual memory can be resized and moved.",293,null],[13,"Static","","Addresss space is allocated up front.",293,null],[12,"bound","wasmtime_environ::MemoryStyle","The number of mapped and unmapped pages.",294,null],[3,"MemoryPlan","wasmtime_environ","A WebAssembly linear memory description along with our…",null,null],[12,"memory","","The WebAssembly linear memory description.",295,null],[12,"style","","Our chosen implementation style.",295,null],[12,"offset_guard_size","","Our chosen offset-guard size.",295,null],[4,"TableStyle","","Implemenation styles for WebAssembly tables.",null,null],[13,"CallerChecksSignature","","Signatures are stored in the table and checked in the…",296,null],[3,"TablePlan","","A WebAssembly table description along with our chosen…",null,null],[12,"table","","The WebAssembly table description.",297,null],[12,"style","","Our chosen implementation style.",297,null],[4,"ModuleType","","Different types that can appear in a module.",null,null],[13,"Function","","",298,null],[13,"Module","","",298,null],[13,"Instance","","",298,null],[3,"Module","","A translated WebAssembly module, excluding the function…",null,null],[12,"name","","The name of this wasm module, often found in the wasm file.",299,null],[12,"initializers","","All import records, in the order they are declared in the…",299,null],[12,"exports","","Exported entities.",299,null],[12,"start_func","","The module \\\"start\\\" function, if present.",299,null],[12,"table_elements","","WebAssembly table initializers.",299,null],[12,"passive_elements","","WebAssembly passive elements.",299,null],[12,"passive_data","","WebAssembly passive data segments.",299,null],[12,"func_names","","WebAssembly table initializers.",299,null],[12,"types","","Types declared in the wasm module.",299,null],[12,"num_imported_funcs","","Number of imported or aliased functions in the module.",299,null],[12,"num_imported_tables","","Number of imported or aliased tables in the module.",299,null],[12,"num_imported_memories","","Number of imported or aliased memories in the module.",299,null],[12,"num_imported_globals","","Number of imported or aliased globals in the module.",299,null],[12,"functions","","Types of functions, imported and local.",299,null],[12,"table_plans","","WebAssembly tables.",299,null],[12,"memory_plans","","WebAssembly linear memory plans.",299,null],[12,"globals","","WebAssembly global variables.",299,null],[12,"instances","","The type of each wasm instance this module defines.",299,null],[12,"modules","","The type of each nested wasm module this module contains.",299,null],[4,"Initializer","","Initialization routines for creating an instance,…",null,null],[13,"Import","","An imported item is required to be provided.",300,null],[12,"name","wasmtime_environ::Initializer","Name of this import",301,null],[12,"field","","The field name projection of this import. When…",301,null],[12,"index","","Where this import will be placed, which also has type…",301,null],[13,"AliasInstanceExport","wasmtime_environ","An export from a previously defined instance is being…",300,null],[12,"instance","wasmtime_environ::Initializer","The instance that we\'re referencing.",302,null],[12,"export","","Which export is being inserted into our index space.",302,null],[13,"Instantiate","wasmtime_environ","A module is being instantiated with previously configured…",300,null],[12,"module","wasmtime_environ::Initializer","The module that this instance is instantiating.",303,null],[12,"args","","The arguments provided to instantiation, along with their…",303,null],[13,"CreateModule","wasmtime_environ","A module is being created from a set of compiled artifacts.",300,null],[12,"artifact_index","wasmtime_environ::Initializer","The index of the artifact that\'s being convereted into a…",304,null],[12,"artifacts","","The list of artifacts that this module value will be…",304,null],[12,"modules","","The list of modules that this module value will inherit.",304,null],[13,"DefineModule","wasmtime_environ","A module is created from a closed-over-module value,…",300,null],[4,"ModuleUpvar","","Where module values can come from when creating a new…",null,null],[13,"Inherit","","A module value is inherited from the module creating the…",305,null],[13,"Local","","A module value comes from the instance-to-be-created…",305,null],[3,"TypeTables","","All types which are recorded for the entirety of a…",null,null],[12,"wasm_signatures","","",306,null],[12,"native_signatures","","",306,null],[12,"module_signatures","","",306,null],[12,"instance_signatures","","",306,null],[3,"ModuleSignature","","The type signature of known modules.",null,null],[12,"imports","","All imports in this module, listed in order with their…",307,null],[12,"exports","","Exports are what an instance type conveys, so we go…",307,null],[3,"InstanceSignature","","The type signature of known instances.",null,null],[12,"exports","","The name of what\'s being exported as well as its type…",308,null],[3,"ModuleEnvironment","","Object containing the standalone environment information.",null,null],[3,"ModuleTranslation","","The result of translating via `ModuleEnvironment`.…",null,null],[12,"module","","Module information.",309,null],[12,"function_body_inputs","","References to the function bodies.",309,null],[12,"data_initializers","","References to the data initializers.",309,null],[12,"debuginfo","","DWARF debug information, if enabled, parsed from the module.",309,null],[12,"has_unparsed_debuginfo","","Set if debuginfo was found but it was not parsed due to…",309,null],[3,"FunctionBodyData","","Contains function data: byte code and its offset in the…",null,null],[12,"body","","The body of the function, containing code and locals.",310,null],[12,"validator","","Validator for the function body",310,null],[3,"DebugInfoData","","",null,null],[12,"dwarf","","",311,null],[12,"name_section","","",311,null],[12,"wasm_file","","",311,null],[12,"debug_ranges","","",311,null],[12,"debug_rnglists","","",311,null],[6,"Dwarf","","",null,null],[3,"NameSection","","",null,null],[12,"module_name","","",312,null],[12,"func_names","","",312,null],[12,"locals_names","","",312,null],[3,"WasmFileInfo","","",null,null],[12,"path","","",313,null],[12,"code_section_offset","","",313,null],[12,"imported_func_count","","",313,null],[12,"funcs","","",313,null],[3,"FunctionMetadata","","",null,null],[12,"params","","",314,null],[12,"locals","","",314,null],[5,"translate_signature","","Add environment-specific function parameters.",null,[[["type",3],["signature",3]],["signature",3]]],[3,"DataInitializerLocation","","A memory index and offset within that memory where a data…",null,null],[12,"memory_index","","The index of the memory to initialize.",315,null],[12,"base","","Optionally a globalvar base to initialize at.",315,null],[12,"offset","","A constant offset to initialize at.",315,null],[3,"DataInitializer","","A data initializer for linear memory.",null,null],[12,"location","","The location where the initialization is to be performed.",316,null],[12,"data","","The initialization data.",316,null],[3,"Tunables","","Tunable parameters for WebAssembly compilation.",null,null],[12,"static_memory_bound","","For static heaps, the size in wasm pages of the heap…",317,null],[12,"static_memory_offset_guard_size","","The size in bytes of the offset guard for static heaps.",317,null],[12,"dynamic_memory_offset_guard_size","","The size in bytes of the offset guard for dynamic heaps.",317,null],[12,"generate_native_debuginfo","","Whether or not to generate native DWARF debug information.",317,null],[12,"parse_wasm_debuginfo","","Whether or not to retain DWARF sections in compiled modules.",317,null],[12,"interruptable","","Whether or not to enable the ability to interrupt wasm…",317,null],[3,"TargetSharedSignatureIndex","","Target specific type for shared signature index.",null,null],[3,"VMOffsets","","This class computes offsets to fields within `VMContext`…",null,null],[12,"pointer_size","","The size in bytes of a pointer on the target.",318,null],[12,"num_signature_ids","","The number of signature declarations in the module.",318,null],[12,"num_imported_functions","","The number of imported functions in the module.",318,null],[12,"num_imported_tables","","The number of imported tables in the module.",318,null],[12,"num_imported_memories","","The number of imported memories in the module.",318,null],[12,"num_imported_globals","","The number of imported globals in the module.",318,null],[12,"num_defined_functions","","The number of defined functions in the module.",318,null],[12,"num_defined_tables","","The number of defined tables in the module.",318,null],[12,"num_defined_memories","","The number of defined memories in the module.",318,null],[12,"num_defined_globals","","The number of defined globals in the module.",318,null],[17,"INTERRUPTED","","Sentinel value indicating that wasm has been interrupted.",null,null],[17,"WASM_PAGE_SIZE","","WebAssembly page sizes are defined to be 64KiB.",null,null],[17,"WASM_MAX_PAGES","","The number of pages we can have before we run out of byte…",null,null],[17,"VERSION","","Version number of this crate.",null,null],[5,"reference_type","","Returns the reference type to use for the provided wasm…",null,[[["wasmtype",4],["type",3]],["type",3]]],[14,"foreach_builtin_function","","Helper macro to iterate over all builtin functions and…",null,null],[14,"for_each_libcall","","Iterates through all `LibCall` members and all runtime…",null,null],[11,"from","","",282,[[]]],[11,"into","","",282,[[]]],[11,"to_owned","","",282,[[]]],[11,"clone_into","","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"equivalent","","",282,[[]]],[11,"from","","",283,[[]]],[11,"into","","",283,[[]]],[11,"to_owned","","",283,[[]]],[11,"clone_into","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"equivalent","","",283,[[]]],[11,"from","","",284,[[]]],[11,"into","","",284,[[]]],[11,"to_owned","","",284,[[]]],[11,"clone_into","","",284,[[]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"from","","",319,[[]]],[11,"into","","",319,[[]]],[11,"to_owned","","",319,[[]]],[11,"clone_into","","",319,[[]]],[11,"borrow","","",319,[[]]],[11,"borrow_mut","","",319,[[]]],[11,"try_from","","",319,[[],["result",4]]],[11,"try_into","","",319,[[],["result",4]]],[11,"type_id","","",319,[[],["typeid",3]]],[11,"from","","",285,[[]]],[11,"into","","",285,[[]]],[11,"to_owned","","",285,[[]]],[11,"clone_into","","",285,[[]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"equivalent","","",285,[[]]],[11,"from","","",286,[[]]],[11,"into","","",286,[[]]],[11,"to_owned","","",286,[[]]],[11,"clone_into","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"equivalent","","",286,[[]]],[11,"from","","",287,[[]]],[11,"into","","",287,[[]]],[11,"to_owned","","",287,[[]]],[11,"clone_into","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"equivalent","","",287,[[]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"to_owned","","",288,[[]]],[11,"clone_into","","",288,[[]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"equivalent","","",288,[[]]],[11,"from","","",289,[[]]],[11,"into","","",289,[[]]],[11,"to_owned","","",289,[[]]],[11,"clone_into","","",289,[[]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"equivalent","","",289,[[]]],[11,"from","","",290,[[]]],[11,"into","","",290,[[]]],[11,"to_string","","",290,[[],["string",3]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"from","wasmtime_environ::ir","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[]]],[11,"from","","",320,[[]]],[11,"into","","",320,[[]]],[11,"to_owned","","",320,[[]]],[11,"clone_into","","",320,[[]]],[11,"borrow","","",320,[[]]],[11,"borrow_mut","","",320,[[]]],[11,"try_from","","",320,[[],["result",4]]],[11,"try_into","","",320,[[],["result",4]]],[11,"type_id","","",320,[[],["typeid",3]]],[11,"equivalent","","",320,[[]]],[11,"from","","",321,[[]]],[11,"into","","",321,[[]]],[11,"to_owned","","",321,[[]]],[11,"clone_into","","",321,[[]]],[11,"to_string","","",321,[[],["string",3]]],[11,"borrow","","",321,[[]]],[11,"borrow_mut","","",321,[[]]],[11,"try_from","","",321,[[],["result",4]]],[11,"try_into","","",321,[[],["result",4]]],[11,"type_id","","",321,[[],["typeid",3]]],[11,"equivalent","","",321,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"equivalent","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"equivalent","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"equivalent","","",5,[[]]],[11,"from","","",322,[[]]],[11,"into","","",322,[[]]],[11,"to_owned","","",322,[[]]],[11,"clone_into","","",322,[[]]],[11,"to_string","","",322,[[],["string",3]]],[11,"borrow","","",322,[[]]],[11,"borrow_mut","","",322,[[]]],[11,"try_from","","",322,[[],["result",4]]],[11,"try_into","","",322,[[],["result",4]]],[11,"type_id","","",322,[[],["typeid",3]]],[11,"equivalent","","",322,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"equivalent","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"equivalent","","",7,[[]]],[11,"from","","",323,[[]]],[11,"into","","",323,[[]]],[11,"to_owned","","",323,[[]]],[11,"clone_into","","",323,[[]]],[11,"to_string","","",323,[[],["string",3]]],[11,"borrow","","",323,[[]]],[11,"borrow_mut","","",323,[[]]],[11,"try_from","","",323,[[],["result",4]]],[11,"try_into","","",323,[[],["result",4]]],[11,"type_id","","",323,[[],["typeid",3]]],[11,"key","","",323,[[]]],[11,"equivalent","","",323,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"equivalent","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"equivalent","","",9,[[]]],[11,"from","wasmtime_environ::settings","",324,[[]]],[11,"into","","",324,[[]]],[11,"to_owned","","",324,[[]]],[11,"clone_into","","",324,[[]]],[11,"borrow","","",324,[[]]],[11,"borrow_mut","","",324,[[]]],[11,"try_from","","",324,[[],["result",4]]],[11,"try_into","","",324,[[],["result",4]]],[11,"type_id","","",324,[[],["typeid",3]]],[11,"from","","",325,[[]]],[11,"into","","",325,[[]]],[11,"to_owned","","",325,[[]]],[11,"clone_into","","",325,[[]]],[11,"to_string","","",325,[[],["string",3]]],[11,"borrow","","",325,[[]]],[11,"borrow_mut","","",325,[[]]],[11,"try_from","","",325,[[],["result",4]]],[11,"try_into","","",325,[[],["result",4]]],[11,"type_id","","",325,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"equivalent","","",11,[[]]],[11,"from","wasmtime_environ::isa::unwind::systemv","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"equivalent","","",12,[[]]],[11,"from","","",326,[[]]],[11,"into","","",326,[[]]],[11,"to_owned","","",326,[[]]],[11,"clone_into","","",326,[[]]],[11,"borrow","","",326,[[]]],[11,"borrow_mut","","",326,[[]]],[11,"try_from","","",326,[[],["result",4]]],[11,"try_into","","",326,[[],["result",4]]],[11,"type_id","","",326,[[],["typeid",3]]],[11,"equivalent","","",326,[[]]],[11,"from","wasmtime_environ::isa::unwind::winx64","",327,[[]]],[11,"into","","",327,[[]]],[11,"to_owned","","",327,[[]]],[11,"clone_into","","",327,[[]]],[11,"borrow","","",327,[[]]],[11,"borrow_mut","","",327,[[]]],[11,"try_from","","",327,[[],["result",4]]],[11,"try_into","","",327,[[],["result",4]]],[11,"type_id","","",327,[[],["typeid",3]]],[11,"equivalent","","",327,[[]]],[11,"from","wasmtime_environ::isa::unwind","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"equivalent","","",13,[[]]],[11,"from","wasmtime_environ::isa::unwind::input","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"equivalent","","",14,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"equivalent","","",20,[[]]],[11,"from","wasmtime_environ::isa","",328,[[]]],[11,"into","","",328,[[]]],[11,"to_owned","","",328,[[]]],[11,"clone_into","","",328,[[]]],[11,"borrow","","",328,[[]]],[11,"borrow_mut","","",328,[[]]],[11,"try_from","","",328,[[],["result",4]]],[11,"try_into","","",328,[[],["result",4]]],[11,"type_id","","",328,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"equivalent","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","wasmtime_environ::entity::packed_option","",329,[[]]],[11,"from","","",329,[[]]],[11,"into","","",329,[[]]],[11,"to_owned","","",329,[[]]],[11,"clone_into","","",329,[[]]],[11,"borrow","","",329,[[]]],[11,"borrow_mut","","",329,[[]]],[11,"try_from","","",329,[[],["result",4]]],[11,"try_into","","",329,[[],["result",4]]],[11,"type_id","","",329,[[],["typeid",3]]],[11,"equivalent","","",329,[[]]],[11,"from","wasmtime_environ::entity","",330,[[]]],[11,"into","","",330,[[]]],[11,"to_owned","","",330,[[]]],[11,"clone_into","","",330,[[]]],[11,"borrow","","",330,[[]]],[11,"borrow_mut","","",330,[[]]],[11,"try_from","","",330,[[],["result",4]]],[11,"try_into","","",330,[[],["result",4]]],[11,"type_id","","",330,[[],["typeid",3]]],[11,"from","","",331,[[]]],[11,"into","","",331,[[]]],[11,"to_owned","","",331,[[]]],[11,"clone_into","","",331,[[]]],[11,"borrow","","",331,[[]]],[11,"borrow_mut","","",331,[[]]],[11,"try_from","","",331,[[],["result",4]]],[11,"try_into","","",331,[[],["result",4]]],[11,"type_id","","",331,[[],["typeid",3]]],[11,"equivalent","","",331,[[]]],[11,"from","wasmtime_environ::wasm","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"equivalent","","",35,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"equivalent","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"equivalent","","",40,[[]]],[11,"from","","",332,[[]]],[11,"into","","",332,[[]]],[11,"borrow","","",332,[[]]],[11,"borrow_mut","","",332,[[]]],[11,"try_from","","",332,[[],["result",4]]],[11,"try_into","","",332,[[],["result",4]]],[11,"type_id","","",332,[[],["typeid",3]]],[11,"from","","",333,[[]]],[11,"into","","",333,[[]]],[11,"borrow","","",333,[[]]],[11,"borrow_mut","","",333,[[]]],[11,"try_from","","",333,[[],["result",4]]],[11,"try_into","","",333,[[],["result",4]]],[11,"type_id","","",333,[[],["typeid",3]]],[11,"from","","",334,[[]]],[11,"into","","",334,[[]]],[11,"borrow","","",334,[[]]],[11,"borrow_mut","","",334,[[]]],[11,"try_from","","",334,[[],["result",4]]],[11,"try_into","","",334,[[],["result",4]]],[11,"type_id","","",334,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","wasmtime_environ::wasm::wasmparser","",335,[[]]],[11,"into","","",335,[[]]],[11,"to_owned","","",335,[[]]],[11,"clone_into","","",335,[[]]],[11,"borrow","","",335,[[]]],[11,"borrow_mut","","",335,[[]]],[11,"try_from","","",335,[[],["result",4]]],[11,"try_into","","",335,[[],["result",4]]],[11,"type_id","","",335,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"equivalent","","",42,[[]]],[11,"from","","",336,[[]]],[11,"into","","",336,[[]]],[11,"into_iter","","",336,[[]]],[11,"to_owned","","",336,[[]]],[11,"clone_into","","",336,[[]]],[11,"borrow","","",336,[[]]],[11,"borrow_mut","","",336,[[]]],[11,"try_from","","",336,[[],["result",4]]],[11,"try_into","","",336,[[],["result",4]]],[11,"type_id","","",336,[[],["typeid",3]]],[11,"from","","",337,[[]]],[11,"into","","",337,[[]]],[11,"into_iter","","",337,[[]]],[11,"to_owned","","",337,[[]]],[11,"clone_into","","",337,[[]]],[11,"borrow","","",337,[[]]],[11,"borrow_mut","","",337,[[]]],[11,"try_from","","",337,[[],["result",4]]],[11,"try_into","","",337,[[],["result",4]]],[11,"type_id","","",337,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",338,[[]]],[11,"into","","",338,[[]]],[11,"borrow","","",338,[[]]],[11,"borrow_mut","","",338,[[]]],[11,"try_from","","",338,[[],["result",4]]],[11,"try_into","","",338,[[],["result",4]]],[11,"type_id","","",338,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"equivalent","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"equivalent","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"equivalent","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"equivalent","","",63,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"equivalent","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"equivalent","","",67,[[]]],[11,"from","","",339,[[]]],[11,"into","","",339,[[]]],[11,"to_owned","","",339,[[]]],[11,"clone_into","","",339,[[]]],[11,"to_string","","",339,[[],["string",3]]],[11,"borrow","","",339,[[]]],[11,"borrow_mut","","",339,[[]]],[11,"try_from","","",339,[[],["result",4]]],[11,"try_into","","",339,[[],["result",4]]],[11,"type_id","","",339,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",340,[[]]],[11,"into","","",340,[[]]],[11,"to_owned","","",340,[[]]],[11,"clone_into","","",340,[[]]],[11,"borrow","","",340,[[]]],[11,"borrow_mut","","",340,[[]]],[11,"try_from","","",340,[[],["result",4]]],[11,"try_into","","",340,[[],["result",4]]],[11,"type_id","","",340,[[],["typeid",3]]],[11,"from","","",341,[[]]],[11,"into","","",341,[[]]],[11,"to_owned","","",341,[[]]],[11,"clone_into","","",341,[[]]],[11,"borrow","","",341,[[]]],[11,"borrow_mut","","",341,[[]]],[11,"try_from","","",341,[[],["result",4]]],[11,"try_into","","",341,[[],["result",4]]],[11,"type_id","","",341,[[],["typeid",3]]],[11,"from","","",342,[[]]],[11,"into","","",342,[[]]],[11,"to_owned","","",342,[[]]],[11,"clone_into","","",342,[[]]],[11,"borrow","","",342,[[]]],[11,"borrow_mut","","",342,[[]]],[11,"try_from","","",342,[[],["result",4]]],[11,"try_into","","",342,[[],["result",4]]],[11,"type_id","","",342,[[],["typeid",3]]],[11,"from","","",343,[[]]],[11,"into","","",343,[[]]],[11,"to_owned","","",343,[[]]],[11,"clone_into","","",343,[[]]],[11,"borrow","","",343,[[]]],[11,"borrow_mut","","",343,[[]]],[11,"try_from","","",343,[[],["result",4]]],[11,"try_into","","",343,[[],["result",4]]],[11,"type_id","","",343,[[],["typeid",3]]],[11,"from","","",344,[[]]],[11,"into","","",344,[[]]],[11,"to_owned","","",344,[[]]],[11,"clone_into","","",344,[[]]],[11,"borrow","","",344,[[]]],[11,"borrow_mut","","",344,[[]]],[11,"try_from","","",344,[[],["result",4]]],[11,"try_into","","",344,[[],["result",4]]],[11,"type_id","","",344,[[],["typeid",3]]],[11,"from","","",345,[[]]],[11,"into","","",345,[[]]],[11,"to_owned","","",345,[[]]],[11,"clone_into","","",345,[[]]],[11,"borrow","","",345,[[]]],[11,"borrow_mut","","",345,[[]]],[11,"try_from","","",345,[[],["result",4]]],[11,"try_into","","",345,[[],["result",4]]],[11,"type_id","","",345,[[],["typeid",3]]],[11,"from","","",346,[[]]],[11,"into","","",346,[[]]],[11,"to_owned","","",346,[[]]],[11,"clone_into","","",346,[[]]],[11,"borrow","","",346,[[]]],[11,"borrow_mut","","",346,[[]]],[11,"try_from","","",346,[[],["result",4]]],[11,"try_into","","",346,[[],["result",4]]],[11,"type_id","","",346,[[],["typeid",3]]],[11,"from","","",347,[[]]],[11,"into","","",347,[[]]],[11,"to_owned","","",347,[[]]],[11,"clone_into","","",347,[[]]],[11,"borrow","","",347,[[]]],[11,"borrow_mut","","",347,[[]]],[11,"try_from","","",347,[[],["result",4]]],[11,"try_into","","",347,[[],["result",4]]],[11,"type_id","","",347,[[],["typeid",3]]],[11,"from","","",348,[[]]],[11,"into","","",348,[[]]],[11,"to_owned","","",348,[[]]],[11,"clone_into","","",348,[[]]],[11,"borrow","","",348,[[]]],[11,"borrow_mut","","",348,[[]]],[11,"try_from","","",348,[[],["result",4]]],[11,"try_into","","",348,[[],["result",4]]],[11,"type_id","","",348,[[],["typeid",3]]],[11,"from","","",349,[[]]],[11,"into","","",349,[[]]],[11,"to_owned","","",349,[[]]],[11,"clone_into","","",349,[[]]],[11,"borrow","","",349,[[]]],[11,"borrow_mut","","",349,[[]]],[11,"try_from","","",349,[[],["result",4]]],[11,"try_into","","",349,[[],["result",4]]],[11,"type_id","","",349,[[],["typeid",3]]],[11,"from","","",350,[[]]],[11,"into","","",350,[[]]],[11,"to_owned","","",350,[[]]],[11,"clone_into","","",350,[[]]],[11,"borrow","","",350,[[]]],[11,"borrow_mut","","",350,[[]]],[11,"try_from","","",350,[[],["result",4]]],[11,"try_into","","",350,[[],["result",4]]],[11,"type_id","","",350,[[],["typeid",3]]],[11,"from","","",351,[[]]],[11,"into","","",351,[[]]],[11,"to_owned","","",351,[[]]],[11,"clone_into","","",351,[[]]],[11,"borrow","","",351,[[]]],[11,"borrow_mut","","",351,[[]]],[11,"try_from","","",351,[[],["result",4]]],[11,"try_into","","",351,[[],["result",4]]],[11,"type_id","","",351,[[],["typeid",3]]],[11,"from","","",352,[[]]],[11,"into","","",352,[[]]],[11,"to_owned","","",352,[[]]],[11,"clone_into","","",352,[[]]],[11,"borrow","","",352,[[]]],[11,"borrow_mut","","",352,[[]]],[11,"try_from","","",352,[[],["result",4]]],[11,"try_into","","",352,[[],["result",4]]],[11,"type_id","","",352,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"equivalent","","",243,[[]]],[11,"from","","",353,[[]]],[11,"into","","",353,[[]]],[11,"borrow","","",353,[[]]],[11,"borrow_mut","","",353,[[]]],[11,"try_from","","",353,[[],["result",4]]],[11,"try_into","","",353,[[],["result",4]]],[11,"type_id","","",353,[[],["typeid",3]]],[11,"from","","",354,[[]]],[11,"into","","",354,[[]]],[11,"borrow","","",354,[[]]],[11,"borrow_mut","","",354,[[]]],[11,"try_from","","",354,[[],["result",4]]],[11,"try_into","","",354,[[],["result",4]]],[11,"type_id","","",354,[[],["typeid",3]]],[11,"from","","",355,[[]]],[11,"into","","",355,[[]]],[11,"into_iter","","",355,[[]]],[11,"borrow","","",355,[[]]],[11,"borrow_mut","","",355,[[]]],[11,"try_from","","",355,[[],["result",4]]],[11,"try_into","","",355,[[],["result",4]]],[11,"type_id","","",355,[[],["typeid",3]]],[11,"from","","",356,[[]]],[11,"into","","",356,[[]]],[11,"borrow","","",356,[[]]],[11,"borrow_mut","","",356,[[]]],[11,"try_from","","",356,[[],["result",4]]],[11,"try_into","","",356,[[],["result",4]]],[11,"type_id","","",356,[[],["typeid",3]]],[11,"from","","",357,[[]]],[11,"into","","",357,[[]]],[11,"into_iter","","",357,[[]]],[11,"borrow","","",357,[[]]],[11,"borrow_mut","","",357,[[]]],[11,"try_from","","",357,[[],["result",4]]],[11,"try_into","","",357,[[],["result",4]]],[11,"type_id","","",357,[[],["typeid",3]]],[11,"from","","",358,[[]]],[11,"into","","",358,[[]]],[11,"borrow","","",358,[[]]],[11,"borrow_mut","","",358,[[]]],[11,"try_from","","",358,[[],["result",4]]],[11,"try_into","","",358,[[],["result",4]]],[11,"type_id","","",358,[[],["typeid",3]]],[11,"from","","",359,[[]]],[11,"into","","",359,[[]]],[11,"borrow","","",359,[[]]],[11,"borrow_mut","","",359,[[]]],[11,"try_from","","",359,[[],["result",4]]],[11,"try_into","","",359,[[],["result",4]]],[11,"type_id","","",359,[[],["typeid",3]]],[11,"from","","",360,[[]]],[11,"into","","",360,[[]]],[11,"borrow","","",360,[[]]],[11,"borrow_mut","","",360,[[]]],[11,"try_from","","",360,[[],["result",4]]],[11,"try_into","","",360,[[],["result",4]]],[11,"type_id","","",360,[[],["typeid",3]]],[11,"from","","",361,[[]]],[11,"into","","",361,[[]]],[11,"borrow","","",361,[[]]],[11,"borrow_mut","","",361,[[]]],[11,"try_from","","",361,[[],["result",4]]],[11,"try_into","","",361,[[],["result",4]]],[11,"type_id","","",361,[[],["typeid",3]]],[11,"from","","",362,[[]]],[11,"into","","",362,[[]]],[11,"borrow","","",362,[[]]],[11,"borrow_mut","","",362,[[]]],[11,"try_from","","",362,[[],["result",4]]],[11,"try_into","","",362,[[],["result",4]]],[11,"type_id","","",362,[[],["typeid",3]]],[11,"from","","",363,[[]]],[11,"into","","",363,[[]]],[11,"into_iter","","",363,[[]]],[11,"borrow","","",363,[[]]],[11,"borrow_mut","","",363,[[]]],[11,"try_from","","",363,[[],["result",4]]],[11,"try_into","","",363,[[],["result",4]]],[11,"type_id","","",363,[[],["typeid",3]]],[11,"from","","",364,[[]]],[11,"into","","",364,[[]]],[11,"into_iter","","",364,[[]]],[11,"borrow","","",364,[[]]],[11,"borrow_mut","","",364,[[]]],[11,"try_from","","",364,[[],["result",4]]],[11,"try_into","","",364,[[],["result",4]]],[11,"type_id","","",364,[[],["typeid",3]]],[11,"from","","",365,[[]]],[11,"into","","",365,[[]]],[11,"borrow","","",365,[[]]],[11,"borrow_mut","","",365,[[]]],[11,"try_from","","",365,[[],["result",4]]],[11,"try_into","","",365,[[],["result",4]]],[11,"type_id","","",365,[[],["typeid",3]]],[11,"from","","",366,[[]]],[11,"into","","",366,[[]]],[11,"into_iter","","",366,[[]]],[11,"borrow","","",366,[[]]],[11,"borrow_mut","","",366,[[]]],[11,"try_from","","",366,[[],["result",4]]],[11,"try_into","","",366,[[],["result",4]]],[11,"type_id","","",366,[[],["typeid",3]]],[11,"from","","",367,[[]]],[11,"into","","",367,[[]]],[11,"borrow","","",367,[[]]],[11,"borrow_mut","","",367,[[]]],[11,"try_from","","",367,[[],["result",4]]],[11,"try_into","","",367,[[],["result",4]]],[11,"type_id","","",367,[[],["typeid",3]]],[11,"from","","",368,[[]]],[11,"into","","",368,[[]]],[11,"borrow","","",368,[[]]],[11,"borrow_mut","","",368,[[]]],[11,"try_from","","",368,[[],["result",4]]],[11,"try_into","","",368,[[],["result",4]]],[11,"type_id","","",368,[[],["typeid",3]]],[11,"from","","",369,[[]]],[11,"into","","",369,[[]]],[11,"into_iter","","",369,[[]]],[11,"borrow","","",369,[[]]],[11,"borrow_mut","","",369,[[]]],[11,"try_from","","",369,[[],["result",4]]],[11,"try_into","","",369,[[],["result",4]]],[11,"type_id","","",369,[[],["typeid",3]]],[11,"from","","",370,[[]]],[11,"into","","",370,[[]]],[11,"into_iter","","",370,[[]]],[11,"borrow","","",370,[[]]],[11,"borrow_mut","","",370,[[]]],[11,"try_from","","",370,[[],["result",4]]],[11,"try_into","","",370,[[],["result",4]]],[11,"type_id","","",370,[[],["typeid",3]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"equivalent","","",248,[[]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"to_owned","","",256,[[]]],[11,"clone_into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"from","","",371,[[]]],[11,"into","","",371,[[]]],[11,"to_owned","","",371,[[]]],[11,"clone_into","","",371,[[]]],[11,"borrow","","",371,[[]]],[11,"borrow_mut","","",371,[[]]],[11,"try_from","","",371,[[],["result",4]]],[11,"try_into","","",371,[[],["result",4]]],[11,"type_id","","",371,[[],["typeid",3]]],[11,"from","","",372,[[]]],[11,"into","","",372,[[]]],[11,"to_owned","","",372,[[]]],[11,"clone_into","","",372,[[]]],[11,"borrow","","",372,[[]]],[11,"borrow_mut","","",372,[[]]],[11,"try_from","","",372,[[],["result",4]]],[11,"try_into","","",372,[[],["result",4]]],[11,"type_id","","",372,[[],["typeid",3]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"equivalent","","",258,[[]]],[11,"from","","",373,[[]]],[11,"into","","",373,[[]]],[11,"to_owned","","",373,[[]]],[11,"clone_into","","",373,[[]]],[11,"borrow","","",373,[[]]],[11,"borrow_mut","","",373,[[]]],[11,"try_from","","",373,[[],["result",4]]],[11,"try_into","","",373,[[],["result",4]]],[11,"type_id","","",373,[[],["typeid",3]]],[11,"from","","",374,[[]]],[11,"into","","",374,[[]]],[11,"borrow","","",374,[[]]],[11,"borrow_mut","","",374,[[]]],[11,"try_from","","",374,[[],["result",4]]],[11,"try_into","","",374,[[],["result",4]]],[11,"type_id","","",374,[[],["typeid",3]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"from","","",261,[[]]],[11,"into","","",261,[[]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"equivalent","","",261,[[]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"to_owned","","",262,[[]]],[11,"clone_into","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"equivalent","","",262,[[]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"to_owned","","",263,[[]]],[11,"clone_into","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"from","","",375,[[]]],[11,"into","","",375,[[]]],[11,"to_owned","","",375,[[]]],[11,"clone_into","","",375,[[]]],[11,"borrow","","",375,[[]]],[11,"borrow_mut","","",375,[[]]],[11,"try_from","","",375,[[],["result",4]]],[11,"try_into","","",375,[[],["result",4]]],[11,"type_id","","",375,[[],["typeid",3]]],[11,"from","","",376,[[]]],[11,"into","","",376,[[]]],[11,"to_owned","","",376,[[]]],[11,"clone_into","","",376,[[]]],[11,"borrow","","",376,[[]]],[11,"borrow_mut","","",376,[[]]],[11,"try_from","","",376,[[],["result",4]]],[11,"try_into","","",376,[[],["result",4]]],[11,"type_id","","",376,[[],["typeid",3]]],[11,"equivalent","","",376,[[]]],[11,"from","","",377,[[]]],[11,"into","","",377,[[]]],[11,"to_owned","","",377,[[]]],[11,"clone_into","","",377,[[]]],[11,"borrow","","",377,[[]]],[11,"borrow_mut","","",377,[[]]],[11,"try_from","","",377,[[],["result",4]]],[11,"try_into","","",377,[[],["result",4]]],[11,"type_id","","",377,[[],["typeid",3]]],[11,"equivalent","","",377,[[]]],[11,"from","","",378,[[]]],[11,"into","","",378,[[]]],[11,"to_owned","","",378,[[]]],[11,"clone_into","","",378,[[]]],[11,"borrow","","",378,[[]]],[11,"borrow_mut","","",378,[[]]],[11,"try_from","","",378,[[],["result",4]]],[11,"try_into","","",378,[[],["result",4]]],[11,"type_id","","",378,[[],["typeid",3]]],[11,"equivalent","","",378,[[]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"to_owned","","",264,[[]]],[11,"clone_into","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"from","","",379,[[]]],[11,"into","","",379,[[]]],[11,"to_owned","","",379,[[]]],[11,"clone_into","","",379,[[]]],[11,"borrow","","",379,[[]]],[11,"borrow_mut","","",379,[[]]],[11,"try_from","","",379,[[],["result",4]]],[11,"try_into","","",379,[[],["result",4]]],[11,"type_id","","",379,[[],["typeid",3]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"from","","",380,[[]]],[11,"into","","",380,[[]]],[11,"to_owned","","",380,[[]]],[11,"clone_into","","",380,[[]]],[11,"borrow","","",380,[[]]],[11,"borrow_mut","","",380,[[]]],[11,"try_from","","",380,[[],["result",4]]],[11,"try_into","","",380,[[],["result",4]]],[11,"type_id","","",380,[[],["typeid",3]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"from","","",381,[[]]],[11,"into","","",381,[[]]],[11,"borrow","","",381,[[]]],[11,"borrow_mut","","",381,[[]]],[11,"try_from","","",381,[[],["result",4]]],[11,"try_into","","",381,[[],["result",4]]],[11,"type_id","","",381,[[],["typeid",3]]],[11,"from","","",382,[[]]],[11,"into","","",382,[[]]],[11,"to_owned","","",382,[[]]],[11,"clone_into","","",382,[[]]],[11,"borrow","","",382,[[]]],[11,"borrow_mut","","",382,[[]]],[11,"try_from","","",382,[[],["result",4]]],[11,"try_into","","",382,[[],["result",4]]],[11,"type_id","","",382,[[],["typeid",3]]],[11,"from","","",383,[[]]],[11,"into","","",383,[[]]],[11,"to_owned","","",383,[[]]],[11,"clone_into","","",383,[[]]],[11,"borrow","","",383,[[]]],[11,"borrow_mut","","",383,[[]]],[11,"try_from","","",383,[[],["result",4]]],[11,"try_into","","",383,[[],["result",4]]],[11,"type_id","","",383,[[],["typeid",3]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"to_owned","","",269,[[]]],[11,"clone_into","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"from","","",384,[[]]],[11,"into","","",384,[[]]],[11,"to_owned","","",384,[[]]],[11,"clone_into","","",384,[[]]],[11,"borrow","","",384,[[]]],[11,"borrow_mut","","",384,[[]]],[11,"try_from","","",384,[[],["result",4]]],[11,"try_into","","",384,[[],["result",4]]],[11,"type_id","","",384,[[],["typeid",3]]],[11,"from","","",270,[[]]],[11,"into","","",270,[[]]],[11,"to_owned","","",270,[[]]],[11,"clone_into","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"from","","",385,[[]]],[11,"into","","",385,[[]]],[11,"to_owned","","",385,[[]]],[11,"clone_into","","",385,[[]]],[11,"borrow","","",385,[[]]],[11,"borrow_mut","","",385,[[]]],[11,"try_from","","",385,[[],["result",4]]],[11,"try_into","","",385,[[],["result",4]]],[11,"type_id","","",385,[[],["typeid",3]]],[11,"from","","",271,[[]]],[11,"into","","",271,[[]]],[11,"to_owned","","",271,[[]]],[11,"clone_into","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"from","","",272,[[]]],[11,"into","","",272,[[]]],[11,"to_owned","","",272,[[]]],[11,"clone_into","","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"from","","",273,[[]]],[11,"into","","",273,[[]]],[11,"to_owned","","",273,[[]]],[11,"clone_into","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"from","","",386,[[]]],[11,"into","","",386,[[]]],[11,"borrow","","",386,[[]]],[11,"borrow_mut","","",386,[[]]],[11,"try_from","","",386,[[],["result",4]]],[11,"try_into","","",386,[[],["result",4]]],[11,"type_id","","",386,[[],["typeid",3]]],[11,"from","wasmtime_environ::wasm","",387,[[]]],[11,"into","","",387,[[]]],[11,"to_owned","","",387,[[]]],[11,"clone_into","","",387,[[]]],[11,"borrow","","",387,[[]]],[11,"borrow_mut","","",387,[[]]],[11,"try_from","","",387,[[],["result",4]]],[11,"try_into","","",387,[[],["result",4]]],[11,"type_id","","",387,[[],["typeid",3]]],[11,"key","","",387,[[]]],[11,"equivalent","","",387,[[]]],[11,"from","","",388,[[]]],[11,"into","","",388,[[]]],[11,"to_owned","","",388,[[]]],[11,"clone_into","","",388,[[]]],[11,"borrow","","",388,[[]]],[11,"borrow_mut","","",388,[[]]],[11,"try_from","","",388,[[],["result",4]]],[11,"try_into","","",388,[[],["result",4]]],[11,"type_id","","",388,[[],["typeid",3]]],[11,"key","","",388,[[]]],[11,"equivalent","","",388,[[]]],[11,"from","","",389,[[]]],[11,"into","","",389,[[]]],[11,"to_owned","","",389,[[]]],[11,"clone_into","","",389,[[]]],[11,"borrow","","",389,[[]]],[11,"borrow_mut","","",389,[[]]],[11,"try_from","","",389,[[],["result",4]]],[11,"try_into","","",389,[[],["result",4]]],[11,"type_id","","",389,[[],["typeid",3]]],[11,"key","","",389,[[]]],[11,"equivalent","","",389,[[]]],[11,"from","","",390,[[]]],[11,"into","","",390,[[]]],[11,"to_owned","","",390,[[]]],[11,"clone_into","","",390,[[]]],[11,"borrow","","",390,[[]]],[11,"borrow_mut","","",390,[[]]],[11,"try_from","","",390,[[],["result",4]]],[11,"try_into","","",390,[[],["result",4]]],[11,"type_id","","",390,[[],["typeid",3]]],[11,"key","","",390,[[]]],[11,"equivalent","","",390,[[]]],[11,"from","","",391,[[]]],[11,"into","","",391,[[]]],[11,"to_owned","","",391,[[]]],[11,"clone_into","","",391,[[]]],[11,"borrow","","",391,[[]]],[11,"borrow_mut","","",391,[[]]],[11,"try_from","","",391,[[],["result",4]]],[11,"try_into","","",391,[[],["result",4]]],[11,"type_id","","",391,[[],["typeid",3]]],[11,"key","","",391,[[]]],[11,"equivalent","","",391,[[]]],[11,"from","","",392,[[]]],[11,"into","","",392,[[]]],[11,"to_owned","","",392,[[]]],[11,"clone_into","","",392,[[]]],[11,"borrow","","",392,[[]]],[11,"borrow_mut","","",392,[[]]],[11,"try_from","","",392,[[],["result",4]]],[11,"try_into","","",392,[[],["result",4]]],[11,"type_id","","",392,[[],["typeid",3]]],[11,"key","","",392,[[]]],[11,"equivalent","","",392,[[]]],[11,"from","","",393,[[]]],[11,"into","","",393,[[]]],[11,"to_owned","","",393,[[]]],[11,"clone_into","","",393,[[]]],[11,"borrow","","",393,[[]]],[11,"borrow_mut","","",393,[[]]],[11,"try_from","","",393,[[],["result",4]]],[11,"try_into","","",393,[[],["result",4]]],[11,"type_id","","",393,[[],["typeid",3]]],[11,"key","","",393,[[]]],[11,"equivalent","","",393,[[]]],[11,"from","","",394,[[]]],[11,"into","","",394,[[]]],[11,"to_owned","","",394,[[]]],[11,"clone_into","","",394,[[]]],[11,"borrow","","",394,[[]]],[11,"borrow_mut","","",394,[[]]],[11,"try_from","","",394,[[],["result",4]]],[11,"try_into","","",394,[[],["result",4]]],[11,"type_id","","",394,[[],["typeid",3]]],[11,"key","","",394,[[]]],[11,"equivalent","","",394,[[]]],[11,"from","","",395,[[]]],[11,"into","","",395,[[]]],[11,"to_owned","","",395,[[]]],[11,"clone_into","","",395,[[]]],[11,"borrow","","",395,[[]]],[11,"borrow_mut","","",395,[[]]],[11,"try_from","","",395,[[],["result",4]]],[11,"try_into","","",395,[[],["result",4]]],[11,"type_id","","",395,[[],["typeid",3]]],[11,"key","","",395,[[]]],[11,"equivalent","","",395,[[]]],[11,"from","","",396,[[]]],[11,"into","","",396,[[]]],[11,"to_owned","","",396,[[]]],[11,"clone_into","","",396,[[]]],[11,"borrow","","",396,[[]]],[11,"borrow_mut","","",396,[[]]],[11,"try_from","","",396,[[],["result",4]]],[11,"try_into","","",396,[[],["result",4]]],[11,"type_id","","",396,[[],["typeid",3]]],[11,"key","","",396,[[]]],[11,"equivalent","","",396,[[]]],[11,"from","","",397,[[]]],[11,"into","","",397,[[]]],[11,"to_owned","","",397,[[]]],[11,"clone_into","","",397,[[]]],[11,"borrow","","",397,[[]]],[11,"borrow_mut","","",397,[[]]],[11,"try_from","","",397,[[],["result",4]]],[11,"try_into","","",397,[[],["result",4]]],[11,"type_id","","",397,[[],["typeid",3]]],[11,"key","","",397,[[]]],[11,"equivalent","","",397,[[]]],[11,"from","","",398,[[]]],[11,"into","","",398,[[]]],[11,"to_owned","","",398,[[]]],[11,"clone_into","","",398,[[]]],[11,"borrow","","",398,[[]]],[11,"borrow_mut","","",398,[[]]],[11,"try_from","","",398,[[],["result",4]]],[11,"try_into","","",398,[[],["result",4]]],[11,"type_id","","",398,[[],["typeid",3]]],[11,"key","","",398,[[]]],[11,"equivalent","","",398,[[]]],[11,"from","","",399,[[]]],[11,"into","","",399,[[]]],[11,"to_owned","","",399,[[]]],[11,"clone_into","","",399,[[]]],[11,"borrow","","",399,[[]]],[11,"borrow_mut","","",399,[[]]],[11,"try_from","","",399,[[],["result",4]]],[11,"try_into","","",399,[[],["result",4]]],[11,"type_id","","",399,[[],["typeid",3]]],[11,"key","","",399,[[]]],[11,"equivalent","","",399,[[]]],[11,"from","","",400,[[]]],[11,"into","","",400,[[]]],[11,"to_owned","","",400,[[]]],[11,"clone_into","","",400,[[]]],[11,"borrow","","",400,[[]]],[11,"borrow_mut","","",400,[[]]],[11,"try_from","","",400,[[],["result",4]]],[11,"try_into","","",400,[[],["result",4]]],[11,"type_id","","",400,[[],["typeid",3]]],[11,"key","","",400,[[]]],[11,"equivalent","","",400,[[]]],[11,"from","","",401,[[]]],[11,"into","","",401,[[]]],[11,"to_owned","","",401,[[]]],[11,"clone_into","","",401,[[]]],[11,"borrow","","",401,[[]]],[11,"borrow_mut","","",401,[[]]],[11,"try_from","","",401,[[],["result",4]]],[11,"try_into","","",401,[[],["result",4]]],[11,"type_id","","",401,[[],["typeid",3]]],[11,"key","","",401,[[]]],[11,"equivalent","","",401,[[]]],[11,"from","","",402,[[]]],[11,"into","","",402,[[]]],[11,"to_owned","","",402,[[]]],[11,"clone_into","","",402,[[]]],[11,"borrow","","",402,[[]]],[11,"borrow_mut","","",402,[[]]],[11,"try_from","","",402,[[],["result",4]]],[11,"try_into","","",402,[[],["result",4]]],[11,"type_id","","",402,[[],["typeid",3]]],[11,"key","","",402,[[]]],[11,"equivalent","","",402,[[]]],[11,"from","","",403,[[]]],[11,"into","","",403,[[]]],[11,"to_owned","","",403,[[]]],[11,"clone_into","","",403,[[]]],[11,"borrow","","",403,[[]]],[11,"borrow_mut","","",403,[[]]],[11,"try_from","","",403,[[],["result",4]]],[11,"try_into","","",403,[[],["result",4]]],[11,"type_id","","",403,[[],["typeid",3]]],[11,"key","","",403,[[]]],[11,"equivalent","","",403,[[]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"to_owned","","",274,[[]]],[11,"clone_into","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"equivalent","","",274,[[]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"to_owned","","",275,[[]]],[11,"clone_into","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"to_owned","","",276,[[]]],[11,"clone_into","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"equivalent","","",276,[[]]],[11,"from","","",277,[[]]],[11,"into","","",277,[[]]],[11,"to_owned","","",277,[[]]],[11,"clone_into","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"equivalent","","",277,[[]]],[11,"from","","",278,[[]]],[11,"into","","",278,[[]]],[11,"to_owned","","",278,[[]]],[11,"clone_into","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"equivalent","","",278,[[]]],[11,"from","","",279,[[]]],[11,"into","","",279,[[]]],[11,"to_owned","","",279,[[]]],[11,"clone_into","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"equivalent","","",279,[[]]],[11,"from","","",280,[[]]],[11,"into","","",280,[[]]],[11,"to_owned","","",280,[[]]],[11,"clone_into","","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"equivalent","","",280,[[]]],[11,"from","","",281,[[]]],[11,"into","","",281,[[]]],[11,"to_owned","","",281,[[]]],[11,"clone_into","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"equivalent","","",281,[[]]],[11,"from","wasmtime_environ","",292,[[]]],[11,"into","","",292,[[]]],[11,"to_owned","","",292,[[]]],[11,"clone_into","","",292,[[]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"try_into","","",292,[[],["result",4]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"from","","",293,[[]]],[11,"into","","",293,[[]]],[11,"to_owned","","",293,[[]]],[11,"clone_into","","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"from","","",295,[[]]],[11,"into","","",295,[[]]],[11,"to_owned","","",295,[[]]],[11,"clone_into","","",295,[[]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"try_into","","",295,[[],["result",4]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"from","","",296,[[]]],[11,"into","","",296,[[]]],[11,"to_owned","","",296,[[]]],[11,"clone_into","","",296,[[]]],[11,"borrow","","",296,[[]]],[11,"borrow_mut","","",296,[[]]],[11,"try_from","","",296,[[],["result",4]]],[11,"try_into","","",296,[[],["result",4]]],[11,"type_id","","",296,[[],["typeid",3]]],[11,"from","","",297,[[]]],[11,"into","","",297,[[]]],[11,"to_owned","","",297,[[]]],[11,"clone_into","","",297,[[]]],[11,"borrow","","",297,[[]]],[11,"borrow_mut","","",297,[[]]],[11,"try_from","","",297,[[],["result",4]]],[11,"try_into","","",297,[[],["result",4]]],[11,"type_id","","",297,[[],["typeid",3]]],[11,"from","","",298,[[]]],[11,"into","","",298,[[]]],[11,"to_owned","","",298,[[]]],[11,"clone_into","","",298,[[]]],[11,"borrow","","",298,[[]]],[11,"borrow_mut","","",298,[[]]],[11,"try_from","","",298,[[],["result",4]]],[11,"try_into","","",298,[[],["result",4]]],[11,"type_id","","",298,[[],["typeid",3]]],[11,"from","","",299,[[]]],[11,"into","","",299,[[]]],[11,"to_owned","","",299,[[]]],[11,"clone_into","","",299,[[]]],[11,"borrow","","",299,[[]]],[11,"borrow_mut","","",299,[[]]],[11,"try_from","","",299,[[],["result",4]]],[11,"try_into","","",299,[[],["result",4]]],[11,"type_id","","",299,[[],["typeid",3]]],[11,"from","","",300,[[]]],[11,"into","","",300,[[]]],[11,"to_owned","","",300,[[]]],[11,"clone_into","","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"from","","",305,[[]]],[11,"into","","",305,[[]]],[11,"to_owned","","",305,[[]]],[11,"clone_into","","",305,[[]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"try_into","","",305,[[],["result",4]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"to_owned","","",306,[[]]],[11,"clone_into","","",306,[[]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"try_into","","",306,[[],["result",4]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"from","","",307,[[]]],[11,"into","","",307,[[]]],[11,"to_owned","","",307,[[]]],[11,"clone_into","","",307,[[]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"try_into","","",307,[[],["result",4]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"from","","",308,[[]]],[11,"into","","",308,[[]]],[11,"to_owned","","",308,[[]]],[11,"clone_into","","",308,[[]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"try_into","","",308,[[],["result",4]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"from","","",404,[[]]],[11,"into","","",404,[[]]],[11,"borrow","","",404,[[]]],[11,"borrow_mut","","",404,[[]]],[11,"try_from","","",404,[[],["result",4]]],[11,"try_into","","",404,[[],["result",4]]],[11,"type_id","","",404,[[],["typeid",3]]],[11,"from","","",309,[[]]],[11,"into","","",309,[[]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"from","","",310,[[]]],[11,"into","","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from","","",311,[[]]],[11,"into","","",311,[[]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"try_into","","",311,[[],["result",4]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"from","","",312,[[]]],[11,"into","","",312,[[]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"try_into","","",312,[[],["result",4]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"from","","",313,[[]]],[11,"into","","",313,[[]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"from","","",314,[[]]],[11,"into","","",314,[[]]],[11,"borrow","","",314,[[]]],[11,"borrow_mut","","",314,[[]]],[11,"try_from","","",314,[[],["result",4]]],[11,"try_into","","",314,[[],["result",4]]],[11,"type_id","","",314,[[],["typeid",3]]],[11,"from","","",315,[[]]],[11,"into","","",315,[[]]],[11,"to_owned","","",315,[[]]],[11,"clone_into","","",315,[[]]],[11,"borrow","","",315,[[]]],[11,"borrow_mut","","",315,[[]]],[11,"try_from","","",315,[[],["result",4]]],[11,"try_into","","",315,[[],["result",4]]],[11,"type_id","","",315,[[],["typeid",3]]],[11,"from","","",316,[[]]],[11,"into","","",316,[[]]],[11,"borrow","","",316,[[]]],[11,"borrow_mut","","",316,[[]]],[11,"try_from","","",316,[[],["result",4]]],[11,"try_into","","",316,[[],["result",4]]],[11,"type_id","","",316,[[],["typeid",3]]],[11,"from","","",317,[[]]],[11,"into","","",317,[[]]],[11,"to_owned","","",317,[[]]],[11,"clone_into","","",317,[[]]],[11,"borrow","","",317,[[]]],[11,"borrow_mut","","",317,[[]]],[11,"try_from","","",317,[[],["result",4]]],[11,"try_into","","",317,[[],["result",4]]],[11,"type_id","","",317,[[],["typeid",3]]],[11,"from","","",318,[[]]],[11,"into","","",318,[[]]],[11,"borrow","","",318,[[]]],[11,"borrow_mut","","",318,[[]]],[11,"try_from","","",318,[[],["result",4]]],[11,"try_into","","",318,[[],["result",4]]],[11,"type_id","","",318,[[],["typeid",3]]],[11,"from","","",405,[[]]],[11,"into","","",405,[[]]],[11,"to_owned","","",405,[[]]],[11,"clone_into","","",405,[[]]],[11,"borrow","","",405,[[]]],[11,"borrow_mut","","",405,[[]]],[11,"try_from","","",405,[[],["result",4]]],[11,"try_into","","",405,[[],["result",4]]],[11,"type_id","","",405,[[],["typeid",3]]],[11,"index","wasmtime_environ::ir","",6,[[["stackslot",3]],["stackslotdata",3]]],[11,"index_mut","","",6,[[["stackslot",3]],["stackslotdata",3]]],[11,"set","wasmtime_environ::isa","",328,[[],[["result",4],["seterror",4]]]],[11,"enable","","",328,[[],[["result",4],["seterror",4]]]],[11,"enable","wasmtime_environ::settings","",324,[[],[["result",4],["seterror",4]]]],[11,"set","","",324,[[],[["result",4],["seterror",4]]]],[11,"eq","wasmtime_environ::isa::unwind::systemv","",326,[[["unwindinfo",3]]]],[11,"ne","","",326,[[["unwindinfo",3]]]],[11,"eq","wasmtime_environ::ir","",4,[[["libcall",4]]]],[11,"eq","","",2,[[["argumentpurpose",4]]]],[11,"ne","","",2,[[["argumentpurpose",4]]]],[11,"eq","wasmtime_environ::isa::unwind::systemv","",12,[[["registermappingerror",4]]]],[11,"ne","","",12,[[["registermappingerror",4]]]],[11,"eq","wasmtime_environ::ir","",323,[[["valuelabel",3]]]],[11,"ne","","",323,[[["valuelabel",3]]]],[11,"eq","","",8,[[["valueloc",4]]]],[11,"ne","","",8,[[["valueloc",4]]]],[11,"eq","","",1,[[["abiparam",3]]]],[11,"ne","","",1,[[["abiparam",3]]]],[11,"eq","wasmtime_environ::isa","",21,[[["callconv",4]]]],[11,"eq","wasmtime_environ::isa::unwind::winx64","",327,[[["unwindinfo",3]]]],[11,"ne","","",327,[[["unwindinfo",3]]]],[11,"eq","wasmtime_environ::ir","",322,[[["sourceloc",3]]]],[11,"ne","","",322,[[["sourceloc",3]]]],[11,"eq","","",3,[[["labelvalueloc",4]]]],[11,"ne","","",3,[[["labelvalueloc",4]]]],[11,"eq","wasmtime_environ::isa::unwind::input","",14,[[["unwindcode",4]]]],[11,"ne","","",14,[[["unwindcode",4]]]],[11,"eq","wasmtime_environ::ir","",5,[[["signature",3]]]],[11,"ne","","",5,[[["signature",3]]]],[11,"eq","","",0,[[["reloc",4]]]],[11,"eq","","",9,[[["valuelocrange",3]]]],[11,"ne","","",9,[[["valuelocrange",3]]]],[11,"eq","wasmtime_environ::settings","",11,[[["seterror",4]]]],[11,"ne","","",11,[[["seterror",4]]]],[11,"eq","wasmtime_environ::ir","",6,[[["stackslots",3]]]],[11,"ne","","",6,[[["stackslots",3]]]],[11,"eq","","",321,[[["type",3]]]],[11,"ne","","",321,[[["type",3]]]],[11,"eq","","",320,[[["stackmap",3]]]],[11,"ne","","",320,[[["stackmap",3]]]],[11,"eq","wasmtime_environ::isa::unwind","",13,[[["unwindinfo",4]]]],[11,"ne","","",13,[[["unwindinfo",4]]]],[11,"eq","wasmtime_environ::isa::unwind::input","",20,[[["unwindinfo",3]]]],[11,"ne","","",20,[[["unwindinfo",3]]]],[11,"eq","wasmtime_environ::ir","",7,[[["trapcode",4]]]],[11,"ne","","",7,[[["trapcode",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",323,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_environ::isa::unwind::systemv","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_environ::settings","",325,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_environ::ir","Display trait implementation drops the arch, since its…",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_environ::isa","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_environ::ir","",321,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_environ::settings","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_environ::ir","",322,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",320,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",321,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",323,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_environ::isa::unwind::input","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_environ::ir","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_environ::isa::unwind::systemv","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_environ::ir","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_environ::isa::unwind::systemv","",326,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_environ::isa::unwind","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_environ::settings","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_environ::isa","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_environ::ir","",322,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_environ::isa::unwind::winx64","",327,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_environ::isa::unwind::input","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deserialize","wasmtime_environ::ir","",321,[[],[["result",4],["type",3]]]],[11,"deserialize","wasmtime_environ::isa::unwind","",13,[[],[["result",4],["unwindinfo",4]]]],[11,"deserialize","wasmtime_environ::isa::unwind::input","",20,[[],[["result",4],["unwindinfo",3]]]],[11,"deserialize","wasmtime_environ::ir","",322,[[],[["result",4],["sourceloc",3]]]],[11,"deserialize","","",9,[[],[["result",4],["valuelocrange",3]]]],[11,"deserialize","","",0,[[],[["result",4],["reloc",4]]]],[11,"deserialize","","",323,[[],[["result",4],["valuelabel",3]]]],[11,"deserialize","","",2,[[],[["result",4],["argumentpurpose",4]]]],[11,"deserialize","","",6,[[],[["result",4],["stackslots",3]]]],[11,"deserialize","","",1,[[],[["abiparam",3],["result",4]]]],[11,"deserialize","","",7,[[],[["trapcode",4],["result",4]]]],[11,"deserialize","wasmtime_environ::isa::unwind::winx64","",327,[[],[["unwindinfo",3],["result",4]]]],[11,"deserialize","wasmtime_environ::ir","",320,[[],[["result",4],["stackmap",3]]]],[11,"deserialize","","",4,[[],[["result",4],["libcall",4]]]],[11,"deserialize","wasmtime_environ::isa::unwind::input","",14,[[],[["result",4],["unwindcode",4]]]],[11,"deserialize","wasmtime_environ::isa","",21,[[],[["callconv",4],["result",4]]]],[11,"deserialize","wasmtime_environ::ir","",3,[[],[["result",4],["labelvalueloc",4]]]],[11,"deserialize","","",8,[[],[["result",4],["valueloc",4]]]],[11,"deserialize","","",5,[[],[["result",4],["signature",3]]]],[11,"deserialize","wasmtime_environ::isa::unwind::systemv","",326,[[],[["unwindinfo",3],["result",4]]]],[11,"default","wasmtime_environ::ir","",8,[[],["valueloc",4]]],[11,"default","","",6,[[],["stackslots",3]]],[11,"default","","",322,[[],["sourceloc",3]]],[11,"default","","",321,[[],["type",3]]],[11,"clone","","",8,[[],["valueloc",4]]],[11,"clone","wasmtime_environ::settings","",325,[[],["flags",3]]],[11,"clone","wasmtime_environ::isa::unwind::winx64","",327,[[],["unwindinfo",3]]],[11,"clone","wasmtime_environ::isa","",328,[[],["builder",3]]],[11,"clone","wasmtime_environ::ir","",1,[[],["abiparam",3]]],[11,"clone","","",322,[[],["sourceloc",3]]],[11,"clone","","",9,[[],["valuelocrange",3]]],[11,"clone","","",0,[[],["reloc",4]]],[11,"clone","wasmtime_environ::isa::unwind::input","",20,[[],["unwindinfo",3]]],[11,"clone","wasmtime_environ::ir","",321,[[],["type",3]]],[11,"clone","","",323,[[],["valuelabel",3]]],[11,"clone","","",4,[[],["libcall",4]]],[11,"clone","","",6,[[],["stackslots",3]]],[11,"clone","wasmtime_environ::isa","",22,[[],["targetfrontendconfig",3]]],[11,"clone","wasmtime_environ::isa::unwind::systemv","",326,[[],["unwindinfo",3]]],[11,"clone","wasmtime_environ::isa::unwind::input","",14,[[],["unwindcode",4]]],[11,"clone","wasmtime_environ::ir","",2,[[],["argumentpurpose",4]]],[11,"clone","wasmtime_environ::isa","",21,[[],["callconv",4]]],[11,"clone","wasmtime_environ::ir","",320,[[],["stackmap",3]]],[11,"clone","","",5,[[],["signature",3]]],[11,"clone","","",3,[[],["labelvalueloc",4]]],[11,"clone","","",7,[[],["trapcode",4]]],[11,"clone","wasmtime_environ::isa::unwind","",13,[[],["unwindinfo",4]]],[11,"clone","wasmtime_environ::settings","",324,[[],["builder",3]]],[11,"reserved_value","wasmtime_environ::ir","",323,[[],["valuelabel",3]]],[11,"is_reserved_value","","",323,[[]]],[11,"hash","","",323,[[]]],[11,"hash","","",5,[[]]],[11,"hash","wasmtime_environ::settings","",324,[[]]],[11,"hash","","",325,[[]]],[11,"hash","wasmtime_environ::isa","",22,[[]]],[11,"hash","wasmtime_environ::ir","",1,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",7,[[]]],[11,"hash","wasmtime_environ::isa","",21,[[]]],[11,"hash","wasmtime_environ::ir","",321,[[]]],[11,"from_str","","",2,[[],[["argumentpurpose",4],["result",4]]]],[11,"from_str","","",7,[[],[["result",4],["trapcode",4]]]],[11,"from_str","","",4,[[],[["result",4],["libcall",4]]]],[11,"from_str","wasmtime_environ::isa","",21,[[],[["callconv",4],["result",4]]]],[11,"from","wasmtime_environ::ir","",3,[[["valueloc",4]],["labelvalueloc",4]]],[11,"from","","",3,[[["valueloc",4]],["labelvalueloc",4]]],[11,"new","","",323,[[],["valuelabel",3]]],[11,"index","","",323,[[]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","wasmtime_environ::isa","",21,[[],["result",4]]],[11,"serialize","wasmtime_environ::ir","",321,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","wasmtime_environ::isa::unwind::systemv","",326,[[],["result",4]]],[11,"serialize","wasmtime_environ::ir","",323,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",320,[[],["result",4]]],[11,"serialize","wasmtime_environ::isa::unwind","",13,[[],["result",4]]],[11,"serialize","wasmtime_environ::ir","",6,[[],["result",4]]],[11,"serialize","wasmtime_environ::isa::unwind::input","",14,[[],["result",4]]],[11,"serialize","wasmtime_environ::ir","",322,[[],["result",4]]],[11,"serialize","wasmtime_environ::isa::unwind::winx64","",327,[[],["result",4]]],[11,"serialize","wasmtime_environ::ir","",9,[[],["result",4]]],[11,"serialize","wasmtime_environ::isa::unwind::input","",20,[[],["result",4]]],[11,"index","wasmtime_environ::entity","",331,[[]]],[11,"index","","",330,[[]]],[11,"fmt","","",330,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",331,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_environ::entity::packed_option","",329,[[["formatter",3]],[["error",3],["result",4]]]],[11,"into","","",329,[[],["option",4]]],[11,"deserialize","wasmtime_environ::entity","",331,[[],[["primarymap",3],["result",4]]]],[11,"index_mut","","",330,[[]]],[11,"index_mut","","",331,[[]]],[11,"from","wasmtime_environ::entity::packed_option","Convert `t` into a packed `Some(x)`.",329,[[],["packedoption",3]]],[11,"from","","Convert an option into its packed equivalent.",329,[[["option",4]],["packedoption",3]]],[11,"cmp","","",329,[[["packedoption",3]],["ordering",4]]],[11,"serialize","wasmtime_environ::entity","",331,[[],["result",4]]],[11,"default","wasmtime_environ::entity::packed_option","Create a default packed option representing `None`.",329,[[],["packedoption",3]]],[11,"default","wasmtime_environ::entity","",331,[[],["primarymap",3]]],[11,"partial_cmp","wasmtime_environ::entity::packed_option","",329,[[["packedoption",3]],[["ordering",4],["option",4]]]],[11,"lt","","",329,[[["packedoption",3]]]],[11,"le","","",329,[[["packedoption",3]]]],[11,"gt","","",329,[[["packedoption",3]]]],[11,"ge","","",329,[[["packedoption",3]]]],[11,"eq","","",329,[[["packedoption",3]]]],[11,"ne","","",329,[[["packedoption",3]]]],[11,"eq","wasmtime_environ::entity","",331,[[["primarymap",3]]]],[11,"ne","","",331,[[["primarymap",3]]]],[11,"clone","wasmtime_environ::entity::packed_option","",329,[[],["packedoption",3]]],[11,"clone","wasmtime_environ::entity","",331,[[],["primarymap",3]]],[11,"clone","","",330,[[],["boxedslice",3]]],[11,"from_iter","","",331,[[],["primarymap",3]]],[11,"into_iter","","",331,[[]]],[11,"hash","wasmtime_environ::entity::packed_option","",329,[[]]],[11,"hash","wasmtime_environ::entity","",331,[[]]],[11,"reserved_value","wasmtime_environ::wasm","",395,[[],["signatureindex",3]]],[11,"is_reserved_value","","",395,[[]]],[11,"reserved_value","","",387,[[],["funcindex",3]]],[11,"is_reserved_value","","",387,[[]]],[11,"reserved_value","","",400,[[],["instanceindex",3]]],[11,"is_reserved_value","","",400,[[]]],[11,"reserved_value","","",396,[[],["dataindex",3]]],[11,"is_reserved_value","","",396,[[]]],[11,"reserved_value","","",398,[[],["typeindex",3]]],[11,"is_reserved_value","","",398,[[]]],[11,"reserved_value","","",397,[[],["elemindex",3]]],[11,"is_reserved_value","","",397,[[]]],[11,"reserved_value","","",401,[[],["eventindex",3]]],[11,"is_reserved_value","","",401,[[]]],[11,"reserved_value","","",388,[[],["definedfuncindex",3]]],[11,"is_reserved_value","","",388,[[]]],[11,"reserved_value","","",390,[[],["definedmemoryindex",3]]],[11,"is_reserved_value","","",390,[[]]],[11,"reserved_value","","",402,[[],["moduletypeindex",3]]],[11,"is_reserved_value","","",402,[[]]],[11,"reserved_value","","",399,[[],["moduleindex",3]]],[11,"is_reserved_value","","",399,[[]]],[11,"reserved_value","","",389,[[],["definedtableindex",3]]],[11,"is_reserved_value","","",389,[[]]],[11,"reserved_value","","",393,[[],["globalindex",3]]],[11,"is_reserved_value","","",393,[[]]],[11,"reserved_value","","",392,[[],["tableindex",3]]],[11,"is_reserved_value","","",392,[[]]],[11,"reserved_value","","",403,[[],["instancetypeindex",3]]],[11,"is_reserved_value","","",403,[[]]],[11,"reserved_value","","",394,[[],["memoryindex",3]]],[11,"is_reserved_value","","",394,[[]]],[11,"reserved_value","","",391,[[],["definedglobalindex",3]]],[11,"is_reserved_value","","",391,[[]]],[11,"fmt","","",389,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",394,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",274,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",402,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",275,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",391,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",281,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",403,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",399,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",390,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",280,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",387,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",397,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",334,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",401,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",398,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",276,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",279,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",395,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",396,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",393,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",392,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",277,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",400,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",388,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",278,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","Convert from a `BinaryReaderError` to a `WasmError`.",37,[[["binaryreadererror",3]],["wasmerror",4]]],[11,"from","wasmtime_environ::wasm::wasmparser","",67,[[["wasmtype",4]],["type",4]]],[11,"cmp","wasmtime_environ::wasm","",394,[[["memoryindex",3]],["ordering",4]]],[11,"cmp","","",392,[[["tableindex",3]],["ordering",4]]],[11,"cmp","","",395,[[["signatureindex",3]],["ordering",4]]],[11,"cmp","","",401,[[["eventindex",3]],["ordering",4]]],[11,"cmp","","",390,[[["definedmemoryindex",3]],["ordering",4]]],[11,"cmp","","",403,[[["instancetypeindex",3]],["ordering",4]]],[11,"cmp","","",391,[[["definedglobalindex",3]],["ordering",4]]],[11,"cmp","","",399,[[["moduleindex",3]],["ordering",4]]],[11,"cmp","","",389,[[["definedtableindex",3]],["ordering",4]]],[11,"cmp","","",393,[[["globalindex",3]],["ordering",4]]],[11,"cmp","","",397,[[["elemindex",3]],["ordering",4]]],[11,"cmp","","",388,[[["definedfuncindex",3]],["ordering",4]]],[11,"cmp","","",402,[[["moduletypeindex",3]],["ordering",4]]],[11,"cmp","","",400,[[["instanceindex",3]],["ordering",4]]],[11,"cmp","","",274,[[["entityindex",4]],["ordering",4]]],[11,"cmp","","",387,[[["funcindex",3]],["ordering",4]]],[11,"cmp","","",396,[[["dataindex",3]],["ordering",4]]],[11,"cmp","","",398,[[["typeindex",3]],["ordering",4]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"try_from","","",40,[[["type",4]],[["result",4],["wasmtype",4]]]],[11,"try_from","","",39,[[["functype",3]],[["result",4],["wasmfunctype",3]]]],[11,"partial_cmp","","",389,[[["definedtableindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",389,[[["definedtableindex",3]]]],[11,"le","","",389,[[["definedtableindex",3]]]],[11,"gt","","",389,[[["definedtableindex",3]]]],[11,"ge","","",389,[[["definedtableindex",3]]]],[11,"partial_cmp","","",401,[[["eventindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",401,[[["eventindex",3]]]],[11,"le","","",401,[[["eventindex",3]]]],[11,"gt","","",401,[[["eventindex",3]]]],[11,"ge","","",401,[[["eventindex",3]]]],[11,"partial_cmp","","",397,[[["elemindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",397,[[["elemindex",3]]]],[11,"le","","",397,[[["elemindex",3]]]],[11,"gt","","",397,[[["elemindex",3]]]],[11,"ge","","",397,[[["elemindex",3]]]],[11,"partial_cmp","","",391,[[["definedglobalindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",391,[[["definedglobalindex",3]]]],[11,"le","","",391,[[["definedglobalindex",3]]]],[11,"gt","","",391,[[["definedglobalindex",3]]]],[11,"ge","","",391,[[["definedglobalindex",3]]]],[11,"partial_cmp","","",274,[[["entityindex",4]],[["ordering",4],["option",4]]]],[11,"lt","","",274,[[["entityindex",4]]]],[11,"le","","",274,[[["entityindex",4]]]],[11,"gt","","",274,[[["entityindex",4]]]],[11,"ge","","",274,[[["entityindex",4]]]],[11,"partial_cmp","","",402,[[["moduletypeindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",402,[[["moduletypeindex",3]]]],[11,"le","","",402,[[["moduletypeindex",3]]]],[11,"gt","","",402,[[["moduletypeindex",3]]]],[11,"ge","","",402,[[["moduletypeindex",3]]]],[11,"partial_cmp","","",396,[[["dataindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",396,[[["dataindex",3]]]],[11,"le","","",396,[[["dataindex",3]]]],[11,"gt","","",396,[[["dataindex",3]]]],[11,"ge","","",396,[[["dataindex",3]]]],[11,"partial_cmp","","",387,[[["funcindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",387,[[["funcindex",3]]]],[11,"le","","",387,[[["funcindex",3]]]],[11,"gt","","",387,[[["funcindex",3]]]],[11,"ge","","",387,[[["funcindex",3]]]],[11,"partial_cmp","","",390,[[["definedmemoryindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",390,[[["definedmemoryindex",3]]]],[11,"le","","",390,[[["definedmemoryindex",3]]]],[11,"gt","","",390,[[["definedmemoryindex",3]]]],[11,"ge","","",390,[[["definedmemoryindex",3]]]],[11,"partial_cmp","","",395,[[["signatureindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",395,[[["signatureindex",3]]]],[11,"le","","",395,[[["signatureindex",3]]]],[11,"gt","","",395,[[["signatureindex",3]]]],[11,"ge","","",395,[[["signatureindex",3]]]],[11,"partial_cmp","","",400,[[["instanceindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",400,[[["instanceindex",3]]]],[11,"le","","",400,[[["instanceindex",3]]]],[11,"gt","","",400,[[["instanceindex",3]]]],[11,"ge","","",400,[[["instanceindex",3]]]],[11,"partial_cmp","","",403,[[["instancetypeindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",403,[[["instancetypeindex",3]]]],[11,"le","","",403,[[["instancetypeindex",3]]]],[11,"gt","","",403,[[["instancetypeindex",3]]]],[11,"ge","","",403,[[["instancetypeindex",3]]]],[11,"partial_cmp","","",392,[[["tableindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",392,[[["tableindex",3]]]],[11,"le","","",392,[[["tableindex",3]]]],[11,"gt","","",392,[[["tableindex",3]]]],[11,"ge","","",392,[[["tableindex",3]]]],[11,"partial_cmp","","",398,[[["typeindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",398,[[["typeindex",3]]]],[11,"le","","",398,[[["typeindex",3]]]],[11,"gt","","",398,[[["typeindex",3]]]],[11,"ge","","",398,[[["typeindex",3]]]],[11,"partial_cmp","","",393,[[["globalindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",393,[[["globalindex",3]]]],[11,"le","","",393,[[["globalindex",3]]]],[11,"gt","","",393,[[["globalindex",3]]]],[11,"ge","","",393,[[["globalindex",3]]]],[11,"partial_cmp","","",394,[[["memoryindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",394,[[["memoryindex",3]]]],[11,"le","","",394,[[["memoryindex",3]]]],[11,"gt","","",394,[[["memoryindex",3]]]],[11,"ge","","",394,[[["memoryindex",3]]]],[11,"partial_cmp","","",388,[[["definedfuncindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",388,[[["definedfuncindex",3]]]],[11,"le","","",388,[[["definedfuncindex",3]]]],[11,"gt","","",388,[[["definedfuncindex",3]]]],[11,"ge","","",388,[[["definedfuncindex",3]]]],[11,"partial_cmp","","",399,[[["moduleindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",399,[[["moduleindex",3]]]],[11,"le","","",399,[[["moduleindex",3]]]],[11,"gt","","",399,[[["moduleindex",3]]]],[11,"ge","","",399,[[["moduleindex",3]]]],[11,"target_config","","",30,[[],["targetfrontendconfig",3]]],[11,"deserialize","","",39,[[],[["result",4],["wasmfunctype",3]]]],[11,"deserialize","","",274,[[],[["result",4],["entityindex",4]]]],[11,"deserialize","","",403,[[],[["instancetypeindex",3],["result",4]]]],[11,"deserialize","","",279,[[],[["result",4],["tableelementtype",4]]]],[11,"deserialize","","",397,[[],[["result",4],["elemindex",3]]]],[11,"deserialize","","",398,[[],[["typeindex",3],["result",4]]]],[11,"deserialize","","",276,[[],[["result",4],["global",3]]]],[11,"deserialize","","",280,[[],[["memory",3],["result",4]]]],[11,"deserialize","","",387,[[],[["result",4],["funcindex",3]]]],[11,"deserialize","","",400,[[],[["result",4],["instanceindex",3]]]],[11,"deserialize","","",40,[[],[["wasmtype",4],["result",4]]]],[11,"deserialize","","",402,[[],[["result",4],["moduletypeindex",3]]]],[11,"deserialize","","",278,[[],[["result",4],["table",3]]]],[11,"deserialize","","",393,[[],[["globalindex",3],["result",4]]]],[11,"deserialize","","",392,[[],[["result",4],["tableindex",3]]]],[11,"deserialize","","",277,[[],[["result",4],["globalinit",4]]]],[11,"deserialize","","",275,[[],[["entitytype",4],["result",4]]]],[11,"deserialize","","",395,[[],[["result",4],["signatureindex",3]]]],[11,"deserialize","","",399,[[],[["moduleindex",3],["result",4]]]],[11,"deserialize","","",396,[[],[["result",4],["dataindex",3]]]],[11,"deserialize","","",281,[[],[["result",4],["event",3]]]],[11,"deserialize","","",394,[[],[["memoryindex",3],["result",4]]]],[11,"deserialize","","",401,[[],[["eventindex",3],["result",4]]]],[11,"new","","",392,[[],["tableindex",3]]],[11,"index","","",392,[[]]],[11,"new","","",389,[[],["definedtableindex",3]]],[11,"index","","",389,[[]]],[11,"new","","",398,[[],["typeindex",3]]],[11,"index","","",398,[[]]],[11,"new","","",388,[[],["definedfuncindex",3]]],[11,"index","","",388,[[]]],[11,"new","","",387,[[],["funcindex",3]]],[11,"index","","",387,[[]]],[11,"new","","",390,[[],["definedmemoryindex",3]]],[11,"index","","",390,[[]]],[11,"new","","",403,[[],["instancetypeindex",3]]],[11,"index","","",403,[[]]],[11,"new","","",402,[[],["moduletypeindex",3]]],[11,"index","","",402,[[]]],[11,"new","","",391,[[],["definedglobalindex",3]]],[11,"index","","",391,[[]]],[11,"new","","",394,[[],["memoryindex",3]]],[11,"index","","",394,[[]]],[11,"new","","",395,[[],["signatureindex",3]]],[11,"index","","",395,[[]]],[11,"new","","",399,[[],["moduleindex",3]]],[11,"index","","",399,[[]]],[11,"new","","",401,[[],["eventindex",3]]],[11,"index","","",401,[[]]],[11,"new","","",393,[[],["globalindex",3]]],[11,"index","","",393,[[]]],[11,"new","","",400,[[],["instanceindex",3]]],[11,"index","","",400,[[]]],[11,"new","","",396,[[],["dataindex",3]]],[11,"index","","",396,[[]]],[11,"new","","",397,[[],["elemindex",3]]],[11,"index","","",397,[[]]],[11,"eq","","",281,[[["event",3]]]],[11,"ne","","",281,[[["event",3]]]],[11,"eq","","",277,[[["globalinit",4]]]],[11,"ne","","",277,[[["globalinit",4]]]],[11,"eq","","",398,[[["typeindex",3]]]],[11,"ne","","",398,[[["typeindex",3]]]],[11,"eq","","",399,[[["moduleindex",3]]]],[11,"ne","","",399,[[["moduleindex",3]]]],[11,"eq","","",35,[[["returnmode",4]]]],[11,"eq","","",387,[[["funcindex",3]]]],[11,"ne","","",387,[[["funcindex",3]]]],[11,"eq","","",274,[[["entityindex",4]]]],[11,"ne","","",274,[[["entityindex",4]]]],[11,"eq","","",392,[[["tableindex",3]]]],[11,"ne","","",392,[[["tableindex",3]]]],[11,"eq","","",40,[[["wasmtype",4]]]],[11,"eq","","",391,[[["definedglobalindex",3]]]],[11,"ne","","",391,[[["definedglobalindex",3]]]],[11,"eq","","",280,[[["memory",3]]]],[11,"ne","","",280,[[["memory",3]]]],[11,"eq","","",39,[[["wasmfunctype",3]]]],[11,"ne","","",39,[[["wasmfunctype",3]]]],[11,"eq","","",403,[[["instancetypeindex",3]]]],[11,"ne","","",403,[[["instancetypeindex",3]]]],[11,"eq","","",401,[[["eventindex",3]]]],[11,"ne","","",401,[[["eventindex",3]]]],[11,"eq","","",390,[[["definedmemoryindex",3]]]],[11,"ne","","",390,[[["definedmemoryindex",3]]]],[11,"eq","","",278,[[["table",3]]]],[11,"ne","","",278,[[["table",3]]]],[11,"eq","","",389,[[["definedtableindex",3]]]],[11,"ne","","",389,[[["definedtableindex",3]]]],[11,"eq","","",394,[[["memoryindex",3]]]],[11,"ne","","",394,[[["memoryindex",3]]]],[11,"eq","","",395,[[["signatureindex",3]]]],[11,"ne","","",395,[[["signatureindex",3]]]],[11,"eq","","",388,[[["definedfuncindex",3]]]],[11,"ne","","",388,[[["definedfuncindex",3]]]],[11,"eq","","",396,[[["dataindex",3]]]],[11,"ne","","",396,[[["dataindex",3]]]],[11,"eq","","",402,[[["moduletypeindex",3]]]],[11,"ne","","",402,[[["moduletypeindex",3]]]],[11,"eq","","",276,[[["global",3]]]],[11,"ne","","",276,[[["global",3]]]],[11,"eq","","",397,[[["elemindex",3]]]],[11,"ne","","",397,[[["elemindex",3]]]],[11,"eq","","",279,[[["tableelementtype",4]]]],[11,"ne","","",279,[[["tableelementtype",4]]]],[11,"eq","","",393,[[["globalindex",3]]]],[11,"ne","","",393,[[["globalindex",3]]]],[11,"eq","","",400,[[["instanceindex",3]]]],[11,"ne","","",400,[[["instanceindex",3]]]],[11,"serialize","","",281,[[],["result",4]]],[11,"serialize","","",392,[[],["result",4]]],[11,"serialize","","",395,[[],["result",4]]],[11,"serialize","","",274,[[],["result",4]]],[11,"serialize","","",403,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"serialize","","",397,[[],["result",4]]],[11,"serialize","","",280,[[],["result",4]]],[11,"serialize","","",393,[[],["result",4]]],[11,"serialize","","",387,[[],["result",4]]],[11,"serialize","","",396,[[],["result",4]]],[11,"serialize","","",400,[[],["result",4]]],[11,"serialize","","",399,[[],["result",4]]],[11,"serialize","","",40,[[],["result",4]]],[11,"serialize","","",277,[[],["result",4]]],[11,"serialize","","",394,[[],["result",4]]],[11,"serialize","","",276,[[],["result",4]]],[11,"serialize","","",398,[[],["result",4]]],[11,"serialize","","",275,[[],["result",4]]],[11,"serialize","","",401,[[],["result",4]]],[11,"serialize","","",279,[[],["result",4]]],[11,"serialize","","",278,[[],["result",4]]],[11,"serialize","","",402,[[],["result",4]]],[11,"clone","","",403,[[],["instancetypeindex",3]]],[11,"clone","","",274,[[],["entityindex",4]]],[11,"clone","","",390,[[],["definedmemoryindex",3]]],[11,"clone","","",396,[[],["dataindex",3]]],[11,"clone","","",279,[[],["tableelementtype",4]]],[11,"clone","","",39,[[],["wasmfunctype",3]]],[11,"clone","","",401,[[],["eventindex",3]]],[11,"clone","","",275,[[],["entitytype",4]]],[11,"clone","","",389,[[],["definedtableindex",3]]],[11,"clone","","",391,[[],["definedglobalindex",3]]],[11,"clone","","",402,[[],["moduletypeindex",3]]],[11,"clone","","",388,[[],["definedfuncindex",3]]],[11,"clone","","",278,[[],["table",3]]],[11,"clone","","",276,[[],["global",3]]],[11,"clone","","",392,[[],["tableindex",3]]],[11,"clone","","",395,[[],["signatureindex",3]]],[11,"clone","","",281,[[],["event",3]]],[11,"clone","","",397,[[],["elemindex",3]]],[11,"clone","","",400,[[],["instanceindex",3]]],[11,"clone","","",399,[[],["moduleindex",3]]],[11,"clone","","",32,[[],["globalvariable",4]]],[11,"clone","","",394,[[],["memoryindex",3]]],[11,"clone","","",280,[[],["memory",3]]],[11,"clone","","",398,[[],["typeindex",3]]],[11,"clone","","",393,[[],["globalindex",3]]],[11,"clone","","",40,[[],["wasmtype",4]]],[11,"clone","","",35,[[],["returnmode",4]]],[11,"clone","","",387,[[],["funcindex",3]]],[11,"clone","","",277,[[],["globalinit",4]]],[11,"declare_type_func","","",30,[[["wasmfunctype",3],["signature",3]],[["result",4],["wasmerror",4]]]],[11,"declare_func_import","","",30,[[["typeindex",3],["option",4]],[["result",4],["wasmerror",4]]]],[11,"declare_func_type","","",30,[[["typeindex",3]],[["result",4],["wasmerror",4]]]],[11,"declare_global","","",30,[[["global",3]],[["result",4],["wasmerror",4]]]],[11,"declare_global_import","","",30,[[["global",3],["option",4]],[["result",4],["wasmerror",4]]]],[11,"declare_table","","",30,[[["table",3]],[["result",4],["wasmerror",4]]]],[11,"declare_table_import","","",30,[[["table",3],["option",4]],[["result",4],["wasmerror",4]]]],[11,"declare_table_elements","","",30,[[["tableindex",3],["box",3],["globalindex",3],["global",3],["option",4]],[["result",4],["wasmerror",4]]]],[11,"declare_passive_element","","",30,[[["global",3],["elemindex",3],["box",3]],[["result",4],["wasmerror",4]]]],[11,"declare_passive_data","","",30,[[["dataindex",3]],[["result",4],["wasmerror",4]]]],[11,"declare_memory","","",30,[[["memory",3]],[["result",4],["wasmerror",4]]]],[11,"declare_memory_import","","",30,[[["option",4],["memory",3]],[["result",4],["wasmerror",4]]]],[11,"declare_data_initialization","","",30,[[["globalindex",3],["option",4],["memoryindex",3]],[["result",4],["wasmerror",4]]]],[11,"declare_func_export","","",30,[[["funcindex",3]],[["result",4],["wasmerror",4]]]],[11,"declare_table_export","","",30,[[["tableindex",3]],[["result",4],["wasmerror",4]]]],[11,"declare_memory_export","","",30,[[["memoryindex",3]],[["result",4],["wasmerror",4]]]],[11,"declare_global_export","","",30,[[["globalindex",3]],[["result",4],["wasmerror",4]]]],[11,"declare_start_func","","",30,[[["funcindex",3]],[["result",4],["wasmerror",4]]]],[11,"define_function_body","","",30,[[["funcvalidator",3],["validatorresources",3],["functionbody",3]],[["result",4],["wasmerror",4]]]],[11,"declare_module_name","","",30,[[]]],[11,"declare_func_name","","",30,[[["funcindex",3]]]],[11,"wasm_features","","",30,[[],["wasmfeatures",3]]],[11,"hash","","",396,[[]]],[11,"hash","","",389,[[]]],[11,"hash","","",399,[[]]],[11,"hash","","",390,[[]]],[11,"hash","","",391,[[]]],[11,"hash","","",281,[[]]],[11,"hash","","",398,[[]]],[11,"hash","","",403,[[]]],[11,"hash","","",401,[[]]],[11,"hash","","",280,[[]]],[11,"hash","","",276,[[]]],[11,"hash","","",392,[[]]],[11,"hash","","",402,[[]]],[11,"hash","","",277,[[]]],[11,"hash","","",278,[[]]],[11,"hash","","",393,[[]]],[11,"hash","","",395,[[]]],[11,"hash","","",394,[[]]],[11,"hash","","",274,[[]]],[11,"hash","","",279,[[]]],[11,"hash","","",400,[[]]],[11,"hash","","",388,[[]]],[11,"hash","","",397,[[]]],[11,"hash","","",387,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",40,[[]]],[11,"table_at","wasmtime_environ::wasm::wasmparser","",338,[[],[["option",4],["tabletype",3]]]],[11,"memory_at","","",338,[[],[["option",4],["memorytype",4]]]],[11,"event_at","","",338,[[],["option",4]]],[11,"global_at","","",338,[[],[["option",4],["globaltype",3]]]],[11,"func_type_at","","",338,[[],["option",4]]],[11,"type_of_function","","",338,[[],["option",4]]],[11,"element_type_at","","",338,[[],[["type",4],["option",4]]]],[11,"element_count","","",338,[[]]],[11,"data_count","","",338,[[]]],[11,"is_function_referenced","","",338,[[]]],[11,"eq","","",262,[[["typeorfunctype",4]]]],[11,"ne","","",262,[[["typeorfunctype",4]]]],[11,"eq","","",62,[[["globaltype",3]]]],[11,"ne","","",62,[[["globaltype",3]]]],[11,"eq","","",376,[[["ieee32",3]]]],[11,"ne","","",376,[[["ieee32",3]]]],[11,"eq","","",67,[[["type",4]]]],[11,"eq","","",243,[[["sectioncode",4]]]],[11,"ne","","",243,[[["sectioncode",4]]]],[11,"eq","","",258,[[["resizablelimits",3]]]],[11,"ne","","",258,[[["resizablelimits",3]]]],[11,"eq","","",61,[[["functype",3]]]],[11,"ne","","",61,[[["functype",3]]]],[11,"eq","","",42,[[["range",3]]]],[11,"ne","","",42,[[["range",3]]]],[11,"eq","","",378,[[["v128",3]]]],[11,"ne","","",378,[[["v128",3]]]],[11,"eq","","",248,[[["resizablelimits64",3]]]],[11,"ne","","",248,[[["resizablelimits64",3]]]],[11,"eq","","",63,[[["memorytype",4]]]],[11,"ne","","",63,[[["memorytype",4]]]],[11,"eq","","",66,[[["tabletype",3]]]],[11,"ne","","",66,[[["tabletype",3]]]],[11,"eq","","",377,[[["ieee64",3]]]],[11,"ne","","",377,[[["ieee64",3]]]],[11,"eq","","",261,[[["customsectionkind",4]]]],[11,"eq","","",55,[[["eventtype",3]]]],[11,"ne","","",55,[[["eventtype",3]]]],[11,"into_iter","","",352,[[]]],[11,"into_iter","","",341,[[]]],[11,"into_iter","","",351,[[]]],[11,"into_iter","","",348,[[]]],[11,"into_iter","","",345,[[]]],[11,"into_iter","","",347,[[]]],[11,"into_iter","","",356,[[]]],[11,"into_iter","","",353,[[]]],[11,"into_iter","","",359,[[]]],[11,"into_iter","","",368,[[]]],[11,"into_iter","","",342,[[]]],[11,"into_iter","","",362,[[]]],[11,"into_iter","","Implements iterator over the type section.",349,[[]]],[11,"into_iter","","",350,[[]]],[11,"into_iter","","",346,[[]]],[11,"into_iter","","",344,[[]]],[11,"into_iter","","Reads content of the code section.",385,[[]]],[11,"into_iter","","",365,[[]]],[11,"into_iter","","",380,[[]]],[11,"into_iter","","",340,[[]]],[11,"into_iter","","",367,[[]]],[11,"into_iter","","",358,[[]]],[11,"into_iter","","Implements iterator over the code section.",354,[[]]],[11,"next_back","","",337,[[],["option",4]]],[11,"next_back","","",336,[[],["option",4]]],[11,"get_count","","",345,[[]]],[11,"get_count","","",342,[[]]],[11,"get_count","","",358,[[]]],[11,"get_count","","",344,[[]]],[11,"get_count","","",340,[[]]],[11,"get_count","","",350,[[]]],[11,"get_count","","",368,[[]]],[11,"get_count","","",354,[[]]],[11,"get_count","","",348,[[]]],[11,"get_count","","",352,[[]]],[11,"get_count","","",341,[[]]],[11,"get_count","","",380,[[]]],[11,"get_count","","",347,[[]]],[11,"get_count","","",351,[[]]],[11,"get_count","","",349,[[]]],[11,"get_count","","",359,[[]]],[11,"get_count","","",346,[[]]],[11,"get_count","","",367,[[]]],[11,"cmp","","",261,[[["customsectionkind",4]],["ordering",4]]],[11,"cmp","","",42,[[["range",3]],["ordering",4]]],[11,"cmp","","",243,[[["sectioncode",4]],["ordering",4]]],[11,"len","","",336,[[]]],[11,"len","","",337,[[]]],[11,"fmt","","",273,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",264,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",259,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",271,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",267,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",272,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",383,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",248,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",371,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",269,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",253,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",373,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",270,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",255,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",263,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",339,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",268,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",262,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",384,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",382,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",243,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",335,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",242,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",378,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",266,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",249,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",377,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",379,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",343,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",247,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",381,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",261,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",376,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",258,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",375,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",339,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","","",243,[[["sectioncode",4]],[["ordering",4],["option",4]]]],[11,"lt","","",243,[[["sectioncode",4]]]],[11,"le","","",243,[[["sectioncode",4]]]],[11,"gt","","",243,[[["sectioncode",4]]]],[11,"ge","","",243,[[["sectioncode",4]]]],[11,"partial_cmp","","",42,[[["range",3]],[["ordering",4],["option",4]]]],[11,"lt","","",42,[[["range",3]]]],[11,"le","","",42,[[["range",3]]]],[11,"gt","","",42,[[["range",3]]]],[11,"ge","","",42,[[["range",3]]]],[11,"partial_cmp","","",261,[[["customsectionkind",4]],[["ordering",4],["option",4]]]],[11,"hash","","",68,[[]]],[11,"hash","","",377,[[]]],[11,"hash","","",378,[[]]],[11,"hash","","",376,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",335,[[]]],[11,"next","","",366,[[],["option",4]]],[11,"size_hint","","",366,[[]]],[11,"next","","",363,[[],["option",4]]],[11,"next","","Reads content of the code section with offsets.",364,[[],["option",4]]],[11,"next","","",337,[[],["option",4]]],[11,"size_hint","","",337,[[]]],[11,"next","","",369,[[],["option",4]]],[11,"next","","",370,[[],["option",4]]],[11,"size_hint","","",370,[[]]],[11,"next","","",357,[[],["option",4]]],[11,"size_hint","","",357,[[]]],[11,"next","","",336,[[],["option",4]]],[11,"size_hint","","",336,[[]]],[11,"next","","",355,[[],["option",4]]],[11,"size_hint","","",355,[[]]],[11,"read","","",359,[[],[["binaryreadererror",3],["result",4]]]],[11,"eof","","",359,[[]]],[11,"original_position","","",359,[[]]],[11,"range","","",359,[[],["range",3]]],[11,"read","","",367,[[],[["result",4],["binaryreadererror",3]]]],[11,"eof","","",367,[[]]],[11,"original_position","","",367,[[]]],[11,"range","","",367,[[],["range",3]]],[11,"read","","",342,[[],[["result",4],["binaryreadererror",3]]]],[11,"eof","","",342,[[]]],[11,"original_position","","",342,[[]]],[11,"range","","",342,[[],["range",3]]],[11,"read","","",344,[[],[["result",4],["binaryreadererror",3]]]],[11,"eof","","",344,[[]]],[11,"original_position","","",344,[[]]],[11,"range","","",344,[[],["range",3]]],[11,"read","","",347,[[],[["binaryreadererror",3],["result",4]]]],[11,"eof","","",347,[[]]],[11,"original_position","","",347,[[]]],[11,"range","","",347,[[],["range",3]]],[11,"read","","",352,[[],[["result",4],["binaryreadererror",3]]]],[11,"eof","","",352,[[]]],[11,"original_position","","",352,[[]]],[11,"range","","",352,[[],["range",3]]],[11,"read","","",380,[[],[["result",4],["binaryreadererror",3]]]],[11,"eof","","",380,[[]]],[11,"original_position","","",380,[[]]],[11,"range","","",380,[[],["range",3]]],[11,"read","","",349,[[],[["binaryreadererror",3],["result",4]]]],[11,"eof","","",349,[[]]],[11,"original_position","","",349,[[]]],[11,"range","","",349,[[],["range",3]]],[11,"read","","",362,[[],[["result",4],["binaryreadererror",3]]]],[11,"eof","","",362,[[]]],[11,"original_position","","",362,[[]]],[11,"range","","",362,[[],["range",3]]],[11,"read","","",345,[[],[["result",4],["binaryreadererror",3]]]],[11,"eof","","",345,[[]]],[11,"original_position","","",345,[[]]],[11,"range","","",345,[[],["range",3]]],[11,"read","","",341,[[],[["binaryreadererror",3],["result",4]]]],[11,"eof","","",341,[[]]],[11,"original_position","","",341,[[]]],[11,"range","","",341,[[],["range",3]]],[11,"read","","",348,[[],[["result",4],["binaryreadererror",3]]]],[11,"eof","","",348,[[]]],[11,"original_position","","",348,[[]]],[11,"range","","",348,[[],["range",3]]],[11,"read","","",368,[[],[["result",4],["binaryreadererror",3]]]],[11,"eof","","",368,[[]]],[11,"original_position","","",368,[[]]],[11,"range","","",368,[[],["range",3]]],[11,"read","","",358,[[],[["binaryreadererror",3],["result",4]]]],[11,"eof","","",358,[[]]],[11,"original_position","","",358,[[]]],[11,"range","","",358,[[],["range",3]]],[11,"read","","",354,[[],[["result",4],["binaryreadererror",3]]]],[11,"eof","","",354,[[]]],[11,"original_position","","",354,[[]]],[11,"range","","",354,[[],["range",3]]],[11,"read","","",346,[[],[["binaryreadererror",3],["result",4]]]],[11,"eof","","",346,[[]]],[11,"original_position","","",346,[[]]],[11,"range","","",346,[[],["range",3]]],[11,"read","","",351,[[],[["binaryreadererror",3],["result",4]]]],[11,"eof","","",351,[[]]],[11,"original_position","","",351,[[]]],[11,"range","","",351,[[],["range",3]]],[11,"read","","",340,[[],[["result",4],["binaryreadererror",3]]]],[11,"eof","","",340,[[]]],[11,"original_position","","",340,[[]]],[11,"range","","",340,[[],["range",3]]],[11,"read","","",350,[[],[["result",4],["binaryreadererror",3]]]],[11,"eof","","",350,[[]]],[11,"original_position","","",350,[[]]],[11,"range","","",350,[[],["range",3]]],[11,"len_inputs","","",61,[[]]],[11,"len_outputs","","",61,[[]]],[11,"input_at","","",61,[[],[["type",4],["option",4]]]],[11,"output_at","","",61,[[],[["type",4],["option",4]]]],[11,"default","","",68,[[],["wasmfeatures",3]]],[11,"default","","",386,[[],["validator",3]]],[11,"default","","",373,[[],["parser",3]]],[11,"clone","","",55,[[],["eventtype",3]]],[11,"clone","","",348,[[],["importsectionreader",3]]],[11,"clone","","",336,[[],["wasmfunctypeinputs",3]]],[11,"clone","","",376,[[],["ieee32",3]]],[11,"clone","","",243,[[],["sectioncode",4]]],[11,"clone","","",345,[[],["elementsectionreader",3]]],[11,"clone","","",247,[[],["typedef",4]]],[11,"clone","","",56,[[],["exporttype",3]]],[11,"clone","","",273,[[],["reloc",3]]],[11,"clone","","",63,[[],["memorytype",4]]],[11,"clone","","",384,[[],["localname",3]]],[11,"clone","","",346,[[],["exportsectionreader",3]]],[11,"clone","","",351,[[],["memorysectionreader",3]]],[11,"clone","","",343,[[],["functionbody",3]]],[11,"clone","","",382,[[],["modulename",3]]],[11,"clone","","",377,[[],["ieee64",3]]],[11,"clone","","",335,[[],["binaryreader",3]]],[11,"clone","","",380,[[],["instanceargsreader",3]]],[11,"clone","","",267,[[],["global",3]]],[11,"clone","","",347,[[],["functionsectionreader",3]]],[11,"clone","","",248,[[],["resizablelimits64",3]]],[11,"clone","","",59,[[],["instancetype",3]]],[11,"clone","","",242,[[],["reloctype",4]]],[11,"clone","","",269,[[],["functionlocalname",3]]],[11,"clone","","",253,[[],["datakind",4]]],[11,"clone","","",42,[[],["range",3]]],[11,"clone","","",261,[[],["customsectionkind",4]]],[11,"clone","","",372,[[],["instance",3]]],[11,"clone","","",339,[[],["binaryreadererror",3]]],[11,"clone","","",352,[[],["tablesectionreader",3]]],[11,"clone","","",61,[[],["functype",3]]],[11,"clone","","",258,[[],["resizablelimits",3]]],[11,"clone","","",68,[[],["wasmfeatures",3]]],[11,"clone","","",57,[[],["import",3]]],[11,"clone","","",371,[[],["initexpr",3]]],[11,"clone","","",67,[[],["type",4]]],[11,"clone","","",341,[[],["aliassectionreader",3]]],[11,"clone","","",69,[[],["externalkind",4]]],[11,"clone","","",378,[[],["v128",3]]],[11,"clone","","",72,[[],["naming",3]]],[11,"clone","","",270,[[],["name",4]]],[11,"clone","","",373,[[],["parser",3]]],[11,"clone","","",349,[[],["typesectionreader",3]]],[11,"clone","","",62,[[],["globaltype",3]]],[11,"clone","","",342,[[],["instancesectionreader",3]]],[11,"clone","","",266,[[],["export",3]]],[11,"clone","","",271,[[],["producersfieldvalue",3]]],[11,"clone","","",385,[[],["operatorsreader",3]]],[11,"clone","","",350,[[],["globalsectionreader",3]]],[11,"clone","","",265,[[],["element",3]]],[11,"clone","","",379,[[],["elementitems",3]]],[11,"clone","","",337,[[],["wasmfunctypeoutputs",3]]],[11,"clone","","",344,[[],["datasectionreader",3]]],[11,"clone","","",71,[[],["nametype",4]]],[11,"clone","","",340,[[],["eventsectionreader",3]]],[11,"clone","","",262,[[],["typeorfunctype",4]]],[11,"clone","","",58,[[],["importsectionentrytype",4]]],[11,"clone","","",263,[[],["memoryimmediate",3]]],[11,"clone","","",264,[[],["data",3]]],[11,"clone","","",383,[[],["functionname",3]]],[11,"clone","","",375,[[],["brtable",3]]],[11,"clone","","",272,[[],["producersfield",3]]],[11,"clone","","",256,[[],["elementkind",4]]],[11,"clone","","",70,[[],["linkingtype",4]]],[11,"clone","","",66,[[],["tabletype",3]]],[11,"clone","","",60,[[],["moduletype",3]]],[11,"clone","","",73,[[],["operator",4]]],[11,"from","wasmtime_environ","",290,[[["wasmerror",4]]]],[11,"clone","","",282,[[],["instructionaddressmap",3]]],[11,"clone","","",283,[[],["functionaddressmap",3]]],[11,"clone","","",284,[[],["modulememoryoffset",4]]],[11,"clone","","",319,[[],["builtinfunctionindex",3]]],[11,"clone","","",285,[[],["compiledfunction",3]]],[11,"clone","","",286,[[],["relocation",3]]],[11,"clone","","",287,[[],["relocationtarget",4]]],[11,"clone","","",288,[[],["trapinformation",3]]],[11,"clone","","",289,[[],["stackmapinformation",3]]],[11,"clone","","",292,[[],["tableelements",3]]],[11,"clone","","",293,[[],["memorystyle",4]]],[11,"clone","","",295,[[],["memoryplan",3]]],[11,"clone","","",296,[[],["tablestyle",4]]],[11,"clone","","",297,[[],["tableplan",3]]],[11,"clone","","",298,[[],["moduletype",4]]],[11,"clone","","",299,[[],["module",3]]],[11,"clone","","",300,[[],["initializer",4]]],[11,"clone","","",305,[[],["moduleupvar",4]]],[11,"clone","","",306,[[],["typetables",3]]],[11,"clone","","",307,[[],["modulesignature",3]]],[11,"clone","","",308,[[],["instancesignature",3]]],[11,"clone","","",315,[[],["datainitializerlocation",3]]],[11,"clone","","",317,[[],["tunables",3]]],[11,"clone","","",405,[[],["targetsharedsignatureindex",3]]],[11,"default","","",283,[[],["functionaddressmap",3]]],[11,"default","","",285,[[],["compiledfunction",3]]],[11,"default","","",299,[[],["module",3]]],[11,"default","","",306,[[],["typetables",3]]],[11,"default","","",308,[[],["instancesignature",3]]],[11,"default","","",309,[[],["moduletranslation",3]]],[11,"default","","",311,[[],["debuginfodata",3]]],[11,"default","","",312,[[],["namesection",3]]],[11,"default","","",313,[[],["wasmfileinfo",3]]],[11,"default","","",317,[[]]],[11,"eq","","",282,[[["instructionaddressmap",3]]]],[11,"ne","","",282,[[["instructionaddressmap",3]]]],[11,"eq","","",283,[[["functionaddressmap",3]]]],[11,"ne","","",283,[[["functionaddressmap",3]]]],[11,"eq","","",285,[[["compiledfunction",3]]]],[11,"ne","","",285,[[["compiledfunction",3]]]],[11,"eq","","",286,[[["relocation",3]]]],[11,"ne","","",286,[[["relocation",3]]]],[11,"eq","","",287,[[["relocationtarget",4]]]],[11,"ne","","",287,[[["relocationtarget",4]]]],[11,"eq","","",288,[[["trapinformation",3]]]],[11,"ne","","",288,[[["trapinformation",3]]]],[11,"eq","","",289,[[["stackmapinformation",3]]]],[11,"ne","","",289,[[["stackmapinformation",3]]]],[11,"fmt","","",282,[[["formatter",3]],["result",6]]],[11,"fmt","","",283,[[["formatter",3]],["result",6]]],[11,"fmt","","",284,[[["formatter",3]],["result",6]]],[11,"fmt","","",319,[[["formatter",3]],["result",6]]],[11,"fmt","","",285,[[["formatter",3]],["result",6]]],[11,"fmt","","",286,[[["formatter",3]],["result",6]]],[11,"fmt","","",287,[[["formatter",3]],["result",6]]],[11,"fmt","","",288,[[["formatter",3]],["result",6]]],[11,"fmt","","",289,[[["formatter",3]],["result",6]]],[11,"fmt","","",290,[[["formatter",3]],["result",6]]],[11,"fmt","","",292,[[["formatter",3]],["result",6]]],[11,"fmt","","",293,[[["formatter",3]],["result",6]]],[11,"fmt","","",295,[[["formatter",3]],["result",6]]],[11,"fmt","","",296,[[["formatter",3]],["result",6]]],[11,"fmt","","",297,[[["formatter",3]],["result",6]]],[11,"fmt","","",298,[[["formatter",3]],["result",6]]],[11,"fmt","","",299,[[["formatter",3]],["result",6]]],[11,"fmt","","",300,[[["formatter",3]],["result",6]]],[11,"fmt","","",305,[[["formatter",3]],["result",6]]],[11,"fmt","","",306,[[["formatter",3]],["result",6]]],[11,"fmt","","",307,[[["formatter",3]],["result",6]]],[11,"fmt","","",308,[[["formatter",3]],["result",6]]],[11,"fmt","","",311,[[["formatter",3]],["result",6]]],[11,"fmt","","",312,[[["formatter",3]],["result",6]]],[11,"fmt","","",313,[[["formatter",3]],["result",6]]],[11,"fmt","","",314,[[["formatter",3]],["result",6]]],[11,"fmt","","",405,[[["formatter",3]],["result",6]]],[11,"fmt","","",290,[[["formatter",3]],["result",6]]],[11,"hash","","",292,[[]]],[11,"hash","","",293,[[]]],[11,"hash","","",295,[[]]],[11,"hash","","",296,[[]]],[11,"hash","","",297,[[]]],[11,"hash","","",317,[[]]],[11,"source","","",290,[[],[["error",8],["option",4]]]],[11,"deserialize","","",282,[[],["result",4]]],[11,"deserialize","","",283,[[],["result",4]]],[11,"deserialize","","",285,[[],["result",4]]],[11,"deserialize","","",286,[[],["result",4]]],[11,"deserialize","","",287,[[],["result",4]]],[11,"deserialize","","",288,[[],["result",4]]],[11,"deserialize","","",289,[[],["result",4]]],[11,"deserialize","","",292,[[],["result",4]]],[11,"deserialize","","",293,[[],["result",4]]],[11,"deserialize","","",295,[[],["result",4]]],[11,"deserialize","","",296,[[],["result",4]]],[11,"deserialize","","",297,[[],["result",4]]],[11,"deserialize","","",298,[[],["result",4]]],[11,"deserialize","","",299,[[],["result",4]]],[11,"deserialize","","",300,[[],["result",4]]],[11,"deserialize","","",305,[[],["result",4]]],[11,"deserialize","","",306,[[],["result",4]]],[11,"deserialize","","",307,[[],["result",4]]],[11,"deserialize","","",308,[[],["result",4]]],[11,"deserialize","","",315,[[],["result",4]]],[11,"serialize","","",282,[[],["result",4]]],[11,"serialize","","",283,[[],["result",4]]],[11,"serialize","","",285,[[],["result",4]]],[11,"serialize","","",286,[[],["result",4]]],[11,"serialize","","",287,[[],["result",4]]],[11,"serialize","","",288,[[],["result",4]]],[11,"serialize","","",289,[[],["result",4]]],[11,"serialize","","",292,[[],["result",4]]],[11,"serialize","","",293,[[],["result",4]]],[11,"serialize","","",295,[[],["result",4]]],[11,"serialize","","",296,[[],["result",4]]],[11,"serialize","","",297,[[],["result",4]]],[11,"serialize","","",298,[[],["result",4]]],[11,"serialize","","",299,[[],["result",4]]],[11,"serialize","","",300,[[],["result",4]]],[11,"serialize","","",305,[[],["result",4]]],[11,"serialize","","",306,[[],["result",4]]],[11,"serialize","","",307,[[],["result",4]]],[11,"serialize","","",308,[[],["result",4]]],[11,"serialize","","",315,[[],["result",4]]],[11,"reserve_types","","",404,[[],["wasmresult",6]]],[11,"declare_type_func","","",404,[[["signature",3],["wasmfunctype",3]],["wasmresult",6]]],[11,"declare_type_module","","",404,[[],["wasmresult",6]]],[11,"declare_type_instance","","",404,[[],["wasmresult",6]]],[11,"type_to_signature","","",404,[[["typeindex",3]],[["wasmresult",6],["signatureindex",3]]]],[11,"type_to_module_type","","",404,[[["typeindex",3]],[["moduletypeindex",3],["wasmresult",6]]]],[11,"type_to_instance_type","","",404,[[["typeindex",3]],[["wasmresult",6],["instancetypeindex",3]]]],[11,"reserve_imports","","",404,[[],["wasmresult",6]]],[11,"declare_func_import","","",404,[[["option",4],["typeindex",3]],["wasmresult",6]]],[11,"declare_table_import","","",404,[[["table",3],["option",4]],["wasmresult",6]]],[11,"declare_memory_import","","",404,[[["option",4],["memory",3]],["wasmresult",6]]],[11,"declare_global_import","","",404,[[["global",3],["option",4]],["wasmresult",6]]],[11,"declare_module_import","","",404,[[["option",4],["typeindex",3]],["wasmresult",6]]],[11,"declare_instance_import","","",404,[[["option",4],["typeindex",3]],["wasmresult",6]]],[11,"reserve_func_types","","",404,[[],["wasmresult",6]]],[11,"declare_func_type","","",404,[[["typeindex",3]],["wasmresult",6]]],[11,"reserve_tables","","",404,[[],["wasmresult",6]]],[11,"declare_table","","",404,[[["table",3]],["wasmresult",6]]],[11,"reserve_memories","","",404,[[],["wasmresult",6]]],[11,"declare_memory","","",404,[[["memory",3]],["wasmresult",6]]],[11,"reserve_globals","","",404,[[],["wasmresult",6]]],[11,"declare_global","","",404,[[["global",3]],["wasmresult",6]]],[11,"reserve_exports","","",404,[[],["wasmresult",6]]],[11,"declare_func_export","","",404,[[["funcindex",3]],["wasmresult",6]]],[11,"declare_table_export","","",404,[[["tableindex",3]],["wasmresult",6]]],[11,"declare_memory_export","","",404,[[["memoryindex",3]],["wasmresult",6]]],[11,"declare_global_export","","",404,[[["globalindex",3]],["wasmresult",6]]],[11,"declare_module_export","","",404,[[["moduleindex",3]],["wasmresult",6]]],[11,"declare_instance_export","","",404,[[["instanceindex",3]],["wasmresult",6]]],[11,"declare_start_func","","",404,[[["funcindex",3]],["wasmresult",6]]],[11,"reserve_table_elements","","",404,[[],["wasmresult",6]]],[11,"declare_table_elements","","",404,[[["tableindex",3],["box",3],["globalindex",3],["option",4]],["wasmresult",6]]],[11,"declare_passive_element","","",404,[[["elemindex",3],["box",3]],["wasmresult",6]]],[11,"reserve_function_bodies","","",404,[[]]],[11,"define_function_body","","",404,[[["funcvalidator",3],["validatorresources",3],["functionbody",3]],["wasmresult",6]]],[11,"reserve_data_initializers","","",404,[[],["wasmresult",6]]],[11,"declare_data_initialization","","",404,[[["option",4],["memoryindex",3],["globalindex",3]],["wasmresult",6]]],[11,"reserve_passive_data","","",404,[[],["wasmresult",6]]],[11,"declare_passive_data","","",404,[[["dataindex",3]],["wasmresult",6]]],[11,"declare_module_name","","",404,[[]]],[11,"declare_func_name","","",404,[[["funcindex",3]]]],[11,"declare_local_name","","",404,[[["funcindex",3]]]],[11,"custom_section","","",404,[[],["wasmresult",6]]],[11,"wasm_features","","",404,[[],["wasmfeatures",3]]],[11,"reserve_modules","","",404,[[]]],[11,"module_start","","",404,[[]]],[11,"module_end","","",404,[[]]],[11,"reserve_instances","","",404,[[]]],[11,"declare_instance","","",404,[[["vec",3],["moduleindex",3]],["wasmresult",6]]],[11,"declare_alias","","",404,[[["alias",4]],["wasmresult",6]]],[11,"target_config","","",404,[[],["targetfrontendconfig",3]]],[11,"reference_type","","",404,[[["wasmtype",4]],["type",3]]],[11,"from_u32","","Create a new `BuiltinFunctionIndex` from its index",319,[[]]],[11,"index","","Return the index as an u32 number.",319,[[]]],[11,"memory32_grow","","Returns an index for wasm\'s `memory.grow` builtin function.",319,[[]]],[11,"imported_memory32_grow","","Returns an index for wasm\'s imported `memory.grow` builtin…",319,[[]]],[11,"memory32_size","","Returns an index for wasm\'s `memory.size` builtin function.",319,[[]]],[11,"imported_memory32_size","","Returns an index for wasm\'s imported `memory.size` builtin…",319,[[]]],[11,"table_copy","","Returns an index for wasm\'s `table.copy` when both tables…",319,[[]]],[11,"table_init","","Returns an index for wasm\'s `table.init`.",319,[[]]],[11,"elem_drop","","Returns an index for wasm\'s `elem.drop`.",319,[[]]],[11,"memory_copy","","Returns an index for wasm\'s `memory.copy`",319,[[]]],[11,"memory_fill","","Returns an index for wasm\'s `memory.fill` for locally…",319,[[]]],[11,"imported_memory_fill","","Returns an index for wasm\'s `memory.fill` for imported…",319,[[]]],[11,"memory_init","","Returns an index for wasm\'s `memory.init` instruction.",319,[[]]],[11,"data_drop","","Returns an index for wasm\'s `data.drop` instruction.",319,[[]]],[11,"table_grow_funcref","","Returns an index for Wasm\'s `table.grow` instruction for…",319,[[]]],[11,"table_grow_externref","","Returns an index for Wasm\'s `table.grow` instruction for…",319,[[]]],[11,"table_fill_externref","","Returns an index for Wasm\'s `table.fill` instruction for…",319,[[]]],[11,"table_fill_funcref","","Returns an index for Wasm\'s `table.fill` instruction for…",319,[[]]],[11,"drop_externref","","Returns an index to drop a `VMExternRef`.",319,[[]]],[11,"activations_table_insert_with_gc","","Returns an index to do a GC and then insert a…",319,[[]]],[11,"externref_global_get","","Returns an index for Wasm\'s `global.get` instruction for…",319,[[]]],[11,"externref_global_set","","Returns an index for Wasm\'s `global.get` instruction for…",319,[[]]],[11,"memory_atomic_notify","","Returns an index for wasm\'s `memory.atomic.notify` for…",319,[[]]],[11,"imported_memory_atomic_notify","","Returns an index for wasm\'s `memory.atomic.notify` for…",319,[[]]],[11,"memory_atomic_wait32","","Returns an index for wasm\'s `memory.atomic.wait32` for…",319,[[]]],[11,"imported_memory_atomic_wait32","","Returns an index for wasm\'s `memory.atomic.wait32` for…",319,[[]]],[11,"memory_atomic_wait64","","Returns an index for wasm\'s `memory.atomic.wait64` for…",319,[[]]],[11,"imported_memory_atomic_wait64","","Returns an index for wasm\'s `memory.atomic.wait64` for…",319,[[]]],[11,"builtin_functions_total_number","","Returns the total number of builtin functions.",319,[[]]],[11,"from_values","wasmtime_environ::ir","Create a `StackMap` based on where references are located…",320,[[["targetisa",8],["function",3]],["stackmap",3]]],[11,"from_slice","","Create a vec of Bitsets from a slice of bools.",320,[[],["stackmap",3]]],[11,"get_bit","","Returns a specified bit.",320,[[]]],[11,"as_slice","","Returns the raw bitmap that represents this stack map.",320,[[]]],[11,"mapped_words","","Returns the number of words represented by this stack map.",320,[[]]],[11,"lane_type","","Get the lane type of this SIMD vector type.",321,[[],["type",3]]],[11,"lane_of","","The type transformation that returns the lane type of a…",321,[[],["type",3]]],[11,"log2_lane_bits","","Get log_2 of the number of bits in a lane.",321,[[]]],[11,"lane_bits","","Get the number of bits in a lane.",321,[[]]],[11,"int","","Get an integer type with the requested number of bits.",321,[[],[["option",4],["type",3]]]],[11,"as_bool_pedantic","","Get a type with the same number of lanes as this type, but…",321,[[],["type",3]]],[11,"as_bool","","Get a type with the same number of lanes as this type, but…",321,[[],["type",3]]],[11,"half_width","","Get a type with the same number of lanes as this type, but…",321,[[],[["option",4],["type",3]]]],[11,"double_width","","Get a type with the same number of lanes as this type, but…",321,[[],[["option",4],["type",3]]]],[11,"is_invalid","","Is this the INVALID type?",321,[[]]],[11,"is_special","","Is this a special type?",321,[[]]],[11,"is_lane","","Is this a lane type?",321,[[]]],[11,"is_vector","","Is this a SIMD vector type?",321,[[]]],[11,"is_bool","","Is this a scalar boolean type?",321,[[]]],[11,"is_int","","Is this a scalar integer type?",321,[[]]],[11,"is_float","","Is this a scalar floating point type?",321,[[]]],[11,"is_flags","","Is this a CPU flags type?",321,[[]]],[11,"is_ref","","Is this a ref type?",321,[[]]],[11,"log2_lane_count","","Get log_2 of the number of lanes in this SIMD vector type.",321,[[]]],[11,"lane_count","","Get the number of lanes in this SIMD vector type.",321,[[]]],[11,"bits","","Get the total number of bits used to represent this type.",321,[[]]],[11,"bytes","","Get the number of bytes used to store this type in memory.",321,[[]]],[11,"by","","Get a SIMD vector type with `n` times more lanes than this…",321,[[],[["option",4],["type",3]]]],[11,"half_vector","","Get a SIMD vector with half the number of lanes.",321,[[],[["option",4],["type",3]]]],[11,"split_lanes","","Split the lane width in half and double the number of…",321,[[],[["option",4],["type",3]]]],[11,"merge_lanes","","Merge lanes to half the number of lanes and double the…",321,[[],[["option",4],["type",3]]]],[11,"index","","Index of this type, for use with hash tables etc.",321,[[]]],[11,"wider_or_equal","","True iff:",321,[[["type",3]]]],[11,"triple_pointer_type","","Return the pointer type for the given target triple.",321,[[["triple",3]],["type",3]]],[11,"new","","Create a parameter with default flags.",1,[[["type",3]],["abiparam",3]]],[11,"special","","Create a special-purpose parameter that is not (yet) bound…",1,[[["argumentpurpose",4],["type",3]],["abiparam",3]]],[11,"special_reg","","Create a parameter for a special-purpose register.",1,[[["argumentpurpose",4],["type",3]],["abiparam",3]]],[11,"uext","","Convert `self` to a parameter with the `uext` flag set.",1,[[],["abiparam",3]]],[11,"sext","","Convert `self` to a parameter type with the `sext` flag set.",1,[[],["abiparam",3]]],[11,"display","","Return an object that can display `self` with correct…",1,[[],["displayabiparam",3]]],[11,"for_inst","","Get the well-known library call name to use as a…",4,[[["opcode",4],["type",3]],[["option",4],["libcall",4]]]],[11,"all_libcalls","","Get a list of all known `LibCall`\'s.",4,[[]]],[11,"new","","Create a new blank signature.",5,[[["callconv",4]],["signature",3]]],[11,"clear","","Clear the signature so it is identical to a fresh one…",5,[[["callconv",4]]]],[11,"display","","Return an object that can display `self` with correct…",5,[[],["displaysignature",3]]],[11,"special_param_index","","Find the index of a presumed unique special-purpose…",5,[[["argumentpurpose",4]],["option",4]]],[11,"special_return_index","","Find the index of a presumed unique special-purpose…",5,[[["argumentpurpose",4]],["option",4]]],[11,"uses_special_param","","Does this signature have a parameter whose…",5,[[["argumentpurpose",4]]]],[11,"uses_special_return","","Does this signature have a return whose `ArgumentPurpose`…",5,[[["argumentpurpose",4]]]],[11,"num_special_params","","How many special parameters does this function have?",5,[[]]],[11,"num_special_returns","","How many special returns does this function have?",5,[[]]],[11,"uses_struct_return_param","","Does this signature take an struct return pointer parameter?",5,[[]]],[11,"is_multi_return","","Does this return more than one normal value? (Pre-struct…",5,[[]]],[11,"new","","Create a new source location with the given bits.",322,[[],["sourceloc",3]]],[11,"is_default","","Is this the default source location?",322,[[]]],[11,"bits","","Read the bits of this source location.",322,[[]]],[11,"new","","Create an empty stack slot manager.",6,[[],["stackslots",3]]],[11,"clear","","Clear out everything.",6,[[]]],[11,"push","","Allocate a new stack slot.",6,[[["stackslotdata",3]],["stackslot",3]]],[11,"is_valid","","Check if `ss` is a valid stack slot reference.",6,[[["stackslot",3]]]],[11,"iter","","Get an iterator over all the stack slot keys.",6,[[],[["iter",3],["stackslot",3],["stackslotdata",3]]]],[11,"iter_mut","","Get an iterator over all the stack slot keys, mutable…",6,[[],[["stackslot",3],["stackslotdata",3],["itermut",3]]]],[11,"values","","Get an iterator over all the stack slot records.",6,[[],[["stackslotdata",3],["iter",3]]]],[11,"values_mut","","Get an iterator over all the stack slot records, mutable…",6,[[],[["itermut",3],["stackslotdata",3]]]],[11,"keys","","Get an iterator over all the stack slot keys.",6,[[],[["stackslot",3],["keys",3]]]],[11,"next_key","","Get a reference to the next stack slot that would be…",6,[[],["stackslot",3]]],[11,"make_spill_slot","","Create a new spill slot for spilling values of type `ty`.",6,[[["type",3]],["stackslot",3]]],[11,"make_incoming_arg","","Create a stack slot representing an incoming function…",6,[[],["stackslot",3]]],[11,"get_outgoing_arg","","Get a stack slot representing an outgoing argument.",6,[[],["stackslot",3]]],[11,"get_emergency_slot","","Get an emergency spill slot that can be used to store a…",6,[[["type",3]],["stackslot",3]]],[11,"from_u32","","Create a new instance from a `u32`.",323,[[],["valuelabel",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",323,[[]]],[11,"is_assigned","","Is this an assigned location? (That is, not `Unassigned`).",8,[[]]],[11,"unwrap_reg","","Get the register unit of this location, or panic.",8,[[]]],[11,"unwrap_stack","","Get the stack slot of this location, or panic.",8,[[],["stackslot",3]]],[11,"display","","Return an object that can display this value location,…",8,[[],["displayvalueloc",3]]],[11,"new","wasmtime_environ::settings","Create a new builder with defaults and names from the…",324,[[["template",3]],["builder",3]]],[11,"state_for","","Extract contents of builder once everything is configured.",324,[[],[["global",3],["box",3]]]],[11,"new","","Create flags shared settings group.",325,[[["builder",3]],["flags",3]]],[11,"predicate_view","","Get a view of the boolean predicates.",325,[[],["predicateview",3]]],[11,"regalloc","","Register allocator to use with the MachInst backend.",325,[[],["regalloc",4]]],[11,"opt_level","","Optimization level:",325,[[],["optlevel",4]]],[11,"tls_model","","Defines the model used to perform TLS accesses.",325,[[],["tlsmodel",4]]],[11,"libcall_call_conv","","Defines the calling convention to use for LibCalls call…",325,[[],["libcallcallconv",4]]],[11,"baldrdash_prologue_words","","Number of pointer-sized words pushed by the baldrdash…",325,[[]]],[11,"probestack_size_log2","","The log2 of the size of the stack guard region.",325,[[]]],[11,"enable_verifier","","Run the Cranelift IR verifier at strategic times during…",325,[[]]],[11,"is_pic","","Enable Position-Independent Code generation",325,[[]]],[11,"use_colocated_libcalls","","Use colocated libcalls.",325,[[]]],[11,"avoid_div_traps","","Generate explicit checks around native division…",325,[[]]],[11,"enable_float","","Enable the use of floating-point instructions",325,[[]]],[11,"enable_nan_canonicalization","","Enable NaN canonicalization",325,[[]]],[11,"enable_pinned_reg","","Enable the use of the pinned register.",325,[[]]],[11,"use_pinned_reg_as_heap_base","","Use the pinned register as the heap base.",325,[[]]],[11,"enable_simd","","Enable the use of SIMD instructions.",325,[[]]],[11,"enable_atomics","","Enable the use of atomic instructions",325,[[]]],[11,"enable_safepoints","","Enable safepoint instruction insertions.",325,[[]]],[11,"emit_all_ones_funcaddrs","","Emit not-yet-relocated function addresses as all-ones bit…",325,[[]]],[11,"enable_probestack","","Enable the use of stack probes, for calling conventions…",325,[[]]],[11,"probestack_func_adjusts_sp","","Set this to true of the stack probe function modifies the…",325,[[]]],[11,"enable_jump_tables","","Enable the use of jump tables in generated machine code.",325,[[]]],[11,"enable_heap_access_spectre_mitigation","","Enable Spectre mitigation on heap bounds checks.",325,[[]]],[11,"to_fde","wasmtime_environ::isa::unwind::systemv","Converts the unwind information into a…",326,[[["address",4]],["framedescriptionentry",3]]],[11,"emit_size","wasmtime_environ::isa::unwind::winx64","Gets the emit size of the unwind information, in bytes.",327,[[]]],[11,"emit","","Emits the unwind information into the given mutable byte…",327,[[]]],[11,"finish","wasmtime_environ::isa","Combine the ISA-specific settings with the provided…",328,[[["flags",3]],[["box",3],["targetisa",8],["global",3]]]],[11,"triple_default","","Return the default calling convention for the given target…",21,[[["triple",3]],["callconv",4]]],[11,"for_libcall","","Returns the calling convention used for libcalls according…",21,[[["callconv",4],["flags",3]],["callconv",4]]],[11,"extends_windows_fastcall","","Is the calling convention extending the Windows Fastcall…",21,[[]]],[11,"extends_baldrdash","","Is the calling convention extending the Baldrdash ABI?",21,[[]]],[11,"pointer_type","","Get the pointer type of this target.",22,[[],["type",3]]],[11,"pointer_bits","","Get the width of pointers on this target, in units of bits.",22,[[]]],[11,"pointer_bytes","","Get the width of pointers on this target, in units of bytes.",22,[[]]],[11,"default_call_conv","","Get the default calling convention of this target.",23,[[],["callconv",4]]],[11,"endianness","","Get the endianness of this ISA.",23,[[],["endianness",4]]],[11,"pointer_type","","Get the pointer type of this ISA.",23,[[],["type",3]]],[11,"pointer_width","","Get the width of pointers on this ISA.",23,[[],["pointerwidth",4]]],[11,"pointer_bits","","Get the width of pointers on this ISA, in units of bits.",23,[[]]],[11,"pointer_bytes","","Get the width of pointers on this ISA, in units of bytes.",23,[[]]],[11,"frontend_config","","Get the information needed by frontends producing…",23,[[],["targetfrontendconfig",3]]],[11,"uses_cpu_flags","","Does the CPU implement scalar comparisons using a CPU…",23,[[]]],[11,"uses_complex_addresses","","Does the CPU implement multi-register addressing?",23,[[]]],[11,"map_dwarf_register","","Map a Cranelift register to its corresponding DWARF…",23,[[],[["result",4],["registermappingerror",4]]]],[11,"map_regalloc_reg_to_dwarf","","Map a regalloc::Reg to its corresponding DWARF register.",23,[[["reg",3]],[["result",4],["registermappingerror",4]]]],[11,"encode","","Encode an instruction after determining it is legal.",23,[[["instructiondata",4],["type",3],["function",3]],[["result",4],["encoding",3]]]],[11,"prologue_epilogue","","Compute the stack layout and insert prologue and epilogue…",23,[[["function",3]],[["codegenerror",4],["result",4]]]],[11,"create_unwind_info","","Creates unwind information for the function.",23,[[["function",3]],[["option",4],["codegenerror",4],["result",4]]]],[11,"create_systemv_cie","","Creates a new System V Common Information Entry for the ISA.",23,[[],[["commoninformationentry",3],["option",4]]]],[11,"get_mach_backend","","Get the new-style MachBackend, if this is an adapter…",23,[[],[["option",4],["machbackend",8]]]],[11,"is_none","wasmtime_environ::entity::packed_option","Returns `true` if the packed option is a `None` value.",329,[[]]],[11,"is_some","","Returns `true` if the packed option is a `Some` value.",329,[[]]],[11,"expand","","Expand the packed option into a normal `Option`.",329,[[],["option",4]]],[11,"map","","Maps a `PackedOption<T>` to `Option<U>` by applying a…",329,[[],["option",4]]],[11,"unwrap","","Unwrap a packed `Some` value or panic.",329,[[]]],[11,"expect","","Unwrap a packed `Some` value or panic.",329,[[]]],[11,"take","","Takes the value out of the packed option, leaving a `None`…",329,[[],["option",4]]],[11,"from_raw","wasmtime_environ::entity","Create a new slice from a raw pointer. A safer way to…",330,[[],["boxedslice",3]]],[11,"is_valid","","Check if `k` is a valid key in the map.",330,[[]]],[11,"get","","Get the element at `k` if it exists.",330,[[],["option",4]]],[11,"get_mut","","Get the element at `k` if it exists, mutable version.",330,[[],["option",4]]],[11,"is_empty","","Is this map completely empty?",330,[[]]],[11,"len","","Get the total number of entity references created.",330,[[]]],[11,"keys","","Iterate over all the keys in this map.",330,[[],["keys",3]]],[11,"values","","Iterate over all the values in this map.",330,[[],["iter",3]]],[11,"values_mut","","Iterate over all the values in this map, mutable edition.",330,[[],["itermut",3]]],[11,"iter","","Iterate over all the keys and values in this map.",330,[[],["iter",3]]],[11,"iter_mut","","Iterate over all the keys and values in this map, mutable…",330,[[],["itermut",3]]],[11,"last","","Returns the last element that was inserted in the map.",330,[[],["option",4]]],[11,"new","","Create a new empty map.",331,[[],["primarymap",3]]],[11,"with_capacity","","Create a new empty map with the given capacity.",331,[[],["primarymap",3]]],[11,"is_valid","","Check if `k` is a valid key in the map.",331,[[]]],[11,"get","","Get the element at `k` if it exists.",331,[[],["option",4]]],[11,"get_mut","","Get the element at `k` if it exists, mutable version.",331,[[],["option",4]]],[11,"is_empty","","Is this map completely empty?",331,[[]]],[11,"len","","Get the total number of entity references created.",331,[[]]],[11,"keys","","Iterate over all the keys in this map.",331,[[],["keys",3]]],[11,"values","","Iterate over all the values in this map.",331,[[],["iter",3]]],[11,"values_mut","","Iterate over all the values in this map, mutable edition.",331,[[],["itermut",3]]],[11,"iter","","Iterate over all the keys and values in this map.",331,[[],["iter",3]]],[11,"iter_mut","","Iterate over all the keys and values in this map, mutable…",331,[[],["itermut",3]]],[11,"clear","","Remove all entries from this map.",331,[[]]],[11,"next_key","","Get the key that will be assigned to the next pushed value.",331,[[]]],[11,"push","","Append `v` to the mapping, assigning a new key which is…",331,[[]]],[11,"last","","Returns the last element that was inserted in the map.",331,[[],["option",4]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",331,[[]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional`…",331,[[]]],[11,"shrink_to_fit","","Shrinks the capacity of the `PrimaryMap` as much as…",331,[[]]],[11,"into_boxed_slice","","Consumes this `PrimaryMap` and produces a `BoxedSlice`.",331,[[],["boxedslice",3]]],[11,"new","wasmtime_environ::wasm","Creates a new `DummyEnvironment` instance.",30,[[["targetfrontendconfig",3],["returnmode",4]],["dummyenvironment",3]]],[11,"func_env","","Return a `DummyFuncEnvironment` for translating functions…",30,[[],["dummyfuncenvironment",3]]],[11,"get_num_func_imports","","Return the number of imported functions within this…",30,[[]]],[11,"get_func_name","","Return the name of the function, if a name for the…",30,[[["funcindex",3]],["option",4]]],[11,"test_expected_reachability","","Test reachability bits before and after every opcode…",30,[[["global",3],["vec",3]]]],[11,"is_wasm_parameter","","Is the given parameter of the given function a wasm-level…",31,[[["signature",3]]]],[11,"is_wasm_return","","Is the given return of the given function a wasm-level…",31,[[["signature",3]]]],[11,"return_mode","","Should the code be structured to use a single…",31,[[],["returnmode",4]]],[11,"translate_call","","Translate a `call` WebAssembly instruction at `pos`.",31,[[["funcref",3],["funccursor",3],["funcindex",3]],[["inst",3],["result",4],["wasmerror",4]]]],[11,"translate_ref_null","","Translate a `ref.null T` WebAssembly instruction.",31,[[["funccursor",3],["wasmtype",4]],[["result",4],["value",3],["wasmerror",4]]]],[11,"translate_ref_is_null","","Translate a `ref.is_null` WebAssembly instruction.",31,[[["funccursor",3],["value",3]],[["result",4],["value",3],["wasmerror",4]]]],[11,"translate_loop_header","","Emit code at the beginning of every wasm loop.",31,[[["funccursor",3]],[["result",4],["wasmerror",4]]]],[11,"before_translate_operator","","Optional callback for the `FunctionEnvironment` performing…",31,[[["functranslationstate",3],["functionbuilder",3],["operator",4]],[["result",4],["wasmerror",4]]]],[11,"after_translate_operator","","Optional callback for the `FunctionEnvironment` performing…",31,[[["functranslationstate",3],["functionbuilder",3],["operator",4]],[["result",4],["wasmerror",4]]]],[11,"before_translate_function","","Optional callback for the `FunctionEnvironment` performing…",31,[[["functranslationstate",3],["functionbuilder",3]],[["result",4],["wasmerror",4]]]],[11,"after_translate_function","","Optional callback for the `FunctionEnvironment` performing…",31,[[["functranslationstate",3],["functionbuilder",3]],[["result",4],["wasmerror",4]]]],[11,"reserve_types","","Provides the number of types up front. By default this…",34,[[],[["result",4],["wasmerror",4]]]],[11,"declare_type_module","","Declares a module type signature to the environment.",34,[[],[["result",4],["wasmerror",4]]]],[11,"declare_type_instance","","Declares an instance type signature to the environment.",34,[[],[["result",4],["wasmerror",4]]]],[11,"type_to_signature","","Translates a type index to its signature index, only…",34,[[["typeindex",3]],[["result",4],["wasmerror",4],["signatureindex",3]]]],[11,"type_to_module_type","","Translates a type index to its module type index, only…",34,[[["typeindex",3]],[["result",4],["moduletypeindex",3],["wasmerror",4]]]],[11,"type_to_instance_type","","Translates a type index to its instance type index, only…",34,[[["typeindex",3]],[["wasmerror",4],["instancetypeindex",3],["result",4]]]],[11,"reserve_imports","","Provides the number of imports up front. By default this…",34,[[],[["result",4],["wasmerror",4]]]],[11,"declare_event_import","","Declares an event import to the environment.",34,[[["event",3],["option",4]],[["result",4],["wasmerror",4]]]],[11,"declare_module_import","","Declares a module import to the environment.",34,[[["typeindex",3],["option",4]],[["result",4],["wasmerror",4]]]],[11,"declare_instance_import","","Declares an instance import to the environment.",34,[[["typeindex",3],["option",4]],[["result",4],["wasmerror",4]]]],[11,"finish_imports","","Notifies the implementation that all imports have been…",34,[[],[["result",4],["wasmerror",4]]]],[11,"reserve_func_types","","Provides the number of defined functions up front. By…",34,[[],[["result",4],["wasmerror",4]]]],[11,"reserve_tables","","Provides the number of defined tables up front. By default…",34,[[],[["result",4],["wasmerror",4]]]],[11,"reserve_memories","","Provides the number of defined memories up front. By…",34,[[],[["result",4],["wasmerror",4]]]],[11,"reserve_events","","Provides the number of defined events up front. By default…",34,[[],[["result",4],["wasmerror",4]]]],[11,"declare_event","","Declares an event to the environment",34,[[["event",3]],[["result",4],["wasmerror",4]]]],[11,"reserve_globals","","Provides the number of defined globals up front. By…",34,[[],[["result",4],["wasmerror",4]]]],[11,"reserve_exports","","Provides the number of exports up front. By default this…",34,[[],[["result",4],["wasmerror",4]]]],[11,"declare_event_export","","Declares an event export to the environment.",34,[[["eventindex",3]],[["result",4],["wasmerror",4]]]],[11,"declare_instance_export","","Declares an instance export to the environment.",34,[[["instanceindex",3]],[["result",4],["wasmerror",4]]]],[11,"declare_module_export","","Declares an instance export to the environment.",34,[[["moduleindex",3]],[["result",4],["wasmerror",4]]]],[11,"finish_exports","","Notifies the implementation that all exports have been…",34,[[],[["result",4],["wasmerror",4]]]],[11,"reserve_table_elements","","Provides the number of element initializers up front. By…",34,[[],[["result",4],["wasmerror",4]]]],[11,"reserve_passive_data","","Provides the number of passive data segments up front.",34,[[],[["result",4],["wasmerror",4]]]],[11,"reserve_function_bodies","","Indicates how many functions the code section reports and…",34,[[]]],[11,"reserve_data_initializers","","Provides the number of data initializers up front. By…",34,[[],[["result",4],["wasmerror",4]]]],[11,"declare_module_name","","Declares the name of a module to the environment.",34,[[]]],[11,"declare_func_name","","Declares the name of a function to the environment.",34,[[["funcindex",3]]]],[11,"declare_local_name","","Declares the name of a function\'s local to the environment.",34,[[["funcindex",3]]]],[11,"custom_section","","Indicates that a custom section has been found in the wasm…",34,[[],[["result",4],["wasmerror",4]]]],[11,"wasm_features","","Returns the list of enabled wasm features this translation…",34,[[],["wasmfeatures",3]]],[11,"reserve_modules","","Indicates that this module will have `amount` submodules.",34,[[]]],[11,"module_start","","Called at the beginning of translating a module.",34,[[]]],[11,"module_end","","Called at the end of translating a module.",34,[[]]],[11,"reserve_instances","","Indicates that this module will have `amount` instances.",34,[[]]],[11,"declare_instance","","Declares a new instance which this module will instantiate…",34,[[["moduleindex",3],["global",3],["vec",3]],[["result",4],["wasmerror",4]]]],[11,"declare_alias","","Declares a new alias being added to this module.",34,[[["alias",4]],[["result",4],["wasmerror",4]]]],[11,"pointer_type","","Get the Cranelift integer type to use for native pointers.",36,[[],["type",3]]],[11,"pointer_bytes","","Get the size of a native pointer, in bytes.",36,[[]]],[11,"reference_type","","Get the Cranelift reference type to use for the given Wasm…",36,[[["wasmtype",4]],["type",3]]],[11,"new","","Create a new translator.",332,[[],["functranslator",3]]],[11,"translate","","Translate a binary WebAssembly function.",332,[[["funcvalidator",3],["function",3]],[["result",4],["wasmerror",4]]]],[11,"translate_body","","Translate a binary WebAssembly function from a…",332,[[["functionbody",3],["funcvalidator",3],["function",3]],[["result",4],["wasmerror",4]]]],[11,"reachable","","True if the current translation state expresses reachable…",333,[[]]],[11,"new","","Creates a new empty ModuleTranslationState.",334,[[],["moduletranslationstate",3]]],[11,"from_func_sigs","","Create a new ModuleTranslationState with the given…",334,[[],[["result",4],["moduletranslationstate",3],["wasmerror",4]]]],[11,"new","","Creates a new FunctionBuilder structure that will operate…",41,[[["functionbuildercontext",3],["function",3]],["functionbuilder",3]]],[11,"current_block","","Get the block that this builder is currently at.",41,[[],[["block",3],["option",4]]]],[11,"set_srcloc","","Set the source location that should be assigned to all new…",41,[[["sourceloc",3]]]],[11,"create_block","","Creates a new `Block` and returns its reference.",41,[[],["block",3]]],[11,"insert_block_after","","Insert `block` in the layout after the existing block…",41,[[["block",3]]]],[11,"switch_to_block","","After the call to this function, new instructions will be…",41,[[["block",3]]]],[11,"seal_block","","Declares that all the predecessors of this block are known.",41,[[["block",3]]]],[11,"seal_all_blocks","","Effectively calls seal_block on all unsealed blocks in the…",41,[[]]],[11,"declare_var","","In order to use a variable in a `use_var`, you need to…",41,[[["variable",3],["type",3]]]],[11,"use_var","","Returns the Cranelift IR value corresponding to the…",41,[[["variable",3]],["value",3]]],[11,"def_var","","Register a new definition of a user variable. The type of…",41,[[["variable",3],["value",3]]]],[11,"set_val_label","","Set label for Value",41,[[["valuelabel",3],["value",3]]]],[11,"create_jump_table","","Creates a jump table in the function, to be used by…",41,[[["jumptabledata",3]],["jumptable",3]]],[11,"create_stack_slot","","Creates a stack slot in the function, to be used by…",41,[[["stackslotdata",3]],["stackslot",3]]],[11,"import_signature","","Adds a signature which can later be used to declare an…",41,[[["signature",3]],["sigref",3]]],[11,"import_function","","Declare an external function import.",41,[[["extfuncdata",3]],["funcref",3]]],[11,"create_global_value","","Declares a global value accessible to the function.",41,[[["globalvaluedata",4]],["globalvalue",3]]],[11,"create_heap","","Declares a heap accessible to the function.",41,[[["heapdata",3]],["heap",3]]],[11,"ins","","Returns an object with the `InstBuilder` trait that allows…",41,[[],["funcinstbuilder",3]]],[11,"ensure_inserted_block","","Make sure that the current block is inserted in the layout.",41,[[]]],[11,"cursor","","Returns a `FuncCursor` pointed at the current position…",41,[[],["funccursor",3]]],[11,"append_block_params_for_function_params","","Append parameters to the given `Block` corresponding to…",41,[[["block",3]]]],[11,"append_block_params_for_function_returns","","Append parameters to the given `Block` corresponding to…",41,[[["block",3]]]],[11,"finalize","","Declare that translation of the current function is…",41,[[]]],[11,"block_params","","Retrieves all the parameters for a `Block` currently…",41,[[["block",3]]]],[11,"signature","","Retrieves the signature with reference `sigref` previously…",41,[[["sigref",3]],[["signature",3],["option",4]]]],[11,"append_block_param","","Creates a parameter for a specific `Block` by appending it…",41,[[["block",3],["type",3]],["value",3]]],[11,"inst_results","","Returns the result values of an instruction.",41,[[["inst",3]]]],[11,"change_jump_destination","","Changes the destination of a jump instruction after…",41,[[["inst",3],["block",3]]]],[11,"is_unreachable","","Returns `true` if and only if the current `Block` is…",41,[[]]],[11,"is_pristine","","Returns `true` if and only if no instructions have been…",41,[[]]],[11,"is_filled","","Returns `true` if and only if a terminator instruction has…",41,[[]]],[11,"display","","Returns a displayable object for the function as it is.",41,[[],["displayfunction",3]]],[11,"call_memcpy","","Calls libc.memcpy",41,[[["targetfrontendconfig",3],["value",3]]]],[11,"emit_small_memory_copy","","Optimised memcpy or memmove for small copies.",41,[[["targetfrontendconfig",3],["value",3]]]],[11,"call_memset","","Calls libc.memset",41,[[["targetfrontendconfig",3],["value",3]]]],[11,"emit_small_memset","","Calls libc.memset",41,[[["targetfrontendconfig",3],["value",3]]]],[11,"call_memmove","","Calls libc.memmove",41,[[["targetfrontendconfig",3],["value",3]]]],[11,"new","wasmtime_environ::wasm::wasmparser","Constructs `BinaryReader` type.",335,[[],["binaryreader",3]]],[11,"new_with_offset","","Constructs a `BinaryReader` with an explicit starting…",335,[[],["binaryreader",3]]],[11,"original_position","","",335,[[]]],[11,"range","","Returns a range from the starting offset to the end of the…",335,[[],["range",3]]],[11,"read_type","","",335,[[],[["result",4],["type",4],["binaryreadererror",3]]]],[11,"eof","","Returns whether the `BinaryReader` has reached the end of…",335,[[]]],[11,"current_position","","Returns the `BinaryReader`\'s current position.",335,[[]]],[11,"bytes_remaining","","Returns the number of bytes remaining in the `BinaryReader`.",335,[[]]],[11,"read_bytes","","Advances the `BinaryReader` `size` bytes, and returns a…",335,[[],[["result",4],["binaryreadererror",3]]]],[11,"read_u32","","Advances the `BinaryReader` four bytes and returns a `u32`.",335,[[],[["binaryreadererror",3],["result",4]]]],[11,"read_u64","","Advances the `BinaryReader` eight bytes and returns a `u64`.",335,[[],[["result",4],["binaryreadererror",3]]]],[11,"read_u8","","Advances the `BinaryReader` a single byte, and returns the…",335,[[],[["binaryreadererror",3],["result",4]]]],[11,"read_var_u8","","Advances the `BinaryReader` up to two bytes to parse a…",335,[[],[["binaryreadererror",3],["result",4]]]],[11,"read_var_u32","","Advances the `BinaryReader` up to four bytes to parse a…",335,[[],[["binaryreadererror",3],["result",4]]]],[11,"read_var_u64","","Advances the `BinaryReader` up to four bytes to parse a…",335,[[],[["result",4],["binaryreadererror",3]]]],[11,"skip_var_32","","Advances the `BinaryReader` up to four bytes over a…",335,[[],[["binaryreadererror",3],["result",4]]]],[11,"skip_type","","Alias method for `BinaryReader::skip_var_u32`.",335,[[],[["binaryreadererror",3],["result",4]]]],[11,"skip_bytes","","Advances the `BinaryReader` `len` bytes, skipping the…",335,[[],[["binaryreadererror",3],["result",4]]]],[11,"skip_string","","Advances the `BinaryReader` past a WebAssembly string.…",335,[[],[["binaryreadererror",3],["result",4]]]],[11,"read_var_i32","","Advances the `BinaryReader` up to four bytes to parse a…",335,[[],[["binaryreadererror",3],["result",4]]]],[11,"read_var_s33","","Advances the `BinaryReader` up to four bytes to parse a…",335,[[],[["result",4],["binaryreadererror",3]]]],[11,"read_var_i64","","Advances the `BinaryReader` up to eight bytes to parse a…",335,[[],[["result",4],["binaryreadererror",3]]]],[11,"read_f32","","Advances the `BinaryReader` up to four bytes to parse a…",335,[[],[["result",4],["ieee32",3],["binaryreadererror",3]]]],[11,"read_f64","","Advances the `BinaryReader` up to four bytes to parse a…",335,[[],[["ieee64",3],["result",4],["binaryreadererror",3]]]],[11,"read_string","","Reads a WebAssembly string from the module.",335,[[],[["result",4],["binaryreadererror",3]]]],[11,"read_operator","","Reads the next available `Operator`.",335,[[],[["result",4],["binaryreadererror",3],["operator",4]]]],[11,"new","","Constructs a new instance of `Range`.",42,[[],["range",3]]],[11,"slice","","Returns a new slice between `start` and `end - 1` from…",42,[[]]],[11,"inputs","","Returns the list of inputs as an iterator.",43,[[],["wasmfunctypeinputs",3]]],[11,"outputs","","Returns the list of outputs as an iterator.",43,[[],["wasmfunctypeoutputs",3]]],[11,"index_type","","",63,[[],["type",4]]],[11,"message","","Get this error\'s message.",339,[[]]],[11,"offset","","Get the offset within the Wasm binary where the error…",339,[[]]],[11,"new","","",340,[[],[["binaryreadererror",3],["result",4],["eventsectionreader",3]]]],[11,"original_position","","",340,[[]]],[11,"get_count","","",340,[[]]],[11,"read","","Reads content of the event section.",340,[[],[["result",4],["eventtype",3],["binaryreadererror",3]]]],[11,"new","","",341,[[],[["result",4],["aliassectionreader",3],["binaryreadererror",3]]]],[11,"original_position","","",341,[[]]],[11,"get_count","","",341,[[]]],[11,"read","","",341,[[],[["result",4],["alias",4],["binaryreadererror",3]]]],[11,"new","","",342,[[],[["result",4],["instancesectionreader",3],["binaryreadererror",3]]]],[11,"original_position","","",342,[[]]],[11,"get_count","","",342,[[]]],[11,"read","","",342,[[],[["binaryreadererror",3],["result",4],["instance",3]]]],[11,"new","","",343,[[],["functionbody",3]]],[11,"get_binary_reader","","",343,[[],["binaryreader",3]]],[11,"get_locals_reader","","",343,[[],[["binaryreadererror",3],["result",4],["localsreader",3]]]],[11,"get_operators_reader","","",343,[[],[["result",4],["operatorsreader",3],["binaryreadererror",3]]]],[11,"range","","",343,[[],["range",3]]],[11,"new","","",344,[[],[["result",4],["datasectionreader",3],["binaryreadererror",3]]]],[11,"original_position","","",344,[[]]],[11,"get_count","","",344,[[]]],[11,"forbid_bulk_memory","","",344,[[]]],[11,"read","","Reads content of the data section.",344,[[],[["data",3],["binaryreadererror",3],["result",4]]]],[11,"new","","",345,[[],[["binaryreadererror",3],["result",4],["elementsectionreader",3]]]],[11,"original_position","","",345,[[]]],[11,"get_count","","",345,[[]]],[11,"read","","Reads content of the element section.",345,[[],[["element",3],["binaryreadererror",3],["result",4]]]],[11,"new","","",346,[[],[["binaryreadererror",3],["result",4],["exportsectionreader",3]]]],[11,"original_position","","",346,[[]]],[11,"get_count","","",346,[[]]],[11,"read","","Reads content of the export section.",346,[[],[["binaryreadererror",3],["result",4],["export",3]]]],[11,"new","","",347,[[],[["functionsectionreader",3],["result",4],["binaryreadererror",3]]]],[11,"original_position","","",347,[[]]],[11,"get_count","","",347,[[]]],[11,"read","","Reads function type index from the function section.",347,[[],[["binaryreadererror",3],["result",4]]]],[11,"new","","",348,[[],[["binaryreadererror",3],["importsectionreader",3],["result",4]]]],[11,"original_position","","",348,[[]]],[11,"get_count","","",348,[[]]],[11,"read","","Reads content of the import section.",348,[[],[["import",3],["result",4],["binaryreadererror",3]]]],[11,"new","","",349,[[],[["typesectionreader",3],["result",4],["binaryreadererror",3]]]],[11,"original_position","","",349,[[]]],[11,"get_count","","",349,[[]]],[11,"read","","Reads content of the type section.",349,[[],[["result",4],["typedef",4],["binaryreadererror",3]]]],[11,"new","","",350,[[],[["globalsectionreader",3],["result",4],["binaryreadererror",3]]]],[11,"original_position","","",350,[[]]],[11,"get_count","","",350,[[]]],[11,"read","","Reads content of the global section.",350,[[],[["result",4],["global",3],["binaryreadererror",3]]]],[11,"new","","",351,[[],[["binaryreadererror",3],["result",4],["memorysectionreader",3]]]],[11,"original_position","","",351,[[]]],[11,"get_count","","",351,[[]]],[11,"read","","Reads content of the memory section.",351,[[],[["binaryreadererror",3],["memorytype",4],["result",4]]]],[11,"new","","",352,[[],[["result",4],["binaryreadererror",3],["tablesectionreader",3]]]],[11,"original_position","","",352,[[]]],[11,"get_count","","",352,[[]]],[11,"read","","Reads content of the table section.",352,[[],[["result",4],["binaryreadererror",3],["tabletype",3]]]],[11,"get_count","","",353,[[]]],[11,"original_position","","",353,[[]]],[11,"read","","",353,[[],[["result",4],["binaryreadererror",3]]]],[11,"new","","",354,[[],[["result",4],["codesectionreader",3],["binaryreadererror",3]]]],[11,"original_position","","",354,[[]]],[11,"get_count","","",354,[[]]],[11,"read","","Reads content of the code section.",354,[[],[["binaryreadererror",3],["result",4],["functionbody",3]]]],[11,"new","","",356,[[],[["elementitemsreader",3],["binaryreadererror",3],["result",4]]]],[11,"original_position","","",356,[[]]],[11,"get_count","","",356,[[]]],[11,"uses_exprs","","",356,[[]]],[11,"read","","",356,[[],[["elementitem",4],["result",4],["binaryreadererror",3]]]],[11,"new","","",358,[[],[["linkingsectionreader",3],["binaryreadererror",3],["result",4]]]],[11,"get_count","","",358,[[]]],[11,"original_position","","",358,[[]]],[11,"read","","",358,[[],[["result",4],["linkingtype",4],["binaryreadererror",3]]]],[11,"new","","",359,[[],[["result",4],["binaryreadererror",3],["modulesectionreader",3]]]],[11,"original_position","","",359,[[]]],[11,"get_count","","",359,[[]]],[11,"read","","",359,[[],[["nestedmodule",3],["result",4],["binaryreadererror",3]]]],[11,"original_position","","",360,[[]]],[11,"get_count","","",360,[[]]],[11,"read","","",360,[[],[["binaryreadererror",3],["naming",3],["result",4]]]],[11,"get_count","","",361,[[]]],[11,"original_position","","",361,[[]]],[11,"read","","",361,[[],[["result",4],["binaryreadererror",3],["functionlocalname",3]]]],[11,"new","","",362,[[],[["binaryreadererror",3],["result",4],["namesectionreader",3]]]],[11,"eof","","",362,[[]]],[11,"original_position","","",362,[[]]],[11,"read","","",362,[[],[["result",4],["binaryreadererror",3],["name",4]]]],[11,"get_count","","",365,[[]]],[11,"original_position","","",365,[[]]],[11,"read","","",365,[[],[["result",4],["producersfieldvalue",3],["binaryreadererror",3]]]],[11,"new","","Creates reader for the producers section.",367,[[],[["result",4],["producerssectionreader",3],["binaryreadererror",3]]]],[11,"original_position","","",367,[[]]],[11,"get_count","","",367,[[]]],[11,"read","","",367,[[],[["result",4],["producersfield",3],["binaryreadererror",3]]]],[11,"new","","",368,[[],[["relocsectionreader",3],["binaryreadererror",3],["result",4]]]],[11,"get_count","","",368,[[]]],[11,"get_section_code","","",368,[[],["sectioncode",4]]],[11,"original_position","","",368,[[]]],[11,"read","","",368,[[],[["result",4],["reloc",3],["binaryreadererror",3]]]],[11,"ensure_end","","",245,[[],[["binaryreadererror",3],["result",4]]]],[11,"new","","",369,[[],["sectioniterator",3]]],[11,"new","","",370,[[],["sectioniteratorlimited",3]]],[11,"new","","",371,[[],["initexpr",3]]],[11,"get_binary_reader","","",371,[[],["binaryreader",3]]],[11,"get_operators_reader","","",371,[[],["operatorsreader",3]]],[11,"new","","",372,[[],[["binaryreadererror",3],["result",4],["instance",3]]]],[11,"original_position","","",372,[[]]],[11,"module","","",372,[[]]],[11,"args","","",372,[[],[["instanceargsreader",3],["binaryreadererror",3],["result",4]]]],[11,"new","","Creates a new module parser.",373,[[],["parser",3]]],[11,"parse","","Attempts to parse a chunk of data.",373,[[],[["result",4],["chunk",4],["binaryreadererror",3]]]],[11,"parse_all","","Convenience function that can be used to parse a module…",373,[[]]],[11,"skip_section","","Skip parsing the code or module code section entirely.",373,[[]]],[11,"new","","Creates a new `FuncValidator`.",374,[[["wasmfeatures",3]],[["result",4],["funcvalidator",3],["binaryreadererror",3]]]],[11,"operand_stack_height","","Get the current height of the operand stack.",374,[[]]],[11,"validate","","Convenience function to validate an entire function\'s body.",374,[[["functionbody",3]],[["binaryreadererror",3],["result",4]]]],[11,"read_locals","","Reads the local defintions from the given `BinaryReader`,…",374,[[["binaryreader",3]],[["binaryreadererror",3],["result",4]]]],[11,"define_locals","","Defines locals into this validator.",374,[[["type",4]],[["binaryreadererror",3],["result",4]]]],[11,"op","","Validates the next operator in a function.",374,[[["operator",4]],[["binaryreadererror",3],["result",4]]]],[11,"finish","","Function that must be called after the last opcode has…",374,[[],[["binaryreadererror",3],["result",4]]]],[11,"resources","","Returns the underlying module resources that this…",374,[[]]],[11,"len","","Returns the number of `br_table` entries, not including…",375,[[]]],[11,"is_empty","","Returns whether `BrTable` doesn\'t have any labels apart…",375,[[]]],[11,"targets","","Returns the list of targets that this `br_table`…",375,[[]]],[11,"bits","","",376,[[]]],[11,"bits","","",377,[[]]],[11,"bytes","","",378,[[]]],[11,"get_items_reader","","",379,[[],[["binaryreadererror",3],["result",4],["elementitemsreader",3]]]],[11,"original_position","","",380,[[]]],[11,"read","","",380,[[],[["result",4],["binaryreadererror",3],["instancearg",3]]]],[11,"raw_bytes","","",381,[[]]],[11,"original_position","","",381,[[]]],[11,"get_name","","",382,[[],[["binaryreadererror",3],["result",4]]]],[11,"original_position","","",382,[[]]],[11,"get_map","","",383,[[],[["result",4],["namingreader",3],["binaryreadererror",3]]]],[11,"original_position","","",383,[[]]],[11,"get_map","","",269,[[],[["result",4],["namingreader",3],["binaryreadererror",3]]]],[11,"original_position","","",269,[[]]],[11,"get_function_local_reader","","",384,[[],[["result",4],["binaryreadererror",3],["functionlocalreader",3]]]],[11,"original_position","","",384,[[]]],[11,"eof","","",385,[[]]],[11,"original_position","","",385,[[]]],[11,"ensure_end","","",385,[[],[["binaryreadererror",3],["result",4]]]],[11,"read","","",385,[[],[["operator",4],["binaryreadererror",3],["result",4]]]],[11,"into_iter_with_offsets","","",385,[[],["operatorsiteratorwithoffsets",3]]],[11,"read_with_offset","","",385,[[],[["result",4],["binaryreadererror",3]]]],[11,"get_producer_field_values_reader","","",272,[[],[["producersfieldvaluesreader",3],["binaryreadererror",3],["result",4]]]],[11,"new","","Creates a new [`Validator`] ready to validate a…",386,[[],["validator",3]]],[11,"wasm_features","","Configures the enabled WebAssembly features for this…",386,[[["wasmfeatures",3]],["validator",3]]],[11,"validate_all","","Validates an entire in-memory module with this validator.",386,[[],[["binaryreadererror",3],["result",4]]]],[11,"payload","","Convenience function to validate a single [`Payload`].",386,[[["payload",4]],[["result",4],["validpayload",4],["binaryreadererror",3]]]],[11,"version","","Validates `Payload::Version`",386,[[["range",3]],[["binaryreadererror",3],["result",4]]]],[11,"type_section","","Validates `Payload::TypeSection`",386,[[["typesectionreader",3]],[["binaryreadererror",3],["result",4]]]],[11,"import_section","","Validates `Payload::ImportSection`",386,[[["importsectionreader",3]],[["binaryreadererror",3],["result",4]]]],[11,"module_section_start","","Validates `Payload::ModuleSectionStart`",386,[[["range",3]],[["binaryreadererror",3],["result",4]]]],[11,"module_section_entry","","Validates `Payload::ModuleSectionEntry`.",386,[[]]],[11,"alias_section","","Validates `Payload::AliasSection`",386,[[["aliassectionreader",3]],[["binaryreadererror",3],["result",4]]]],[11,"instance_section","","Validates `Payload::InstanceSection`",386,[[["instancesectionreader",3]],[["binaryreadererror",3],["result",4]]]],[11,"function_section","","Validates `Payload::FunctionSection`",386,[[["functionsectionreader",3]],[["binaryreadererror",3],["result",4]]]],[11,"table_section","","Validates `Payload::TableSection`",386,[[["tablesectionreader",3]],[["binaryreadererror",3],["result",4]]]],[11,"memory_section","","",386,[[["memorysectionreader",3]],[["binaryreadererror",3],["result",4]]]],[11,"event_section","","",386,[[["eventsectionreader",3]],[["binaryreadererror",3],["result",4]]]],[11,"global_section","","Validates `Payload::GlobalSection`",386,[[["globalsectionreader",3]],[["binaryreadererror",3],["result",4]]]],[11,"export_section","","Validates `Payload::ExportSection`",386,[[["exportsectionreader",3]],[["binaryreadererror",3],["result",4]]]],[11,"start_section","","Validates `Payload::StartSection`",386,[[["range",3]],[["binaryreadererror",3],["result",4]]]],[11,"element_section","","Validates `Payload::ElementSection`",386,[[["elementsectionreader",3]],[["binaryreadererror",3],["result",4]]]],[11,"data_count_section","","Validates `Payload::DataCountSection`",386,[[["range",3]],[["binaryreadererror",3],["result",4]]]],[11,"code_section_start","","Validates `Payload::CodeSectionStart`.",386,[[["range",3]],[["binaryreadererror",3],["result",4]]]],[11,"code_section_entry","","Validates `Payload::CodeSectionEntry`.",386,[[],[["funcvalidator",3],["result",4],["binaryreadererror",3]]]],[11,"data_section","","Validates `Payload::DataSection`.",386,[[["datasectionreader",3]],[["binaryreadererror",3],["result",4]]]],[11,"unknown_section","","Validates `Payload::UnknownSection`.",386,[[["range",3]],[["binaryreadererror",3],["result",4]]]],[11,"end","","Validates `Payload::End`.",386,[[],[["binaryreadererror",3],["result",4]]]],[11,"from_u32","wasmtime_environ::wasm","Create a new instance from a `u32`.",387,[[],["funcindex",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",387,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",388,[[],["definedfuncindex",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",388,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",389,[[],["definedtableindex",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",389,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",390,[[],["definedmemoryindex",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",390,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",391,[[],["definedglobalindex",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",391,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",392,[[],["tableindex",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",392,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",393,[[],["globalindex",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",393,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",394,[[],["memoryindex",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",394,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",395,[[],["signatureindex",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",395,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",396,[[],["dataindex",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",396,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",397,[[],["elemindex",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",397,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",398,[[],["typeindex",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",398,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",399,[[],["moduleindex",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",399,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",400,[[],["instanceindex",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",400,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",401,[[],["eventindex",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",401,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",402,[[],["moduletypeindex",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",402,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",403,[[],["instancetypeindex",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",403,[[]]],[11,"for_memory","wasmtime_environ","Decide on an implementation style for the given `Memory`.",293,[[["tunables",3],["memory",3]]]],[11,"for_memory","","Draw up a plan for implementing a `Memory`.",295,[[["tunables",3],["memory",3]]]],[11,"for_table","","Decide on an implementation style for the given `Table`.",296,[[["table",3],["tunables",3]]]],[11,"for_table","","Draw up a plan for implementing a `Table`.",297,[[["table",3],["tunables",3]]]],[11,"unwrap_function","","Asserts this is a `ModuleType::Function`, returning the…",298,[[],["signatureindex",3]]],[11,"new","","Allocates the module data structures.",299,[[]]],[11,"get_passive_element","","Get the given passive element, if it exists.",299,[[["elemindex",3]],["option",4]]],[11,"func_index","","Convert a `DefinedFuncIndex` into a `FuncIndex`.",299,[[["definedfuncindex",3]],["funcindex",3]]],[11,"defined_func_index","","Convert a `FuncIndex` into a `DefinedFuncIndex`. Returns…",299,[[["funcindex",3]],[["definedfuncindex",3],["option",4]]]],[11,"is_imported_function","","Test whether the given function index is for an imported…",299,[[["funcindex",3]]]],[11,"table_index","","Convert a `DefinedTableIndex` into a `TableIndex`.",299,[[["definedtableindex",3]],["tableindex",3]]],[11,"defined_table_index","","Convert a `TableIndex` into a `DefinedTableIndex`. Returns…",299,[[["tableindex",3]],[["option",4],["definedtableindex",3]]]],[11,"is_imported_table","","Test whether the given table index is for an imported table.",299,[[["tableindex",3]]]],[11,"memory_index","","Convert a `DefinedMemoryIndex` into a `MemoryIndex`.",299,[[["definedmemoryindex",3]],["memoryindex",3]]],[11,"defined_memory_index","","Convert a `MemoryIndex` into a `DefinedMemoryIndex`.…",299,[[["memoryindex",3]],[["definedmemoryindex",3],["option",4]]]],[11,"is_imported_memory","","Test whether the given memory index is for an imported…",299,[[["memoryindex",3]]]],[11,"global_index","","Convert a `DefinedGlobalIndex` into a `GlobalIndex`.",299,[[["definedglobalindex",3]],["globalindex",3]]],[11,"defined_global_index","","Convert a `GlobalIndex` into a `DefinedGlobalIndex`.…",299,[[["globalindex",3]],[["option",4],["definedglobalindex",3]]]],[11,"is_imported_global","","Test whether the given global index is for an imported…",299,[[["globalindex",3]]]],[11,"imports","","Returns an iterator of all the imports in this module,…",299,[[]]],[11,"type_of","","Returns the type of an item based on its index",299,[[["entityindex",4]],["entitytype",4]]],[11,"new","","Allocates the environment data structures.",404,[[["wasmfeatures",3],["targetfrontendconfig",3],["tunables",3]]]],[11,"translate","","Translate a wasm module using this environment.",404,[[],["wasmresult",6]]],[11,"new","","Return a new `VMOffsets` instance, for a given pointer size.",318,[[["module",3]]]],[11,"vmfunction_import_body","","The offset of the `body` field.",318,[[]]],[11,"vmfunction_import_vmctx","","The offset of the `vmctx` field.",318,[[]]],[11,"size_of_vmfunction_import","","Return the size of `VMFunctionImport`.",318,[[]]],[11,"size_of_vmfunction_body_ptr","","The size of the `current_elements` field.",318,[[]]],[11,"vmtable_import_from","","The offset of the `from` field.",318,[[]]],[11,"vmtable_import_vmctx","","The offset of the `vmctx` field.",318,[[]]],[11,"size_of_vmtable_import","","Return the size of `VMTableImport`.",318,[[]]],[11,"vmtable_definition_base","","The offset of the `base` field.",318,[[]]],[11,"vmtable_definition_current_elements","","The offset of the `current_elements` field.",318,[[]]],[11,"size_of_vmtable_definition_current_elements","","The size of the `current_elements` field.",318,[[]]],[11,"size_of_vmtable_definition","","Return the size of `VMTableDefinition`.",318,[[]]],[11,"type_of_vmtable_definition_current_elements","","The type of the `current_elements` field.",318,[[],["type",3]]],[11,"vmmemory_import_from","","The offset of the `from` field.",318,[[]]],[11,"vmmemory_import_vmctx","","The offset of the `vmctx` field.",318,[[]]],[11,"size_of_vmmemory_import","","Return the size of `VMMemoryImport`.",318,[[]]],[11,"vmmemory_definition_base","","The offset of the `base` field.",318,[[]]],[11,"vmmemory_definition_current_length","","The offset of the `current_length` field.",318,[[]]],[11,"size_of_vmmemory_definition_current_length","","The size of the `current_length` field.",318,[[]]],[11,"size_of_vmmemory_definition","","Return the size of `VMMemoryDefinition`.",318,[[]]],[11,"type_of_vmmemory_definition_current_length","","The type of the `current_length` field.",318,[[],["type",3]]],[11,"vmglobal_import_from","","The offset of the `from` field.",318,[[]]],[11,"size_of_vmglobal_import","","Return the size of `VMGlobalImport`.",318,[[]]],[11,"size_of_vmglobal_definition","","Return the size of `VMGlobalDefinition`; this is the size…",318,[[]]],[11,"size_of_vmshared_signature_index","","Return the size of `VMSharedSignatureIndex`.",318,[[]]],[11,"vminterrupts_stack_limit","","Return the offset of the `stack_limit` field of…",318,[[]]],[11,"vmcaller_checked_anyfunc_func_ptr","","The offset of the `func_ptr` field.",318,[[]]],[11,"vmcaller_checked_anyfunc_type_index","","The offset of the `type_index` field.",318,[[]]],[11,"vmcaller_checked_anyfunc_vmctx","","The offset of the `vmctx` field.",318,[[]]],[11,"size_of_vmcaller_checked_anyfunc","","Return the size of `VMCallerCheckedAnyfunc`.",318,[[]]],[11,"vmctx_interrupts","","Return the offset to the `VMInterrupts` structure",318,[[]]],[11,"vmctx_externref_activations_table","","The offset of the `VMExternRefActivationsTable` member.",318,[[]]],[11,"vmctx_stack_map_registry","","The offset of the `*mut StackMapRegistry` member.",318,[[]]],[11,"vmctx_signature_ids_begin","","The offset of the `signature_ids` array.",318,[[]]],[11,"vmctx_imported_functions_begin","","The offset of the `tables` array.",318,[[]]],[11,"vmctx_imported_tables_begin","","The offset of the `tables` array.",318,[[]]],[11,"vmctx_imported_memories_begin","","The offset of the `memories` array.",318,[[]]],[11,"vmctx_imported_globals_begin","","The offset of the `globals` array.",318,[[]]],[11,"vmctx_tables_begin","","The offset of the `tables` array.",318,[[]]],[11,"vmctx_memories_begin","","The offset of the `memories` array.",318,[[]]],[11,"vmctx_globals_begin","","The offset of the `globals` array.",318,[[]]],[11,"vmctx_anyfuncs_begin","","The offset of the `anyfuncs` array.",318,[[]]],[11,"vmctx_builtin_functions_begin","","The offset of the builtin functions array.",318,[[]]],[11,"size_of_vmctx","","Return the size of the `VMContext` allocation.",318,[[]]],[11,"vmctx_vmshared_signature_id","","Return the offset to `VMSharedSignatureId` index `index`.",318,[[["typeindex",3]]]],[11,"vmctx_vmfunction_import","","Return the offset to `VMFunctionImport` index `index`.",318,[[["funcindex",3]]]],[11,"vmctx_vmtable_import","","Return the offset to `VMTableImport` index `index`.",318,[[["tableindex",3]]]],[11,"vmctx_vmmemory_import","","Return the offset to `VMMemoryImport` index `index`.",318,[[["memoryindex",3]]]],[11,"vmctx_vmglobal_import","","Return the offset to `VMGlobalImport` index `index`.",318,[[["globalindex",3]]]],[11,"vmctx_vmtable_definition","","Return the offset to `VMTableDefinition` index `index`.",318,[[["definedtableindex",3]]]],[11,"vmctx_vmmemory_definition","","Return the offset to `VMMemoryDefinition` index `index`.",318,[[["definedmemoryindex",3]]]],[11,"vmctx_vmglobal_definition","","Return the offset to the `VMGlobalDefinition` index `index`.",318,[[["definedglobalindex",3]]]],[11,"vmctx_anyfunc","","Return the offset to the `VMCallerCheckedAnyfunc` for the…",318,[[["funcindex",3]]]],[11,"vmctx_vmfunction_import_body","","Return the offset to the `body` field in `*const…",318,[[["funcindex",3]]]],[11,"vmctx_vmfunction_import_vmctx","","Return the offset to the `vmctx` field in `*const…",318,[[["funcindex",3]]]],[11,"vmctx_vmtable_import_from","","Return the offset to the `from` field in `VMTableImport`…",318,[[["tableindex",3]]]],[11,"vmctx_vmtable_definition_base","","Return the offset to the `base` field in…",318,[[["definedtableindex",3]]]],[11,"vmctx_vmtable_definition_current_elements","","Return the offset to the `current_elements` field in…",318,[[["definedtableindex",3]]]],[11,"vmctx_vmmemory_import_from","","Return the offset to the `from` field in `VMMemoryImport`…",318,[[["memoryindex",3]]]],[11,"vmctx_vmmemory_import_vmctx","","Return the offset to the `vmctx` field in `VMMemoryImport`…",318,[[["memoryindex",3]]]],[11,"vmctx_vmmemory_definition_base","","Return the offset to the `base` field in…",318,[[["definedmemoryindex",3]]]],[11,"vmctx_vmmemory_definition_current_length","","Return the offset to the `current_length` field in…",318,[[["definedmemoryindex",3]]]],[11,"vmctx_vmglobal_import_from","","Return the offset to the `from` field in `VMGlobalImport`…",318,[[["globalindex",3]]]],[11,"vmctx_builtin_function","","Return the offset to builtin function in…",318,[[["builtinfunctionindex",3]]]],[11,"vm_extern_data_ref_count","","Return the offset for `VMExternData::ref_count`.",318,[[]]],[11,"vm_extern_ref_activation_table_next","","Return the offset for `VMExternRefActivationsTable::next`.",318,[[]]],[11,"vm_extern_ref_activation_table_end","","Return the offset for `VMExternRefActivationsTable::end`.",318,[[]]],[11,"new","","Constructs `TargetSharedSignatureIndex`.",405,[[]]],[11,"index","","Returns index value.",405,[[]]]],"p":[[4,"Reloc"],[3,"AbiParam"],[4,"ArgumentPurpose"],[4,"LabelValueLoc"],[4,"LibCall"],[3,"Signature"],[3,"StackSlots"],[4,"TrapCode"],[4,"ValueLoc"],[3,"ValueLocRange"],[8,"Configurable"],[4,"SetError"],[4,"RegisterMappingError"],[4,"UnwindInfo"],[4,"UnwindCode"],[13,"SaveRegister"],[13,"RestoreRegister"],[13,"StackAlloc"],[13,"StackDealloc"],[13,"SetFramePointer"],[3,"UnwindInfo"],[4,"CallConv"],[3,"TargetFrontendConfig"],[8,"TargetIsa"],[8,"ReservedValue"],[8,"EntityRef"],[4,"Alias"],[13,"OuterModule"],[13,"OuterType"],[13,"InstanceExport"],[3,"DummyEnvironment"],[8,"FuncEnvironment"],[4,"GlobalVariable"],[13,"Memory"],[8,"ModuleEnvironment"],[4,"ReturnMode"],[8,"TargetEnvironment"],[4,"WasmError"],[13,"InvalidWebAssembly"],[3,"WasmFuncType"],[4,"WasmType"],[3,"FunctionBuilder"],[3,"Range"],[8,"WasmFuncType"],[8,"WasmModuleResources"],[4,"Payload"],[13,"Version"],[13,"StartSection"],[13,"DataCountSection"],[13,"CustomSection"],[13,"CodeSectionStart"],[13,"ModuleSectionStart"],[13,"ModuleSectionEntry"],[13,"UnknownSection"],[4,"ValidPayload"],[3,"EventType"],[3,"ExportType"],[3,"Import"],[4,"ImportSectionEntryType"],[3,"InstanceType"],[3,"ModuleType"],[3,"FuncType"],[3,"GlobalType"],[4,"MemoryType"],[13,"M32"],[13,"M64"],[3,"TableType"],[4,"Type"],[3,"WasmFeatures"],[4,"ExternalKind"],[4,"LinkingType"],[4,"NameType"],[3,"Naming"],[4,"Operator"],[13,"Block"],[13,"Loop"],[13,"If"],[13,"Try"],[13,"Catch"],[13,"Throw"],[13,"Rethrow"],[13,"Br"],[13,"BrIf"],[13,"BrTable"],[13,"Call"],[13,"CallIndirect"],[13,"ReturnCall"],[13,"ReturnCallIndirect"],[13,"TypedSelect"],[13,"LocalGet"],[13,"LocalSet"],[13,"LocalTee"],[13,"GlobalGet"],[13,"GlobalSet"],[13,"I32Load"],[13,"I64Load"],[13,"F32Load"],[13,"F64Load"],[13,"I32Load8S"],[13,"I32Load8U"],[13,"I32Load16S"],[13,"I32Load16U"],[13,"I64Load8S"],[13,"I64Load8U"],[13,"I64Load16S"],[13,"I64Load16U"],[13,"I64Load32S"],[13,"I64Load32U"],[13,"I32Store"],[13,"I64Store"],[13,"F32Store"],[13,"F64Store"],[13,"I32Store8"],[13,"I32Store16"],[13,"I64Store8"],[13,"I64Store16"],[13,"I64Store32"],[13,"MemorySize"],[13,"MemoryGrow"],[13,"I32Const"],[13,"I64Const"],[13,"F32Const"],[13,"F64Const"],[13,"RefNull"],[13,"RefFunc"],[13,"MemoryInit"],[13,"DataDrop"],[13,"MemoryCopy"],[13,"MemoryFill"],[13,"TableInit"],[13,"ElemDrop"],[13,"TableCopy"],[13,"TableFill"],[13,"TableGet"],[13,"TableSet"],[13,"TableGrow"],[13,"TableSize"],[13,"MemoryAtomicNotify"],[13,"MemoryAtomicWait32"],[13,"MemoryAtomicWait64"],[13,"AtomicFence"],[13,"I32AtomicLoad"],[13,"I64AtomicLoad"],[13,"I32AtomicLoad8U"],[13,"I32AtomicLoad16U"],[13,"I64AtomicLoad8U"],[13,"I64AtomicLoad16U"],[13,"I64AtomicLoad32U"],[13,"I32AtomicStore"],[13,"I64AtomicStore"],[13,"I32AtomicStore8"],[13,"I32AtomicStore16"],[13,"I64AtomicStore8"],[13,"I64AtomicStore16"],[13,"I64AtomicStore32"],[13,"I32AtomicRmwAdd"],[13,"I64AtomicRmwAdd"],[13,"I32AtomicRmw8AddU"],[13,"I32AtomicRmw16AddU"],[13,"I64AtomicRmw8AddU"],[13,"I64AtomicRmw16AddU"],[13,"I64AtomicRmw32AddU"],[13,"I32AtomicRmwSub"],[13,"I64AtomicRmwSub"],[13,"I32AtomicRmw8SubU"],[13,"I32AtomicRmw16SubU"],[13,"I64AtomicRmw8SubU"],[13,"I64AtomicRmw16SubU"],[13,"I64AtomicRmw32SubU"],[13,"I32AtomicRmwAnd"],[13,"I64AtomicRmwAnd"],[13,"I32AtomicRmw8AndU"],[13,"I32AtomicRmw16AndU"],[13,"I64AtomicRmw8AndU"],[13,"I64AtomicRmw16AndU"],[13,"I64AtomicRmw32AndU"],[13,"I32AtomicRmwOr"],[13,"I64AtomicRmwOr"],[13,"I32AtomicRmw8OrU"],[13,"I32AtomicRmw16OrU"],[13,"I64AtomicRmw8OrU"],[13,"I64AtomicRmw16OrU"],[13,"I64AtomicRmw32OrU"],[13,"I32AtomicRmwXor"],[13,"I64AtomicRmwXor"],[13,"I32AtomicRmw8XorU"],[13,"I32AtomicRmw16XorU"],[13,"I64AtomicRmw8XorU"],[13,"I64AtomicRmw16XorU"],[13,"I64AtomicRmw32XorU"],[13,"I32AtomicRmwXchg"],[13,"I64AtomicRmwXchg"],[13,"I32AtomicRmw8XchgU"],[13,"I32AtomicRmw16XchgU"],[13,"I64AtomicRmw8XchgU"],[13,"I64AtomicRmw16XchgU"],[13,"I64AtomicRmw32XchgU"],[13,"I32AtomicRmwCmpxchg"],[13,"I64AtomicRmwCmpxchg"],[13,"I32AtomicRmw8CmpxchgU"],[13,"I32AtomicRmw16CmpxchgU"],[13,"I64AtomicRmw8CmpxchgU"],[13,"I64AtomicRmw16CmpxchgU"],[13,"I64AtomicRmw32CmpxchgU"],[13,"V128Load"],[13,"V128Store"],[13,"V128Const"],[13,"I8x16ExtractLaneS"],[13,"I8x16ExtractLaneU"],[13,"I8x16ReplaceLane"],[13,"I16x8ExtractLaneS"],[13,"I16x8ExtractLaneU"],[13,"I16x8ReplaceLane"],[13,"I32x4ExtractLane"],[13,"I32x4ReplaceLane"],[13,"I64x2ExtractLane"],[13,"I64x2ReplaceLane"],[13,"F32x4ExtractLane"],[13,"F32x4ReplaceLane"],[13,"F64x2ExtractLane"],[13,"F64x2ReplaceLane"],[13,"I8x16Shuffle"],[13,"V128Load8Splat"],[13,"V128Load16Splat"],[13,"V128Load32Splat"],[13,"V128Load32Zero"],[13,"V128Load64Splat"],[13,"V128Load64Zero"],[13,"V128Load8x8S"],[13,"V128Load8x8U"],[13,"V128Load16x4S"],[13,"V128Load16x4U"],[13,"V128Load32x2S"],[13,"V128Load32x2U"],[13,"V128Load8Lane"],[13,"V128Load16Lane"],[13,"V128Load32Lane"],[13,"V128Load64Lane"],[13,"V128Store8Lane"],[13,"V128Store16Lane"],[13,"V128Store32Lane"],[13,"V128Store64Lane"],[4,"RelocType"],[4,"SectionCode"],[13,"Custom"],[8,"SectionReader"],[8,"SectionWithLimitedItems"],[4,"TypeDef"],[3,"ResizableLimits64"],[4,"Alias"],[13,"OuterType"],[13,"OuterModule"],[13,"InstanceExport"],[4,"DataKind"],[13,"Active"],[4,"ElementItem"],[4,"ElementKind"],[13,"Active"],[3,"ResizableLimits"],[4,"Chunk"],[13,"Parsed"],[4,"CustomSectionKind"],[4,"TypeOrFuncType"],[3,"MemoryImmediate"],[3,"Data"],[3,"Element"],[3,"Export"],[3,"Global"],[3,"InstanceArg"],[3,"FunctionLocalName"],[4,"Name"],[3,"ProducersFieldValue"],[3,"ProducersField"],[3,"Reloc"],[4,"EntityIndex"],[4,"EntityType"],[3,"Global"],[4,"GlobalInit"],[3,"Table"],[4,"TableElementType"],[3,"Memory"],[3,"Event"],[3,"InstructionAddressMap"],[3,"FunctionAddressMap"],[4,"ModuleMemoryOffset"],[3,"CompiledFunction"],[3,"Relocation"],[4,"RelocationTarget"],[3,"TrapInformation"],[3,"StackMapInformation"],[4,"CompileError"],[8,"Compiler"],[3,"TableElements"],[4,"MemoryStyle"],[13,"Static"],[3,"MemoryPlan"],[4,"TableStyle"],[3,"TablePlan"],[4,"ModuleType"],[3,"Module"],[4,"Initializer"],[13,"Import"],[13,"AliasInstanceExport"],[13,"Instantiate"],[13,"CreateModule"],[4,"ModuleUpvar"],[3,"TypeTables"],[3,"ModuleSignature"],[3,"InstanceSignature"],[3,"ModuleTranslation"],[3,"FunctionBodyData"],[3,"DebugInfoData"],[3,"NameSection"],[3,"WasmFileInfo"],[3,"FunctionMetadata"],[3,"DataInitializerLocation"],[3,"DataInitializer"],[3,"Tunables"],[3,"VMOffsets"],[3,"BuiltinFunctionIndex"],[3,"StackMap"],[3,"Type"],[3,"SourceLoc"],[3,"ValueLabel"],[3,"Builder"],[3,"Flags"],[3,"UnwindInfo"],[3,"UnwindInfo"],[3,"Builder"],[3,"PackedOption"],[3,"BoxedSlice"],[3,"PrimaryMap"],[3,"FuncTranslator"],[3,"FuncTranslationState"],[3,"ModuleTranslationState"],[3,"BinaryReader"],[3,"WasmFuncTypeInputs"],[3,"WasmFuncTypeOutputs"],[3,"ValidatorResources"],[3,"BinaryReaderError"],[3,"EventSectionReader"],[3,"AliasSectionReader"],[3,"InstanceSectionReader"],[3,"FunctionBody"],[3,"DataSectionReader"],[3,"ElementSectionReader"],[3,"ExportSectionReader"],[3,"FunctionSectionReader"],[3,"ImportSectionReader"],[3,"TypeSectionReader"],[3,"GlobalSectionReader"],[3,"MemorySectionReader"],[3,"TableSectionReader"],[3,"LocalsReader"],[3,"CodeSectionReader"],[3,"LocalsIterator"],[3,"ElementItemsReader"],[3,"ElementItemsIterator"],[3,"LinkingSectionReader"],[3,"ModuleSectionReader"],[3,"NamingReader"],[3,"FunctionLocalReader"],[3,"NameSectionReader"],[3,"OperatorsIterator"],[3,"OperatorsIteratorWithOffsets"],[3,"ProducersFieldValuesReader"],[3,"ProducersFieldValuesIterator"],[3,"ProducersSectionReader"],[3,"RelocSectionReader"],[3,"SectionIterator"],[3,"SectionIteratorLimited"],[3,"InitExpr"],[3,"Instance"],[3,"Parser"],[3,"FuncValidator"],[3,"BrTable"],[3,"Ieee32"],[3,"Ieee64"],[3,"V128"],[3,"ElementItems"],[3,"InstanceArgsReader"],[3,"NestedModule"],[3,"ModuleName"],[3,"FunctionName"],[3,"LocalName"],[3,"OperatorsReader"],[3,"Validator"],[3,"FuncIndex"],[3,"DefinedFuncIndex"],[3,"DefinedTableIndex"],[3,"DefinedMemoryIndex"],[3,"DefinedGlobalIndex"],[3,"TableIndex"],[3,"GlobalIndex"],[3,"MemoryIndex"],[3,"SignatureIndex"],[3,"DataIndex"],[3,"ElemIndex"],[3,"TypeIndex"],[3,"ModuleIndex"],[3,"InstanceIndex"],[3,"EventIndex"],[3,"ModuleTypeIndex"],[3,"InstanceTypeIndex"],[3,"ModuleEnvironment"],[3,"TargetSharedSignatureIndex"]]},\
"wasmtime_fuzzing":{"doc":"Fuzzing infrastructure for Wasmtime.","i":[[0,"generators","wasmtime_fuzzing","Test case generators.",null,null],[0,"api","wasmtime_fuzzing::generators","Generating sequences of Wasmtime API calls.",null,null],[4,"ApiCall","wasmtime_fuzzing::generators::api","A call to one of Wasmtime\'s public APIs.",null,null],[13,"ConfigNew","","",0,null],[13,"ConfigDebugInfo","","",0,null],[13,"ConfigInterruptable","","",0,null],[13,"EngineNew","","",0,null],[13,"StoreNew","","",0,null],[13,"ModuleNew","","",0,null],[12,"id","wasmtime_fuzzing::generators::api::ApiCall","",1,null],[12,"wasm","","",1,null],[13,"ModuleDrop","wasmtime_fuzzing::generators::api","",0,null],[12,"id","wasmtime_fuzzing::generators::api::ApiCall","",2,null],[13,"InstanceNew","wasmtime_fuzzing::generators::api","",0,null],[12,"id","wasmtime_fuzzing::generators::api::ApiCall","",3,null],[12,"module","","",3,null],[13,"InstanceDrop","wasmtime_fuzzing::generators::api","",0,null],[12,"id","wasmtime_fuzzing::generators::api::ApiCall","",4,null],[13,"CallExportedFunc","wasmtime_fuzzing::generators::api","",0,null],[12,"instance","wasmtime_fuzzing::generators::api::ApiCall","",5,null],[12,"nth","","",5,null],[3,"ApiCalls","wasmtime_fuzzing::generators::api","A sequence of API calls.",null,null],[12,"calls","","The API calls.",6,null],[0,"table_ops","wasmtime_fuzzing::generators","Generating series of `table.get` and `table.set` operations.",null,null],[3,"TableOps","wasmtime_fuzzing::generators::table_ops","A description of a Wasm module that makes a series of…",null,null],[11,"num_params","","Get the number of parameters this module\'s \\\"run\\\" function…",7,[[]]],[11,"table_size","","Get the size of the table that this module uses.",7,[[]]],[11,"to_wasm_binary","","Serialize this module into a Wasm binary.",7,[[],["vec",3]]],[3,"DifferentialConfig","wasmtime_fuzzing::generators","A description of configuration options that we should do…",null,null],[11,"to_wasmtime_config","","Convert this differential fuzzing config into a…",8,[[],[["config",3],["result",6]]]],[3,"Config","","Implementation of generating a `wasmtime::Config`…",null,null],[11,"to_wasmtime","","Converts this to a `wasmtime::Config` object",9,[[],["config",3]]],[3,"SpecTest","","A spec test from the upstream wast testsuite, arbitrarily…",null,null],[12,"file","","The filename of the spec test",10,null],[12,"contents","","The `*.wast` contents of the spec test",10,null],[0,"oracles","wasmtime_fuzzing","Oracles.",null,null],[0,"dummy","wasmtime_fuzzing::oracles","Dummy implementations of things that a Wasm module can…",null,null],[5,"dummy_imports","wasmtime_fuzzing::oracles::dummy","Create a set of dummy functions/globals/etc for the given…",null,[[["store",3]],[["vec",3],["extern",4]]]],[5,"dummy_func","","Construct a dummy function for the given function type",null,[[["store",3],["functype",3]],["func",3]]],[5,"dummy_value","","Construct a dummy value for the given value type.",null,[[["valtype",4]],["val",4]]],[5,"dummy_values","","Construct a sequence of dummy values for the given types.",null,[[],[["val",4],["vec",3]]]],[5,"dummy_global","","Construct a dummy global for the given global type.",null,[[["store",3],["globaltype",3]],["global",3]]],[5,"dummy_table","","Construct a dummy table for the given table type.",null,[[["store",3],["tabletype",3]],["table",3]]],[5,"dummy_memory","","Construct a dummy memory for the given memory type.",null,[[["store",3],["memorytype",3]],["memory",3]]],[5,"dummy_instance","","Construct a dummy instance for the given instance type.",null,[[["store",3],["instancetype",3]],["instance",3]]],[5,"dummy_module","","Construct a dummy module for the given module type.",null,[[["store",3],["moduletype",3]],["module",3]]],[5,"instantiate","wasmtime_fuzzing::oracles","Instantiate the Wasm buffer, and implicitly fail if we…",null,[[["strategy",4]]]],[5,"instantiate_with_config","","Instantiate the Wasm buffer, and implicitly fail if we…",null,[[["config",3],["duration",3],["option",4]]]],[5,"compile","","Compile the Wasm buffer, and implicitly fail if we have an…",null,[[["strategy",4]]]],[5,"differential_execution","","Instantiate the given Wasm module with each `Config` and…",null,[[["module",3]]]],[5,"make_api_calls","","Invoke the given API calls.",null,[[["apicalls",3]]]],[5,"spectest","","Executes the wast `test` spectest with the `config`…",null,[[["config",3],["spectest",3]]]],[5,"table_ops","","Execute a series of `table.get` and `table.set` operations.",null,[[["config",3],["tableops",3]]]],[3,"DifferentialWasmiModuleConfig","","Configuration options for wasm-smith such that generated…",null,null],[5,"differential_wasmi_execution","","Perform differential execution between Cranelift and…",null,[[["config",3]],["option",4]]],[5,"fuzz_default_config","wasmtime_fuzzing","Create default fuzzing config with given strategy",null,[[["strategy",4]],[["config",3],["result",6]]]],[11,"from","wasmtime_fuzzing::generators::api","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"into_any","","",0,[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"into_any","","",6,[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"from","wasmtime_fuzzing::generators::table_ops","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"into_any_arc","","",7,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",7,[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"from","wasmtime_fuzzing::generators","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"equivalent","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"into_any_arc","","",8,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",8,[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"into_any_arc","","",9,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",9,[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"into_any_arc","","",10,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",10,[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"from","wasmtime_fuzzing::oracles","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"into_any_arc","","",11,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",11,[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"clone","wasmtime_fuzzing::generators","",8,[[],["differentialconfig",3]]],[11,"clone","wasmtime_fuzzing::oracles","",11,[[],["differentialwasmimoduleconfig",3]]],[11,"default","","",11,[[],["differentialwasmimoduleconfig",3]]],[11,"eq","wasmtime_fuzzing::generators","",8,[[["differentialconfig",3]]]],[11,"ne","","",8,[[["differentialconfig",3]]]],[11,"fmt","wasmtime_fuzzing::generators::api","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","wasmtime_fuzzing::generators::table_ops","",7,[[["formatter",3]],["result",6]]],[11,"fmt","wasmtime_fuzzing::generators","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","wasmtime_fuzzing::oracles","",11,[[["formatter",3]],["result",6]]],[11,"hash","wasmtime_fuzzing::generators","",8,[[]]],[11,"arbitrary","wasmtime_fuzzing::generators::api","",0,[[["unstructured",3]],["result",6]]],[11,"arbitrary_take_rest","","",0,[[["unstructured",3]],["result",6]]],[11,"size_hint","","",0,[[]]],[11,"shrink","","",0,[[],[["box",3],["iterator",8]]]],[11,"arbitrary","","",6,[[["unstructured",3]],["result",6]]],[11,"size_hint","","",6,[[]]],[11,"arbitrary","wasmtime_fuzzing::generators::table_ops","",7,[[["unstructured",3]],["result",6]]],[11,"arbitrary_take_rest","","",7,[[["unstructured",3]],["result",6]]],[11,"size_hint","","",7,[[]]],[11,"shrink","","",7,[[],[["box",3],["iterator",8]]]],[11,"arbitrary","wasmtime_fuzzing::generators","",8,[[["unstructured",3]],["result",6]]],[11,"arbitrary_take_rest","","",8,[[["unstructured",3]],["result",6]]],[11,"size_hint","","",8,[[]]],[11,"shrink","","",8,[[],[["box",3],["iterator",8]]]],[11,"arbitrary","","",9,[[["unstructured",3]],["result",6]]],[11,"arbitrary_take_rest","","",9,[[["unstructured",3]],["result",6]]],[11,"size_hint","","",9,[[]]],[11,"shrink","","",9,[[],[["box",3],["iterator",8]]]],[11,"arbitrary","","",10,[[["unstructured",3]],["result",6]]],[11,"size_hint","","",10,[[]]],[11,"arbitrary","wasmtime_fuzzing::oracles","",11,[[["unstructured",3]],["result",6]]],[11,"arbitrary_take_rest","","",11,[[["unstructured",3]],["result",6]]],[11,"size_hint","","",11,[[]]],[11,"shrink","","",11,[[],[["box",3],["iterator",8]]]],[11,"allow_start_export","","",11,[[]]],[11,"min_funcs","","",11,[[]]],[11,"max_funcs","","",11,[[]]],[11,"min_memories","","",11,[[]]],[11,"max_memories","","",11,[[]]],[11,"max_imports","","",11,[[]]],[11,"min_exports","","",11,[[]]],[11,"max_memory_pages","","",11,[[]]],[11,"memory_max_size_required","","",11,[[]]]],"p":[[4,"ApiCall"],[13,"ModuleNew"],[13,"ModuleDrop"],[13,"InstanceNew"],[13,"InstanceDrop"],[13,"CallExportedFunc"],[3,"ApiCalls"],[3,"TableOps"],[3,"DifferentialConfig"],[3,"Config"],[3,"SpecTest"],[3,"DifferentialWasmiModuleConfig"]]},\
"wasmtime_jit":{"doc":"JIT-style runtime for WebAssembly using Cranelift.","i":[[0,"native","wasmtime_jit","",null,null],[5,"lookup","wasmtime_jit::native","Look for an ISA for the given `triple`. Return a builder…",null,[[["triple",3]],[["lookuperror",4],["result",4],["builder",3]]]],[5,"builder","","",null,[[],["builder",3]]],[5,"builder_without_flags","","",null,[[],["builder",3]]],[5,"call_conv","","",null,[[],["callconv",4]]],[0,"trampoline","wasmtime_jit","",null,null],[5,"pretty_error","wasmtime_jit::trampoline","Pretty-print a Cranelift error.",null,[[["function",3],["codegenerror",4],["option",4],["targetisa",8]],["string",3]]],[3,"Context","","Persistent data structures and compilation pipeline.",null,null],[12,"func","","The function we\'re compiling.",0,null],[12,"cfg","","The control flow graph of `func`.",0,null],[12,"domtree","","Dominator tree for `func`.",0,null],[12,"regalloc","","Register allocation context.",0,null],[12,"loop_analysis","","Loop analysis of `func`.",0,null],[12,"redundant_reload_remover","","Redundant-reload remover context.",0,null],[12,"mach_compile_result","","Result of MachBackend compilation, if computed.",0,null],[12,"want_disasm","","Flag: do we want a disassembly with the MachCompileResult?",0,null],[3,"FunctionBuilder","","Temporary object used to build a single Cranelift IR…",null,null],[12,"func","","The function currently being built. This field is public…",1,null],[3,"FunctionBuilderContext","","Structure used for translating a series of functions into…",null,null],[0,"ir","","",null,null],[4,"ExternalName","wasmtime_jit::trampoline::ir","The name of an external is either a reference to a…",null,null],[13,"User","","A name in a user-defined symbol table. Cranelift does not…",2,null],[12,"namespace","wasmtime_jit::trampoline::ir::ExternalName","Arbitrary.",3,null],[12,"index","","Arbitrary.",3,null],[13,"TestCase","wasmtime_jit::trampoline::ir","A test case function name of up to a hardcoded amount of…",2,null],[12,"length","wasmtime_jit::trampoline::ir::ExternalName","How many of the bytes in `ascii` are valid?",4,null],[12,"ascii","","Ascii bytes of the name.",4,null],[13,"LibCall","wasmtime_jit::trampoline::ir","A well-known runtime library function.",2,null],[3,"Function","","A function.",null,null],[12,"name","","Name of this function. Mostly used by `.clif` files.",5,null],[12,"signature","","Signature of this function.",5,null],[12,"old_signature","","The old signature of this function, before the most recent…",5,null],[12,"stack_slots","","Stack slots allocated in this function.",5,null],[12,"global_values","","Global values referenced.",5,null],[12,"heaps","","Heaps referenced.",5,null],[12,"tables","","Tables referenced.",5,null],[12,"jump_tables","","Jump tables used in this function.",5,null],[12,"dfg","","Data flow graph containing the primary definition of all…",5,null],[12,"layout","","Layout of blocks and instructions in the function body.",5,null],[12,"encodings","","Encoding recipe and bits for the legal instructions.…",5,null],[12,"locations","","Location assigned to every value.",5,null],[12,"entry_diversions","","Non-default locations assigned to value at the entry of…",5,null],[12,"offsets","","Code offsets of the block headers.",5,null],[12,"jt_offsets","","Code offsets of Jump Table headers.",5,null],[12,"srclocs","","Source locations.",5,null],[12,"prologue_end","","Instruction that marks the end (inclusive) of the…",5,null],[12,"epilogues_start","","The instructions that mark the start (inclusive) of an…",5,null],[12,"stack_limit","","An optional global value which represents an expression…",5,null],[8,"InstBuilder","","Convenience methods for building instructions.",null,null],[11,"jump","","Jump.",6,[[["block",3]],["inst",3]]],[11,"fallthrough","","Fall through to the next block.",6,[[["block",3]],["inst",3]]],[11,"brz","","Branch when zero.",6,[[["value",3],["block",3]],["inst",3]]],[11,"brnz","","Branch when non-zero.",6,[[["value",3],["block",3]],["inst",3]]],[11,"br_icmp","","Compare scalar integers and branch.",6,[[["value",3],["block",3]],["inst",3]]],[11,"brif","","Branch when condition is true in integer CPU flags.",6,[[["value",3],["block",3]],["inst",3]]],[11,"brff","","Branch when condition is true in floating point CPU flags.",6,[[["value",3],["block",3]],["inst",3]]],[11,"br_table","","Indirect branch via jump table.",6,[[["jumptable",3],["value",3],["block",3]],["inst",3]]],[11,"jump_table_entry","","Get an entry from a jump table.",6,[[["jumptable",3],["value",3]],["value",3]]],[11,"jump_table_base","","Get the absolute base address of a jump table.",6,[[["type",3],["jumptable",3]],["value",3]]],[11,"indirect_jump_table_br","","Branch indirectly via a jump table entry.",6,[[["jumptable",3],["value",3]],["inst",3]]],[11,"debugtrap","","Encodes an assembly debug trap.",6,[[],["inst",3]]],[11,"trap","","Terminate execution unconditionally.",6,[[],["inst",3]]],[11,"trapz","","Trap when zero.",6,[[["value",3]],["inst",3]]],[11,"resumable_trap","","A resumable trap.",6,[[],["inst",3]]],[11,"trapnz","","Trap when non-zero.",6,[[["value",3]],["inst",3]]],[11,"resumable_trapnz","","A resumable trap to be called when the passed condition is…",6,[[["value",3]],["inst",3]]],[11,"trapif","","Trap when condition is true in integer CPU flags.",6,[[["value",3]],["inst",3]]],[11,"trapff","","Trap when condition is true in floating point CPU flags.",6,[[["value",3]],["inst",3]]],[11,"return_","","Return from the function.",6,[[],["inst",3]]],[11,"fallthrough_return","","Return from the function by fallthrough.",6,[[],["inst",3]]],[11,"call","","Direct function call.",6,[[["funcref",3]],["inst",3]]],[11,"call_indirect","","Indirect function call.",6,[[["value",3],["sigref",3]],["inst",3]]],[11,"func_addr","","Get the address of a function.",6,[[["type",3],["funcref",3]],["value",3]]],[11,"splat","","Vector splat.",6,[[["type",3],["value",3]],["value",3]]],[11,"swizzle","","Vector swizzle.",6,[[["type",3],["value",3]],["value",3]]],[11,"insertlane","","Insert `y` as lane `Idx` in x.",6,[[["value",3]],["value",3]]],[11,"extractlane","","Extract lane `Idx` from `x`.",6,[[["value",3]],["value",3]]],[11,"imin","","Signed integer minimum.",6,[[["value",3]],["value",3]]],[11,"umin","","Unsigned integer minimum.",6,[[["value",3]],["value",3]]],[11,"imax","","Signed integer maximum.",6,[[["value",3]],["value",3]]],[11,"umax","","Unsigned integer maximum.",6,[[["value",3]],["value",3]]],[11,"avg_round","","Unsigned average with rounding: `a := (x + y + 1) // 2`",6,[[["value",3]],["value",3]]],[11,"load","","Load from memory at `p + Offset`.",6,[[["type",3],["value",3]],["value",3]]],[11,"load_complex","","Load from memory at `sum(args) + Offset`.",6,[[["type",3]],["value",3]]],[11,"store","","Store `x` to memory at `p + Offset`.",6,[[["value",3]],["inst",3]]],[11,"store_complex","","Store `x` to memory at `sum(args) + Offset`.",6,[[["value",3]],["inst",3]]],[11,"uload8","","Load 8 bits from memory at `p + Offset` and zero-extend.",6,[[["type",3],["value",3]],["value",3]]],[11,"uload8_complex","","Load 8 bits from memory at `sum(args) + Offset` and…",6,[[["type",3]],["value",3]]],[11,"sload8","","Load 8 bits from memory at `p + Offset` and sign-extend.",6,[[["type",3],["value",3]],["value",3]]],[11,"sload8_complex","","Load 8 bits from memory at `sum(args) + Offset` and…",6,[[["type",3]],["value",3]]],[11,"istore8","","Store the low 8 bits of `x` to memory at `p + Offset`.",6,[[["value",3]],["inst",3]]],[11,"istore8_complex","","Store the low 8 bits of `x` to memory at `sum(args) +…",6,[[["value",3]],["inst",3]]],[11,"uload16","","Load 16 bits from memory at `p + Offset` and zero-extend.",6,[[["type",3],["value",3]],["value",3]]],[11,"uload16_complex","","Load 16 bits from memory at `sum(args) + Offset` and…",6,[[["type",3]],["value",3]]],[11,"sload16","","Load 16 bits from memory at `p + Offset` and sign-extend.",6,[[["type",3],["value",3]],["value",3]]],[11,"sload16_complex","","Load 16 bits from memory at `sum(args) + Offset` and…",6,[[["type",3]],["value",3]]],[11,"istore16","","Store the low 16 bits of `x` to memory at `p + Offset`.",6,[[["value",3]],["inst",3]]],[11,"istore16_complex","","Store the low 16 bits of `x` to memory at `sum(args) +…",6,[[["value",3]],["inst",3]]],[11,"uload32","","Load 32 bits from memory at `p + Offset` and zero-extend.",6,[[["value",3]],["value",3]]],[11,"uload32_complex","","Load 32 bits from memory at `sum(args) + Offset` and…",6,[[],["value",3]]],[11,"sload32","","Load 32 bits from memory at `p + Offset` and sign-extend.",6,[[["value",3]],["value",3]]],[11,"sload32_complex","","Load 32 bits from memory at `sum(args) + Offset` and…",6,[[],["value",3]]],[11,"istore32","","Store the low 32 bits of `x` to memory at `p + Offset`.",6,[[["value",3]],["inst",3]]],[11,"istore32_complex","","Store the low 32 bits of `x` to memory at `sum(args) +…",6,[[["value",3]],["inst",3]]],[11,"uload8x8","","Load an 8x8 vector (64 bits) from memory at `p + Offset`…",6,[[["value",3]],["value",3]]],[11,"uload8x8_complex","","Load an 8x8 vector (64 bits) from memory at `sum(args) +…",6,[[],["value",3]]],[11,"sload8x8","","Load an 8x8 vector (64 bits) from memory at `p + Offset`…",6,[[["value",3]],["value",3]]],[11,"sload8x8_complex","","Load an 8x8 vector (64 bits) from memory at `sum(args) +…",6,[[],["value",3]]],[11,"uload16x4","","Load a 16x4 vector (64 bits) from memory at `p + Offset`…",6,[[["value",3]],["value",3]]],[11,"uload16x4_complex","","Load a 16x4 vector (64 bits) from memory at `sum(args) +…",6,[[],["value",3]]],[11,"sload16x4","","Load a 16x4 vector (64 bits) from memory at `p + Offset`…",6,[[["value",3]],["value",3]]],[11,"sload16x4_complex","","Load a 16x4 vector (64 bits) from memory at `sum(args) +…",6,[[],["value",3]]],[11,"uload32x2","","Load an 32x2 vector (64 bits) from memory at `p + Offset`…",6,[[["value",3]],["value",3]]],[11,"uload32x2_complex","","Load a 32x2 vector (64 bits) from memory at `sum(args) +…",6,[[],["value",3]]],[11,"sload32x2","","Load a 32x2 vector (64 bits) from memory at `p + Offset`…",6,[[["value",3]],["value",3]]],[11,"sload32x2_complex","","Load a 32x2 vector (64 bits) from memory at `sum(args) +…",6,[[],["value",3]]],[11,"stack_load","","Load a value from a stack slot at the constant offset.",6,[[["type",3],["stackslot",3]],["value",3]]],[11,"stack_store","","Store a value to a stack slot at a constant offset.",6,[[["value",3],["stackslot",3]],["inst",3]]],[11,"stack_addr","","Get the address of a stack slot.",6,[[["type",3],["stackslot",3]],["value",3]]],[11,"global_value","","Compute the value of global GV.",6,[[["type",3],["globalvalue",3]],["value",3]]],[11,"symbol_value","","Compute the value of global GV, which is a symbolic value.",6,[[["type",3],["globalvalue",3]],["value",3]]],[11,"tls_value","","Compute the value of global GV, which is a TLS (thread…",6,[[["type",3],["globalvalue",3]],["value",3]]],[11,"heap_addr","","Bounds check and compute absolute address of heap memory.",6,[[["type",3],["heap",3],["value",3]],["value",3]]],[11,"get_pinned_reg","","Gets the content of the pinned register, when it\'s enabled.",6,[[["type",3]],["value",3]]],[11,"set_pinned_reg","","Sets the content of the pinned register, when it\'s enabled.",6,[[["value",3]],["inst",3]]],[11,"table_addr","","Bounds check and compute absolute address of a table entry.",6,[[["type",3],["value",3],["table",3]],["value",3]]],[11,"iconst","","Integer constant.",6,[[["type",3]],["value",3]]],[11,"f32const","","Floating point constant.",6,[[],["value",3]]],[11,"f64const","","Floating point constant.",6,[[],["value",3]]],[11,"bconst","","Boolean constant.",6,[[["type",3]],["value",3]]],[11,"vconst","","SIMD vector constant.",6,[[["type",3]],["value",3]]],[11,"const_addr","","Calculate the base address of a value in the constant pool.",6,[[["type",3]],["value",3]]],[11,"shuffle","","SIMD vector shuffle.",6,[[["value",3]],["value",3]]],[11,"null","","Null constant value for reference types.",6,[[["type",3]],["value",3]]],[11,"nop","","Just a dummy instruction.",6,[[],["inst",3]]],[11,"select","","Conditional select.",6,[[["value",3]],["value",3]]],[11,"selectif","","Conditional select, dependent on integer condition codes.",6,[[["type",3],["value",3]],["value",3]]],[11,"selectif_spectre_guard","","Conditional select intended for Spectre guards.",6,[[["type",3],["value",3]],["value",3]]],[11,"bitselect","","Conditional select of bits.",6,[[["value",3]],["value",3]]],[11,"copy","","Register-register copy.",6,[[["value",3]],["value",3]]],[11,"spill","","Spill a register value to a stack slot.",6,[[["value",3]],["value",3]]],[11,"fill","","Load a register value from a stack slot.",6,[[["value",3]],["value",3]]],[11,"fill_nop","","This is identical to `fill`, except it has no encoding,…",6,[[["value",3]],["value",3]]],[11,"dummy_sarg_t","","This creates a sarg_t",6,[[],["value",3]]],[11,"regmove","","Temporarily divert `x` from `src` to `dst`.",6,[[["value",3]],["inst",3]]],[11,"copy_special","","Copies the contents of \'\'src\'\' register to \'\'dst\'\' register.",6,[[],["inst",3]]],[11,"copy_to_ssa","","Copies the contents of \'\'src\'\' register to \'\'a\'\' SSA name.",6,[[["type",3]],["value",3]]],[11,"copy_nop","","Stack-slot-to-the-same-stack-slot copy, which is…",6,[[["value",3]],["value",3]]],[11,"adjust_sp_down","","Subtracts `delta` offset value from the stack pointer…",6,[[["value",3]],["inst",3]]],[11,"adjust_sp_up_imm","","Adds `Offset` immediate offset value to the stack pointer…",6,[[],["inst",3]]],[11,"adjust_sp_down_imm","","Subtracts `Offset` immediate offset value from the stack…",6,[[],["inst",3]]],[11,"ifcmp_sp","","Compare `addr` with the stack pointer and set the CPU flags.",6,[[["value",3]],["value",3]]],[11,"regspill","","Temporarily divert `x` from `src` to `SS`.",6,[[["value",3],["stackslot",3]],["inst",3]]],[11,"regfill","","Temporarily divert `x` from `SS` to `dst`.",6,[[["value",3],["stackslot",3]],["inst",3]]],[11,"safepoint","","This instruction will provide live reference values at a…",6,[[],["inst",3]]],[11,"vsplit","","Split a vector into two halves.",6,[[["value",3]]]],[11,"vconcat","","Vector concatenation.",6,[[["value",3]],["value",3]]],[11,"vselect","","Vector lane select.",6,[[["value",3]],["value",3]]],[11,"vany_true","","Reduce a vector to a scalar boolean.",6,[[["value",3]],["value",3]]],[11,"vall_true","","Reduce a vector to a scalar boolean.",6,[[["value",3]],["value",3]]],[11,"vhigh_bits","","Reduce a vector to a scalar integer.",6,[[["type",3],["value",3]],["value",3]]],[11,"icmp","","Integer comparison.",6,[[["value",3]],["value",3]]],[11,"icmp_imm","","Compare scalar integer to a constant.",6,[[["value",3]],["value",3]]],[11,"ifcmp","","Compare scalar integers and return flags.",6,[[["value",3]],["value",3]]],[11,"ifcmp_imm","","Compare scalar integer to a constant and return flags.",6,[[["value",3]],["value",3]]],[11,"iadd","","Wrapping integer addition: `a := x + y \\\\pmod{2^B}`.",6,[[["value",3]],["value",3]]],[11,"uadd_sat","","Add with unsigned saturation.",6,[[["value",3]],["value",3]]],[11,"sadd_sat","","Add with signed saturation.",6,[[["value",3]],["value",3]]],[11,"isub","","Wrapping integer subtraction: `a := x - y \\\\pmod{2^B}`.",6,[[["value",3]],["value",3]]],[11,"usub_sat","","Subtract with unsigned saturation.",6,[[["value",3]],["value",3]]],[11,"ssub_sat","","Subtract with signed saturation.",6,[[["value",3]],["value",3]]],[11,"ineg","","Integer negation: `a := -x \\\\pmod{2^B}`.",6,[[["value",3]],["value",3]]],[11,"iabs","","Integer absolute value with wrapping: `a := |x|`.",6,[[["value",3]],["value",3]]],[11,"imul","","Wrapping integer multiplication: `a := x y \\\\pmod{2^B}`.",6,[[["value",3]],["value",3]]],[11,"umulhi","","Unsigned integer multiplication, producing the high half…",6,[[["value",3]],["value",3]]],[11,"smulhi","","Signed integer multiplication, producing the high half of…",6,[[["value",3]],["value",3]]],[11,"udiv","","Unsigned integer division: `a := \\\\lfloor {x \\\\over y}…",6,[[["value",3]],["value",3]]],[11,"sdiv","","Signed integer division rounded toward zero: `a :=…",6,[[["value",3]],["value",3]]],[11,"urem","","Unsigned integer remainder.",6,[[["value",3]],["value",3]]],[11,"srem","","Signed integer remainder. The result has the sign of the…",6,[[["value",3]],["value",3]]],[11,"iadd_imm","","Add immediate integer.",6,[[["value",3]],["value",3]]],[11,"imul_imm","","Integer multiplication by immediate constant.",6,[[["value",3]],["value",3]]],[11,"udiv_imm","","Unsigned integer division by an immediate constant.",6,[[["value",3]],["value",3]]],[11,"sdiv_imm","","Signed integer division by an immediate constant.",6,[[["value",3]],["value",3]]],[11,"urem_imm","","Unsigned integer remainder with immediate divisor.",6,[[["value",3]],["value",3]]],[11,"srem_imm","","Signed integer remainder with immediate divisor.",6,[[["value",3]],["value",3]]],[11,"irsub_imm","","Immediate reverse wrapping subtraction: `a := Y - x…",6,[[["value",3]],["value",3]]],[11,"iadd_cin","","Add integers with carry in.",6,[[["value",3]],["value",3]]],[11,"iadd_ifcin","","Add integers with carry in.",6,[[["value",3]],["value",3]]],[11,"iadd_cout","","Add integers with carry out.",6,[[["value",3]]]],[11,"iadd_ifcout","","Add integers with carry out.",6,[[["value",3]]]],[11,"iadd_carry","","Add integers with carry in and out.",6,[[["value",3]]]],[11,"iadd_ifcarry","","Add integers with carry in and out.",6,[[["value",3]]]],[11,"isub_bin","","Subtract integers with borrow in.",6,[[["value",3]],["value",3]]],[11,"isub_ifbin","","Subtract integers with borrow in.",6,[[["value",3]],["value",3]]],[11,"isub_bout","","Subtract integers with borrow out.",6,[[["value",3]]]],[11,"isub_ifbout","","Subtract integers with borrow out.",6,[[["value",3]]]],[11,"isub_borrow","","Subtract integers with borrow in and out.",6,[[["value",3]]]],[11,"isub_ifborrow","","Subtract integers with borrow in and out.",6,[[["value",3]]]],[11,"band","","Bitwise and.",6,[[["value",3]],["value",3]]],[11,"bor","","Bitwise or.",6,[[["value",3]],["value",3]]],[11,"bxor","","Bitwise xor.",6,[[["value",3]],["value",3]]],[11,"bnot","","Bitwise not.",6,[[["value",3]],["value",3]]],[11,"band_not","","Bitwise and not.",6,[[["value",3]],["value",3]]],[11,"bor_not","","Bitwise or not.",6,[[["value",3]],["value",3]]],[11,"bxor_not","","Bitwise xor not.",6,[[["value",3]],["value",3]]],[11,"band_imm","","Bitwise and with immediate.",6,[[["value",3]],["value",3]]],[11,"bor_imm","","Bitwise or with immediate.",6,[[["value",3]],["value",3]]],[11,"bxor_imm","","Bitwise xor with immediate.",6,[[["value",3]],["value",3]]],[11,"rotl","","Rotate left.",6,[[["value",3]],["value",3]]],[11,"rotr","","Rotate right.",6,[[["value",3]],["value",3]]],[11,"rotl_imm","","Rotate left by immediate.",6,[[["value",3]],["value",3]]],[11,"rotr_imm","","Rotate right by immediate.",6,[[["value",3]],["value",3]]],[11,"ishl","","Integer shift left. Shift the bits in `x` towards the MSB…",6,[[["value",3]],["value",3]]],[11,"ushr","","Unsigned shift right. Shift bits in `x` towards the LSB by…",6,[[["value",3]],["value",3]]],[11,"sshr","","Signed shift right. Shift bits in `x` towards the LSB by…",6,[[["value",3]],["value",3]]],[11,"ishl_imm","","Integer shift left by immediate.",6,[[["value",3]],["value",3]]],[11,"ushr_imm","","Unsigned shift right by immediate.",6,[[["value",3]],["value",3]]],[11,"sshr_imm","","Signed shift right by immediate.",6,[[["value",3]],["value",3]]],[11,"bitrev","","Reverse the bits of a integer.",6,[[["value",3]],["value",3]]],[11,"clz","","Count leading zero bits.",6,[[["value",3]],["value",3]]],[11,"cls","","Count leading sign bits.",6,[[["value",3]],["value",3]]],[11,"ctz","","Count trailing zeros.",6,[[["value",3]],["value",3]]],[11,"popcnt","","Population count",6,[[["value",3]],["value",3]]],[11,"fcmp","","Floating point comparison.",6,[[["value",3]],["value",3]]],[11,"ffcmp","","Floating point comparison returning flags.",6,[[["value",3]],["value",3]]],[11,"fadd","","Floating point addition.",6,[[["value",3]],["value",3]]],[11,"fsub","","Floating point subtraction.",6,[[["value",3]],["value",3]]],[11,"fmul","","Floating point multiplication.",6,[[["value",3]],["value",3]]],[11,"fdiv","","Floating point division.",6,[[["value",3]],["value",3]]],[11,"sqrt","","Floating point square root.",6,[[["value",3]],["value",3]]],[11,"fma","","Floating point fused multiply-and-add.",6,[[["value",3]],["value",3]]],[11,"fneg","","Floating point negation.",6,[[["value",3]],["value",3]]],[11,"fabs","","Floating point absolute value.",6,[[["value",3]],["value",3]]],[11,"fcopysign","","Floating point copy sign.",6,[[["value",3]],["value",3]]],[11,"fmin","","Floating point minimum, propagating NaNs.",6,[[["value",3]],["value",3]]],[11,"fmin_pseudo","","Floating point pseudo-minimum, propagating NaNs. This…",6,[[["value",3]],["value",3]]],[11,"fmax","","Floating point maximum, propagating NaNs.",6,[[["value",3]],["value",3]]],[11,"fmax_pseudo","","Floating point pseudo-maximum, propagating NaNs. This…",6,[[["value",3]],["value",3]]],[11,"ceil","","Round floating point round to integral, towards positive…",6,[[["value",3]],["value",3]]],[11,"floor","","Round floating point round to integral, towards negative…",6,[[["value",3]],["value",3]]],[11,"trunc","","Round floating point round to integral, towards zero.",6,[[["value",3]],["value",3]]],[11,"nearest","","Round floating point round to integral, towards nearest…",6,[[["value",3]],["value",3]]],[11,"is_null","","Reference verification.",6,[[["value",3]],["value",3]]],[11,"is_invalid","","Reference verification.",6,[[["value",3]],["value",3]]],[11,"trueif","","Test integer CPU flags for a specific condition.",6,[[["value",3]],["value",3]]],[11,"trueff","","Test floating point CPU flags for a specific condition.",6,[[["value",3]],["value",3]]],[11,"bitcast","","Reinterpret the bits in `x` as a different type.",6,[[["type",3],["value",3]],["value",3]]],[11,"raw_bitcast","","Cast the bits in `x` as a different type of the same bit…",6,[[["type",3],["value",3]],["value",3]]],[11,"scalar_to_vector","","Copies a scalar value to a vector value. The scalar is…",6,[[["type",3],["value",3]],["value",3]]],[11,"breduce","","Convert `x` to a smaller boolean type in the…",6,[[["type",3],["value",3]],["value",3]]],[11,"bextend","","Convert `x` to a larger boolean type in the…",6,[[["type",3],["value",3]],["value",3]]],[11,"bint","","Convert `x` to an integer.",6,[[["type",3],["value",3]],["value",3]]],[11,"bmask","","Convert `x` to an integer mask.",6,[[["type",3],["value",3]],["value",3]]],[11,"ireduce","","Convert `x` to a smaller integer type by dropping high bits.",6,[[["type",3],["value",3]],["value",3]]],[11,"snarrow","","Combine `x` and `y` into a vector with twice the lanes but…",6,[[["value",3]],["value",3]]],[11,"unarrow","","Combine `x` and `y` into a vector with twice the lanes but…",6,[[["value",3]],["value",3]]],[11,"swiden_low","","Widen the low lanes of `x` using signed extension.",6,[[["value",3]],["value",3]]],[11,"swiden_high","","Widen the high lanes of `x` using signed extension.",6,[[["value",3]],["value",3]]],[11,"uwiden_low","","Widen the low lanes of `x` using unsigned extension.",6,[[["value",3]],["value",3]]],[11,"uwiden_high","","Widen the high lanes of `x` using unsigned extension.",6,[[["value",3]],["value",3]]],[11,"widening_pairwise_dot_product_s","","Takes corresponding elements in `x` and `y`, performs a…",6,[[["value",3]],["value",3]]],[11,"uextend","","Convert `x` to a larger integer type by zero-extending.",6,[[["type",3],["value",3]],["value",3]]],[11,"sextend","","Convert `x` to a larger integer type by sign-extending.",6,[[["type",3],["value",3]],["value",3]]],[11,"fpromote","","Convert `x` to a larger floating point format.",6,[[["type",3],["value",3]],["value",3]]],[11,"fdemote","","Convert `x` to a smaller floating point format.",6,[[["type",3],["value",3]],["value",3]]],[11,"fcvt_to_uint","","Convert floating point to unsigned integer.",6,[[["type",3],["value",3]],["value",3]]],[11,"fcvt_to_uint_sat","","Convert floating point to unsigned integer as fcvt_to_uint…",6,[[["type",3],["value",3]],["value",3]]],[11,"fcvt_to_sint","","Convert floating point to signed integer.",6,[[["type",3],["value",3]],["value",3]]],[11,"fcvt_to_sint_sat","","Convert floating point to signed integer as fcvt_to_sint…",6,[[["type",3],["value",3]],["value",3]]],[11,"fcvt_from_uint","","Convert unsigned integer to floating point.",6,[[["type",3],["value",3]],["value",3]]],[11,"fcvt_from_sint","","Convert signed integer to floating point.",6,[[["type",3],["value",3]],["value",3]]],[11,"isplit","","Split an integer into low and high parts.",6,[[["value",3]]]],[11,"iconcat","","Concatenate low and high bits to form a larger integer type.",6,[[["value",3]],["value",3]]],[11,"atomic_rmw","","Atomically read-modify-write memory at `p`, with second…",6,[[["type",3],["value",3]],["value",3]]],[11,"atomic_cas","","Perform an atomic compare-and-swap operation on memory at…",6,[[["value",3]],["value",3]]],[11,"atomic_load","","Atomically load from memory at `p`.",6,[[["type",3],["value",3]],["value",3]]],[11,"atomic_store","","Atomically store `x` to memory at `p`.",6,[[["value",3]],["inst",3]]],[11,"fence","","A memory fence. This must provide ordering to ensure that,…",6,[[],["inst",3]]],[11,"x86_udivmodx","","Extended unsigned division.",6,[[["value",3]]]],[11,"x86_sdivmodx","","Extended signed division.",6,[[["value",3]]]],[11,"x86_umulx","","Unsigned integer multiplication, producing a double-length…",6,[[["value",3]]]],[11,"x86_smulx","","Signed integer multiplication, producing a double-length…",6,[[["value",3]]]],[11,"x86_cvtt2si","","Convert with truncation floating point to signed integer.",6,[[["type",3],["value",3]],["value",3]]],[11,"x86_vcvtudq2ps","","Convert unsigned integer to floating point.",6,[[["value",3]],["value",3]]],[11,"x86_fmin","","Floating point minimum with x86 semantics.",6,[[["value",3]],["value",3]]],[11,"x86_fmax","","Floating point maximum with x86 semantics.",6,[[["value",3]],["value",3]]],[11,"x86_push","","Pushes a value onto the stack.",6,[[["value",3]],["inst",3]]],[11,"x86_pop","","Pops a value from the stack.",6,[[["type",3]],["value",3]]],[11,"x86_bsr","","Bit Scan Reverse -- returns the bit-index of the most…",6,[[["value",3]]]],[11,"x86_bsf","","Bit Scan Forwards -- returns the bit-index of the least…",6,[[["value",3]]]],[11,"x86_pshufd","","Packed Shuffle Doublewords -- copies data from either…",6,[[["value",3]],["value",3]]],[11,"x86_pshufb","","Packed Shuffle Bytes -- re-orders data in an extended…",6,[[["value",3]],["value",3]]],[11,"x86_pblendw","","Blend packed words using an immediate mask. Each bit of…",6,[[["value",3]],["value",3]]],[11,"x86_pextr","","Extract lane `Idx` from `x`. The lane index, `Idx`, is an…",6,[[["value",3]],["value",3]]],[11,"x86_pinsr","","Insert `y` into `x` at lane `Idx`. The lane index, `Idx`,…",6,[[["value",3]],["value",3]]],[11,"x86_insertps","","Insert a lane of `y` into `x` at using `Idx` to encode…",6,[[["value",3]],["value",3]]],[11,"x86_punpckh","","Unpack the high-order lanes of `x` and `y` and interleave…",6,[[["value",3]],["value",3]]],[11,"x86_punpckl","","Unpack the low-order lanes of `x` and `y` and interleave…",6,[[["value",3]],["value",3]]],[11,"x86_movsd","","Move the low 64 bits of the float vector `y` to the low 64…",6,[[["value",3]],["value",3]]],[11,"x86_movlhps","","Move the low 64 bits of the float vector `y` to the high…",6,[[["value",3]],["value",3]]],[11,"x86_psll","","Shift Packed Data Left Logical -- This implements the…",6,[[["value",3]],["value",3]]],[11,"x86_psrl","","Shift Packed Data Right Logical -- This implements the…",6,[[["value",3]],["value",3]]],[11,"x86_psra","","Shift Packed Data Right Arithmetic -- This implements the…",6,[[["value",3]],["value",3]]],[11,"x86_pmullq","","Multiply Packed Integers -- Multiply two 64x2 integers and…",6,[[["value",3]],["value",3]]],[11,"x86_pmuludq","","Multiply Packed Integers -- Using only the bottom 32 bits…",6,[[["value",3]],["value",3]]],[11,"x86_ptest","","Logical Compare -- PTEST will set the ZF flag if all bits…",6,[[["value",3]],["value",3]]],[11,"x86_pmaxs","","Maximum of Packed Signed Integers -- Compare signed…",6,[[["value",3]],["value",3]]],[11,"x86_pmaxu","","Maximum of Packed Unsigned Integers -- Compare unsigned…",6,[[["value",3]],["value",3]]],[11,"x86_pmins","","Minimum of Packed Signed Integers -- Compare signed…",6,[[["value",3]],["value",3]]],[11,"x86_pminu","","Minimum of Packed Unsigned Integers -- Compare unsigned…",6,[[["value",3]],["value",3]]],[11,"x86_palignr","","Concatenate destination and source operands, extracting a…",6,[[["value",3]],["value",3]]],[11,"x86_elf_tls_get_addr","","Elf tls get addr -- This implements the GD TLS model for…",6,[[["globalvalue",3]],["value",3]]],[11,"x86_macho_tls_get_addr","","Mach-O tls get addr -- This implements TLS access for…",6,[[["globalvalue",3]],["value",3]]],[11,"AtomicCas","","AtomicCas(imms=(flags: ir::MemFlags), vals=3)",6,[[["opcode",4],["type",3],["memflags",3],["value",3]]]],[11,"AtomicRmw","","AtomicRmw(imms=(flags: ir::MemFlags, op: ir::AtomicRmwOp),…",6,[[["atomicrmwop",4],["opcode",4],["type",3],["memflags",3],["value",3]]]],[11,"Binary","","Binary(imms=(), vals=2)",6,[[["opcode",4],["type",3],["value",3]]]],[11,"BinaryImm64","","BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1)",6,[[["imm64",3],["opcode",4],["type",3],["value",3]]]],[11,"BinaryImm8","","BinaryImm8(imms=(imm: ir::immediates::Uimm8), vals=1)",6,[[["type",3],["opcode",4],["value",3]]]],[11,"Branch","","Branch(imms=(destination: ir::Block), vals=1)",6,[[["opcode",4],["type",3],["block",3],["entitylist",3],["value",3]]]],[11,"BranchFloat","","BranchFloat(imms=(cond: ir::condcodes::FloatCC,…",6,[[["opcode",4],["floatcc",4],["type",3],["block",3],["entitylist",3],["value",3]]]],[11,"BranchIcmp","","BranchIcmp(imms=(cond: ir::condcodes::IntCC, destination:…",6,[[["intcc",4],["opcode",4],["type",3],["block",3],["entitylist",3],["value",3]]]],[11,"BranchInt","","BranchInt(imms=(cond: ir::condcodes::IntCC, destination:…",6,[[["intcc",4],["opcode",4],["type",3],["block",3],["entitylist",3],["value",3]]]],[11,"BranchTable","","BranchTable(imms=(destination: ir::Block, table:…",6,[[["opcode",4],["type",3],["block",3],["jumptable",3],["value",3]]]],[11,"BranchTableBase","","BranchTableBase(imms=(table: ir::JumpTable), vals=0)",6,[[["type",3],["opcode",4],["jumptable",3]]]],[11,"BranchTableEntry","","BranchTableEntry(imms=(imm: ir::immediates::Uimm8, table:…",6,[[["opcode",4],["type",3],["jumptable",3],["value",3]]]],[11,"Call","","Call(imms=(func_ref: ir::FuncRef), vals=0)",6,[[["opcode",4],["funcref",3],["type",3],["entitylist",3],["value",3]]]],[11,"CallIndirect","","CallIndirect(imms=(sig_ref: ir::SigRef), vals=1)",6,[[["opcode",4],["sigref",3],["type",3],["entitylist",3],["value",3]]]],[11,"CondTrap","","CondTrap(imms=(code: ir::TrapCode), vals=1)",6,[[["opcode",4],["trapcode",4],["type",3],["value",3]]]],[11,"CopySpecial","","CopySpecial(imms=(src: isa::RegUnit, dst: isa::RegUnit),…",6,[[["type",3],["opcode",4]]]],[11,"CopyToSsa","","CopyToSsa(imms=(src: isa::RegUnit), vals=0)",6,[[["type",3],["opcode",4]]]],[11,"FloatCompare","","FloatCompare(imms=(cond: ir::condcodes::FloatCC), vals=2)",6,[[["opcode",4],["floatcc",4],["type",3],["value",3]]]],[11,"FloatCond","","FloatCond(imms=(cond: ir::condcodes::FloatCC), vals=1)",6,[[["opcode",4],["floatcc",4],["type",3],["value",3]]]],[11,"FloatCondTrap","","FloatCondTrap(imms=(cond: ir::condcodes::FloatCC, code:…",6,[[["opcode",4],["floatcc",4],["type",3],["trapcode",4],["value",3]]]],[11,"FuncAddr","","FuncAddr(imms=(func_ref: ir::FuncRef), vals=0)",6,[[["type",3],["opcode",4],["funcref",3]]]],[11,"HeapAddr","","HeapAddr(imms=(heap: ir::Heap, imm:…",6,[[["opcode",4],["type",3],["heap",3],["uimm32",3],["value",3]]]],[11,"IndirectJump","","IndirectJump(imms=(table: ir::JumpTable), vals=1)",6,[[["opcode",4],["type",3],["jumptable",3],["value",3]]]],[11,"IntCompare","","IntCompare(imms=(cond: ir::condcodes::IntCC), vals=2)",6,[[["intcc",4],["opcode",4],["type",3],["value",3]]]],[11,"IntCompareImm","","IntCompareImm(imms=(cond: ir::condcodes::IntCC, imm:…",6,[[["intcc",4],["opcode",4],["imm64",3],["type",3],["value",3]]]],[11,"IntCond","","IntCond(imms=(cond: ir::condcodes::IntCC), vals=1)",6,[[["intcc",4],["opcode",4],["type",3],["value",3]]]],[11,"IntCondTrap","","IntCondTrap(imms=(cond: ir::condcodes::IntCC, code:…",6,[[["intcc",4],["opcode",4],["trapcode",4],["type",3],["value",3]]]],[11,"IntSelect","","IntSelect(imms=(cond: ir::condcodes::IntCC), vals=3)",6,[[["intcc",4],["opcode",4],["type",3],["value",3]]]],[11,"Jump","","Jump(imms=(destination: ir::Block), vals=0)",6,[[["opcode",4],["type",3],["block",3],["entitylist",3],["value",3]]]],[11,"Load","","Load(imms=(flags: ir::MemFlags, offset:…",6,[[["offset32",3],["opcode",4],["type",3],["memflags",3],["value",3]]]],[11,"LoadComplex","","LoadComplex(imms=(flags: ir::MemFlags, offset:…",6,[[["offset32",3],["opcode",4],["type",3],["memflags",3],["entitylist",3],["value",3]]]],[11,"LoadNoOffset","","LoadNoOffset(imms=(flags: ir::MemFlags), vals=1)",6,[[["opcode",4],["type",3],["memflags",3],["value",3]]]],[11,"MultiAry","","MultiAry(imms=(), vals=0)",6,[[["opcode",4],["type",3],["entitylist",3],["value",3]]]],[11,"NullAry","","NullAry(imms=(), vals=0)",6,[[["type",3],["opcode",4]]]],[11,"RegFill","","RegFill(imms=(src: ir::StackSlot, dst: isa::RegUnit),…",6,[[["opcode",4],["stackslot",3],["type",3],["value",3]]]],[11,"RegMove","","RegMove(imms=(src: isa::RegUnit, dst: isa::RegUnit), vals=1)",6,[[["type",3],["opcode",4],["value",3]]]],[11,"RegSpill","","RegSpill(imms=(src: isa::RegUnit, dst: ir::StackSlot),…",6,[[["opcode",4],["stackslot",3],["type",3],["value",3]]]],[11,"Shuffle","","Shuffle(imms=(mask: ir::Immediate), vals=2)",6,[[["immediate",3],["opcode",4],["type",3],["value",3]]]],[11,"StackLoad","","StackLoad(imms=(stack_slot: ir::StackSlot, offset:…",6,[[["offset32",3],["opcode",4],["stackslot",3],["type",3]]]],[11,"StackStore","","StackStore(imms=(stack_slot: ir::StackSlot, offset:…",6,[[["offset32",3],["opcode",4],["stackslot",3],["type",3],["value",3]]]],[11,"Store","","Store(imms=(flags: ir::MemFlags, offset:…",6,[[["offset32",3],["opcode",4],["type",3],["memflags",3],["value",3]]]],[11,"StoreComplex","","StoreComplex(imms=(flags: ir::MemFlags, offset:…",6,[[["offset32",3],["opcode",4],["type",3],["memflags",3],["entitylist",3],["value",3]]]],[11,"StoreNoOffset","","StoreNoOffset(imms=(flags: ir::MemFlags), vals=2)",6,[[["opcode",4],["type",3],["memflags",3],["value",3]]]],[11,"TableAddr","","TableAddr(imms=(table: ir::Table, offset:…",6,[[["offset32",3],["opcode",4],["type",3],["value",3],["table",3]]]],[11,"Ternary","","Ternary(imms=(), vals=3)",6,[[["opcode",4],["type",3],["value",3]]]],[11,"TernaryImm8","","TernaryImm8(imms=(imm: ir::immediates::Uimm8), vals=2)",6,[[["opcode",4],["type",3],["value",3]]]],[11,"Trap","","Trap(imms=(code: ir::TrapCode), vals=0)",6,[[["type",3],["opcode",4],["trapcode",4]]]],[11,"Unary","","Unary(imms=(), vals=1)",6,[[["type",3],["opcode",4],["value",3]]]],[11,"UnaryBool","","UnaryBool(imms=(imm: bool), vals=0)",6,[[["type",3],["opcode",4]]]],[11,"UnaryConst","","UnaryConst(imms=(constant_handle: ir::Constant), vals=0)",6,[[["type",3],["opcode",4],["constant",3]]]],[11,"UnaryGlobalValue","","UnaryGlobalValue(imms=(global_value: ir::GlobalValue),…",6,[[["type",3],["opcode",4],["globalvalue",3]]]],[11,"UnaryIeee32","","UnaryIeee32(imms=(imm: ir::immediates::Ieee32), vals=0)",6,[[["type",3],["opcode",4],["ieee32",3]]]],[11,"UnaryIeee64","","UnaryIeee64(imms=(imm: ir::immediates::Ieee64), vals=0)",6,[[["type",3],["opcode",4],["ieee64",3]]]],[11,"UnaryImm","","UnaryImm(imms=(imm: ir::immediates::Imm64), vals=0)",6,[[["type",3],["opcode",4],["imm64",3]]]],[3,"MemFlags","","Flags for memory operations like load/store.",null,null],[3,"StackSlotData","","Contents of a stack slot.",null,null],[12,"kind","","The kind of stack slot.",7,null],[12,"size","","Size of stack slot in bytes.",7,null],[12,"offset","","Offset of stack slot relative to the stack pointer in the…",7,null],[4,"StackSlotKind","","The kind of a stack slot.",null,null],[13,"SpillSlot","","A spill slot. This is a stack slot created by the register…",8,null],[13,"ExplicitSlot","","An explicit stack slot. This is a chunk of stack memory…",8,null],[13,"IncomingArg","","An incoming function argument.",8,null],[13,"OutgoingArg","","An outgoing function argument.",8,null],[13,"StructReturnSlot","","Space allocated in the caller\'s frame for the callee\'s…",8,null],[13,"EmergencySlot","","An emergency spill slot.",8,null],[0,"binemit","wasmtime_jit::trampoline","",null,null],[3,"NullTrapSink","wasmtime_jit::trampoline::binemit","A `TrapSink` implementation that does nothing, which is…",null,null],[6,"CodeOffset","","Offset in bytes from the beginning of the function.",null,null],[3,"NullStackMapSink","","Placeholder StackMapSink that does nothing.",null,null],[8,"TrapSink","","A trait for receiving trap codes and offsets.",null,null],[10,"trap","","Add trap information for a specific offset.",9,[[["sourceloc",3],["trapcode",4]]]],[5,"make_trampoline","wasmtime_jit::trampoline","Create a trampoline for invoking a function.",null,[[["codememory",3],["signature",3],["targetisa",8],["functionbuildercontext",3]],[["setuperror",4],["result",4],["vmtrampoline",6]]]],[3,"TrampolineRelocSink","","We don\'t expect trampoline compilation to produce many…",null,null],[11,"relocs","","Returns collected relocations.",10,[[]]],[3,"CodeMemory","wasmtime_jit","Memory manager for executable code.",null,null],[3,"Compilation","","",null,null],[12,"obj","","",11,null],[12,"unwind_info","","",11,null],[12,"funcs","","",11,null],[4,"CompilationStrategy","","Select which kind of compilation to use.",null,null],[13,"Auto","","Let Wasmtime pick the strategy.",12,null],[13,"Cranelift","","Compile all functions with Cranelift.",12,null],[3,"Compiler","","A WebAssembly code JIT compiler.",null,null],[3,"CompilationArtifacts","","Contains all compilation artifacts.",null,null],[3,"CompiledModule","","A compiled wasm module, ready to be instantiated.",null,null],[3,"ModuleCode","","Container for data needed for an Instance function to exist.",null,null],[4,"SetupError","","An error condition while setting up a wasm instance, be it…",null,null],[13,"Validate","","The module did not pass validation.",13,null],[13,"Compile","","A wasm translation error occured.",13,null],[13,"Instantiate","","Some runtime resource was unavailable or insufficient, or…",13,null],[13,"DebugInfo","","Debug information generation error occured.",13,null],[3,"SymbolizeContext","","A context which contains dwarf debug information to…",null,null],[3,"TypeTables","","This is intended to mirror the type tables in…",null,null],[12,"wasm_signatures","","",14,null],[12,"module_signatures","","",14,null],[12,"instance_signatures","","",14,null],[5,"link_module","","Links a module that has been compiled with…",null,[[["module",3],["primarymap",3],["file",3]]]],[17,"VERSION","","Version number of this crate.",null,null],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","wasmtime_jit::trampoline","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","wasmtime_jit::trampoline::ir","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"equivalent","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"equivalent","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"equivalent","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","wasmtime_jit::trampoline::binemit","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","wasmtime_jit::trampoline","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"trap","wasmtime_jit::trampoline::binemit","",23,[[["sourceloc",3],["trapcode",4]]]],[11,"eq","wasmtime_jit::trampoline::ir","",2,[[["externalname",4]]]],[11,"ne","","",2,[[["externalname",4]]]],[11,"eq","","",8,[[["stackslotkind",4]]]],[11,"eq","","",7,[[["stackslotdata",3]]]],[11,"ne","","",7,[[["stackslotdata",3]]]],[11,"eq","","",22,[[["memflags",3]]]],[11,"ne","","",22,[[["memflags",3]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deserialize","","",7,[[],[["stackslotdata",3],["result",4]]]],[11,"deserialize","","",8,[[],[["result",4],["stackslotkind",4]]]],[11,"default","wasmtime_jit::trampoline::binemit","",23,[[],["nulltrapsink",3]]],[11,"default","wasmtime_jit::trampoline::ir","",2,[[],["externalname",4]]],[11,"add_stack_map","wasmtime_jit::trampoline::binemit","",24,[[["stackmap",3]]]],[11,"clone","wasmtime_jit::trampoline::ir","",7,[[],["stackslotdata",3]]],[11,"clone","","",22,[[],["memflags",3]]],[11,"clone","","",5,[[],["function",3]]],[11,"clone","","",2,[[],["externalname",4]]],[11,"clone","","",8,[[],["stackslotkind",4]]],[11,"hash","","",22,[[]]],[11,"from_str","","",2,[[],[["result",4],["externalname",4]]]],[11,"from_str","","",8,[[],[["stackslotkind",4],["result",4]]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"from","wasmtime_jit","",13,[[["compileerror",4]]]],[11,"from","","",13,[[["instantiationerror",4]]]],[11,"from","","",13,[[["error",3]]]],[11,"clone","","",12,[[],["compilationstrategy",4]]],[11,"default","wasmtime_jit::trampoline","",10,[[],["trampolinerelocsink",3]]],[11,"fmt","wasmtime_jit","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"hash","","",12,[[]]],[11,"hash","","",16,[[]]],[11,"source","","",13,[[],[["error",8],["option",4]]]],[11,"deserialize","","",17,[[],["result",4]]],[11,"deserialize","","",14,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"reloc_external","wasmtime_jit::trampoline","",10,[[["reloc",4],["sourceloc",3],["addend",6],["codeoffset",6],["externalname",4]]]],[11,"reloc_constant","","",10,[[["codeoffset",6],["reloc",4],["constantoffset",6]]]],[11,"reloc_jt","","",10,[[["jumptable",3],["codeoffset",6],["reloc",4]]]],[11,"new","wasmtime_jit","Create a new `CodeMemory` instance.",15,[[]]],[11,"allocate_for_function","","Allocate a continuous memory block for a single compiled…",15,[[["compiledfunction",3]],[["result",4],["string",3]]]],[11,"publish","","Make all allocated memory executable.",15,[[["targetisa",8]]]],[11,"published_ranges","","Returns all published segment ranges.",15,[[]]],[11,"new","","Construct a new `Compiler`.",16,[[["box",3],["targetisa",8],["compilationstrategy",4],["tunables",3],["wasmfeatures",3]]]],[11,"isa","","Return the isa.",16,[[],["targetisa",8]]],[11,"frontend_config","","Return the target\'s frontend configuration settings.",16,[[],["targetfrontendconfig",3]]],[11,"tunables","","Return the tunables in use by this engine.",16,[[],["tunables",3]]],[11,"features","","Return the enabled wasm features.",16,[[],["wasmfeatures",3]]],[11,"compile","","Compile the given function bodies.",16,[[["moduletranslation",3],["typetables",3]],[["setuperror",4],["result",4],["compilation",3]]]],[11,"build","","Creates a `CompilationArtifacts` for a singular translated…",17,[[["compiler",3]],[["setuperror",4],["result",4]]]],[11,"from_artifacts_list","","Creates a list of compiled modules from the given list of…",19,[[["profilingagent",8],["vec",3],["compilationartifacts",3],["targetisa",8]],[["vec",3],["setuperror",4],["result",4]]]],[11,"from_artifacts","","Creates `CompiledModule` directly from…",19,[[["compilationartifacts",3],["targetisa",8],["profilingagent",8]],[["arc",3],["setuperror",4],["result",4]]]],[11,"instantiate","","Crate an `Instance` from this `CompiledModule`.",19,[[["any",8],["imports",3],["option",4],["box",3],["fn",8],["runtimememorycreator",8]],[["result",4],["instancehandle",3],["instantiationerror",4]]]],[11,"compilation_artifacts","","Extracts `CompilationArtifacts` from the compiled module.",19,[[],["compilationartifacts",3]]],[11,"data_initializers","","Returns data initializers to pass to…",19,[[],[["vec",3],["datainitializer",3]]]],[11,"module","","Return a reference-counting pointer to a module.",19,[[],["arc",3]]],[11,"module_mut","","Return a reference to a mutable module (if possible).",19,[[],[["module",3],["option",4]]]],[11,"finished_functions","","Returns the map of all finished JIT functions compiled for…",19,[[],["primarymap",3]]],[11,"trampolines","","Returns the per-signature trampolines for this module.",19,[[],["primarymap",3]]],[11,"stack_maps","","Returns the stack map information for all functions…",19,[[]]],[11,"trap_information","","Iterates over all functions in this module, returning…",19,[[]]],[11,"jit_code_ranges","","Returns all ranges convered by JIT code.",19,[[]]],[11,"code","","Returns module\'s JIT code.",19,[[],["arc",3]]],[11,"symbolize_context","","Creates a new symbolication context which can be used to…",19,[[],[["result",4],["option",4],["error",4]]]],[11,"has_unparsed_debuginfo","","Returns whether the original wasm module had unparsed…",19,[[]]],[11,"addr2line","","Returns access to the [`addr2line::Context`] which can be…",20,[[],["context",3]]],[11,"code_section_offset","","Returns the offset of the code section in the original…",20,[[]]],[11,"new","wasmtime_jit::trampoline","Allocate a new compilation context.",0,[[],["context",3]]],[11,"for_function","","Allocate a new compilation context with an existing…",0,[[["function",3]],["context",3]]],[11,"clear","","Clear all data structures in this context.",0,[[]]],[11,"set_disasm","","Set the flag to request a disassembly when compiling with…",0,[[]]],[11,"compile_and_emit","","Compile the function, and emit machine code into a…",0,[[["trapsink",8],["stackmapsink",8],["relocsink",8],["vec",3],["targetisa",8]],[["codegenerror",4],["result",4],["codeinfo",3]]]],[11,"compile","","Compile the function.",0,[[["targetisa",8]],[["codegenerror",4],["result",4],["codeinfo",3]]]],[11,"emit_to_memory","","Emit machine code directly into raw memory.",0,[[["targetisa",8],["stackmapsink",8],["relocsink",8],["trapsink",8]],["codeinfo",3]]],[11,"create_unwind_info","","Creates unwind information for the function.",0,[[["targetisa",8]],[["option",4],["codegenerror",4],["result",4]]]],[11,"verify","","Run the verifier on the function.",0,[[],[["result",4],["verifiererrors",3]]]],[11,"verify_if","","Run the verifier only if the `enable_verifier` setting is…",0,[[],[["result",4],["codegenerror",4]]]],[11,"verify_locations","","Run the locations verifier on the function.",0,[[["targetisa",8]],[["result",4],["verifiererrors",3]]]],[11,"verify_locations_if","","Run the locations verifier only if the `enable_verifier`…",0,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"dce","","Perform dead-code elimination on the function.",0,[[],[["result",4],["codegenerror",4]]]],[11,"remove_constant_phis","","Perform constant-phi removal on the function.",0,[[],[["result",4],["codegenerror",4]]]],[11,"preopt","","Perform pre-legalization rewrites on the function.",0,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"canonicalize_nans","","Perform NaN canonicalizing rewrites on the function.",0,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"legalize","","Run the legalizer for `isa` on the function.",0,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"postopt","","Perform post-legalization rewrites on the function.",0,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"compute_cfg","","Compute the control flow graph.",0,[[]]],[11,"compute_domtree","","Compute dominator tree.",0,[[]]],[11,"compute_loop_analysis","","Compute the loop analysis.",0,[[]]],[11,"flowgraph","","Compute the control flow graph and dominator tree.",0,[[]]],[11,"simple_gvn","","Perform simple GVN on the function.",0,[[],[["result",4],["codegenerror",4]]]],[11,"licm","","Perform LICM on the function.",0,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"eliminate_unreachable_code","","Perform unreachable code elimination.",0,[[],[["result",4],["codegenerror",4]]]],[11,"regalloc","","Run the register allocator.",0,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"prologue_epilogue","","Insert prologue and epilogues after computing the stack…",0,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"redundant_reload_remover","","Do redundant-reload removal after allocation of both…",0,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"shrink_instructions","","Run the instruction shrinking pass.",0,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"relax_branches","","Run the branch relaxation pass and return information…",0,[[["targetisa",8]],[["codegenerror",4],["result",4],["codeinfo",3]]]],[11,"build_value_labels_ranges","","Builds ranges and location for specified value labels.",0,[[["targetisa",8]],[["result",4],["codegenerror",4],["hashmap",3]]]],[11,"souper_harvest","","Harvest candidate left-hand sides for superoptimization…",0,[[["sender",3]],[["result",4],["codegenerror",4]]]],[11,"new","","Creates a new FunctionBuilder structure that will operate…",1,[[["functionbuildercontext",3],["function",3]],["functionbuilder",3]]],[11,"current_block","","Get the block that this builder is currently at.",1,[[],[["block",3],["option",4]]]],[11,"set_srcloc","","Set the source location that should be assigned to all new…",1,[[["sourceloc",3]]]],[11,"create_block","","Creates a new `Block` and returns its reference.",1,[[],["block",3]]],[11,"insert_block_after","","Insert `block` in the layout after the existing block…",1,[[["block",3]]]],[11,"switch_to_block","","After the call to this function, new instructions will be…",1,[[["block",3]]]],[11,"seal_block","","Declares that all the predecessors of this block are known.",1,[[["block",3]]]],[11,"seal_all_blocks","","Effectively calls seal_block on all unsealed blocks in the…",1,[[]]],[11,"declare_var","","In order to use a variable in a `use_var`, you need to…",1,[[["type",3],["variable",3]]]],[11,"use_var","","Returns the Cranelift IR value corresponding to the…",1,[[["variable",3]],["value",3]]],[11,"def_var","","Register a new definition of a user variable. The type of…",1,[[["variable",3],["value",3]]]],[11,"set_val_label","","Set label for Value",1,[[["value",3],["valuelabel",3]]]],[11,"create_jump_table","","Creates a jump table in the function, to be used by…",1,[[["jumptabledata",3]],["jumptable",3]]],[11,"create_stack_slot","","Creates a stack slot in the function, to be used by…",1,[[["stackslotdata",3]],["stackslot",3]]],[11,"import_signature","","Adds a signature which can later be used to declare an…",1,[[["signature",3]],["sigref",3]]],[11,"import_function","","Declare an external function import.",1,[[["extfuncdata",3]],["funcref",3]]],[11,"create_global_value","","Declares a global value accessible to the function.",1,[[["globalvaluedata",4]],["globalvalue",3]]],[11,"create_heap","","Declares a heap accessible to the function.",1,[[["heapdata",3]],["heap",3]]],[11,"ins","","Returns an object with the `InstBuilder` trait that allows…",1,[[],["funcinstbuilder",3]]],[11,"ensure_inserted_block","","Make sure that the current block is inserted in the layout.",1,[[]]],[11,"cursor","","Returns a `FuncCursor` pointed at the current position…",1,[[],["funccursor",3]]],[11,"append_block_params_for_function_params","","Append parameters to the given `Block` corresponding to…",1,[[["block",3]]]],[11,"append_block_params_for_function_returns","","Append parameters to the given `Block` corresponding to…",1,[[["block",3]]]],[11,"finalize","","Declare that translation of the current function is…",1,[[]]],[11,"block_params","","Retrieves all the parameters for a `Block` currently…",1,[[["block",3]]]],[11,"signature","","Retrieves the signature with reference `sigref` previously…",1,[[["sigref",3]],[["signature",3],["option",4]]]],[11,"append_block_param","","Creates a parameter for a specific `Block` by appending it…",1,[[["type",3],["block",3]],["value",3]]],[11,"inst_results","","Returns the result values of an instruction.",1,[[["inst",3]]]],[11,"change_jump_destination","","Changes the destination of a jump instruction after…",1,[[["inst",3],["block",3]]]],[11,"is_unreachable","","Returns `true` if and only if the current `Block` is…",1,[[]]],[11,"is_pristine","","Returns `true` if and only if no instructions have been…",1,[[]]],[11,"is_filled","","Returns `true` if and only if a terminator instruction has…",1,[[]]],[11,"display","","Returns a displayable object for the function as it is.",1,[[],["displayfunction",3]]],[11,"call_memcpy","","Calls libc.memcpy",1,[[["value",3],["targetfrontendconfig",3]]]],[11,"emit_small_memory_copy","","Optimised memcpy or memmove for small copies.",1,[[["value",3],["targetfrontendconfig",3]]]],[11,"call_memset","","Calls libc.memset",1,[[["value",3],["targetfrontendconfig",3]]]],[11,"emit_small_memset","","Calls libc.memset",1,[[["value",3],["targetfrontendconfig",3]]]],[11,"call_memmove","","Calls libc.memmove",1,[[["value",3],["targetfrontendconfig",3]]]],[11,"new","","Creates a FunctionBuilderContext structure. The structure…",21,[[],["functionbuildercontext",3]]],[11,"testcase","wasmtime_jit::trampoline::ir","Creates a new external name from a sequence of bytes.…",2,[[],["externalname",4]]],[11,"user","","Create a new external name from user-provided integer…",2,[[],["externalname",4]]],[11,"with_name_signature","","Create a function with the given name and signature.",5,[[["signature",3],["externalname",4]],["function",3]]],[11,"clear","","Clear all data structures in this function.",5,[[]]],[11,"new","","Create a new empty, anonymous function with a Fast calling…",5,[[],["function",3]]],[11,"create_jump_table","","Creates a jump table in the function, to be used by…",5,[[["jumptabledata",3]],["jumptable",3]]],[11,"create_stack_slot","","Creates a stack slot in the function, to be used by…",5,[[["stackslotdata",3]],["stackslot",3]]],[11,"import_signature","","Adds a signature which can later be used to declare an…",5,[[["signature",3]],["sigref",3]]],[11,"import_function","","Declare an external function import.",5,[[["extfuncdata",3]],["funcref",3]]],[11,"create_global_value","","Declares a global value accessible to the function.",5,[[["globalvaluedata",4]],["globalvalue",3]]],[11,"create_heap","","Declares a heap accessible to the function.",5,[[["heapdata",3]],["heap",3]]],[11,"create_table","","Declares a table accessible to the function.",5,[[["tabledata",3]],["table",3]]],[11,"display","","Return an object that can display this function with…",5,[[],["displayfunction",3]]],[11,"display_with","","Return an object that can display this function with…",5,[[["displayfunctionannotations",3]],["displayfunction",3]]],[11,"special_param","","Find a presumed unique special-purpose function parameter…",5,[[["argumentpurpose",4]],[["value",3],["option",4]]]],[11,"inst_offsets","","Get an iterator over the instructions in `block`,…",5,[[["block",3],["encinfo",3]],["instoffsetiter",3]]],[11,"update_encoding","","Wrapper around `encode` which assigns `inst` the resulting…",5,[[["inst",3],["targetisa",8]],["result",4]]],[11,"encode","","Wrapper around `TargetIsa::encode` for encoding an…",5,[[["inst",3],["targetisa",8]],[["encoding",3],["result",4]]]],[11,"collect_debug_info","","Starts collection of debug information.",5,[[]]],[11,"change_branch_destination","","Changes the destination of a jump or branch instruction.…",5,[[["inst",3],["block",3]]]],[11,"rewrite_branch_destination","","Rewrite the branch destination to `new_dest` if the…",5,[[["inst",3],["block",3]]]],[11,"is_block_basic","","Checks that the specified block can be encoded as a basic…",5,[[["block",3]],["result",4]]],[11,"is_leaf","","Returns true if the function is function that doesn\'t call…",5,[[]]],[11,"transplant_inst","","Replace the `dst` instruction\'s data with the `src`…",5,[[["inst",3]]]],[11,"new","","Create a new empty set of flags.",22,[[],["memflags",3]]],[11,"trusted","","Create a set of flags representing an access from a…",22,[[],["memflags",3]]],[11,"set_by_name","","Set a flag bit by name.",22,[[]]],[11,"endianness","","Return endianness of the memory access. This will return…",22,[[["endianness",4]],["endianness",4]]],[11,"set_endianness","","Set endianness of the memory access.",22,[[["endianness",4]]]],[11,"notrap","","Test if the `notrap` flag is set.",22,[[]]],[11,"set_notrap","","Set the `notrap` flag.",22,[[]]],[11,"aligned","","Test if the `aligned` flag is set.",22,[[]]],[11,"set_aligned","","Set the `aligned` flag.",22,[[]]],[11,"readonly","","Test if the `readonly` flag is set.",22,[[]]],[11,"set_readonly","","Set the `readonly` flag.",22,[[]]],[11,"new","","Create a stack slot with the specified byte size.",7,[[["stackslotkind",4]],["stackslotdata",3]]],[11,"alignment","","Get the alignment in bytes of this stack slot given the…",7,[[]]]],"p":[[3,"Context"],[3,"FunctionBuilder"],[4,"ExternalName"],[13,"User"],[13,"TestCase"],[3,"Function"],[8,"InstBuilder"],[3,"StackSlotData"],[4,"StackSlotKind"],[8,"TrapSink"],[3,"TrampolineRelocSink"],[3,"Compilation"],[4,"CompilationStrategy"],[4,"SetupError"],[3,"TypeTables"],[3,"CodeMemory"],[3,"Compiler"],[3,"CompilationArtifacts"],[3,"ModuleCode"],[3,"CompiledModule"],[3,"SymbolizeContext"],[3,"FunctionBuilderContext"],[3,"MemFlags"],[3,"NullTrapSink"],[3,"NullStackMapSink"]]},\
"wasmtime_lightbeam":{"doc":"Support for compiling with Lightbeam.","i":[[3,"Lightbeam","wasmtime_lightbeam","A compiler that compiles a WebAssembly module with…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"compile_function","","",0,[[["moduletranslation",3],["typetables",3],["definedfuncindex",3],["functionbodydata",3],["targetisa",8],["tunables",3]],[["compileerror",4],["result",4],["compiledfunction",3]]]]],"p":[[3,"Lightbeam"]]},\
"wasmtime_obj":{"doc":"Object-file writing library using the wasmtime environment.","i":[[0,"utils","wasmtime_obj","",null,null],[17,"FUNCTION_PREFIX","wasmtime_obj::utils","",null,null],[17,"TRAMPOLINE_PREFIX","","",null,null],[5,"func_symbol_name","","",null,[[["funcindex",3]],["string",3]]],[5,"try_parse_func_name","","",null,[[],[["funcindex",3],["option",4]]]],[5,"trampoline_symbol_name","","",null,[[["signatureindex",3]],["string",3]]],[5,"try_parse_trampoline_name","","",null,[[],[["signatureindex",3],["option",4]]]],[3,"ObjectBuilder","wasmtime_obj","",null,null],[3,"ObjectBuilderTarget","","",null,null],[5,"emit_module","","Emits a module that has been emitted with the…",null,[[["compiledfunctions",6],["objectbuildertarget",3],["vec",3],["dwarfsection",3],["module",3],["targetfrontendconfig",3]],[["object",3],["result",6]]]],[17,"VERSION","","Version number of this crate.",null,null],[14,"for_each_libcall","","Builds ELF image from the module `Compilation`. Iterates…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"new","","",0,[[["architecture",4]],[["result",4],["error",3]]]],[11,"from_triple","","",0,[[["triple",3]],[["result",4],["error",3]]]],[11,"new","","",1,[[["module",3],["objectbuildertarget",3],["compiledfunctions",6]]]],[11,"set_code_alignment","","",1,[[]]],[11,"set_trampolines","","",1,[[["signatureindex",3],["primarymap",3],["compiledfunction",3]]]],[11,"set_dwarf_sections","","",1,[[["vec",3],["dwarfsection",3]]]],[11,"build","","",1,[[],[["object",3],["error",3],["result",4]]]]],"p":[[3,"ObjectBuilderTarget"],[3,"ObjectBuilder"]]},\
"wasmtime_profiling":{"doc":"","i":[[3,"JitDumpAgent","wasmtime_profiling","Interface for driving the creation of jitdump files",null,null],[3,"VTuneAgent","","Interface for driving vtune support",null,null],[8,"ProfilingAgent","","Common interface for profiling tools.",null,null],[10,"module_load","","Notify the profiler of a new module loaded into memory",0,[[["module",3],["primarymap",3],["option",4]]]],[3,"NullProfilerAgent","","Default agent for unsupported profiling build.",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"module_load","","",1,[[["module",3],["primarymap",3],["option",4]]]],[11,"module_load","","",2,[[["module",3],["primarymap",3],["option",4]]]],[11,"module_load","","",3,[[["module",3],["primarymap",3],["option",4]]]],[11,"clone","","",3,[[],["nullprofileragent",3]]],[11,"default","","",3,[[],["nullprofileragent",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"new","","Intialize a JitDumpAgent and write out the header",1,[[],["result",6]]],[11,"new","","Intialize a VTuneAgent and write out the header",2,[[],["result",6]]]],"p":[[8,"ProfilingAgent"],[3,"JitDumpAgent"],[3,"VTuneAgent"],[3,"NullProfilerAgent"]]},\
"wasmtime_runtime":{"doc":"Runtime library support for Wasmtime.","i":[[0,"libcalls","wasmtime_runtime","Runtime library calls.",null,null],[5,"wasmtime_f32_ceil","wasmtime_runtime::libcalls","Implementation of f32.ceil",null,[[]]],[5,"wasmtime_f32_floor","","Implementation of f32.floor",null,[[]]],[5,"wasmtime_f32_trunc","","Implementation of f32.trunc",null,[[]]],[5,"wasmtime_f32_nearest","","Implementation of f32.nearest",null,[[]]],[5,"wasmtime_i64_udiv","","Implementation of i64.udiv",null,[[]]],[5,"wasmtime_i64_sdiv","","Implementation of i64.sdiv",null,[[]]],[5,"wasmtime_i64_urem","","Implementation of i64.urem",null,[[]]],[5,"wasmtime_i64_srem","","Implementation of i64.srem",null,[[]]],[5,"wasmtime_i64_ishl","","Implementation of i64.ishl",null,[[]]],[5,"wasmtime_i64_ushr","","Implementation of i64.ushr",null,[[]]],[5,"wasmtime_i64_sshr","","Implementation of i64.sshr",null,[[]]],[5,"wasmtime_f64_ceil","","Implementation of f64.ceil",null,[[]]],[5,"wasmtime_f64_floor","","Implementation of f64.floor",null,[[]]],[5,"wasmtime_f64_trunc","","Implementation of f64.trunc",null,[[]]],[5,"wasmtime_f64_nearest","","Implementation of f64.nearest",null,[[]]],[5,"wasmtime_memory32_grow","","Implementation of memory.grow for locally-defined 32-bit…",null,[[]]],[5,"wasmtime_imported_memory32_grow","","Implementation of memory.grow for imported 32-bit memories.",null,[[]]],[5,"wasmtime_memory32_size","","Implementation of memory.size for locally-defined 32-bit…",null,[[]]],[5,"wasmtime_imported_memory32_size","","Implementation of memory.size for imported 32-bit memories.",null,[[]]],[5,"wasmtime_table_grow","","Implementation of `table.grow`.",null,[[]]],[5,"wasmtime_table_fill","","Implementation of `table.fill`.",null,[[]]],[5,"wasmtime_table_copy","","Implementation of `table.copy`.",null,[[]]],[5,"wasmtime_table_init","","Implementation of `table.init`.",null,[[]]],[5,"wasmtime_elem_drop","","Implementation of `elem.drop`.",null,[[]]],[5,"wasmtime_memory_copy","","Implementation of `memory.copy` for locally defined…",null,[[]]],[5,"wasmtime_memory_fill","","Implementation of `memory.fill` for locally defined…",null,[[]]],[5,"wasmtime_imported_memory_fill","","Implementation of `memory.fill` for imported memories.",null,[[]]],[5,"wasmtime_memory_init","","Implementation of `memory.init`.",null,[[]]],[5,"wasmtime_data_drop","","Implementation of `data.drop`.",null,[[]]],[5,"wasmtime_drop_externref","","Drop a `VMExternRef`.",null,[[]]],[5,"wasmtime_activations_table_insert_with_gc","","Do a GC and insert the given `externref` into the…",null,[[]]],[5,"wasmtime_externref_global_get","","Perform a Wasm `global.get` for `externref` globals.",null,[[]]],[5,"wasmtime_externref_global_set","","Perform a Wasm `global.set` for `externref` globals.",null,[[]]],[5,"wasmtime_memory_atomic_notify","","Implementation of `memory.atomic.notify` for locally…",null,[[]]],[5,"wasmtime_imported_memory_atomic_notify","","Implementation of `memory.atomic.notify` for imported…",null,[[]]],[5,"wasmtime_memory_atomic_wait32","","Implementation of `memory.atomic.wait32` for locally…",null,[[]]],[5,"wasmtime_imported_memory_atomic_wait32","","Implementation of `memory.atomic.wait32` for imported…",null,[[]]],[5,"wasmtime_memory_atomic_wait64","","Implementation of `memory.atomic.wait64` for locally…",null,[[]]],[5,"wasmtime_imported_memory_atomic_wait64","","Implementation of `memory.atomic.wait32` for imported…",null,[[]]],[4,"Export","wasmtime_runtime","The value of an export passed from one instance to another.",null,null],[13,"Function","","A function export value.",0,null],[13,"Table","","A table export value.",0,null],[13,"Memory","","A memory export value.",0,null],[13,"Global","","A global export value.",0,null],[13,"Instance","","An instance",0,null],[13,"Module","","A module",0,null],[3,"ExportFunction","","A function export value.",null,null],[12,"anyfunc","","The `VMCallerCheckedAnyfunc` for this exported function.",1,null],[3,"ExportTable","","A table export value.",null,null],[12,"definition","","The address of the table descriptor.",2,null],[12,"vmctx","","Pointer to the containing `VMContext`.",2,null],[12,"table","","The table declaration, used for compatibilty checking.",2,null],[3,"ExportMemory","","A memory export value.",null,null],[12,"definition","","The address of the memory descriptor.",3,null],[12,"vmctx","","Pointer to the containing `VMContext`.",3,null],[12,"memory","","The memory declaration, used for compatibilty checking.",3,null],[3,"ExportGlobal","","A global export value.",null,null],[12,"definition","","The address of the global storage.",4,null],[12,"vmctx","","Pointer to the containing `VMContext`.",4,null],[12,"global","","The global declaration, used for compatibilty checking.",4,null],[3,"VMExternRef","","An external reference to some opaque data.",null,null],[3,"VMExternRefActivationsTable","","A table that over-approximizes the set of `VMExternRef`s…",null,null],[3,"StackMapRegistry","","A registry of stack maps for currently active Wasm modules.",null,null],[5,"gc","","Perform garbage collection of `VMExternRef`s.",null,[[["stackmapregistry",3],["vmexternrefactivationstable",3]]]],[3,"Imports","","Resolved import pointers.",null,null],[12,"functions","","Resolved addresses for imported functions.",5,null],[12,"tables","","Resolved addresses for imported tables.",5,null],[12,"memories","","Resolved addresses for imported memories.",5,null],[12,"globals","","Resolved addresses for imported globals.",5,null],[3,"InstanceHandle","","A handle holding an `Instance` of a WebAssembly module.",null,null],[4,"InstantiationError","","An error while instantiating a module.",null,null],[13,"Resource","","Insufficient resources available for execution.",6,null],[13,"Link","","A wasm link error occured.",6,null],[13,"Trap","","A trap ocurred during instantiation, after linking.",6,null],[3,"LinkError","","An link error while instantiating a module.",null,null],[12,"0","","",7,null],[6,"RuntimeInstance","","Runtime representation of an instance value, which erases…",null,null],[3,"GdbJitImageRegistration","","Registeration for JIT image",null,null],[8,"RuntimeLinearMemory","","A linear memory",null,null],[10,"size","","Returns the number of allocated wasm pages.",8,[[]]],[10,"grow","","Grow memory by the specified amount of wasm pages.",8,[[],["option",4]]],[10,"vmmemory","","Return a `VMMemoryDefinition` for exposing the memory to…",8,[[],["vmmemorydefinition",3]]],[8,"RuntimeMemoryCreator","","A memory allocator",null,null],[10,"new_memory","","Create new RuntimeLinearMemory",9,[[["memoryplan",3]],[["result",4],["box",3],["string",3]]]],[3,"Mmap","","A simple struct consisting of a page-aligned pointer to…",null,null],[3,"Table","","A table instance.",null,null],[4,"TableElement","","An element going into or coming out of a table.",null,null],[13,"FuncRef","","A `funcref`.",10,null],[13,"ExternRef","","An `exrernref`.",10,null],[5,"catch_traps","","Catches any wasm traps that happen within the execution of…",null,[[],[["result",4],["trap",4]]]],[5,"init_traps","","This function performs the low-overhead signal handler…",null,[[]]],[5,"raise_lib_trap","","Raises a trap from inside library code immediately.",null,[[["trap",4]]]],[5,"raise_user_trap","","Raises a user-defined trap immediately.",null,[[["box",3],["error",8]]]],[5,"resume_panic","","Carries a Rust panic across wasm code and resumes the…",null,[[["box",3],["any",8]]]],[5,"with_last_info","","Runs `func` with the last `trap_info` object registered by…",null,[[]]],[6,"SignalHandler","","Function which may handle custom signals while processing…",null,null],[4,"Trap","","Stores trace message with backtrace.",null,null],[13,"User","","A user-raised trap through `raise_user_trap`.",11,null],[13,"Jit","","A trap raised from jit code",11,null],[12,"pc","wasmtime_runtime::Trap","The program counter in JIT code where this trap happened.",12,null],[12,"backtrace","","Native stack backtrace at the time the trap occurred",12,null],[12,"maybe_interrupted","","An indicator for whether this may have been a trap…",12,null],[13,"Wasm","wasmtime_runtime","A trap raised from a wasm libcall",11,null],[12,"trap_code","wasmtime_runtime::Trap","Code of the trap.",13,null],[12,"backtrace","","Native stack backtrace at the time the trap occurred",13,null],[13,"OOM","wasmtime_runtime","A trap indicating that the runtime was unable to allocate…",11,null],[12,"backtrace","wasmtime_runtime::Trap","Native stack backtrace at the time the OOM occurred",14,null],[8,"TrapInfo","wasmtime_runtime","A package of functionality needed by `catch_traps` to…",null,null],[10,"as_any","","Converts this object into an `Any` to dynamically check…",15,[[],["any",8]]],[10,"is_wasm_trap","","Returns whether the given program counter lies within wasm…",15,[[]]],[10,"custom_signal_handler","","Uses `call` to call a custom signal handler, if one is…",15,[[["fn",8]]]],[10,"max_wasm_stack","","Returns the maximum size, in bytes, the wasm native stack…",15,[[]]],[3,"VMCallerCheckedAnyfunc","","The VM caller-checked \\\"anyfunc\\\" record, for caller-side…",null,null],[12,"func_ptr","","Function body.",16,null],[12,"type_index","","Function signature id.",16,null],[12,"vmctx","","Function `VMContext`.",16,null],[3,"VMContext","","The VM \\\"context\\\", which is pointed to by the `vmctx` arg…",null,null],[3,"VMFunctionBody","","A placeholder byte-sized type which is just used to…",null,null],[3,"VMFunctionImport","","An imported function.",null,null],[12,"body","","A pointer to the imported function body.",17,null],[12,"vmctx","","A pointer to the `VMContext` that owns the function.",17,null],[3,"VMGlobalDefinition","","The storage for a WebAssembly global defined within the…",null,null],[3,"VMGlobalImport","","The fields compiled code needs to access to utilize a…",null,null],[12,"from","","A pointer to the imported global variable description.",18,null],[3,"VMInterrupts","","Structure used to control interrupting wasm code,…",null,null],[12,"stack_limit","","Current stack limit of the wasm module.",19,null],[3,"VMInvokeArgument","","The storage for a WebAssembly invocation argument",null,null],[3,"VMMemoryDefinition","","The fields compiled code needs to access to utilize a…",null,null],[12,"base","","The start address.",20,null],[12,"current_length","","The current logical size of this linear memory in bytes.",20,null],[3,"VMMemoryImport","","The fields compiled code needs to access to utilize a…",null,null],[12,"from","","A pointer to the imported memory description.",21,null],[12,"vmctx","","A pointer to the `VMContext` that owns the memory…",21,null],[3,"VMSharedSignatureIndex","","An index into the shared signature registry, usable for…",null,null],[3,"VMTableDefinition","","The fields compiled code needs to access to utilize a…",null,null],[12,"base","","Pointer to the table data.",22,null],[12,"current_elements","","The current number of elements in the table.",22,null],[3,"VMTableImport","","The fields compiled code needs to access to utilize a…",null,null],[12,"from","","A pointer to the imported table description.",23,null],[12,"vmctx","","A pointer to the `VMContext` that owns the table…",23,null],[6,"VMTrampoline","","",null,null],[17,"VERSION","","Version number of this crate.",null,null],[5,"ref_type","","The Cranelift IR type used for reference types for this…",null,[[],["type",3]]],[5,"pointer_type","","The Cranelift IR type used for pointer types for this…",null,[[],["type",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"equivalent","","",27,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"equivalent","","",33,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"drop","","",24,[[]]],[11,"drop","","",28,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",0,[[["exportfunction",3]],["export",4]]],[11,"from","","",0,[[["exporttable",3]],["export",4]]],[11,"from","","",0,[[["exportmemory",3]],["export",4]]],[11,"from","","",0,[[["exportglobal",3]],["export",4]]],[11,"from","","",6,[[["linkerror",3]]]],[11,"from","","",10,[[],["tableelement",4]]],[11,"from","","",10,[[["vmexternref",3],["option",4]],["tableelement",4]]],[11,"from","","",10,[[["vmexternref",3]],["tableelement",4]]],[11,"clone","","",1,[[],["exportfunction",3]]],[11,"clone","","",2,[[],["exporttable",3]]],[11,"clone","","",3,[[],["exportmemory",3]]],[11,"clone","","",4,[[],["exportglobal",3]]],[11,"clone","","",24,[[],["vmexternref",3]]],[11,"clone","","",10,[[],["tableelement",4]]],[11,"clone","","",17,[[],["vmfunctionimport",3]]],[11,"clone","","",23,[[],["vmtableimport",3]]],[11,"clone","","",21,[[],["vmmemoryimport",3]]],[11,"clone","","",18,[[],["vmglobalimport",3]]],[11,"clone","","",20,[[],["vmmemorydefinition",3]]],[11,"clone","","",22,[[],["vmtabledefinition",3]]],[11,"clone","","",32,[[],["vmglobaldefinition",3]]],[11,"clone","","",33,[[],["vmsharedsignatureindex",3]]],[11,"clone","","",16,[[],["vmcallercheckedanyfunc",3]]],[11,"clone","","",34,[[],["vminvokeargument",3]]],[11,"default","","",26,[[],["stackmapregistry",3]]],[11,"default","","",5,[[],["imports",3]]],[11,"default","","",33,[[]]],[11,"default","","",19,[[],["vminterrupts",3]]],[11,"eq","","",27,[[["instancehandle",3]]]],[11,"ne","","",27,[[["instancehandle",3]]]],[11,"eq","","",33,[[["vmsharedsignatureindex",3]]]],[11,"ne","","",33,[[["vmsharedsignatureindex",3]]]],[11,"deref","","",24,[[],["any",8]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"hash","","",27,[[]]],[11,"hash","","",33,[[]]],[11,"source","","",6,[[],[["error",8],["option",4]]]],[11,"new","","Wrap the given value inside an `VMExternRef`.",24,[[],["vmexternref",3]]],[11,"new_with","","Construct a new `VMExternRef` in place by invoking…",24,[[],["vmexternref",3]]],[11,"as_raw","","Turn this `VMExternRef` into a raw, untyped pointer.",24,[[]]],[11,"clone_from_raw","","Recreate a `VMExternRef` from a pointer returned from a…",24,[[]]],[11,"strong_count","","Get the strong reference count for this `VMExternRef`.",24,[[]]],[11,"eq","","Check whether two `VMExternRef`s point to the same inner…",24,[[]]],[11,"hash","","Hash a given `VMExternRef`.",24,[[]]],[11,"cmp","","Compare two `VMExternRef`s.",24,[[],["ordering",4]]],[11,"new","","Create a new `VMExternRefActivationsTable`.",25,[[]]],[11,"try_insert","","Try and insert a `VMExternRef` into this table.",25,[[["vmexternref",3]],[["result",4],["vmexternref",3]]]],[11,"insert_with_gc","","Insert a reference into the table, falling back on a GC to…",25,[[["vmexternref",3],["stackmapregistry",3]]]],[11,"set_stack_canary","","Set the stack canary around a call into Wasm.",25,[[]]],[11,"register_stack_maps","","Register the stack maps for a given module.",26,[[]]],[11,"lookup_stack_map","","Lookup the stack map for the given PC, if any.",26,[[],[["option",4],["rc",3]]]],[11,"new","","Create a new `InstanceHandle` pointing at a new `Instance`.",27,[[["arc",3],["primarymap",3],["fn",8],["box",3],["imports",3],["any",8],["module",3],["runtimememorycreator",8],["option",4]],[["instantiationerror",4],["result",4]]]],[11,"initialize","","Finishes the instantiation process started by…",27,[[],[["result",4],["instantiationerror",4]]]],[11,"from_vmctx","","Create a new `InstanceHandle` pointing at the instance…",27,[[]]],[11,"vmctx","","Return a reference to the vmctx used by compiled wasm code.",27,[[],["vmcontext",3]]],[11,"vmctx_ptr","","Return a raw pointer to the vmctx used by compiled wasm…",27,[[]]],[11,"module","","Return a reference to a module.",27,[[],["module",3]]],[11,"lookup_by_declaration","","Lookup an export with the given export declaration.",27,[[["entityindex",4]],["export",4]]],[11,"exports","","Return an iterator over the exports of this instance.",27,[[],[["entityindex",4],["iter",3],["string",3]]]],[11,"host_state","","Return a reference to the custom state attached to this…",27,[[],["any",8]]],[11,"memory_index","","Return the memory index for the given `VMMemoryDefinition`…",27,[[["vmmemorydefinition",3]],["definedmemoryindex",3]]],[11,"memory_grow","","Grow memory in this instance by the specified amount of…",27,[[["definedmemoryindex",3]],["option",4]]],[11,"table_index","","Return the table index for the given `VMTableDefinition`…",27,[[["vmtabledefinition",3]],["definedtableindex",3]]],[11,"table_grow","","Grow table in this instance by the specified amount of…",27,[[["tableindex",3],["tableelement",4]],["option",4]]],[11,"defined_table_grow","","Grow table in this instance by the specified amount of…",27,[[["tableelement",4],["definedtableindex",3]],["option",4]]],[11,"table_get","","Get table element reference.",27,[[["definedtableindex",3]],[["tableelement",4],["option",4]]]],[11,"table_set","","Set table element reference.",27,[[["tableelement",4],["definedtableindex",3]],["result",4]]],[11,"defined_table_fill","","Fill a region of the table.",27,[[["tableelement",4],["definedtableindex",3]],[["result",4],["trap",4]]]],[11,"get_defined_table","","Get a table defined locally within this module.",27,[[["definedtableindex",3]],["table",3]]],[11,"clone","","Returns a clone of this instance.",27,[[],["instancehandle",3]]],[11,"dealloc","","Deallocates memory associated with this instance.",27,[[]]],[11,"register","","Registers JIT image using __jit_debug_register_code",28,[[["vec",3]]]],[11,"file","","JIT image used in registration",28,[[]]],[11,"new","","Construct a new empty instance of `Mmap`.",29,[[]]],[11,"with_at_least","","Create a new `Mmap` pointing to at least `size` bytes of…",29,[[],[["result",4],["string",3]]]],[11,"accessible_reserved","","Create a new `Mmap` pointing to `accessible_size` bytes of…",29,[[],[["result",4],["string",3]]]],[11,"make_accessible","","Make the memory starting at `start` and extending for…",29,[[],[["result",4],["string",3]]]],[11,"as_slice","","Return the allocated memory as a slice of u8.",29,[[]]],[11,"as_mut_slice","","Return the allocated memory as a mutable slice of u8.",29,[[]]],[11,"as_ptr","","Return the allocated memory as a pointer to u8.",29,[[]]],[11,"as_mut_ptr","","Return the allocated memory as a mutable pointer to u8.",29,[[]]],[11,"len","","Return the length of the allocated memory.",29,[[]]],[11,"is_empty","","Return whether any memory has been allocated.",29,[[]]],[11,"new","","Create a new table instance with specified minimum and…",30,[[["tableplan",3]]]],[11,"element_type","","Returns the type of the elements in this table.",30,[[],["tableelementtype",4]]],[11,"size","","Returns the number of allocated elements.",30,[[]]],[11,"fill","","Fill `table[dst..dst + len]` with `val`.",30,[[["tableelement",4]],[["result",4],["trap",4]]]],[11,"grow","","Grow table by the specified amount of elements.",30,[[["tableelement",4]],["option",4]]],[11,"get","","Get reference to the specified element.",30,[[],[["tableelement",4],["option",4]]]],[11,"set","","Set reference to the specified element.",30,[[["tableelement",4]],["result",4]]],[11,"copy","","Copy `len` elements from `src_table[src_index..]` into…",30,[[],[["result",4],["trap",4]]]],[11,"vmtable","","Return a `VMTableDefinition` for exposing the table to…",30,[[],["vmtabledefinition",3]]],[11,"wasm","","Construct a new Wasm trap with the given source location…",11,[[["trapcode",4]]]],[11,"oom","","Construct a new OOM trap with the given source location…",11,[[]]],[11,"new","","Construct a `VMGlobalDefinition`.",32,[[]]],[11,"as_i32","","Return a reference to the value as an i32.",32,[[]]],[11,"as_i32_mut","","Return a mutable reference to the value as an i32.",32,[[]]],[11,"as_u32","","Return a reference to the value as a u32.",32,[[]]],[11,"as_u32_mut","","Return a mutable reference to the value as an u32.",32,[[]]],[11,"as_i64","","Return a reference to the value as an i64.",32,[[]]],[11,"as_i64_mut","","Return a mutable reference to the value as an i64.",32,[[]]],[11,"as_u64","","Return a reference to the value as an u64.",32,[[]]],[11,"as_u64_mut","","Return a mutable reference to the value as an u64.",32,[[]]],[11,"as_f32","","Return a reference to the value as an f32.",32,[[]]],[11,"as_f32_mut","","Return a mutable reference to the value as an f32.",32,[[]]],[11,"as_f32_bits","","Return a reference to the value as f32 bits.",32,[[]]],[11,"as_f32_bits_mut","","Return a mutable reference to the value as f32 bits.",32,[[]]],[11,"as_f64","","Return a reference to the value as an f64.",32,[[]]],[11,"as_f64_mut","","Return a mutable reference to the value as an f64.",32,[[]]],[11,"as_f64_bits","","Return a reference to the value as f64 bits.",32,[[]]],[11,"as_f64_bits_mut","","Return a mutable reference to the value as f64 bits.",32,[[]]],[11,"as_u128","","Return a reference to the value as an u128.",32,[[]]],[11,"as_u128_mut","","Return a mutable reference to the value as an u128.",32,[[]]],[11,"as_u128_bits","","Return a reference to the value as u128 bits.",32,[[]]],[11,"as_u128_bits_mut","","Return a mutable reference to the value as u128 bits.",32,[[]]],[11,"as_externref","","Return a reference to the value as an externref.",32,[[],["option",4]]],[11,"as_externref_mut","","Return a mutable reference to the value as an externref.",32,[[],["option",4]]],[11,"as_anyfunc","","Return a reference to the value as an anyfunc.",32,[[]]],[11,"as_anyfunc_mut","","Return a mutable reference to the value as an anyfunc.",32,[[]]],[11,"new","","Create a new `VMSharedSignatureIndex`.",33,[[]]],[11,"bits","","Returns the underlying bits of the index.",33,[[]]],[11,"new","","Create a new invocation argument filled with zeroes",34,[[]]],[11,"interrupt","","Flag that an interrupt should occur",19,[[]]],[11,"host_state","","Return a reference to the host state associated with this…",35,[[],["any",8]]]],"p":[[4,"Export"],[3,"ExportFunction"],[3,"ExportTable"],[3,"ExportMemory"],[3,"ExportGlobal"],[3,"Imports"],[4,"InstantiationError"],[3,"LinkError"],[8,"RuntimeLinearMemory"],[8,"RuntimeMemoryCreator"],[4,"TableElement"],[4,"Trap"],[13,"Jit"],[13,"Wasm"],[13,"OOM"],[8,"TrapInfo"],[3,"VMCallerCheckedAnyfunc"],[3,"VMFunctionImport"],[3,"VMGlobalImport"],[3,"VMInterrupts"],[3,"VMMemoryDefinition"],[3,"VMMemoryImport"],[3,"VMTableDefinition"],[3,"VMTableImport"],[3,"VMExternRef"],[3,"VMExternRefActivationsTable"],[3,"StackMapRegistry"],[3,"InstanceHandle"],[3,"GdbJitImageRegistration"],[3,"Mmap"],[3,"Table"],[3,"VMFunctionBody"],[3,"VMGlobalDefinition"],[3,"VMSharedSignatureIndex"],[3,"VMInvokeArgument"],[3,"VMContext"]]},\
"wasmtime_rust":{"doc":"","i":[[23,"wasmtime","wasmtime_rust","",null,null]],"p":[]},\
"wasmtime_rust_macro":{"doc":"","i":[[23,"wasmtime","wasmtime_rust_macro","",null,null]],"p":[]},\
"wasmtime_wasi":{"doc":"","i":[[0,"virtfs","wasmtime_wasi","",null,null],[0,"pipe","wasmtime_wasi::virtfs","Virtual pipes.",null,null],[3,"ReadPipe","wasmtime_wasi::virtfs::pipe","A virtual pipe read end.",null,null],[3,"WritePipe","","A virtual pipe write end.",null,null],[4,"VirtualDirEntry","wasmtime_wasi::virtfs","An entry in a virtual filesystem",null,null],[13,"Directory","","The contents of a child directory",0,null],[13,"File","","A file",0,null],[8,"FileContents","","",null,null],[10,"max_size","","The implementation-defined maximum size of the store…",1,[[]]],[10,"size","","The current number of bytes this `FileContents` describes.",1,[[]]],[10,"resize","","Resize to hold `new_size` number of bytes, or error if…",1,[[],[["error",4],["result",4]]]],[10,"pwritev","","Write a list of `IoSlice` starting at `offset`. `offset`…",1,[[],[["result",4],["error",4]]]],[10,"preadv","","Read from the file from `offset`, filling a list of…",1,[[],[["result",4],["error",4]]]],[10,"pwrite","","Write contents from `buf` to this file starting at…",1,[[],[["result",4],["error",4]]]],[10,"pread","","Read from the file at `offset`, filling `buf`. The…",1,[[],[["result",4],["error",4]]]],[3,"VecFileContents","","",null,null],[3,"InMemoryFile","","An `InMemoryFile` is a shared handle to some underlying…",null,null],[3,"VirtualDir","","A clonable read/write directory.",null,null],[3,"WasiCtx","wasmtime_wasi","",null,null],[3,"WasiCtxBuilder","","A builder allowing customizable construction of `WasiCtx`…",null,null],[0,"old","","",null,null],[0,"snapshot_0","wasmtime_wasi::old","",null,null],[0,"virtfs","wasmtime_wasi::old::snapshot_0","",null,null],[0,"pipe","wasmtime_wasi::old::snapshot_0::virtfs","Virtual pipes.",null,null],[3,"ReadPipe","wasmtime_wasi::old::snapshot_0::virtfs::pipe","A virtual pipe read end.",null,null],[3,"WritePipe","","A virtual pipe write end.",null,null],[4,"VirtualDirEntry","wasmtime_wasi::old::snapshot_0::virtfs","An entry in a virtual filesystem",null,null],[13,"Directory","","The contents of a child directory",0,null],[13,"File","","A file",0,null],[8,"FileContents","","",null,null],[10,"max_size","","The implementation-defined maximum size of the store…",1,[[]]],[10,"size","","The current number of bytes this `FileContents` describes.",1,[[]]],[10,"resize","","Resize to hold `new_size` number of bytes, or error if…",1,[[],[["error",4],["result",4]]]],[10,"pwritev","","Write a list of `IoSlice` starting at `offset`. `offset`…",1,[[],[["result",4],["error",4]]]],[10,"preadv","","Read from the file from `offset`, filling a list of…",1,[[],[["result",4],["error",4]]]],[10,"pwrite","","Write contents from `buf` to this file starting at…",1,[[],[["result",4],["error",4]]]],[10,"pread","","Read from the file at `offset`, filling `buf`. The…",1,[[],[["result",4],["error",4]]]],[3,"VecFileContents","","",null,null],[3,"InMemoryFile","","An `InMemoryFile` is a shared handle to some underlying…",null,null],[3,"VirtualDir","","A clonable read/write directory.",null,null],[3,"WasiCtx","wasmtime_wasi::old::snapshot_0","",null,null],[3,"WasiCtxBuilder","","A builder allowing customizable construction of `WasiCtx`…",null,null],[3,"Wasi","","An instantiated instance of the wasi exports.",null,null],[12,"args_get","","",2,null],[12,"args_sizes_get","","",2,null],[12,"environ_get","","",2,null],[12,"environ_sizes_get","","",2,null],[12,"clock_res_get","","",2,null],[12,"clock_time_get","","",2,null],[12,"fd_advise","","",2,null],[12,"fd_allocate","","",2,null],[12,"fd_close","","",2,null],[12,"fd_datasync","","",2,null],[12,"fd_fdstat_get","","",2,null],[12,"fd_fdstat_set_flags","","",2,null],[12,"fd_fdstat_set_rights","","",2,null],[12,"fd_filestat_get","","",2,null],[12,"fd_filestat_set_size","","",2,null],[12,"fd_filestat_set_times","","",2,null],[12,"fd_pread","","",2,null],[12,"fd_prestat_get","","",2,null],[12,"fd_prestat_dir_name","","",2,null],[12,"fd_pwrite","","",2,null],[12,"fd_read","","",2,null],[12,"fd_readdir","","",2,null],[12,"fd_renumber","","",2,null],[12,"fd_seek","","",2,null],[12,"fd_sync","","",2,null],[12,"fd_tell","","",2,null],[12,"fd_write","","",2,null],[12,"path_create_directory","","",2,null],[12,"path_filestat_get","","",2,null],[12,"path_filestat_set_times","","",2,null],[12,"path_link","","",2,null],[12,"path_open","","",2,null],[12,"path_readlink","","",2,null],[12,"path_remove_directory","","",2,null],[12,"path_rename","","",2,null],[12,"path_symlink","","",2,null],[12,"path_unlink_file","","",2,null],[12,"poll_oneoff","","",2,null],[12,"proc_exit","","",2,null],[12,"proc_raise","","",2,null],[12,"sched_yield","","",2,null],[12,"random_get","","",2,null],[12,"sock_recv","","",2,null],[12,"sock_send","","",2,null],[12,"sock_shutdown","","",2,null],[11,"new","","Creates a new [`Wasi`] instance.",2,[[["wasictx",3],["store",3]]]],[11,"get_export","","Looks up a field called `name` in this structure,…",2,[[],[["option",4],["func",3]]]],[11,"add_to_linker","","Adds all instance items to the specified `Linker`.",2,[[["linker",3]],["result",6]]],[5,"is_wasi_module","","",null,[[]]],[3,"Wasi","wasmtime_wasi","An instantiated instance of the wasi exports.",null,null],[12,"args_get","","",3,null],[12,"args_sizes_get","","",3,null],[12,"environ_get","","",3,null],[12,"environ_sizes_get","","",3,null],[12,"clock_res_get","","",3,null],[12,"clock_time_get","","",3,null],[12,"fd_advise","","",3,null],[12,"fd_allocate","","",3,null],[12,"fd_close","","",3,null],[12,"fd_datasync","","",3,null],[12,"fd_fdstat_get","","",3,null],[12,"fd_fdstat_set_flags","","",3,null],[12,"fd_fdstat_set_rights","","",3,null],[12,"fd_filestat_get","","",3,null],[12,"fd_filestat_set_size","","",3,null],[12,"fd_filestat_set_times","","",3,null],[12,"fd_pread","","",3,null],[12,"fd_prestat_get","","",3,null],[12,"fd_prestat_dir_name","","",3,null],[12,"fd_pwrite","","",3,null],[12,"fd_read","","",3,null],[12,"fd_readdir","","",3,null],[12,"fd_renumber","","",3,null],[12,"fd_seek","","",3,null],[12,"fd_sync","","",3,null],[12,"fd_tell","","",3,null],[12,"fd_write","","",3,null],[12,"path_create_directory","","",3,null],[12,"path_filestat_get","","",3,null],[12,"path_filestat_set_times","","",3,null],[12,"path_link","","",3,null],[12,"path_open","","",3,null],[12,"path_readlink","","",3,null],[12,"path_remove_directory","","",3,null],[12,"path_rename","","",3,null],[12,"path_symlink","","",3,null],[12,"path_unlink_file","","",3,null],[12,"poll_oneoff","","",3,null],[12,"proc_exit","","",3,null],[12,"proc_raise","","",3,null],[12,"sched_yield","","",3,null],[12,"random_get","","",3,null],[12,"sock_recv","","",3,null],[12,"sock_send","","",3,null],[12,"sock_shutdown","","",3,null],[11,"new","","Creates a new [`Wasi`] instance.",3,[[["wasictx",3],["store",3]]]],[11,"get_export","","Looks up a field called `name` in this structure,…",3,[[],[["option",4],["func",3]]]],[11,"add_to_linker","","Adds all instance items to the specified `Linker`.",3,[[["linker",3]],["result",6]]],[5,"is_wasi_module","","",null,[[]]],[11,"from","wasmtime_wasi::old::snapshot_0::virtfs::pipe","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"debug","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"debug","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","wasmtime_wasi::old::snapshot_0::virtfs","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"debug","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"debug","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"debug","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"debug","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","wasmtime_wasi::old::snapshot_0","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"debug","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"debug","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"debug","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","wasmtime_wasi","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"debug","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"clone","wasmtime_wasi::old::snapshot_0::virtfs::pipe","",4,[[],["readpipe",3]]],[11,"clone","","",5,[[],["writepipe",3]]],[11,"max_size","wasmtime_wasi::old::snapshot_0::virtfs","",6,[[]]],[11,"size","","",6,[[]]],[11,"resize","","",6,[[],[["error",4],["result",4]]]],[11,"preadv","","",6,[[],[["result",4],["error",4]]]],[11,"pwritev","","",6,[[],[["result",4],["error",4]]]],[11,"pread","","",6,[[],[["result",4],["error",4]]]],[11,"pwrite","","",6,[[],[["result",4],["error",4]]]],[11,"fmt","wasmtime_wasi::old::snapshot_0::virtfs::pipe","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",4,[[["string",3]],[["readpipe",3],["cursor",3]]]],[11,"from","","",4,[[["global",3],["vec",3]],[["readpipe",3],["cursor",3]]]],[11,"from","","",4,[[],[["readpipe",3],["cursor",3]]]],[11,"from","","",4,[[],[["readpipe",3],["cursor",3]]]],[11,"args_get","wasmtime_wasi::old::snapshot_0","",9,[[["guestptr",3],["guestptr",3]],[["error",4],["result",4]]]],[11,"args_sizes_get","","",9,[[],[["result",4],["error",4]]]],[11,"environ_get","","",9,[[["guestptr",3],["guestptr",3]],[["error",4],["result",4]]]],[11,"environ_sizes_get","","",9,[[],[["result",4],["error",4]]]],[11,"clock_res_get","","",9,[[["clockid",4]],[["result",4],["error",4]]]],[11,"clock_time_get","","",9,[[["clockid",4]],[["result",4],["error",4]]]],[11,"fd_advise","","",9,[[["fd",3],["advice",4]],[["error",4],["result",4]]]],[11,"fd_allocate","","",9,[[["fd",3]],[["error",4],["result",4]]]],[11,"fd_close","","",9,[[["fd",3]],[["error",4],["result",4]]]],[11,"fd_datasync","","",9,[[["fd",3]],[["error",4],["result",4]]]],[11,"fd_fdstat_get","","",9,[[["fd",3]],[["error",4],["fdstat",3],["result",4]]]],[11,"fd_fdstat_set_flags","","",9,[[["fdflags",3],["fd",3]],[["error",4],["result",4]]]],[11,"fd_fdstat_set_rights","","",9,[[["rights",3],["fd",3]],[["error",4],["result",4]]]],[11,"fd_filestat_get","","",9,[[["fd",3]],[["error",4],["result",4],["filestat",3]]]],[11,"fd_filestat_set_size","","",9,[[["fd",3]],[["error",4],["result",4]]]],[11,"fd_filestat_set_times","","",9,[[["fd",3],["fstflags",3]],[["error",4],["result",4]]]],[11,"fd_pread","","",9,[[["fd",3],["guestptr",3]],[["result",4],["error",4]]]],[11,"fd_prestat_get","","",9,[[["fd",3]],[["error",4],["result",4],["prestat",4]]]],[11,"fd_prestat_dir_name","","",9,[[["guestptr",3],["fd",3]],[["error",4],["result",4]]]],[11,"fd_pwrite","","",9,[[["fd",3],["guestptr",3]],[["result",4],["error",4]]]],[11,"fd_read","","",9,[[["fd",3],["guestptr",3]],[["result",4],["error",4]]]],[11,"fd_readdir","","",9,[[["guestptr",3],["fd",3]],[["result",4],["error",4]]]],[11,"fd_renumber","","",9,[[["fd",3]],[["error",4],["result",4]]]],[11,"fd_seek","","",9,[[["whence",4],["fd",3]],[["result",4],["error",4]]]],[11,"fd_sync","","",9,[[["fd",3]],[["error",4],["result",4]]]],[11,"fd_tell","","",9,[[["fd",3]],[["result",4],["error",4]]]],[11,"fd_write","","",9,[[["fd",3],["guestptr",3]],[["result",4],["error",4]]]],[11,"path_create_directory","","",9,[[["guestptr",3],["fd",3]],[["error",4],["result",4]]]],[11,"path_filestat_get","","",9,[[["lookupflags",3],["guestptr",3],["fd",3]],[["error",4],["result",4],["filestat",3]]]],[11,"path_filestat_set_times","","",9,[[["guestptr",3],["lookupflags",3],["fd",3],["fstflags",3]],[["error",4],["result",4]]]],[11,"path_link","","",9,[[["guestptr",3],["lookupflags",3],["fd",3]],[["error",4],["result",4]]]],[11,"path_open","","",9,[[["guestptr",3],["rights",3],["fdflags",3],["lookupflags",3],["fd",3],["oflags",3]],[["error",4],["result",4],["fd",3]]]],[11,"path_readlink","","",9,[[["guestptr",3],["fd",3],["guestptr",3]],[["result",4],["error",4]]]],[11,"path_remove_directory","","",9,[[["guestptr",3],["fd",3]],[["error",4],["result",4]]]],[11,"path_rename","","",9,[[["guestptr",3],["fd",3]],[["error",4],["result",4]]]],[11,"path_symlink","","",9,[[["guestptr",3],["fd",3]],[["error",4],["result",4]]]],[11,"path_unlink_file","","",9,[[["guestptr",3],["fd",3]],[["error",4],["result",4]]]],[11,"poll_oneoff","","",9,[[["guestptr",3],["guestptr",3]],[["result",4],["error",4]]]],[11,"proc_exit","","",9,[[],["trap",4]]],[11,"proc_raise","","",9,[[["signal",4]],[["error",4],["result",4]]]],[11,"sched_yield","","",9,[[],[["error",4],["result",4]]]],[11,"random_get","","",9,[[["guestptr",3]],[["error",4],["result",4]]]],[11,"sock_recv","","",9,[[["riflags",3],["fd",3],["guestptr",3]],[["result",4],["error",4]]]],[11,"sock_send","","",9,[[["fd",3],["guestptr",3]],[["result",4],["error",4]]]],[11,"sock_shutdown","","",9,[[["sdflags",3],["fd",3]],[["error",4],["result",4]]]],[11,"errno_from_error","","",9,[[["error",4]],[["trap",4],["result",4],["errno",4]]]],[11,"into_errno","","",9,[[["guesterror",4]],["errno",4]]],[11,"errno_from_error","","",9,[[["error",4]],[["errno",4],["trap",4],["result",4]]]],[11,"as_any","wasmtime_wasi::old::snapshot_0::virtfs","",7,[[],["any",8]]],[11,"try_clone","","",7,[[],[["box",3],["error",3],["result",4]]]],[11,"get_file_type","","",7,[[],["filetype",4]]],[11,"get_rights","","",7,[[],["handlerights",3]]],[11,"set_rights","","",7,[[["handlerights",3]]]],[11,"advise","","",7,[[["advice",4]],[["error",4],["result",4]]]],[11,"allocate","","",7,[[],[["error",4],["result",4]]]],[11,"fdstat_get","","",7,[[],[["result",4],["fdflags",3],["error",4]]]],[11,"fdstat_set_flags","","",7,[[["fdflags",3]],[["error",4],["result",4]]]],[11,"filestat_get","","",7,[[],[["error",4],["result",4],["filestat",3]]]],[11,"filestat_set_size","","",7,[[],[["error",4],["result",4]]]],[11,"preadv","","",7,[[],[["result",4],["error",4]]]],[11,"pwritev","","",7,[[],[["result",4],["error",4]]]],[11,"read_vectored","","",7,[[],[["result",4],["error",4]]]],[11,"seek","","",7,[[["seekfrom",4]],[["result",4],["error",4]]]],[11,"write_vectored","","",7,[[],[["result",4],["error",4]]]],[11,"create_directory","","",7,[[],[["error",4],["result",4]]]],[11,"openat","","",7,[[["fdflags",3],["oflags",3]],[["box",3],["result",4],["error",4]]]],[11,"link","","",7,[[["global",3],["box",3],["handle",8]],[["error",4],["result",4]]]],[11,"readlink","","",7,[[],[["result",4],["error",4]]]],[11,"readlinkat","","",7,[[],[["error",4],["string",3],["result",4]]]],[11,"rename","","",7,[[["global",3],["box",3],["handle",8]],[["error",4],["result",4]]]],[11,"remove_directory","","",7,[[],[["error",4],["result",4]]]],[11,"symlink","","",7,[[],[["error",4],["result",4]]]],[11,"unlink_file","","",7,[[],[["error",4],["result",4]]]],[11,"as_any","wasmtime_wasi::old::snapshot_0::virtfs::pipe","",5,[[],["any",8]]],[11,"try_clone","","",5,[[],[["box",3],["error",3],["result",4]]]],[11,"get_file_type","","",5,[[],["filetype",4]]],[11,"get_rights","","",5,[[],["handlerights",3]]],[11,"set_rights","","",5,[[["handlerights",3]]]],[11,"advise","","",5,[[["advice",4]],[["error",4],["result",4]]]],[11,"allocate","","",5,[[],[["error",4],["result",4]]]],[11,"fdstat_set_flags","","",5,[[["fdflags",3]],[["error",4],["result",4]]]],[11,"filestat_get","","",5,[[],[["error",4],["result",4],["filestat",3]]]],[11,"filestat_set_size","","",5,[[],[["error",4],["result",4]]]],[11,"pwritev","","",5,[[],[["result",4],["error",4]]]],[11,"seek","","",5,[[["seekfrom",4]],[["result",4],["error",4]]]],[11,"write_vectored","","",5,[[],[["result",4],["error",4]]]],[11,"create_directory","","",5,[[],[["error",4],["result",4]]]],[11,"openat","","",5,[[["fdflags",3],["oflags",3]],[["box",3],["result",4],["error",4]]]],[11,"link","","",5,[[["global",3],["box",3],["handle",8]],[["error",4],["result",4]]]],[11,"readlink","","",5,[[],[["result",4],["error",4]]]],[11,"readlinkat","","",5,[[],[["error",4],["string",3],["result",4]]]],[11,"rename","","",5,[[["global",3],["box",3],["handle",8]],[["error",4],["result",4]]]],[11,"remove_directory","","",5,[[],[["error",4],["result",4]]]],[11,"symlink","","",5,[[],[["error",4],["result",4]]]],[11,"unlink_file","","",5,[[],[["error",4],["result",4]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"try_clone","","",4,[[],[["box",3],["error",3],["result",4]]]],[11,"get_file_type","","",4,[[],["filetype",4]]],[11,"get_rights","","",4,[[],["handlerights",3]]],[11,"set_rights","","",4,[[["handlerights",3]]]],[11,"advise","","",4,[[["advice",4]],[["error",4],["result",4]]]],[11,"allocate","","",4,[[],[["error",4],["result",4]]]],[11,"fdstat_set_flags","","",4,[[["fdflags",3]],[["error",4],["result",4]]]],[11,"filestat_get","","",4,[[],[["error",4],["result",4],["filestat",3]]]],[11,"filestat_set_size","","",4,[[],[["error",4],["result",4]]]],[11,"preadv","","",4,[[],[["result",4],["error",4]]]],[11,"seek","","",4,[[["seekfrom",4]],[["result",4],["error",4]]]],[11,"read_vectored","","",4,[[],[["result",4],["error",4]]]],[11,"create_directory","","",4,[[],[["error",4],["result",4]]]],[11,"openat","","",4,[[["fdflags",3],["oflags",3]],[["box",3],["result",4],["error",4]]]],[11,"link","","",4,[[["global",3],["box",3],["handle",8]],[["error",4],["result",4]]]],[11,"readlink","","",4,[[],[["result",4],["error",4]]]],[11,"readlinkat","","",4,[[],[["error",4],["string",3],["result",4]]]],[11,"rename","","",4,[[["global",3],["box",3],["handle",8]],[["error",4],["result",4]]]],[11,"remove_directory","","",4,[[],[["error",4],["result",4]]]],[11,"symlink","","",4,[[],[["error",4],["result",4]]]],[11,"unlink_file","","",4,[[],[["error",4],["result",4]]]],[11,"as_any","wasmtime_wasi::old::snapshot_0::virtfs","",8,[[],["any",8]]],[11,"try_clone","","",8,[[],[["box",3],["error",3],["result",4]]]],[11,"get_file_type","","",8,[[],["filetype",4]]],[11,"get_rights","","",8,[[],["handlerights",3]]],[11,"set_rights","","",8,[[["handlerights",3]]]],[11,"filestat_get","","",8,[[],[["error",4],["result",4],["filestat",3]]]],[11,"readdir","","",8,[[],[["box",3],["result",4],["error",4]]]],[11,"create_directory","","",8,[[],[["error",4],["result",4]]]],[11,"filestat_get_at","","",8,[[],[["error",4],["result",4],["filestat",3]]]],[11,"filestat_set_times_at","","",8,[[["fstflags",3]],[["error",4],["result",4]]]],[11,"openat","","",8,[[["fdflags",3],["oflags",3]],[["box",3],["result",4],["error",4]]]],[11,"readlinkat","","",8,[[],[["error",4],["string",3],["result",4]]]],[11,"remove_directory","","",8,[[],[["error",4],["result",4]]]],[11,"unlink_file","","",8,[[],[["error",4],["result",4]]]],[11,"args_get","wasmtime_wasi::old::snapshot_0","",9,[[["guestptr",3],["guestptr",3]],[["error",4],["result",4]]]],[11,"args_sizes_get","","",9,[[],[["result",4],["error",4]]]],[11,"environ_get","","",9,[[["guestptr",3],["guestptr",3]],[["error",4],["result",4]]]],[11,"environ_sizes_get","","",9,[[],[["result",4],["error",4]]]],[11,"clock_res_get","","",9,[[["clockid",4]],[["result",4],["error",4]]]],[11,"clock_time_get","","",9,[[["clockid",4]],[["result",4],["error",4]]]],[11,"fd_advise","","",9,[[["advice",4],["fd",3]],[["error",4],["result",4]]]],[11,"fd_allocate","","",9,[[["fd",3]],[["error",4],["result",4]]]],[11,"fd_close","","",9,[[["fd",3]],[["error",4],["result",4]]]],[11,"fd_datasync","","",9,[[["fd",3]],[["error",4],["result",4]]]],[11,"fd_fdstat_get","","",9,[[["fd",3]],[["error",4],["fdstat",3],["result",4]]]],[11,"fd_fdstat_set_flags","","",9,[[["fdflags",3],["fd",3]],[["error",4],["result",4]]]],[11,"fd_fdstat_set_rights","","",9,[[["rights",3],["fd",3]],[["error",4],["result",4]]]],[11,"fd_filestat_get","","",9,[[["fd",3]],[["result",4],["filestat",3],["error",4]]]],[11,"fd_filestat_set_size","","",9,[[["fd",3]],[["error",4],["result",4]]]],[11,"fd_filestat_set_times","","",9,[[["fstflags",3],["fd",3]],[["error",4],["result",4]]]],[11,"fd_pread","","",9,[[["guestptr",3],["fd",3]],[["result",4],["error",4]]]],[11,"fd_prestat_get","","",9,[[["fd",3]],[["error",4],["result",4],["prestat",4]]]],[11,"fd_prestat_dir_name","","",9,[[["guestptr",3],["fd",3]],[["error",4],["result",4]]]],[11,"fd_pwrite","","",9,[[["guestptr",3],["fd",3]],[["result",4],["error",4]]]],[11,"fd_read","","",9,[[["guestptr",3],["fd",3]],[["result",4],["error",4]]]],[11,"fd_readdir","","",9,[[["guestptr",3],["fd",3]],[["result",4],["error",4]]]],[11,"fd_renumber","","",9,[[["fd",3]],[["error",4],["result",4]]]],[11,"fd_seek","","",9,[[["whence",4],["fd",3]],[["result",4],["error",4]]]],[11,"fd_sync","","",9,[[["fd",3]],[["error",4],["result",4]]]],[11,"fd_tell","","",9,[[["fd",3]],[["result",4],["error",4]]]],[11,"fd_write","","",9,[[["guestptr",3],["fd",3]],[["result",4],["error",4]]]],[11,"path_create_directory","","",9,[[["guestptr",3],["fd",3]],[["error",4],["result",4]]]],[11,"path_filestat_get","","",9,[[["lookupflags",3],["guestptr",3],["fd",3]],[["result",4],["filestat",3],["error",4]]]],[11,"path_filestat_set_times","","",9,[[["fd",3],["fstflags",3],["guestptr",3],["lookupflags",3]],[["error",4],["result",4]]]],[11,"path_link","","",9,[[["fd",3],["guestptr",3],["lookupflags",3]],[["error",4],["result",4]]]],[11,"path_open","","",9,[[["fd",3],["oflags",3],["rights",3],["guestptr",3],["fdflags",3],["lookupflags",3]],[["error",4],["result",4],["fd",3]]]],[11,"path_readlink","","",9,[[["guestptr",3],["guestptr",3],["fd",3]],[["result",4],["error",4]]]],[11,"path_remove_directory","","",9,[[["guestptr",3],["fd",3]],[["error",4],["result",4]]]],[11,"path_rename","","",9,[[["guestptr",3],["fd",3]],[["error",4],["result",4]]]],[11,"path_symlink","","",9,[[["guestptr",3],["fd",3]],[["error",4],["result",4]]]],[11,"path_unlink_file","","",9,[[["guestptr",3],["fd",3]],[["error",4],["result",4]]]],[11,"poll_oneoff","","",9,[[["guestptr",3],["guestptr",3]],[["result",4],["error",4]]]],[11,"proc_exit","","",9,[[],["trap",4]]],[11,"proc_raise","","",9,[[["signal",4]],[["error",4],["result",4]]]],[11,"sched_yield","","",9,[[],[["error",4],["result",4]]]],[11,"random_get","","",9,[[["guestptr",3]],[["error",4],["result",4]]]],[11,"sock_recv","","",9,[[["guestptr",3],["riflags",3],["fd",3]],[["error",4],["result",4]]]],[11,"sock_send","","",9,[[["guestptr",3],["fd",3]],[["result",4],["error",4]]]],[11,"sock_shutdown","","",9,[[["sdflags",3],["fd",3]],[["error",4],["result",4]]]],[11,"into_errno","","",9,[[["guesterror",4]],["errno",4]]],[11,"new","wasmtime_wasi::old::snapshot_0::virtfs::pipe","Create a new pipe from a `Read` type.",4,[[],["readpipe",3]]],[11,"from_shared","","Create a new pipe from a shareable `Read` type.",4,[[["arc",3],["rwlock",3]],["readpipe",3]]],[11,"try_into_inner","","Try to convert this `ReadPipe<R>` back to the underlying…",4,[[],[["readpipe",3],["result",4]]]],[11,"new","","Create a new pipe from a `Write` type.",5,[[],["writepipe",3]]],[11,"from_shared","","Create a new pipe from a shareable `Write` type.",5,[[["arc",3],["rwlock",3]],["writepipe",3]]],[11,"try_into_inner","","Try to convert this `WritePipe<W>` back to the underlying…",5,[[],[["writepipe",3],["result",4]]]],[11,"new_in_memory","","Create a new writable virtual pipe backed by a `Vec<u8>`…",5,[[],[["writepipe",3],["cursor",3]]]],[11,"empty_directory","wasmtime_wasi::old::snapshot_0::virtfs","Construct an empty directory",0,[[],["virtualdirentry",4]]],[11,"new","","",6,[[],["vecfilecontents",3]]],[11,"with_content","","",6,[[["global",3],["vec",3]],["vecfilecontents",3]]],[11,"memory_backed","","",7,[[],["inmemoryfile",3]]],[11,"new","","",7,[[["box",3],["global",3],["filecontents",8]],["inmemoryfile",3]]],[11,"new","","",8,[[],["virtualdir",3]]],[11,"with_dir","","",8,[[["virtualdir",3]],["virtualdir",3]]],[11,"add_dir","","",8,[[["virtualdir",3]]]],[11,"with_file","","",8,[[["box",3],["global",3],["filecontents",8]],["virtualdir",3]]],[11,"add_file","","",8,[[["box",3],["global",3],["filecontents",8]]]],[11,"new","wasmtime_wasi::old::snapshot_0","Make a new `WasiCtx` with some default settings.",9,[[],[["wasictxbuildererror",4],["wasictx",3],["result",4]]]],[11,"new","","Builder for a new `WasiCtx`.",10,[[],["wasictxbuilder",3]]],[11,"args","","Add arguments to the command-line arguments list.",10,[[],["wasictxbuilder",3]]],[11,"arg","","Add an argument to the command-line arguments list.",10,[[],["wasictxbuilder",3]]],[11,"inherit_args","","Inherit the command-line arguments from the host process.",10,[[],["wasictxbuilder",3]]],[11,"inherit_stdin","","Inherit stdin from the host process.",10,[[],["wasictxbuilder",3]]],[11,"inherit_stdout","","Inherit stdout from the host process.",10,[[],["wasictxbuilder",3]]],[11,"inherit_stderr","","Inherit stderr from the host process.",10,[[],["wasictxbuilder",3]]],[11,"inherit_stdio","","Inherit the stdin, stdout, and stderr streams from the…",10,[[],["wasictxbuilder",3]]],[11,"inherit_env","","Inherit the environment variables from the host process.",10,[[],["wasictxbuilder",3]]],[11,"env","","Add an entry to the environment.",10,[[],["wasictxbuilder",3]]],[11,"envs","","Add entries to the environment.",10,[[],["wasictxbuilder",3]]],[11,"stdin","","Provide a `Handle` to use as stdin",10,[[],["wasictxbuilder",3]]],[11,"stdout","","Provide a `Handle` to use as stdout",10,[[],["wasictxbuilder",3]]],[11,"stderr","","Provide a `Handle` to use as stderr",10,[[],["wasictxbuilder",3]]],[11,"preopened_dir","","Add a preopened directory.",10,[[["file",3]],["wasictxbuilder",3]]],[11,"preopened_virt","","Add a preopened virtual directory.",10,[[["virtualdirentry",4]],["wasictxbuilder",3]]],[11,"build","","Build a `WasiCtx`, consuming this `WasiCtxBuilder`.",10,[[],[["wasictxbuildererror",4],["wasictx",3],["result",4]]]]],"p":[[4,"VirtualDirEntry"],[8,"FileContents"],[3,"Wasi"],[3,"Wasi"],[3,"ReadPipe"],[3,"WritePipe"],[3,"VecFileContents"],[3,"InMemoryFile"],[3,"VirtualDir"],[3,"WasiCtx"],[3,"WasiCtxBuilder"]]},\
"wasmtime_wasi_crypto":{"doc":"","i":[[3,"WasiCryptoCtx","wasmtime_wasi_crypto","",null,null],[3,"WasiCryptoSignatures","","wasi-crypto - Signature module.",null,null],[12,"signature_export","","",0,null],[12,"signature_import","","",0,null],[12,"signature_state_open","","",0,null],[12,"signature_state_update","","",0,null],[12,"signature_state_sign","","",0,null],[12,"signature_state_close","","",0,null],[12,"signature_verification_state_open","","",0,null],[12,"signature_verification_state_update","","",0,null],[12,"signature_verification_state_verify","","",0,null],[12,"signature_verification_state_close","","",0,null],[12,"signature_close","","",0,null],[11,"new","","Creates a new [`WasiCryptoSignatures`] instance.",0,[[["store",3],["wasicryptoctx",3]]]],[11,"get_export","","Looks up a field called `name` in this structure,…",0,[[],[["func",3],["option",4]]]],[11,"add_to_linker","","Adds all instance items to the specified `Linker`.",0,[[["linker",3]],["result",6]]],[3,"WasiCryptoSymmetric","","wasi-crypto - Symmetric cryptography module.",null,null],[12,"symmetric_key_generate","","",1,null],[12,"symmetric_key_import","","",1,null],[12,"symmetric_key_export","","",1,null],[12,"symmetric_key_close","","",1,null],[12,"symmetric_key_generate_managed","","",1,null],[12,"symmetric_key_store_managed","","",1,null],[12,"symmetric_key_replace_managed","","",1,null],[12,"symmetric_key_id","","",1,null],[12,"symmetric_key_from_id","","",1,null],[12,"symmetric_state_open","","",1,null],[12,"symmetric_state_options_get","","",1,null],[12,"symmetric_state_options_get_u64","","",1,null],[12,"symmetric_state_close","","",1,null],[12,"symmetric_state_absorb","","",1,null],[12,"symmetric_state_squeeze","","",1,null],[12,"symmetric_state_squeeze_tag","","",1,null],[12,"symmetric_state_squeeze_key","","",1,null],[12,"symmetric_state_max_tag_len","","",1,null],[12,"symmetric_state_encrypt","","",1,null],[12,"symmetric_state_encrypt_detached","","",1,null],[12,"symmetric_state_decrypt","","",1,null],[12,"symmetric_state_decrypt_detached","","",1,null],[12,"symmetric_state_ratchet","","",1,null],[12,"symmetric_tag_len","","",1,null],[12,"symmetric_tag_pull","","",1,null],[12,"symmetric_tag_verify","","",1,null],[12,"symmetric_tag_close","","",1,null],[11,"new","","Creates a new [`WasiCryptoSymmetric`] instance.",1,[[["store",3],["wasicryptoctx",3]]]],[11,"get_export","","Looks up a field called `name` in this structure,…",1,[[],[["func",3],["option",4]]]],[11,"add_to_linker","","Adds all instance items to the specified `Linker`.",1,[[["linker",3]],["result",6]]],[3,"WasiCryptoCommon","","wasi-crypto - Common module.",null,null],[12,"options_open","","",2,null],[12,"options_close","","",2,null],[12,"options_set","","",2,null],[12,"options_set_u64","","",2,null],[12,"options_set_guest_buffer","","",2,null],[12,"array_output_len","","",2,null],[12,"array_output_pull","","",2,null],[12,"secrets_manager_open","","",2,null],[12,"secrets_manager_close","","",2,null],[12,"secrets_manager_invalidate","","",2,null],[11,"new","","Creates a new [`WasiCryptoCommon`] instance.",2,[[["store",3],["wasicryptoctx",3]]]],[11,"get_export","","Looks up a field called `name` in this structure,…",2,[[],[["func",3],["option",4]]]],[11,"add_to_linker","","Adds all instance items to the specified `Linker`.",2,[[["linker",3]],["result",6]]],[3,"WasiCryptoAsymmetricCommon","","wasi-crypto - Common module for asymmetric operations.",null,null],[12,"keypair_generate","","",3,null],[12,"keypair_import","","",3,null],[12,"keypair_generate_managed","","",3,null],[12,"keypair_store_managed","","",3,null],[12,"keypair_replace_managed","","",3,null],[12,"keypair_id","","",3,null],[12,"keypair_from_id","","",3,null],[12,"keypair_from_pk_and_sk","","",3,null],[12,"keypair_export","","",3,null],[12,"keypair_publickey","","",3,null],[12,"keypair_secretkey","","",3,null],[12,"keypair_close","","",3,null],[12,"publickey_import","","",3,null],[12,"publickey_export","","",3,null],[12,"publickey_verify","","",3,null],[12,"publickey_from_secretkey","","",3,null],[12,"publickey_close","","",3,null],[12,"secretkey_import","","",3,null],[12,"secretkey_export","","",3,null],[12,"secretkey_close","","",3,null],[11,"new","","Creates a new [`WasiCryptoAsymmetricCommon`] instance.",3,[[["store",3],["wasicryptoctx",3]]]],[11,"get_export","","Looks up a field called `name` in this structure,…",3,[[],[["func",3],["option",4]]]],[11,"add_to_linker","","Adds all instance items to the specified `Linker`.",3,[[["linker",3]],["result",6]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"debug","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"debug","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"debug","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"debug","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"debug","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"clone","","",4,[[],["wasicryptoctx",3]]],[11,"new","","",4,[[]]]],"p":[[3,"WasiCryptoSignatures"],[3,"WasiCryptoSymmetric"],[3,"WasiCryptoCommon"],[3,"WasiCryptoAsymmetricCommon"],[3,"WasiCryptoCtx"]]},\
"wasmtime_wasi_nn":{"doc":"","i":[[3,"WasiNnCtx","wasmtime_wasi_nn","This structure provides the Rust-side context necessary…",null,null],[3,"WasiNn","","An instantiated instance of the wasi-nn exports.",null,null],[12,"load","","",0,null],[12,"init_execution_context","","",0,null],[12,"set_input","","",0,null],[12,"get_output","","",0,null],[12,"compute","","",0,null],[11,"new","","Creates a new [`WasiNn`] instance.",0,[[["store",3],["wasinnctx",3]]]],[11,"get_export","","Looks up a field called `name` in this structure,…",0,[[],[["func",3],["option",4]]]],[11,"add_to_linker","","Adds all instance items to the specified `Linker`.",0,[[["linker",3]],["result",6]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"debug","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"debug","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"new","","Make a new `WasiNnCtx` with the default settings.",1,[[],[["wasinnerror",4],["result",4]]]]],"p":[[3,"WasiNn"],[3,"WasiNnCtx"]]},\
"wasmtime_wast":{"doc":"Implementation of the WAST text format for wasmtime.","i":[[5,"link_spectest","wasmtime_wast","Return an instance implementing the \\\"spectest\\\" interface…",null,[[["linker",3]],["result",6]]],[3,"WastContext","","The wast test script language allows modules to be defined…",null,null],[17,"VERSION","","Version number of this crate.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"new","","Construct a new instance of `WastContext`.",0,[[["store",3]]]],[11,"register_spectest","","Register \\\"spectest\\\" which is used by the spec testsuite.",0,[[],["result",6]]],[11,"run_buffer","","Run a wast script from a byte buffer.",0,[[],["result",6]]],[11,"run_file","","Run a wast script from a file.",0,[[["path",3]],["result",6]]]],"p":[[3,"WastContext"]]},\
"wasmtime_wiggle":{"doc":"","i":[[14,"wasmtime_integration","wasmtime_wiggle","Define the structs required to integrate a Wiggle…",null,null],[8,"GuestMemory","","A trait which abstracts how to get at the region of host…",null,null],[10,"base","","Returns the base allocation of this guest memory, located…",0,[[]]],[11,"validate_size_align","","Validates a guest-relative pointer given various…",0,[[],[["guesterror",4],["result",4]]]],[11,"ptr","","Convenience method for creating a `GuestPtr` at a…",0,[[],["guestptr",3]]],[10,"has_outstanding_borrows","","Indicates whether any outstanding borrows are known to the…",0,[[]]],[10,"is_mut_borrowed","","Check if a region of linear memory is exclusively…",0,[[["region",3]]]],[10,"is_shared_borrowed","","Check if a region of linear memory has any shared borrows.",0,[[["region",3]]]],[10,"mut_borrow","","Exclusively borrow a region of linear memory. This is used…",0,[[["region",3]],[["guesterror",4],["result",4],["borrowhandle",3]]]],[10,"shared_borrow","","Shared borrow a region of linear memory. This is used when…",0,[[["region",3]],[["guesterror",4],["result",4],["borrowhandle",3]]]],[10,"mut_unborrow","","Unborrow a previously borrowed mutable region. As long as…",0,[[["borrowhandle",3]]]],[10,"shared_unborrow","","Unborrow a previously borrowed shared region. As long as…",0,[[["borrowhandle",3]]]],[3,"BorrowHandle","","A handle to a borrow on linear memory. It is produced by…",null,null],[12,"0","","",1,null],[3,"GuestPtr","","A guest pointer into host memory.",null,null],[3,"GuestSlice","","A smart pointer to an sharedable slice in guest memory.…",null,null],[3,"GuestSliceMut","","A smart pointer to a mutable slice in guest memory. Usable…",null,null],[3,"GuestStr","","A smart pointer to an sharedable `str` in guest memory.…",null,null],[3,"GuestStrMut","","A smart pointer to a mutable `str` in guest memory. Usable…",null,null],[8,"Pointee","","Types that can be pointed to by `GuestPtr<T>`.",null,null],[4,"Trap","","A runtime-independent way for Wiggle to terminate…",null,null],[13,"I32Exit","","A Trap which indicates an i32 (posix-style) exit code.…",2,null],[13,"String","","Any other Trap is just an unstructured String, for…",2,null],[0,"i128","wasmtime_wiggle::bitflags::_core","The 128-bit signed integer type.",null,null],[17,"MIN","wasmtime_wiggle::bitflags::_core::i128","The smallest value that can be represented by this integer…",null,null],[17,"MAX","","The largest value that can be represented by this integer…",null,null],[0,"i16","wasmtime_wiggle::bitflags::_core","The 16-bit signed integer type.",null,null],[17,"MIN","wasmtime_wiggle::bitflags::_core::i16","The smallest value that can be represented by this integer…",null,null],[17,"MAX","","The largest value that can be represented by this integer…",null,null],[0,"i32","wasmtime_wiggle::bitflags::_core","The 32-bit signed integer type.",null,null],[17,"MIN","wasmtime_wiggle::bitflags::_core::i32","The smallest value that can be represented by this integer…",null,null],[17,"MAX","","The largest value that can be represented by this integer…",null,null],[0,"i64","wasmtime_wiggle::bitflags::_core","The 64-bit signed integer type.",null,null],[17,"MIN","wasmtime_wiggle::bitflags::_core::i64","The smallest value that can be represented by this integer…",null,null],[17,"MAX","","The largest value that can be represented by this integer…",null,null],[0,"i8","wasmtime_wiggle::bitflags::_core","The 8-bit signed integer type.",null,null],[17,"MIN","wasmtime_wiggle::bitflags::_core::i8","The smallest value that can be represented by this integer…",null,null],[17,"MAX","","The largest value that can be represented by this integer…",null,null],[0,"isize","wasmtime_wiggle::bitflags::_core","The pointer-sized signed integer type.",null,null],[17,"MIN","wasmtime_wiggle::bitflags::_core::isize","The smallest value that can be represented by this integer…",null,null],[17,"MAX","","The largest value that can be represented by this integer…",null,null],[0,"u128","wasmtime_wiggle::bitflags::_core","The 128-bit unsigned integer type.",null,null],[17,"MIN","wasmtime_wiggle::bitflags::_core::u128","The smallest value that can be represented by this integer…",null,null],[17,"MAX","","The largest value that can be represented by this integer…",null,null],[0,"u16","wasmtime_wiggle::bitflags::_core","The 16-bit unsigned integer type.",null,null],[17,"MIN","wasmtime_wiggle::bitflags::_core::u16","The smallest value that can be represented by this integer…",null,null],[17,"MAX","","The largest value that can be represented by this integer…",null,null],[0,"u32","wasmtime_wiggle::bitflags::_core","The 32-bit unsigned integer type.",null,null],[17,"MIN","wasmtime_wiggle::bitflags::_core::u32","The smallest value that can be represented by this integer…",null,null],[17,"MAX","","The largest value that can be represented by this integer…",null,null],[0,"u64","wasmtime_wiggle::bitflags::_core","The 64-bit unsigned integer type.",null,null],[17,"MIN","wasmtime_wiggle::bitflags::_core::u64","The smallest value that can be represented by this integer…",null,null],[17,"MAX","","The largest value that can be represented by this integer…",null,null],[0,"u8","wasmtime_wiggle::bitflags::_core","The 8-bit unsigned integer type.",null,null],[17,"MIN","wasmtime_wiggle::bitflags::_core::u8","The smallest value that can be represented by this integer…",null,null],[17,"MAX","","The largest value that can be represented by this integer…",null,null],[0,"usize","wasmtime_wiggle::bitflags::_core","The pointer-sized unsigned integer type.",null,null],[17,"MIN","wasmtime_wiggle::bitflags::_core::usize","The smallest value that can be represented by this integer…",null,null],[17,"MAX","","The largest value that can be represented by this integer…",null,null],[0,"f32","wasmtime_wiggle::bitflags::_core","This module provides constants which are specific to the…",null,null],[17,"RADIX","wasmtime_wiggle::bitflags::_core::f32","The radix or base of the internal representation of `f32`.…",null,null],[17,"MANTISSA_DIGITS","","Number of significant digits in base 2. Use…",null,null],[17,"DIGITS","","Approximate number of significant digits in base 10. Use…",null,null],[17,"EPSILON","","Machine epsilon value for `f32`. Use `f32::EPSILON` instead.",null,null],[17,"MIN","","Smallest finite `f32` value. Use `f32::MIN` instead.",null,null],[17,"MIN_POSITIVE","","Smallest positive normal `f32` value. Use…",null,null],[17,"MAX","","Largest finite `f32` value. Use `f32::MAX` instead.",null,null],[17,"MIN_EXP","","One greater than the minimum possible normal power of 2…",null,null],[17,"MAX_EXP","","Maximum possible power of 2 exponent. Use `f32::MAX_EXP`…",null,null],[17,"MIN_10_EXP","","Minimum possible normal power of 10 exponent. Use…",null,null],[17,"MAX_10_EXP","","Maximum possible power of 10 exponent. Use…",null,null],[17,"NAN","","Not a Number (NaN). Use `f32::NAN` instead.",null,null],[17,"INFINITY","","Infinity (∞). Use `f32::INFINITY` instead.",null,null],[17,"NEG_INFINITY","","Negative infinity (−∞). Use `f32::NEG_INFINITY` instead.",null,null],[0,"consts","","Basic mathematical constants.",null,null],[17,"PI","wasmtime_wiggle::bitflags::_core::f32::consts","Archimedes\' constant (π)",null,null],[17,"TAU","","The full circle constant (τ)",null,null],[17,"FRAC_PI_2","","π/2",null,null],[17,"FRAC_PI_3","","π/3",null,null],[17,"FRAC_PI_4","","π/4",null,null],[17,"FRAC_PI_6","","π/6",null,null],[17,"FRAC_PI_8","","π/8",null,null],[17,"FRAC_1_PI","","1/π",null,null],[17,"FRAC_2_PI","","2/π",null,null],[17,"FRAC_2_SQRT_PI","","2/sqrt(π)",null,null],[17,"SQRT_2","","sqrt(2)",null,null],[17,"FRAC_1_SQRT_2","","1/sqrt(2)",null,null],[17,"E","","Euler\'s number (e)",null,null],[17,"LOG2_E","","log2(e)",null,null],[17,"LOG2_10","","log2(10)",null,null],[17,"LOG10_E","","log10(e)",null,null],[17,"LOG10_2","","log10(2)",null,null],[17,"LN_2","","ln(2)",null,null],[17,"LN_10","","ln(10)",null,null],[0,"f64","wasmtime_wiggle::bitflags::_core","This module provides constants which are specific to the…",null,null],[17,"RADIX","wasmtime_wiggle::bitflags::_core::f64","The radix or base of the internal representation of `f64`.…",null,null],[17,"MANTISSA_DIGITS","","Number of significant digits in base 2. Use…",null,null],[17,"DIGITS","","Approximate number of significant digits in base 10. Use…",null,null],[17,"EPSILON","","Machine epsilon value for `f64`. Use `f64::EPSILON` instead.",null,null],[17,"MIN","","Smallest finite `f64` value. Use `f64::MIN` instead.",null,null],[17,"MIN_POSITIVE","","Smallest positive normal `f64` value. Use…",null,null],[17,"MAX","","Largest finite `f64` value. Use `f64::MAX` instead.",null,null],[17,"MIN_EXP","","One greater than the minimum possible normal power of 2…",null,null],[17,"MAX_EXP","","Maximum possible power of 2 exponent. Use `f64::MAX_EXP`…",null,null],[17,"MIN_10_EXP","","Minimum possible normal power of 10 exponent. Use…",null,null],[17,"MAX_10_EXP","","Maximum possible power of 10 exponent. Use…",null,null],[17,"NAN","","Not a Number (NaN). Use `f64::NAN` instead.",null,null],[17,"INFINITY","","Infinity (∞). Use `f64::INFINITY` instead.",null,null],[17,"NEG_INFINITY","","Negative infinity (−∞). Use `f64::NEG_INFINITY` instead.",null,null],[0,"consts","","Basic mathematical constants.",null,null],[17,"PI","wasmtime_wiggle::bitflags::_core::f64::consts","Archimedes\' constant (π)",null,null],[17,"TAU","","The full circle constant (τ)",null,null],[17,"FRAC_PI_2","","π/2",null,null],[17,"FRAC_PI_3","","π/3",null,null],[17,"FRAC_PI_4","","π/4",null,null],[17,"FRAC_PI_6","","π/6",null,null],[17,"FRAC_PI_8","","π/8",null,null],[17,"FRAC_1_PI","","1/π",null,null],[17,"FRAC_2_PI","","2/π",null,null],[17,"FRAC_2_SQRT_PI","","2/sqrt(π)",null,null],[17,"SQRT_2","","sqrt(2)",null,null],[17,"FRAC_1_SQRT_2","","1/sqrt(2)",null,null],[17,"E","","Euler\'s number (e)",null,null],[17,"LOG2_10","","log2(10)",null,null],[17,"LOG2_E","","log2(e)",null,null],[17,"LOG10_2","","log10(2)",null,null],[17,"LOG10_E","","log10(e)",null,null],[17,"LN_2","","ln(2)",null,null],[17,"LN_10","","ln(10)",null,null],[0,"num","wasmtime_wiggle::bitflags::_core","Numeric traits and functions for the built-in numeric types.",null,null],[4,"FpCategory","wasmtime_wiggle::bitflags::_core::num","A classification of floating point numbers.",null,null],[13,"Nan","","\\\"Not a Number\\\", often obtained by dividing by zero.",3,null],[13,"Infinite","","Positive or negative infinity.",3,null],[13,"Zero","","Positive or negative zero.",3,null],[13,"Subnormal","","De-normalized floating point representation (less precise…",3,null],[13,"Normal","","A regular floating point number.",3,null],[3,"Wrapping","","Provides intentionally-wrapped arithmetic on `T`.",null,null],[12,"0","","",4,null],[3,"ParseFloatError","","An error which can be returned when parsing a float.",null,null],[3,"ParseIntError","","An error which can be returned when parsing an integer.",null,null],[3,"NonZeroU128","","An integer that is known not to equal zero.",null,null],[3,"NonZeroU16","","An integer that is known not to equal zero.",null,null],[3,"NonZeroU32","","An integer that is known not to equal zero.",null,null],[3,"NonZeroU64","","An integer that is known not to equal zero.",null,null],[3,"NonZeroU8","","An integer that is known not to equal zero.",null,null],[3,"NonZeroUsize","","An integer that is known not to equal zero.",null,null],[3,"NonZeroI128","","An integer that is known not to equal zero.",null,null],[3,"NonZeroI16","","An integer that is known not to equal zero.",null,null],[3,"NonZeroI32","","An integer that is known not to equal zero.",null,null],[3,"NonZeroI64","","An integer that is known not to equal zero.",null,null],[3,"NonZeroI8","","An integer that is known not to equal zero.",null,null],[3,"NonZeroIsize","","An integer that is known not to equal zero.",null,null],[3,"TryFromIntError","","The error type returned when a checked integral type…",null,null],[4,"IntErrorKind","","Enum to store the various types of errors that can cause…",null,null],[13,"Empty","","Value being parsed is empty.",5,null],[13,"InvalidDigit","","Contains an invalid digit in its context.",5,null],[13,"PosOverflow","","Integer is too large to store in target integer type.",5,null],[13,"NegOverflow","","Integer is too small to store in target integer type.",5,null],[13,"Zero","","Value was Zero",5,null],[0,"prelude","wasmtime_wiggle::bitflags::_core","The libcore prelude",null,null],[0,"v1","wasmtime_wiggle::bitflags::_core::prelude","The core prelude",null,null],[8,"Copy","wasmtime_wiggle::bitflags::_core::prelude::v1","Types whose values can be duplicated simply by copying bits.",null,null],[14,"Copy","","Derive macro generating an impl of the trait `Copy`.",null,null],[8,"Send","","Types that can be transferred across thread boundaries.",null,null],[8,"Sized","","Types with a constant size known at compile time.",null,null],[8,"Sync","","Types for which it is safe to share references between…",null,null],[8,"Unpin","","Types that can be safely moved after being pinned.",null,null],[8,"Drop","","Custom code within the destructor.",null,null],[10,"drop","","Executes the destructor for this type.",6,[[]]],[8,"Fn","","The version of the call operator that takes an immutable…",null,null],[10,"call","","Performs the call operation.",7,[[]]],[8,"FnMut","","The version of the call operator that takes a mutable…",null,null],[10,"call_mut","","Performs the call operation.",8,[[]]],[8,"FnOnce","","The version of the call operator that takes a by-value…",null,null],[16,"Output","","The returned type after the call operator is used.",9,null],[10,"call_once","","Performs the call operation.",9,[[]]],[5,"drop","","Disposes of a value.",null,[[]]],[8,"Clone","","A common trait for the ability to explicitly duplicate an…",null,null],[10,"clone","","Returns a copy of the value.",10,[[]]],[11,"clone_from","","Performs copy-assignment from `source`.",10,[[]]],[14,"Clone","","Derive macro generating an impl of the trait `Clone`.",null,null],[8,"Eq","","Trait for equality comparisons which are equivalence…",null,null],[14,"Eq","","Derive macro generating an impl of the trait `Eq`.",null,null],[8,"Ord","","Trait for types that form a total order.",null,null],[10,"cmp","","This method returns an [`Ordering`] between `self` and…",11,[[],["ordering",4]]],[11,"max","","Compares and returns the maximum of two values.",11,[[]]],[11,"min","","Compares and returns the minimum of two values.",11,[[]]],[11,"clamp","","Restrict a value to a certain interval.",11,[[]]],[14,"Ord","","Derive macro generating an impl of the trait `Ord`.",null,null],[8,"PartialEq","","Trait for equality comparisons which are partial…",null,null],[10,"eq","","This method tests for `self` and `other` values to be…",12,[[]]],[11,"ne","","This method tests for `!=`.",12,[[]]],[14,"PartialEq","","Derive macro generating an impl of the trait `PartialEq`.",null,null],[8,"PartialOrd","","Trait for values that can be compared for a sort-order.",null,null],[10,"partial_cmp","","This method returns an ordering between `self` and `other`…",13,[[],[["ordering",4],["option",4]]]],[11,"lt","","This method tests less than (for `self` and `other`) and…",13,[[]]],[11,"le","","This method tests less than or equal to (for `self` and…",13,[[]]],[11,"gt","","This method tests greater than (for `self` and `other`)…",13,[[]]],[11,"ge","","This method tests greater than or equal to (for `self` and…",13,[[]]],[14,"PartialOrd","","Derive macro generating an impl of the trait `PartialOrd`.",null,null],[8,"AsMut","","Used to do a cheap mutable-to-mutable reference conversion.",null,null],[10,"as_mut","","Performs the conversion.",14,[[]]],[8,"AsRef","","Used to do a cheap reference-to-reference conversion.",null,null],[10,"as_ref","","Performs the conversion.",15,[[]]],[8,"From","","Used to do value-to-value conversions while consuming the…",null,null],[10,"from","","Performs the conversion.",16,[[]]],[8,"Into","","A value-to-value conversion that consumes the input value.…",null,null],[10,"into","","Performs the conversion.",17,[[]]],[8,"Default","","A trait for giving a type a useful default value.",null,null],[10,"default","","Returns the \\\"default value\\\" for a type.",18,[[]]],[14,"Default","","Derive macro generating an impl of the trait `Default`.",null,null],[8,"DoubleEndedIterator","","An iterator able to yield elements from both ends.",null,null],[10,"next_back","","Removes and returns an element from the end of the iterator.",19,[[],["option",4]]],[11,"advance_back_by","","Advances the iterator from the back by `n` elements.",19,[[],["result",4]]],[11,"nth_back","","Returns the `n`th element from the end of the iterator.",19,[[],["option",4]]],[11,"try_rfold","","This is the reverse version of [`Iterator::try_fold()`]:…",19,[[]]],[11,"rfold","","An iterator method that reduces the iterator\'s elements to…",19,[[]]],[11,"rfind","","Searches for an element of an iterator from the back that…",19,[[],["option",4]]],[8,"ExactSizeIterator","","An iterator that knows its exact length.",null,null],[11,"len","","Returns the exact length of the iterator.",20,[[]]],[11,"is_empty","","Returns `true` if the iterator is empty.",20,[[]]],[8,"Extend","","Extend a collection with the contents of an iterator.",null,null],[10,"extend","","Extends a collection with the contents of an iterator.",21,[[]]],[11,"extend_one","","Extends a collection with exactly one element.",21,[[]]],[11,"extend_reserve","","Reserves capacity in a collection for the given number of…",21,[[]]],[8,"IntoIterator","","Conversion into an [`Iterator`].",null,null],[16,"Item","","The type of the elements being iterated over.",22,null],[16,"IntoIter","","Which kind of iterator are we turning this into?",22,null],[10,"into_iter","","Creates an iterator from a value.",22,[[]]],[8,"Iterator","","An interface for dealing with iterators.",null,null],[16,"Item","","The type of the elements being iterated over.",23,null],[10,"next","","Advances the iterator and returns the next value.",23,[[],["option",4]]],[11,"size_hint","","Returns the bounds on the remaining length of the iterator.",23,[[]]],[11,"count","","Consumes the iterator, counting the number of iterations…",23,[[]]],[11,"last","","Consumes the iterator, returning the last element.",23,[[],["option",4]]],[11,"advance_by","","Advances the iterator by `n` elements.",23,[[],["result",4]]],[11,"nth","","Returns the `n`th element of the iterator.",23,[[],["option",4]]],[11,"step_by","","Creates an iterator starting at the same point, but…",23,[[],["stepby",3]]],[11,"chain","","Takes two iterators and creates a new iterator over both…",23,[[],["chain",3]]],[11,"zip","","\'Zips up\' two iterators into a single iterator of pairs.",23,[[],["zip",3]]],[11,"map","","Takes a closure and creates an iterator which calls that…",23,[[],["map",3]]],[11,"for_each","","Calls a closure on each element of an iterator.",23,[[]]],[11,"filter","","Creates an iterator which uses a closure to determine if…",23,[[],["filter",3]]],[11,"filter_map","","Creates an iterator that both filters and maps.",23,[[],["filtermap",3]]],[11,"enumerate","","Creates an iterator which gives the current iteration…",23,[[],["enumerate",3]]],[11,"peekable","","Creates an iterator which can use `peek` to look at the…",23,[[],["peekable",3]]],[11,"skip_while","","Creates an iterator that `skip`s elements based on a…",23,[[],["skipwhile",3]]],[11,"take_while","","Creates an iterator that yields elements based on a…",23,[[],["takewhile",3]]],[11,"map_while","","Creates an iterator that both yields elements based on a…",23,[[],["mapwhile",3]]],[11,"skip","","Creates an iterator that skips the first `n` elements.",23,[[],["skip",3]]],[11,"take","","Creates an iterator that yields its first `n` elements.",23,[[],["take",3]]],[11,"scan","","An iterator adaptor similar to `fold` that holds internal…",23,[[],["scan",3]]],[11,"flat_map","","Creates an iterator that works like map, but flattens…",23,[[],["flatmap",3]]],[11,"flatten","","Creates an iterator that flattens nested structure.",23,[[],["flatten",3]]],[11,"fuse","","Creates an iterator which ends after the first [`None`].",23,[[],["fuse",3]]],[11,"inspect","","Does something with each element of an iterator, passing…",23,[[],["inspect",3]]],[11,"by_ref","","Borrows an iterator, rather than consuming it.",23,[[]]],[11,"collect","","Transforms an iterator into a collection.",23,[[]]],[11,"partition","","Consumes an iterator, creating two collections from it.",23,[[]]],[11,"partition_in_place","","Reorders the elements of this iterator in-place according…",23,[[]]],[11,"is_partitioned","","Checks if the elements of this iterator are partitioned…",23,[[]]],[11,"try_fold","","An iterator method that applies a function as long as it…",23,[[]]],[11,"try_for_each","","An iterator method that applies a fallible function to…",23,[[]]],[11,"fold","","An iterator method that applies a function, producing a…",23,[[]]],[11,"fold_first","","The same as `fold()`, but uses the first element in the…",23,[[],["option",4]]],[11,"all","","Tests if every element of the iterator matches a predicate.",23,[[]]],[11,"any","","Tests if any element of the iterator matches a predicate.",23,[[]]],[11,"find","","Searches for an element of an iterator that satisfies a…",23,[[],["option",4]]],[11,"find_map","","Applies function to the elements of iterator and returns…",23,[[],["option",4]]],[11,"try_find","","Applies function to the elements of iterator and returns…",23,[[],[["option",4],["result",4]]]],[11,"position","","Searches for an element in an iterator, returning its index.",23,[[],["option",4]]],[11,"rposition","","Searches for an element in an iterator from the right,…",23,[[],["option",4]]],[11,"max","","Returns the maximum element of an iterator.",23,[[],["option",4]]],[11,"min","","Returns the minimum element of an iterator.",23,[[],["option",4]]],[11,"max_by_key","","Returns the element that gives the maximum value from the…",23,[[],["option",4]]],[11,"max_by","","Returns the element that gives the maximum value with…",23,[[],["option",4]]],[11,"min_by_key","","Returns the element that gives the minimum value from the…",23,[[],["option",4]]],[11,"min_by","","Returns the element that gives the minimum value with…",23,[[],["option",4]]],[11,"rev","","Reverses an iterator\'s direction.",23,[[],["rev",3]]],[11,"unzip","","Converts an iterator of pairs into a pair of containers.",23,[[]]],[11,"copied","","Creates an iterator which copies all of its elements.",23,[[],["copied",3]]],[11,"cloned","","Creates an iterator which `clone`s all of its elements.",23,[[],["cloned",3]]],[11,"cycle","","Repeats an iterator endlessly.",23,[[],["cycle",3]]],[11,"sum","","Sums the elements of an iterator.",23,[[]]],[11,"product","","Iterates over the entire iterator, multiplying all the…",23,[[]]],[11,"cmp","","Lexicographically compares the elements of this…",23,[[],["ordering",4]]],[11,"cmp_by","","Lexicographically compares the elements of this…",23,[[],["ordering",4]]],[11,"partial_cmp","","Lexicographically compares the elements of this…",23,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp_by","","Lexicographically compares the elements of this…",23,[[],[["ordering",4],["option",4]]]],[11,"eq","","Determines if the elements of this [`Iterator`] are equal…",23,[[]]],[11,"eq_by","","Determines if the elements of this [`Iterator`] are equal…",23,[[]]],[11,"ne","","Determines if the elements of this [`Iterator`] are…",23,[[]]],[11,"lt","","Determines if the elements of this [`Iterator`] are…",23,[[]]],[11,"le","","Determines if the elements of this [`Iterator`] are…",23,[[]]],[11,"gt","","Determines if the elements of this [`Iterator`] are…",23,[[]]],[11,"ge","","Determines if the elements of this [`Iterator`] are…",23,[[]]],[11,"is_sorted","","Checks if the elements of this iterator are sorted.",23,[[]]],[11,"is_sorted_by","","Checks if the elements of this iterator are sorted using…",23,[[]]],[11,"is_sorted_by_key","","Checks if the elements of this iterator are sorted using…",23,[[]]],[4,"Option","","The `Option` type. See the module level documentation for…",null,null],[13,"None","","No value",24,null],[13,"Some","","Some value `T`",24,null],[4,"Result","","`Result` is a type that represents either success ([`Ok`])…",null,null],[13,"Ok","","Contains the success value",25,null],[13,"Err","","Contains the error value",25,null],[14,"Debug","","Derive macro generating an impl of the trait `Debug`.",null,null],[14,"Hash","","Derive macro generating an impl of the trait `Hash`.",null,null],[14,"asm","","Inline assembly.",null,null],[14,"assert","","Asserts that a boolean expression is `true` at runtime.",null,null],[14,"cfg","","Evaluates boolean combinations of configuration flags at…",null,null],[14,"column","","Expands to the column number at which it was invoked.",null,null],[14,"compile_error","","Causes compilation to fail with the given error message…",null,null],[14,"concat","","Concatenates literals into a static string slice.",null,null],[14,"concat_idents","","Concatenates identifiers into one identifier.",null,null],[14,"env","","Inspects an environment variable at compile time.",null,null],[14,"file","","Expands to the file name in which it was invoked.",null,null],[14,"format_args","","Constructs parameters for the other string-formatting…",null,null],[14,"format_args_nl","","Same as `format_args`, but adds a newline in the end.",null,null],[14,"global_asm","","Module-level inline assembly.",null,null],[14,"include","","Parses a file as an expression or an item according to the…",null,null],[14,"include_bytes","","Includes a file as a reference to a byte array.",null,null],[14,"include_str","","Includes a UTF-8 encoded file as a string.",null,null],[14,"line","","Expands to the line number on which it was invoked.",null,null],[14,"llvm_asm","","LLVM-style inline assembly.",null,null],[14,"log_syntax","","Prints passed tokens into the standard output.",null,null],[14,"module_path","","Expands to a string that represents the current module path.",null,null],[14,"option_env","","Optionally inspects an environment variable at compile time.",null,null],[14,"stringify","","Stringifies its arguments.",null,null],[14,"trace_macros","","Enables or disables tracing functionality used for…",null,null],[14,"bench","","Attribute macro applied to a function to turn it into a…",null,null],[14,"global_allocator","","Attribute macro applied to a static to register it as a…",null,null],[14,"test","","Attribute macro applied to a function to turn it into a…",null,null],[14,"test_case","","An implementation detail of the `#[test]` and `#[bench]`…",null,null],[14,"RustcDecodable","","Unstable implementation detail of the `rustc` compiler, do…",null,null],[14,"RustcEncodable","","Unstable implementation detail of the `rustc` compiler, do…",null,null],[14,"cfg_accessible","","Keeps the item it\'s applied to if the passed path is…",null,null],[0,"hint","wasmtime_wiggle::bitflags::_core","Hints to compiler that affects how code should be emitted…",null,null],[5,"unreachable_unchecked","wasmtime_wiggle::bitflags::_core::hint","Informs the compiler that this point in the code is not…",null,[[]]],[5,"spin_loop","","Emits a machine instruction to signal the processor that…",null,[[]]],[5,"black_box","","An identity function that hints to the compiler to be…",null,[[]]],[0,"intrinsics","wasmtime_wiggle::bitflags::_core","Compiler intrinsics.",null,null],[5,"atomic_cxchg","wasmtime_wiggle::bitflags::_core::intrinsics","Stores a value if the current value is the same as the…",null,[[]]],[5,"atomic_cxchg_acq","","Stores a value if the current value is the same as the…",null,[[]]],[5,"atomic_cxchg_rel","","Stores a value if the current value is the same as the…",null,[[]]],[5,"atomic_cxchg_acqrel","","Stores a value if the current value is the same as the…",null,[[]]],[5,"atomic_cxchg_relaxed","","Stores a value if the current value is the same as the…",null,[[]]],[5,"atomic_cxchg_failrelaxed","","Stores a value if the current value is the same as the…",null,[[]]],[5,"atomic_cxchg_failacq","","Stores a value if the current value is the same as the…",null,[[]]],[5,"atomic_cxchg_acq_failrelaxed","","Stores a value if the current value is the same as the…",null,[[]]],[5,"atomic_cxchg_acqrel_failrelaxed","","Stores a value if the current value is the same as the…",null,[[]]],[5,"atomic_cxchgweak","","Stores a value if the current value is the same as the…",null,[[]]],[5,"atomic_cxchgweak_acq","","Stores a value if the current value is the same as the…",null,[[]]],[5,"atomic_cxchgweak_rel","","Stores a value if the current value is the same as the…",null,[[]]],[5,"atomic_cxchgweak_acqrel","","Stores a value if the current value is the same as the…",null,[[]]],[5,"atomic_cxchgweak_relaxed","","Stores a value if the current value is the same as the…",null,[[]]],[5,"atomic_cxchgweak_failrelaxed","","Stores a value if the current value is the same as the…",null,[[]]],[5,"atomic_cxchgweak_failacq","","Stores a value if the current value is the same as the…",null,[[]]],[5,"atomic_cxchgweak_acq_failrelaxed","","Stores a value if the current value is the same as the…",null,[[]]],[5,"atomic_cxchgweak_acqrel_failrelaxed","","Stores a value if the current value is the same as the…",null,[[]]],[5,"atomic_load","","Loads the current value of the pointer.",null,[[]]],[5,"atomic_load_acq","","Loads the current value of the pointer.",null,[[]]],[5,"atomic_load_relaxed","","Loads the current value of the pointer.",null,[[]]],[5,"atomic_load_unordered","","",null,[[]]],[5,"atomic_store","","Stores the value at the specified memory location.",null,[[]]],[5,"atomic_store_rel","","Stores the value at the specified memory location.",null,[[]]],[5,"atomic_store_relaxed","","Stores the value at the specified memory location.",null,[[]]],[5,"atomic_store_unordered","","",null,[[]]],[5,"atomic_xchg","","Stores the value at the specified memory location,…",null,[[]]],[5,"atomic_xchg_acq","","Stores the value at the specified memory location,…",null,[[]]],[5,"atomic_xchg_rel","","Stores the value at the specified memory location,…",null,[[]]],[5,"atomic_xchg_acqrel","","Stores the value at the specified memory location,…",null,[[]]],[5,"atomic_xchg_relaxed","","Stores the value at the specified memory location,…",null,[[]]],[5,"atomic_xadd","","Adds to the current value, returning the previous value.",null,[[]]],[5,"atomic_xadd_acq","","Adds to the current value, returning the previous value.",null,[[]]],[5,"atomic_xadd_rel","","Adds to the current value, returning the previous value.",null,[[]]],[5,"atomic_xadd_acqrel","","Adds to the current value, returning the previous value.",null,[[]]],[5,"atomic_xadd_relaxed","","Adds to the current value, returning the previous value.",null,[[]]],[5,"atomic_xsub","","Subtract from the current value, returning the previous…",null,[[]]],[5,"atomic_xsub_acq","","Subtract from the current value, returning the previous…",null,[[]]],[5,"atomic_xsub_rel","","Subtract from the current value, returning the previous…",null,[[]]],[5,"atomic_xsub_acqrel","","Subtract from the current value, returning the previous…",null,[[]]],[5,"atomic_xsub_relaxed","","Subtract from the current value, returning the previous…",null,[[]]],[5,"atomic_and","","Bitwise and with the current value, returning the previous…",null,[[]]],[5,"atomic_and_acq","","Bitwise and with the current value, returning the previous…",null,[[]]],[5,"atomic_and_rel","","Bitwise and with the current value, returning the previous…",null,[[]]],[5,"atomic_and_acqrel","","Bitwise and with the current value, returning the previous…",null,[[]]],[5,"atomic_and_relaxed","","Bitwise and with the current value, returning the previous…",null,[[]]],[5,"atomic_nand","","Bitwise nand with the current value, returning the…",null,[[]]],[5,"atomic_nand_acq","","Bitwise nand with the current value, returning the…",null,[[]]],[5,"atomic_nand_rel","","Bitwise nand with the current value, returning the…",null,[[]]],[5,"atomic_nand_acqrel","","Bitwise nand with the current value, returning the…",null,[[]]],[5,"atomic_nand_relaxed","","Bitwise nand with the current value, returning the…",null,[[]]],[5,"atomic_or","","Bitwise or with the current value, returning the previous…",null,[[]]],[5,"atomic_or_acq","","Bitwise or with the current value, returning the previous…",null,[[]]],[5,"atomic_or_rel","","Bitwise or with the current value, returning the previous…",null,[[]]],[5,"atomic_or_acqrel","","Bitwise or with the current value, returning the previous…",null,[[]]],[5,"atomic_or_relaxed","","Bitwise or with the current value, returning the previous…",null,[[]]],[5,"atomic_xor","","Bitwise xor with the current value, returning the previous…",null,[[]]],[5,"atomic_xor_acq","","Bitwise xor with the current value, returning the previous…",null,[[]]],[5,"atomic_xor_rel","","Bitwise xor with the current value, returning the previous…",null,[[]]],[5,"atomic_xor_acqrel","","Bitwise xor with the current value, returning the previous…",null,[[]]],[5,"atomic_xor_relaxed","","Bitwise xor with the current value, returning the previous…",null,[[]]],[5,"atomic_max","","Maximum with the current value using a signed comparison.",null,[[]]],[5,"atomic_max_acq","","Maximum with the current value using a signed comparison.",null,[[]]],[5,"atomic_max_rel","","Maximum with the current value using a signed comparison.",null,[[]]],[5,"atomic_max_acqrel","","Maximum with the current value using a signed comparison.",null,[[]]],[5,"atomic_max_relaxed","","Maximum with the current value.",null,[[]]],[5,"atomic_min","","Minimum with the current value using a signed comparison.",null,[[]]],[5,"atomic_min_acq","","Minimum with the current value using a signed comparison.",null,[[]]],[5,"atomic_min_rel","","Minimum with the current value using a signed comparison.",null,[[]]],[5,"atomic_min_acqrel","","Minimum with the current value using a signed comparison.",null,[[]]],[5,"atomic_min_relaxed","","Minimum with the current value using a signed comparison.",null,[[]]],[5,"atomic_umin","","Minimum with the current value using an unsigned comparison.",null,[[]]],[5,"atomic_umin_acq","","Minimum with the current value using an unsigned comparison.",null,[[]]],[5,"atomic_umin_rel","","Minimum with the current value using an unsigned comparison.",null,[[]]],[5,"atomic_umin_acqrel","","Minimum with the current value using an unsigned comparison.",null,[[]]],[5,"atomic_umin_relaxed","","Minimum with the current value using an unsigned comparison.",null,[[]]],[5,"atomic_umax","","Maximum with the current value using an unsigned comparison.",null,[[]]],[5,"atomic_umax_acq","","Maximum with the current value using an unsigned comparison.",null,[[]]],[5,"atomic_umax_rel","","Maximum with the current value using an unsigned comparison.",null,[[]]],[5,"atomic_umax_acqrel","","Maximum with the current value using an unsigned comparison.",null,[[]]],[5,"atomic_umax_relaxed","","Maximum with the current value using an unsigned comparison.",null,[[]]],[5,"prefetch_read_data","","The `prefetch` intrinsic is a hint to the code generator…",null,[[]]],[5,"prefetch_write_data","","The `prefetch` intrinsic is a hint to the code generator…",null,[[]]],[5,"prefetch_read_instruction","","The `prefetch` intrinsic is a hint to the code generator…",null,[[]]],[5,"prefetch_write_instruction","","The `prefetch` intrinsic is a hint to the code generator…",null,[[]]],[5,"atomic_fence","","An atomic fence.",null,[[]]],[5,"atomic_fence_acq","","An atomic fence.",null,[[]]],[5,"atomic_fence_rel","","An atomic fence.",null,[[]]],[5,"atomic_fence_acqrel","","An atomic fence.",null,[[]]],[5,"atomic_singlethreadfence","","A compiler-only memory barrier.",null,[[]]],[5,"atomic_singlethreadfence_acq","","A compiler-only memory barrier.",null,[[]]],[5,"atomic_singlethreadfence_rel","","A compiler-only memory barrier.",null,[[]]],[5,"atomic_singlethreadfence_acqrel","","A compiler-only memory barrier.",null,[[]]],[5,"rustc_peek","","Magic intrinsic that derives its meaning from attributes…",null,[[]]],[5,"abort","","Aborts the execution of the process.",null,[[]]],[5,"unreachable","","Tells LLVM that this point in the code is not reachable,…",null,[[]]],[5,"assume","","Informs the optimizer that a condition is always true. If…",null,[[]]],[5,"likely","","Hints to the compiler that branch condition is likely to…",null,[[]]],[5,"unlikely","","Hints to the compiler that branch condition is likely to…",null,[[]]],[5,"breakpoint","","Executes a breakpoint trap, for inspection by a debugger.",null,[[]]],[5,"size_of","","The size of a type in bytes.",null,[[]]],[5,"move_val_init","","Moves a value to an uninitialized memory location.",null,[[]]],[5,"min_align_of","","The minimum alignment of a type.",null,[[]]],[5,"pref_align_of","","The preferred alignment of a type.",null,[[]]],[5,"size_of_val","","The size of the referenced value in bytes.",null,[[]]],[5,"min_align_of_val","","The required alignment of the referenced value.",null,[[]]],[5,"type_name","","Gets a static string slice containing the name of a type.",null,[[]]],[5,"type_id","","Gets an identifier which is globally unique to the…",null,[[]]],[5,"assert_inhabited","","A guard for unsafe functions that cannot ever be executed…",null,[[]]],[5,"assert_zero_valid","","A guard for unsafe functions that cannot ever be executed…",null,[[]]],[5,"assert_uninit_valid","","A guard for unsafe functions that cannot ever be executed…",null,[[]]],[5,"caller_location","","Gets a reference to a static `Location` indicating where…",null,[[],["location",3]]],[5,"forget","","Moves a value out of scope without running drop glue.",null,[[]]],[5,"transmute","","Reinterprets the bits of a value of one type as another…",null,[[]]],[5,"needs_drop","","Returns `true` if the actual type given as `T` requires…",null,[[]]],[5,"offset","","Calculates the offset from a pointer.",null,[[]]],[5,"arith_offset","","Calculates the offset from a pointer, potentially wrapping.",null,[[]]],[5,"volatile_copy_nonoverlapping_memory","","Equivalent to the appropriate `llvm.memcpy.p0i8.0i8.*`…",null,[[]]],[5,"volatile_copy_memory","","Equivalent to the appropriate `llvm.memmove.p0i8.0i8.*`…",null,[[]]],[5,"volatile_set_memory","","Equivalent to the appropriate `llvm.memset.p0i8.*`…",null,[[]]],[5,"volatile_load","","Performs a volatile load from the `src` pointer.",null,[[]]],[5,"volatile_store","","Performs a volatile store to the `dst` pointer.",null,[[]]],[5,"unaligned_volatile_load","","Performs a volatile load from the `src` pointer The…",null,[[]]],[5,"unaligned_volatile_store","","Performs a volatile store to the `dst` pointer. The…",null,[[]]],[5,"sqrtf32","","Returns the square root of an `f32`",null,[[]]],[5,"sqrtf64","","Returns the square root of an `f64`",null,[[]]],[5,"powif32","","Raises an `f32` to an integer power.",null,[[]]],[5,"powif64","","Raises an `f64` to an integer power.",null,[[]]],[5,"sinf32","","Returns the sine of an `f32`.",null,[[]]],[5,"sinf64","","Returns the sine of an `f64`.",null,[[]]],[5,"cosf32","","Returns the cosine of an `f32`.",null,[[]]],[5,"cosf64","","Returns the cosine of an `f64`.",null,[[]]],[5,"powf32","","Raises an `f32` to an `f32` power.",null,[[]]],[5,"powf64","","Raises an `f64` to an `f64` power.",null,[[]]],[5,"expf32","","Returns the exponential of an `f32`.",null,[[]]],[5,"expf64","","Returns the exponential of an `f64`.",null,[[]]],[5,"exp2f32","","Returns 2 raised to the power of an `f32`.",null,[[]]],[5,"exp2f64","","Returns 2 raised to the power of an `f64`.",null,[[]]],[5,"logf32","","Returns the natural logarithm of an `f32`.",null,[[]]],[5,"logf64","","Returns the natural logarithm of an `f64`.",null,[[]]],[5,"log10f32","","Returns the base 10 logarithm of an `f32`.",null,[[]]],[5,"log10f64","","Returns the base 10 logarithm of an `f64`.",null,[[]]],[5,"log2f32","","Returns the base 2 logarithm of an `f32`.",null,[[]]],[5,"log2f64","","Returns the base 2 logarithm of an `f64`.",null,[[]]],[5,"fmaf32","","Returns `a * b + c` for `f32` values.",null,[[]]],[5,"fmaf64","","Returns `a * b + c` for `f64` values.",null,[[]]],[5,"fabsf32","","Returns the absolute value of an `f32`.",null,[[]]],[5,"fabsf64","","Returns the absolute value of an `f64`.",null,[[]]],[5,"minnumf32","","Returns the minimum of two `f32` values.",null,[[]]],[5,"minnumf64","","Returns the minimum of two `f64` values.",null,[[]]],[5,"maxnumf32","","Returns the maximum of two `f32` values.",null,[[]]],[5,"maxnumf64","","Returns the maximum of two `f64` values.",null,[[]]],[5,"copysignf32","","Copies the sign from `y` to `x` for `f32` values.",null,[[]]],[5,"copysignf64","","Copies the sign from `y` to `x` for `f64` values.",null,[[]]],[5,"floorf32","","Returns the largest integer less than or equal to an `f32`.",null,[[]]],[5,"floorf64","","Returns the largest integer less than or equal to an `f64`.",null,[[]]],[5,"ceilf32","","Returns the smallest integer greater than or equal to an…",null,[[]]],[5,"ceilf64","","Returns the smallest integer greater than or equal to an…",null,[[]]],[5,"truncf32","","Returns the integer part of an `f32`.",null,[[]]],[5,"truncf64","","Returns the integer part of an `f64`.",null,[[]]],[5,"rintf32","","Returns the nearest integer to an `f32`. May raise an…",null,[[]]],[5,"rintf64","","Returns the nearest integer to an `f64`. May raise an…",null,[[]]],[5,"nearbyintf32","","Returns the nearest integer to an `f32`.",null,[[]]],[5,"nearbyintf64","","Returns the nearest integer to an `f64`.",null,[[]]],[5,"roundf32","","Returns the nearest integer to an `f32`. Rounds half-way…",null,[[]]],[5,"roundf64","","Returns the nearest integer to an `f64`. Rounds half-way…",null,[[]]],[5,"fadd_fast","","Float addition that allows optimizations based on…",null,[[]]],[5,"fsub_fast","","Float subtraction that allows optimizations based on…",null,[[]]],[5,"fmul_fast","","Float multiplication that allows optimizations based on…",null,[[]]],[5,"fdiv_fast","","Float division that allows optimizations based on…",null,[[]]],[5,"frem_fast","","Float remainder that allows optimizations based on…",null,[[]]],[5,"float_to_int_unchecked","","Convert with LLVM’s fptoui/fptosi, which may return undef…",null,[[]]],[5,"ctpop","","Returns the number of bits set in an integer type `T`",null,[[]]],[5,"ctlz","","Returns the number of leading unset bits (zeroes) in an…",null,[[]]],[5,"ctlz_nonzero","","Like `ctlz`, but extra-unsafe as it returns `undef` when…",null,[[]]],[5,"cttz","","Returns the number of trailing unset bits (zeroes) in an…",null,[[]]],[5,"cttz_nonzero","","Like `cttz`, but extra-unsafe as it returns `undef` when…",null,[[]]],[5,"bswap","","Reverses the bytes in an integer type `T`.",null,[[]]],[5,"bitreverse","","Reverses the bits in an integer type `T`.",null,[[]]],[5,"add_with_overflow","","Performs checked integer addition.",null,[[]]],[5,"sub_with_overflow","","Performs checked integer subtraction",null,[[]]],[5,"mul_with_overflow","","Performs checked integer multiplication",null,[[]]],[5,"exact_div","","Performs an exact division, resulting in undefined…",null,[[]]],[5,"unchecked_div","","Performs an unchecked division, resulting in undefined…",null,[[]]],[5,"unchecked_rem","","Returns the remainder of an unchecked division, resulting…",null,[[]]],[5,"unchecked_shl","","Performs an unchecked left shift, resulting in undefined…",null,[[]]],[5,"unchecked_shr","","Performs an unchecked right shift, resulting in undefined…",null,[[]]],[5,"unchecked_add","","Returns the result of an unchecked addition, resulting in…",null,[[]]],[5,"unchecked_sub","","Returns the result of an unchecked subtraction, resulting…",null,[[]]],[5,"unchecked_mul","","Returns the result of an unchecked multiplication,…",null,[[]]],[5,"rotate_left","","Performs rotate left.",null,[[]]],[5,"rotate_right","","Performs rotate right.",null,[[]]],[5,"wrapping_add","","Returns (a + b) mod 2N, where N is the width of T in bits.",null,[[]]],[5,"wrapping_sub","","Returns (a - b) mod 2N, where N is the width of T in bits.",null,[[]]],[5,"wrapping_mul","","Returns (a * b) mod 2N, where N is the width of T in bits.",null,[[]]],[5,"saturating_add","","Computes `a + b`, while saturating at numeric bounds.",null,[[]]],[5,"saturating_sub","","Computes `a - b`, while saturating at numeric bounds.",null,[[]]],[5,"discriminant_value","","Returns the value of the discriminant for the variant in…",null,[[]]],[5,"variant_count","","Returns the number of variants of the type `T` cast to a…",null,[[]]],[5,"try","","Rust\'s \\\"try catch\\\" construct which invokes the function…",null,[[]]],[5,"nontemporal_store","","Emits a `!nontemporal` store according to LLVM (see their…",null,[[]]],[5,"ptr_offset_from","","See documentation of `<*const T>::offset_from` for details.",null,[[]]],[5,"ptr_guaranteed_eq","","See documentation of `<*const T>::guaranteed_eq` for…",null,[[]]],[5,"ptr_guaranteed_ne","","See documentation of `<*const T>::guaranteed_ne` for…",null,[[]]],[5,"copy_nonoverlapping","","Copies `count * size_of::<T>()` bytes from `src` to `dst`.…",null,[[]]],[5,"copy","","Copies `count * size_of::<T>()` bytes from `src` to `dst`.…",null,[[]]],[5,"write_bytes","","Sets `count * size_of::<T>()` bytes of memory starting at…",null,[[]]],[5,"drop_in_place","","Executes the destructor (if any) of the pointed-to value.",null,[[]]],[0,"mem","wasmtime_wiggle::bitflags::_core","Basic functions for dealing with memory.",null,null],[5,"forget","wasmtime_wiggle::bitflags::_core::mem","Takes ownership and \\\"forgets\\\" about the value without…",null,[[]]],[5,"forget_unsized","","Like [`forget`], but also accepts unsized values.",null,[[]]],[5,"size_of","","Returns the size of a type in bytes.",null,[[]]],[5,"size_of_val","","Returns the size of the pointed-to value in bytes.",null,[[]]],[5,"size_of_val_raw","","Returns the size of the pointed-to value in bytes.",null,[[]]],[5,"min_align_of","","Returns the ABI-required minimum alignment of a type.",null,[[]]],[5,"min_align_of_val","","Returns the ABI-required minimum alignment of the type of…",null,[[]]],[5,"align_of","","Returns the ABI-required minimum alignment of a type.",null,[[]]],[5,"align_of_val","","Returns the ABI-required minimum alignment of the type of…",null,[[]]],[5,"align_of_val_raw","","Returns the ABI-required minimum alignment of the type of…",null,[[]]],[5,"needs_drop","","Returns `true` if dropping values of type `T` matters.",null,[[]]],[5,"zeroed","","Returns the value of type `T` represented by the all-zero…",null,[[]]],[5,"uninitialized","","Bypasses Rust\'s normal memory-initialization checks by…",null,[[]]],[5,"swap","","Swaps the values at two mutable locations, without…",null,[[]]],[5,"take","","Replaces `dest` with the default value of `T`, returning…",null,[[]]],[5,"replace","","Moves `src` into the referenced `dest`, returning the…",null,[[]]],[5,"drop","","Disposes of a value.",null,[[]]],[5,"transmute_copy","","Interprets `src` as having type `&U`, and then reads `src`…",null,[[]]],[3,"Discriminant","","Opaque type representing the discriminant of an enum.",null,null],[5,"discriminant","","Returns a value uniquely identifying the enum variant in…",null,[[],["discriminant",3]]],[5,"variant_count","","Returns the number of variants in the enum type `T`.",null,[[]]],[3,"ManuallyDrop","","A wrapper to inhibit compiler from automatically calling…",null,null],[19,"MaybeUninit","","A wrapper type to construct uninitialized instances of `T`.",null,null],[5,"transmute","","Reinterprets the bits of a value of one type as another…",null,[[]]],[0,"ptr","wasmtime_wiggle::bitflags::_core","Manually manage memory through raw pointers.",null,null],[5,"drop_in_place","wasmtime_wiggle::bitflags::_core::ptr","Executes the destructor (if any) of the pointed-to value.",null,[[]]],[5,"null","","Creates a null raw pointer.",null,[[]]],[5,"null_mut","","Creates a null mutable raw pointer.",null,[[]]],[5,"slice_from_raw_parts","","Forms a raw slice from a pointer and a length.",null,[[]]],[5,"slice_from_raw_parts_mut","","Performs the same functionality as…",null,[[]]],[5,"swap","","Swaps the values at two mutable locations of the same…",null,[[]]],[5,"swap_nonoverlapping","","Swaps `count * size_of::<T>()` bytes between the two…",null,[[]]],[5,"replace","","Moves `src` into the pointed `dst`, returning the previous…",null,[[]]],[5,"read","","Reads the value from `src` without moving it. This leaves…",null,[[]]],[5,"read_unaligned","","Reads the value from `src` without moving it. This leaves…",null,[[]]],[5,"write","","Overwrites a memory location with the given value without…",null,[[]]],[5,"write_unaligned","","Overwrites a memory location with the given value without…",null,[[]]],[5,"read_volatile","","Performs a volatile read of the value from `src` without…",null,[[]]],[5,"write_volatile","","Performs a volatile write of a memory location with the…",null,[[]]],[5,"eq","","Compares raw pointers for equality.",null,[[]]],[5,"hash","","Hash a raw pointer.",null,[[]]],[5,"copy_nonoverlapping","","Copies `count * size_of::<T>()` bytes from `src` to `dst`.…",null,[[]]],[5,"copy","","Copies `count * size_of::<T>()` bytes from `src` to `dst`.…",null,[[]]],[5,"write_bytes","","Sets `count * size_of::<T>()` bytes of memory starting at…",null,[[]]],[3,"NonNull","","`*mut T` but non-zero and covariant.",null,null],[14,"raw_const","","Create a `const` raw pointer to a place, without creating…",null,null],[14,"raw_mut","","Create a `mut` raw pointer to a place, without creating an…",null,null],[0,"borrow","wasmtime_wiggle::bitflags::_core","A module for working with borrowed data.",null,null],[8,"Borrow","wasmtime_wiggle::bitflags::_core::borrow","A trait for borrowing data.",null,null],[10,"borrow","","Immutably borrows from an owned value.",26,[[]]],[8,"BorrowMut","","A trait for mutably borrowing data.",null,null],[10,"borrow_mut","","Mutably borrows from an owned value.",27,[[]]],[0,"clone","wasmtime_wiggle::bitflags::_core","The `Clone` trait for types that cannot be \'implicitly…",null,null],[8,"Clone","wasmtime_wiggle::bitflags::_core::clone","A common trait for the ability to explicitly duplicate an…",null,null],[10,"clone","","Returns a copy of the value.",10,[[]]],[11,"clone_from","","Performs copy-assignment from `source`.",10,[[]]],[14,"Clone","","Derive macro generating an impl of the trait `Clone`.",null,null],[0,"cmp","wasmtime_wiggle::bitflags::_core","Functionality for ordering and comparison.",null,null],[8,"PartialEq","wasmtime_wiggle::bitflags::_core::cmp","Trait for equality comparisons which are partial…",null,null],[10,"eq","","This method tests for `self` and `other` values to be…",12,[[]]],[11,"ne","","This method tests for `!=`.",12,[[]]],[8,"Eq","","Trait for equality comparisons which are equivalence…",null,null],[4,"Ordering","","An `Ordering` is the result of a comparison between two…",null,null],[13,"Less","","An ordering where a compared value is less than another.",28,null],[13,"Equal","","An ordering where a compared value is equal to another.",28,null],[13,"Greater","","An ordering where a compared value is greater than another.",28,null],[3,"Reverse","","A helper struct for reverse ordering.",null,null],[12,"0","","",29,null],[8,"Ord","","Trait for types that form a total order.",null,null],[10,"cmp","","This method returns an [`Ordering`] between `self` and…",11,[[],["ordering",4]]],[11,"max","","Compares and returns the maximum of two values.",11,[[]]],[11,"min","","Compares and returns the minimum of two values.",11,[[]]],[11,"clamp","","Restrict a value to a certain interval.",11,[[]]],[8,"PartialOrd","","Trait for values that can be compared for a sort-order.",null,null],[10,"partial_cmp","","This method returns an ordering between `self` and `other`…",13,[[],[["ordering",4],["option",4]]]],[11,"lt","","This method tests less than (for `self` and `other`) and…",13,[[]]],[11,"le","","This method tests less than or equal to (for `self` and…",13,[[]]],[11,"gt","","This method tests greater than (for `self` and `other`)…",13,[[]]],[11,"ge","","This method tests greater than or equal to (for `self` and…",13,[[]]],[5,"min","","Compares and returns the minimum of two values.",null,[[]]],[5,"min_by","","Returns the minimum of two values with respect to the…",null,[[]]],[5,"min_by_key","","Returns the element that gives the minimum value from the…",null,[[]]],[5,"max","","Compares and returns the maximum of two values.",null,[[]]],[5,"max_by","","Returns the maximum of two values with respect to the…",null,[[]]],[5,"max_by_key","","Returns the element that gives the maximum value from the…",null,[[]]],[14,"PartialEq","","Derive macro generating an impl of the trait `PartialEq`.",null,null],[14,"Eq","","Derive macro generating an impl of the trait `Eq`.",null,null],[14,"Ord","","Derive macro generating an impl of the trait `Ord`.",null,null],[14,"PartialOrd","","Derive macro generating an impl of the trait `PartialOrd`.",null,null],[0,"convert","wasmtime_wiggle::bitflags::_core","Traits for conversions between types.",null,null],[5,"identity","wasmtime_wiggle::bitflags::_core::convert","The identity function.",null,[[]]],[8,"AsRef","","Used to do a cheap reference-to-reference conversion.",null,null],[10,"as_ref","","Performs the conversion.",15,[[]]],[8,"AsMut","","Used to do a cheap mutable-to-mutable reference conversion.",null,null],[10,"as_mut","","Performs the conversion.",14,[[]]],[8,"Into","","A value-to-value conversion that consumes the input value.…",null,null],[10,"into","","Performs the conversion.",17,[[]]],[8,"From","","Used to do value-to-value conversions while consuming the…",null,null],[10,"from","","Performs the conversion.",16,[[]]],[8,"TryInto","","An attempted conversion that consumes `self`, which may or…",null,null],[16,"Error","","The type returned in the event of a conversion error.",30,null],[10,"try_into","","Performs the conversion.",30,[[],["result",4]]],[8,"TryFrom","","Simple and safe type conversions that may fail in a…",null,null],[16,"Error","","The type returned in the event of a conversion error.",31,null],[10,"try_from","","Performs the conversion.",31,[[],["result",4]]],[4,"Infallible","","The error type for errors that can never happen.",null,null],[8,"FloatToInt","","Supporting trait for inherent methods of `f32` and `f64`…",null,null],[0,"default","wasmtime_wiggle::bitflags::_core","The `Default` trait for types which may have meaningful…",null,null],[8,"Default","wasmtime_wiggle::bitflags::_core::default","A trait for giving a type a useful default value.",null,null],[10,"default","","Returns the \\\"default value\\\" for a type.",18,[[]]],[5,"default","","Return the default value of a type according to the…",null,[[]]],[14,"Default","","Derive macro generating an impl of the trait `Default`.",null,null],[0,"marker","wasmtime_wiggle::bitflags::_core","Primitive traits and types representing basic properties…",null,null],[8,"Send","wasmtime_wiggle::bitflags::_core::marker","Types that can be transferred across thread boundaries.",null,null],[8,"Sized","","Types with a constant size known at compile time.",null,null],[8,"Unsize","","Types that can be \\\"unsized\\\" to a dynamically-sized type.",null,null],[8,"StructuralPartialEq","","Required trait for constants used in pattern matches.",null,null],[8,"StructuralEq","","Required trait for constants used in pattern matches.",null,null],[8,"Copy","","Types whose values can be duplicated simply by copying bits.",null,null],[8,"Sync","","Types for which it is safe to share references between…",null,null],[3,"PhantomData","","Zero-sized type used to mark things that \\\"act like\\\" they…",null,null],[8,"DiscriminantKind","","Compiler-internal trait used to indicate the type of enum…",null,null],[16,"Discriminant","","The type of the discriminant, which must satisfy the trait…",32,null],[8,"Unpin","","Types that can be safely moved after being pinned.",null,null],[3,"PhantomPinned","","A marker type which does not implement `Unpin`.",null,null],[14,"Copy","","Derive macro generating an impl of the trait `Copy`.",null,null],[0,"ops","wasmtime_wiggle::bitflags::_core","Overloadable operators.",null,null],[8,"Add","wasmtime_wiggle::bitflags::_core::ops","The addition operator `+`.",null,null],[16,"Output","","The resulting type after applying the `+` operator.",33,null],[10,"add","","Performs the `+` operation.",33,[[]]],[8,"Div","","The division operator `/`.",null,null],[16,"Output","","The resulting type after applying the `/` operator.",34,null],[10,"div","","Performs the `/` operation.",34,[[]]],[8,"Mul","","The multiplication operator `*`.",null,null],[16,"Output","","The resulting type after applying the `*` operator.",35,null],[10,"mul","","Performs the `*` operation.",35,[[]]],[8,"Neg","","The unary negation operator `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator.",36,null],[10,"neg","","Performs the unary `-` operation.",36,[[]]],[8,"Rem","","The remainder operator `%`.",null,null],[16,"Output","","The resulting type after applying the `%` operator.",37,null],[10,"rem","","Performs the `%` operation.",37,[[]]],[8,"Sub","","The subtraction operator `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator.",38,null],[10,"sub","","Performs the `-` operation.",38,[[]]],[8,"AddAssign","","The addition assignment operator `+=`.",null,null],[10,"add_assign","","Performs the `+=` operation.",39,[[]]],[8,"DivAssign","","The division assignment operator `/=`.",null,null],[10,"div_assign","","Performs the `/=` operation.",40,[[]]],[8,"MulAssign","","The multiplication assignment operator `*=`.",null,null],[10,"mul_assign","","Performs the `*=` operation.",41,[[]]],[8,"RemAssign","","The remainder assignment operator `%=`.",null,null],[10,"rem_assign","","Performs the `%=` operation.",42,[[]]],[8,"SubAssign","","The subtraction assignment operator `-=`.",null,null],[10,"sub_assign","","Performs the `-=` operation.",43,[[]]],[8,"BitAnd","","The bitwise AND operator `&`.",null,null],[16,"Output","","The resulting type after applying the `&` operator.",44,null],[10,"bitand","","Performs the `&` operation.",44,[[]]],[8,"BitOr","","The bitwise OR operator `|`.",null,null],[16,"Output","","The resulting type after applying the `|` operator.",45,null],[10,"bitor","","Performs the `|` operation.",45,[[]]],[8,"BitXor","","The bitwise XOR operator `^`.",null,null],[16,"Output","","The resulting type after applying the `^` operator.",46,null],[10,"bitxor","","Performs the `^` operation.",46,[[]]],[8,"Not","","The unary logical negation operator `!`.",null,null],[16,"Output","","The resulting type after applying the `!` operator.",47,null],[10,"not","","Performs the unary `!` operation.",47,[[]]],[8,"Shl","","The left shift operator `<<`. Note that because this trait…",null,null],[16,"Output","","The resulting type after applying the `<<` operator.",48,null],[10,"shl","","Performs the `<<` operation.",48,[[]]],[8,"Shr","","The right shift operator `>>`. Note that because this…",null,null],[16,"Output","","The resulting type after applying the `>>` operator.",49,null],[10,"shr","","Performs the `>>` operation.",49,[[]]],[8,"BitAndAssign","","The bitwise AND assignment operator `&=`.",null,null],[10,"bitand_assign","","Performs the `&=` operation.",50,[[]]],[8,"BitOrAssign","","The bitwise OR assignment operator `|=`.",null,null],[10,"bitor_assign","","Performs the `|=` operation.",51,[[]]],[8,"BitXorAssign","","The bitwise XOR assignment operator `^=`.",null,null],[10,"bitxor_assign","","Performs the `^=` operation.",52,[[]]],[8,"ShlAssign","","The left shift assignment operator `<<=`.",null,null],[10,"shl_assign","","Performs the `<<=` operation.",53,[[]]],[8,"ShrAssign","","The right shift assignment operator `>>=`.",null,null],[10,"shr_assign","","Performs the `>>=` operation.",54,[[]]],[8,"Deref","","Used for immutable dereferencing operations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing.",55,null],[10,"deref","","Dereferences the value.",55,[[]]],[8,"DerefMut","","Used for mutable dereferencing operations, like in `*v =…",null,null],[10,"deref_mut","","Mutably dereferences the value.",56,[[]]],[8,"Drop","","Custom code within the destructor.",null,null],[10,"drop","","Executes the destructor for this type.",6,[[]]],[8,"Fn","","The version of the call operator that takes an immutable…",null,null],[10,"call","","Performs the call operation.",7,[[]]],[8,"FnMut","","The version of the call operator that takes a mutable…",null,null],[10,"call_mut","","Performs the call operation.",8,[[]]],[8,"FnOnce","","The version of the call operator that takes a by-value…",null,null],[16,"Output","","The returned type after the call operator is used.",9,null],[10,"call_once","","Performs the call operation.",9,[[]]],[8,"Index","","Used for indexing operations (`container[index]`) in…",null,null],[16,"Output","","The returned type after indexing.",57,null],[10,"index","","Performs the indexing (`container[index]`) operation.",57,[[]]],[8,"IndexMut","","Used for indexing operations (`container[index]`) in…",null,null],[10,"index_mut","","Performs the mutable indexing (`container[index]`)…",58,[[]]],[3,"Range","","A (half-open) range bounded inclusively below and…",null,null],[12,"start","","The lower bound of the range (inclusive).",59,null],[12,"end","","The upper bound of the range (exclusive).",59,null],[3,"RangeFrom","","A range only bounded inclusively below (`start..`).",null,null],[12,"start","","The lower bound of the range (inclusive).",60,null],[3,"RangeFull","","An unbounded range (`..`).",null,null],[3,"RangeTo","","A range only bounded exclusively above (`..end`).",null,null],[12,"end","","The upper bound of the range (exclusive).",61,null],[4,"Bound","","An endpoint of a range of keys.",null,null],[13,"Included","","An inclusive bound.",62,null],[13,"Excluded","","An exclusive bound.",62,null],[13,"Unbounded","","An infinite endpoint. Indicates that there is no bound in…",62,null],[8,"RangeBounds","","`RangeBounds` is implemented by Rust\'s built-in range…",null,null],[10,"start_bound","","Start index bound.",63,[[],["bound",4]]],[10,"end_bound","","End index bound.",63,[[],["bound",4]]],[11,"assert_len","","Performs bounds-checking of this range.",63,[[],["range",3]]],[11,"contains","","Returns `true` if `item` is contained in the range.",63,[[]]],[3,"RangeInclusive","","A range bounded inclusively below and above (`start..=end`).",null,null],[3,"RangeToInclusive","","A range only bounded inclusively above (`..=end`).",null,null],[12,"end","","The upper bound of the range (inclusive)",64,null],[8,"Try","","A trait for customizing the behavior of the `?` operator.",null,null],[16,"Ok","","The type of this value when viewed as successful.",65,null],[16,"Error","","The type of this value when viewed as failed.",65,null],[10,"into_result","","Applies the \\\"?\\\" operator. A return of `Ok(t)` means that…",65,[[],["result",4]]],[10,"from_error","","Wrap an error value to construct the composite result. For…",65,[[]]],[10,"from_ok","","Wrap an OK value to construct the composite result. For…",65,[[]]],[8,"Generator","","The trait implemented by builtin generator types.",null,null],[16,"Yield","","The type of value this generator yields.",66,null],[16,"Return","","The type of value this generator returns.",66,null],[10,"resume","","Resumes the execution of this generator.",66,[[["pin",3]],["generatorstate",4]]],[4,"GeneratorState","","The result of a generator resumption.",null,null],[13,"Yielded","","The generator suspended with a value.",67,null],[13,"Complete","","The generator completed with a return value.",67,null],[8,"CoerceUnsized","","Trait that indicates that this is a pointer or a wrapper…",null,null],[8,"DispatchFromDyn","","This is used for object safety, to check that a method\'s…",null,null],[4,"ControlFlow","","Used to make try_fold closures more like normal loops",null,null],[13,"Continue","","Continue in the loop, using the given value for the next…",68,null],[13,"Break","","Exit the loop, yielding the given value",68,null],[0,"any","wasmtime_wiggle::bitflags::_core","This module implements the `Any` trait, which enables…",null,null],[8,"Any","wasmtime_wiggle::bitflags::_core::any","A trait to emulate dynamic typing.",null,null],[10,"type_id","","Gets the `TypeId` of `self`.",69,[[],["typeid",3]]],[3,"TypeId","","A `TypeId` represents a globally unique identifier for a…",null,null],[5,"type_name","","Returns the name of a type as a string slice.",null,[[]]],[5,"type_name_of_val","","Returns the name of the type of the pointed-to value as a…",null,[[]]],[0,"array","wasmtime_wiggle::bitflags::_core","Implementations of things like `Eq` for fixed-length…",null,null],[5,"from_ref","wasmtime_wiggle::bitflags::_core::array","Converts a reference to `T` into a reference to an array…",null,[[]]],[5,"from_mut","","Converts a mutable reference to `T` into a mutable…",null,[[]]],[8,"FixedSizeArray","","Utility trait implemented only on arrays of fixed size",null,null],[10,"as_slice","","Converts the array to immutable slice",70,[[]]],[10,"as_mut_slice","","Converts the array to mutable slice",70,[[]]],[3,"TryFromSliceError","","The error type returned when a conversion from a slice to…",null,null],[3,"IntoIter","","A by-value array iterator.",null,null],[0,"ascii","wasmtime_wiggle::bitflags::_core","Operations on ASCII strings and characters.",null,null],[3,"EscapeDefault","wasmtime_wiggle::bitflags::_core::ascii","An iterator over the escaped version of a byte.",null,null],[5,"escape_default","","Returns an iterator that produces an escaped version of a…",null,[[],["escapedefault",3]]],[0,"cell","wasmtime_wiggle::bitflags::_core","Shareable mutable containers.",null,null],[3,"Cell","wasmtime_wiggle::bitflags::_core::cell","A mutable memory location.",null,null],[3,"RefCell","","A mutable memory location with dynamically checked borrow…",null,null],[3,"BorrowError","","An error returned by [`RefCell::try_borrow`].",null,null],[3,"BorrowMutError","","An error returned by [`RefCell::try_borrow_mut`].",null,null],[3,"Ref","","Wraps a borrowed reference to a value in a `RefCell` box.…",null,null],[3,"RefMut","","A wrapper type for a mutably borrowed value from a…",null,null],[3,"UnsafeCell","","The core primitive for interior mutability in Rust.",null,null],[0,"char","wasmtime_wiggle::bitflags::_core","A character type.",null,null],[17,"MAX","wasmtime_wiggle::bitflags::_core::char","The highest valid code point a `char` can have.",null,null],[17,"REPLACEMENT_CHARACTER","","`U+FFFD REPLACEMENT CHARACTER` (�) is used in Unicode to…",null,null],[3,"EscapeUnicode","","Returns an iterator that yields the hexadecimal Unicode…",null,null],[3,"EscapeDefault","","An iterator that yields the literal escape code of a `char`.",null,null],[3,"EscapeDebug","","An iterator that yields the literal escape code of a `char`.",null,null],[3,"ToLowercase","","Returns an iterator that yields the lowercase equivalent…",null,null],[3,"ToUppercase","","Returns an iterator that yields the uppercase equivalent…",null,null],[5,"from_u32_unchecked","","Converts a `u32` to a `char`, ignoring validity.",null,[[]]],[3,"CharTryFromError","","The error type returned when a conversion from u32 to char…",null,null],[3,"ParseCharError","","An error which can be returned when parsing a char.",null,null],[5,"from_digit","","Converts a digit in the given radix to a `char`.",null,[[],["option",4]]],[5,"from_u32","","Converts a `u32` to a `char`.",null,[[],["option",4]]],[5,"decode_utf16","","Creates an iterator over the UTF-16 encoded code points in…",null,[[],["decodeutf16",3]]],[3,"DecodeUtf16","","An iterator that decodes UTF-16 encoded code points from…",null,null],[3,"DecodeUtf16Error","","An error that can be returned when decoding UTF-16 code…",null,null],[17,"UNICODE_VERSION","","The version of Unicode that the Unicode parts of `char`…",null,null],[0,"ffi","wasmtime_wiggle::bitflags::_core","Utilities related to foreign function interface (FFI)…",null,null],[4,"c_void","wasmtime_wiggle::bitflags::_core::ffi","Equivalent to C\'s `void` type when used as a pointer.",null,null],[3,"VaListImpl","","x86_64 ABI implementation of a `va_list`.",null,null],[3,"VaList","","A wrapper for a `va_list`",null,null],[0,"iter","wasmtime_wiggle::bitflags::_core","Composable external iteration.",null,null],[8,"Iterator","wasmtime_wiggle::bitflags::_core::iter","An interface for dealing with iterators.",null,null],[16,"Item","","The type of the elements being iterated over.",23,null],[10,"next","","Advances the iterator and returns the next value.",23,[[],["option",4]]],[11,"size_hint","","Returns the bounds on the remaining length of the iterator.",23,[[]]],[11,"count","","Consumes the iterator, counting the number of iterations…",23,[[]]],[11,"last","","Consumes the iterator, returning the last element.",23,[[],["option",4]]],[11,"advance_by","","Advances the iterator by `n` elements.",23,[[],["result",4]]],[11,"nth","","Returns the `n`th element of the iterator.",23,[[],["option",4]]],[11,"step_by","","Creates an iterator starting at the same point, but…",23,[[],["stepby",3]]],[11,"chain","","Takes two iterators and creates a new iterator over both…",23,[[],["chain",3]]],[11,"zip","","\'Zips up\' two iterators into a single iterator of pairs.",23,[[],["zip",3]]],[11,"map","","Takes a closure and creates an iterator which calls that…",23,[[],["map",3]]],[11,"for_each","","Calls a closure on each element of an iterator.",23,[[]]],[11,"filter","","Creates an iterator which uses a closure to determine if…",23,[[],["filter",3]]],[11,"filter_map","","Creates an iterator that both filters and maps.",23,[[],["filtermap",3]]],[11,"enumerate","","Creates an iterator which gives the current iteration…",23,[[],["enumerate",3]]],[11,"peekable","","Creates an iterator which can use `peek` to look at the…",23,[[],["peekable",3]]],[11,"skip_while","","Creates an iterator that `skip`s elements based on a…",23,[[],["skipwhile",3]]],[11,"take_while","","Creates an iterator that yields elements based on a…",23,[[],["takewhile",3]]],[11,"map_while","","Creates an iterator that both yields elements based on a…",23,[[],["mapwhile",3]]],[11,"skip","","Creates an iterator that skips the first `n` elements.",23,[[],["skip",3]]],[11,"take","","Creates an iterator that yields its first `n` elements.",23,[[],["take",3]]],[11,"scan","","An iterator adaptor similar to `fold` that holds internal…",23,[[],["scan",3]]],[11,"flat_map","","Creates an iterator that works like map, but flattens…",23,[[],["flatmap",3]]],[11,"flatten","","Creates an iterator that flattens nested structure.",23,[[],["flatten",3]]],[11,"fuse","","Creates an iterator which ends after the first [`None`].",23,[[],["fuse",3]]],[11,"inspect","","Does something with each element of an iterator, passing…",23,[[],["inspect",3]]],[11,"by_ref","","Borrows an iterator, rather than consuming it.",23,[[]]],[11,"collect","","Transforms an iterator into a collection.",23,[[]]],[11,"partition","","Consumes an iterator, creating two collections from it.",23,[[]]],[11,"partition_in_place","","Reorders the elements of this iterator in-place according…",23,[[]]],[11,"is_partitioned","","Checks if the elements of this iterator are partitioned…",23,[[]]],[11,"try_fold","","An iterator method that applies a function as long as it…",23,[[]]],[11,"try_for_each","","An iterator method that applies a fallible function to…",23,[[]]],[11,"fold","","An iterator method that applies a function, producing a…",23,[[]]],[11,"fold_first","","The same as `fold()`, but uses the first element in the…",23,[[],["option",4]]],[11,"all","","Tests if every element of the iterator matches a predicate.",23,[[]]],[11,"any","","Tests if any element of the iterator matches a predicate.",23,[[]]],[11,"find","","Searches for an element of an iterator that satisfies a…",23,[[],["option",4]]],[11,"find_map","","Applies function to the elements of iterator and returns…",23,[[],["option",4]]],[11,"try_find","","Applies function to the elements of iterator and returns…",23,[[],[["option",4],["result",4]]]],[11,"position","","Searches for an element in an iterator, returning its index.",23,[[],["option",4]]],[11,"rposition","","Searches for an element in an iterator from the right,…",23,[[],["option",4]]],[11,"max","","Returns the maximum element of an iterator.",23,[[],["option",4]]],[11,"min","","Returns the minimum element of an iterator.",23,[[],["option",4]]],[11,"max_by_key","","Returns the element that gives the maximum value from the…",23,[[],["option",4]]],[11,"max_by","","Returns the element that gives the maximum value with…",23,[[],["option",4]]],[11,"min_by_key","","Returns the element that gives the minimum value from the…",23,[[],["option",4]]],[11,"min_by","","Returns the element that gives the minimum value with…",23,[[],["option",4]]],[11,"rev","","Reverses an iterator\'s direction.",23,[[],["rev",3]]],[11,"unzip","","Converts an iterator of pairs into a pair of containers.",23,[[]]],[11,"copied","","Creates an iterator which copies all of its elements.",23,[[],["copied",3]]],[11,"cloned","","Creates an iterator which `clone`s all of its elements.",23,[[],["cloned",3]]],[11,"cycle","","Repeats an iterator endlessly.",23,[[],["cycle",3]]],[11,"sum","","Sums the elements of an iterator.",23,[[]]],[11,"product","","Iterates over the entire iterator, multiplying all the…",23,[[]]],[11,"cmp","","Lexicographically compares the elements of this…",23,[[],["ordering",4]]],[11,"cmp_by","","Lexicographically compares the elements of this…",23,[[],["ordering",4]]],[11,"partial_cmp","","Lexicographically compares the elements of this…",23,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp_by","","Lexicographically compares the elements of this…",23,[[],[["ordering",4],["option",4]]]],[11,"eq","","Determines if the elements of this [`Iterator`] are equal…",23,[[]]],[11,"eq_by","","Determines if the elements of this [`Iterator`] are equal…",23,[[]]],[11,"ne","","Determines if the elements of this [`Iterator`] are…",23,[[]]],[11,"lt","","Determines if the elements of this [`Iterator`] are…",23,[[]]],[11,"le","","Determines if the elements of this [`Iterator`] are…",23,[[]]],[11,"gt","","Determines if the elements of this [`Iterator`] are…",23,[[]]],[11,"ge","","Determines if the elements of this [`Iterator`] are…",23,[[]]],[11,"is_sorted","","Checks if the elements of this iterator are sorted.",23,[[]]],[11,"is_sorted_by","","Checks if the elements of this iterator are sorted using…",23,[[]]],[11,"is_sorted_by_key","","Checks if the elements of this iterator are sorted using…",23,[[]]],[8,"Step","","Objects that have a notion of successor and predecessor…",null,null],[10,"steps_between","","Returns the number of successor steps required to get from…",71,[[],["option",4]]],[10,"forward_checked","","Returns the value that would be obtained by taking the…",71,[[],["option",4]]],[11,"forward","","Returns the value that would be obtained by taking the…",71,[[]]],[11,"forward_unchecked","","Returns the value that would be obtained by taking the…",71,[[]]],[10,"backward_checked","","Returns the value that would be obtained by taking the…",71,[[],["option",4]]],[11,"backward","","Returns the value that would be obtained by taking the…",71,[[]]],[11,"backward_unchecked","","Returns the value that would be obtained by taking the…",71,[[]]],[5,"empty","","Creates an iterator that yields nothing.",null,[[],["empty",3]]],[3,"Empty","","An iterator that yields nothing.",null,null],[5,"from_fn","","Creates a new iterator where each iteration calls the…",null,[[],["fromfn",3]]],[3,"FromFn","","An iterator where each iteration calls the provided…",null,null],[5,"once","","Creates an iterator that yields an element exactly once.",null,[[],["once",3]]],[3,"Once","","An iterator that yields an element exactly once.",null,null],[5,"once_with","","Creates an iterator that lazily generates a value exactly…",null,[[],["oncewith",3]]],[3,"OnceWith","","An iterator that yields a single element of type `A` by…",null,null],[5,"repeat","","Creates a new iterator that endlessly repeats a single…",null,[[],["repeat",3]]],[3,"Repeat","","An iterator that repeats an element endlessly.",null,null],[5,"repeat_with","","Creates a new iterator that repeats elements of type `A`…",null,[[],["repeatwith",3]]],[3,"RepeatWith","","An iterator that repeats elements of type `A` endlessly by…",null,null],[5,"successors","","Creates a new iterator where each successive item is…",null,[[["option",4]],["successors",3]]],[3,"Successors","","An new iterator where each successive item is computed…",null,null],[8,"FusedIterator","","An iterator that always continues to yield `None` when…",null,null],[8,"InPlaceIterable","","An iterator that when yielding an item will have taken at…",null,null],[8,"TrustedLen","","An iterator that reports an accurate length using size_hint.",null,null],[8,"DoubleEndedIterator","","An iterator able to yield elements from both ends.",null,null],[10,"next_back","","Removes and returns an element from the end of the iterator.",19,[[],["option",4]]],[11,"advance_back_by","","Advances the iterator from the back by `n` elements.",19,[[],["result",4]]],[11,"nth_back","","Returns the `n`th element from the end of the iterator.",19,[[],["option",4]]],[11,"try_rfold","","This is the reverse version of [`Iterator::try_fold()`]:…",19,[[]]],[11,"rfold","","An iterator method that reduces the iterator\'s elements to…",19,[[]]],[11,"rfind","","Searches for an element of an iterator from the back that…",19,[[],["option",4]]],[8,"ExactSizeIterator","","An iterator that knows its exact length.",null,null],[11,"len","","Returns the exact length of the iterator.",20,[[]]],[11,"is_empty","","Returns `true` if the iterator is empty.",20,[[]]],[8,"Extend","","Extend a collection with the contents of an iterator.",null,null],[10,"extend","","Extends a collection with the contents of an iterator.",21,[[]]],[11,"extend_one","","Extends a collection with exactly one element.",21,[[]]],[11,"extend_reserve","","Reserves capacity in a collection for the given number of…",21,[[]]],[8,"FromIterator","","Conversion from an [`Iterator`].",null,null],[10,"from_iter","","Creates a value from an iterator.",72,[[]]],[8,"IntoIterator","","Conversion into an [`Iterator`].",null,null],[16,"Item","","The type of the elements being iterated over.",22,null],[16,"IntoIter","","Which kind of iterator are we turning this into?",22,null],[10,"into_iter","","Creates an iterator from a value.",22,[[]]],[8,"Product","","Trait to represent types that can be created by…",null,null],[10,"product","","Method which takes an iterator and generates `Self` from…",73,[[]]],[8,"Sum","","Trait to represent types that can be created by summing up…",null,null],[10,"sum","","Method which takes an iterator and generates `Self` from…",74,[[]]],[3,"Cloned","","An iterator that clones the elements of an underlying…",null,null],[3,"Copied","","An iterator that copies the elements of an underlying…",null,null],[3,"Flatten","","An iterator that flattens one level of nesting in an…",null,null],[3,"MapWhile","","An iterator that only accepts elements while `predicate`…",null,null],[8,"SourceIter","","This trait provides transitive access to source-stage in…",null,null],[16,"Source","","A source stage in an iterator pipeline.",75,null],[10,"as_inner","","Retrieve the source of an iterator pipeline.",75,[[]]],[3,"StepBy","","An iterator for stepping iterators by a custom amount.",null,null],[3,"Chain","","An iterator that links two iterators together, in a chain.",null,null],[3,"Cycle","","An iterator that repeats endlessly.",null,null],[3,"Enumerate","","An iterator that yields the current count and the element…",null,null],[3,"Filter","","An iterator that filters the elements of `iter` with…",null,null],[3,"FilterMap","","An iterator that uses `f` to both filter and map elements…",null,null],[3,"FlatMap","","An iterator that maps each element to an iterator, and…",null,null],[3,"Fuse","","An iterator that yields `None` forever after the…",null,null],[3,"Inspect","","An iterator that calls a function with a reference to each…",null,null],[3,"Map","","An iterator that maps the values of `iter` with `f`.",null,null],[3,"Peekable","","An iterator with a `peek()` that returns an optional…",null,null],[3,"Rev","","A double-ended iterator with the direction inverted.",null,null],[3,"Scan","","An iterator to maintain state while iterating another…",null,null],[3,"Skip","","An iterator that skips over `n` elements of `iter`.",null,null],[3,"SkipWhile","","An iterator that rejects elements while `predicate`…",null,null],[3,"Take","","An iterator that only iterates over the first `n`…",null,null],[3,"TakeWhile","","An iterator that only accepts elements while `predicate`…",null,null],[3,"Zip","","An iterator that iterates two other iterators…",null,null],[0,"lazy","wasmtime_wiggle::bitflags::_core","Lazy values and one-time initialization of static data.",null,null],[3,"OnceCell","wasmtime_wiggle::bitflags::_core::lazy","A cell which can be written to only once.",null,null],[3,"Lazy","","A value which is initialized on the first access.",null,null],[0,"option","wasmtime_wiggle::bitflags::_core","Optional values.",null,null],[4,"Option","wasmtime_wiggle::bitflags::_core::option","The `Option` type. See the module level documentation for…",null,null],[13,"None","","No value",24,null],[13,"Some","","Some value `T`",24,null],[3,"Iter","","An iterator over a reference to the [`Some`] variant of an…",null,null],[3,"IterMut","","An iterator over a mutable reference to the [`Some`]…",null,null],[3,"IntoIter","","An iterator over the value in [`Some`] variant of an…",null,null],[3,"NoneError","","The error type that results from applying the try operator…",null,null],[0,"panic","wasmtime_wiggle::bitflags::_core","Panic support in the standard library.",null,null],[3,"PanicInfo","wasmtime_wiggle::bitflags::_core::panic","A struct providing information about a panic.",null,null],[3,"Location","","A struct containing information about the location of a…",null,null],[0,"panicking","wasmtime_wiggle::bitflags::_core","Panic support for libcore",null,null],[5,"panic","wasmtime_wiggle::bitflags::_core::panicking","The underlying implementation of libcore\'s `panic!` macro…",null,[[]]],[5,"panic_str","","",null,[[]]],[5,"panic_fmt","","The underlying implementation of libcore\'s `panic!` macro…",null,[[["arguments",3]]]],[0,"pin","wasmtime_wiggle::bitflags::_core","Types that pin data to its location in memory.",null,null],[3,"Pin","wasmtime_wiggle::bitflags::_core::pin","A pinned pointer.",null,null],[0,"raw","wasmtime_wiggle::bitflags::_core","Contains struct definitions for the layout of compiler…",null,null],[3,"TraitObject","wasmtime_wiggle::bitflags::_core::raw","The representation of a trait object like `&dyn SomeTrait`.",null,null],[12,"data","","",76,null],[12,"vtable","","",76,null],[0,"result","wasmtime_wiggle::bitflags::_core","Error handling with the `Result` type.",null,null],[4,"Result","wasmtime_wiggle::bitflags::_core::result","`Result` is a type that represents either success ([`Ok`])…",null,null],[13,"Ok","","Contains the success value",25,null],[13,"Err","","Contains the error value",25,null],[3,"Iter","","An iterator over a reference to the [`Ok`] variant of a…",null,null],[3,"IterMut","","An iterator over a mutable reference to the [`Ok`] variant…",null,null],[3,"IntoIter","","An iterator over the value in a [`Ok`] variant of a…",null,null],[0,"sync","wasmtime_wiggle::bitflags::_core","Synchronization primitives",null,null],[0,"atomic","wasmtime_wiggle::bitflags::_core::sync","Atomic types",null,null],[5,"spin_loop_hint","wasmtime_wiggle::bitflags::_core::sync::atomic","Signals the processor that it is inside a busy-wait…",null,[[]]],[3,"AtomicBool","","A boolean type which can be safely shared between threads.",null,null],[3,"AtomicPtr","","A raw pointer type which can be safely shared between…",null,null],[4,"Ordering","","Atomic memory orderings",null,null],[13,"Relaxed","","No ordering constraints, only atomic operations.",77,null],[13,"Release","","When coupled with a store, all previous operations become…",77,null],[13,"Acquire","","When coupled with a load, if the loaded value was written…",77,null],[13,"AcqRel","","Has the effects of both [`Acquire`] and [`Release`]…",77,null],[13,"SeqCst","","Like [`Acquire`]/[`Release`]/[`AcqRel`] (for load, store,…",77,null],[17,"ATOMIC_BOOL_INIT","","An [`AtomicBool`] initialized to `false`.",null,null],[3,"AtomicI8","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_I8_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU8","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_U8_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicI16","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_I16_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU16","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_U16_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicI32","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_I32_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU32","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_U32_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicI64","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_I64_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU64","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_U64_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicIsize","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_ISIZE_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicUsize","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_USIZE_INIT","","An atomic integer initialized to `0`.",null,null],[5,"fence","","An atomic fence.",null,[[["ordering",4]]]],[5,"compiler_fence","","A compiler memory fence.",null,[[["ordering",4]]]],[0,"fmt","wasmtime_wiggle::bitflags::_core","Utilities for formatting and printing strings.",null,null],[4,"Alignment","wasmtime_wiggle::bitflags::_core::fmt","Possible alignments returned by `Formatter::align`",null,null],[13,"Left","","Indication that contents should be left-aligned.",78,null],[13,"Right","","Indication that contents should be right-aligned.",78,null],[13,"Center","","Indication that contents should be center-aligned.",78,null],[6,"Result","","The type returned by formatter methods.",null,null],[3,"Error","","The error type which is returned from formatting a message…",null,null],[8,"Write","","A trait for writing or formatting into Unicode-accepting…",null,null],[10,"write_str","","Writes a string slice into this writer, returning whether…",79,[[],[["error",3],["result",4]]]],[11,"write_char","","Writes a [`char`] into this writer, returning whether the…",79,[[],[["error",3],["result",4]]]],[11,"write_fmt","","Glue for usage of the [`write!`] macro with implementors…",79,[[["arguments",3]],[["error",3],["result",4]]]],[3,"Formatter","","Configuration for formatting.",null,null],[3,"Arguments","","This structure represents a safely precompiled version of…",null,null],[8,"Debug","","`?` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",80,[[["formatter",3]],[["error",3],["result",4]]]],[8,"Display","","Format trait for an empty format, `{}`.",null,null],[10,"fmt","","Formats the value using the given formatter.",81,[[["formatter",3]],[["error",3],["result",4]]]],[8,"Octal","","`o` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",82,[[["formatter",3]],[["error",3],["result",4]]]],[8,"Binary","","`b` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",83,[[["formatter",3]],[["error",3],["result",4]]]],[8,"LowerHex","","`x` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",84,[[["formatter",3]],[["error",3],["result",4]]]],[8,"UpperHex","","`X` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",85,[[["formatter",3]],[["error",3],["result",4]]]],[8,"Pointer","","`p` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",86,[[["formatter",3]],[["error",3],["result",4]]]],[8,"LowerExp","","`e` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",87,[[["formatter",3]],[["error",3],["result",4]]]],[8,"UpperExp","","`E` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",88,[[["formatter",3]],[["error",3],["result",4]]]],[5,"write","","The `write` function takes an output stream, and an…",null,[[["arguments",3],["write",8]],[["error",3],["result",4]]]],[3,"DebugList","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugMap","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugSet","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugStruct","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugTuple","","A struct to help with `fmt::Debug` implementations.",null,null],[14,"Debug","","Derive macro generating an impl of the trait `Debug`.",null,null],[0,"hash","wasmtime_wiggle::bitflags::_core","Generic hashing support.",null,null],[8,"Hash","wasmtime_wiggle::bitflags::_core::hash","A hashable type.",null,null],[10,"hash","","Feeds this value into the given [`Hasher`].",89,[[]]],[11,"hash_slice","","Feeds a slice of this type into the given [`Hasher`].",89,[[]]],[8,"Hasher","","A trait for hashing an arbitrary stream of bytes.",null,null],[10,"finish","","Returns the hash value for the values written so far.",90,[[]]],[10,"write","","Writes some data into this `Hasher`.",90,[[]]],[11,"write_u8","","Writes a single `u8` into this hasher.",90,[[]]],[11,"write_u16","","Writes a single `u16` into this hasher.",90,[[]]],[11,"write_u32","","Writes a single `u32` into this hasher.",90,[[]]],[11,"write_u64","","Writes a single `u64` into this hasher.",90,[[]]],[11,"write_u128","","Writes a single `u128` into this hasher.",90,[[]]],[11,"write_usize","","Writes a single `usize` into this hasher.",90,[[]]],[11,"write_i8","","Writes a single `i8` into this hasher.",90,[[]]],[11,"write_i16","","Writes a single `i16` into this hasher.",90,[[]]],[11,"write_i32","","Writes a single `i32` into this hasher.",90,[[]]],[11,"write_i64","","Writes a single `i64` into this hasher.",90,[[]]],[11,"write_i128","","Writes a single `i128` into this hasher.",90,[[]]],[11,"write_isize","","Writes a single `isize` into this hasher.",90,[[]]],[8,"BuildHasher","","A trait for creating instances of [`Hasher`].",null,null],[16,"Hasher","","Type of the hasher that will be created.",91,null],[10,"build_hasher","","Creates a new hasher.",91,[[]]],[3,"BuildHasherDefault","","Used to create a default [`BuildHasher`] instance for…",null,null],[3,"SipHasher","","An implementation of SipHash 2-4.",null,null],[14,"Hash","","Derive macro generating an impl of the trait `Hash`.",null,null],[0,"slice","wasmtime_wiggle::bitflags::_core","Slice management and manipulation.",null,null],[0,"memchr","wasmtime_wiggle::bitflags::_core::slice","Pure rust memchr implementation, taken from rust-memchr",null,null],[5,"memchr","wasmtime_wiggle::bitflags::_core::slice::memchr","Returns the first index matching the byte `x` in `text`.",null,[[],["option",4]]],[5,"memrchr","","Returns the last index matching the byte `x` in `text`.",null,[[],["option",4]]],[3,"Chunks","wasmtime_wiggle::bitflags::_core::slice","An iterator over a slice in (non-overlapping) chunks…",null,null],[3,"ChunksMut","","An iterator over a slice in (non-overlapping) mutable…",null,null],[3,"Windows","","An iterator over overlapping subslices of length `size`.",null,null],[3,"Iter","","Immutable slice iterator",null,null],[3,"IterMut","","Mutable slice iterator.",null,null],[3,"RSplitN","","An iterator over subslices separated by elements that…",null,null],[3,"RSplitNMut","","An iterator over subslices separated by elements that…",null,null],[3,"Split","","An iterator over subslices separated by elements that…",null,null],[3,"SplitMut","","An iterator over the mutable subslices of the vector which…",null,null],[3,"SplitN","","An iterator over subslices separated by elements that…",null,null],[3,"SplitNMut","","An iterator over subslices separated by elements that…",null,null],[3,"RSplit","","An iterator over subslices separated by elements that…",null,null],[3,"RSplitMut","","An iterator over the subslices of the vector which are…",null,null],[3,"ChunksExact","","An iterator over a slice in (non-overlapping) chunks…",null,null],[3,"ChunksExactMut","","An iterator over a slice in (non-overlapping) mutable…",null,null],[3,"RChunks","","An iterator over a slice in (non-overlapping) chunks…",null,null],[3,"RChunksExact","","An iterator over a slice in (non-overlapping) chunks…",null,null],[3,"RChunksExactMut","","An iterator over a slice in (non-overlapping) mutable…",null,null],[3,"RChunksMut","","An iterator over a slice in (non-overlapping) mutable…",null,null],[3,"ArrayChunks","","An iterator over a slice in (non-overlapping) chunks (`N`…",null,null],[3,"ArrayChunksMut","","An iterator over a slice in (non-overlapping) mutable…",null,null],[3,"ArrayWindows","","A windowed iterator over a slice in overlapping chunks…",null,null],[3,"SplitInclusive","","An iterator over subslices separated by elements that…",null,null],[3,"SplitInclusiveMut","","An iterator over the mutable subslices of the vector which…",null,null],[5,"from_raw_parts","","Forms a slice from a pointer and a length.",null,[[]]],[5,"from_raw_parts_mut","","Performs the same functionality as [`from_raw_parts`],…",null,[[]]],[5,"from_mut","","Converts a reference to T into a slice of length 1…",null,[[]]],[5,"from_ref","","Converts a reference to T into a slice of length 1…",null,[[]]],[5,"heapsort","","Sorts `v` using heapsort, which guarantees O(n * log(n))…",null,[[]]],[8,"SliceIndex","","A helper trait used for indexing operations.",null,null],[16,"Output","","The output type returned by methods.",92,null],[10,"get","","Returns a shared reference to the output at this location,…",92,[[],["option",4]]],[10,"get_mut","","Returns a mutable reference to the output at this…",92,[[],["option",4]]],[10,"get_unchecked","","Returns a shared reference to the output at this location,…",92,[[]]],[10,"get_unchecked_mut","","Returns a mutable reference to the output at this…",92,[[]]],[10,"index","","Returns a shared reference to the output at this location,…",92,[[]]],[10,"index_mut","","Returns a mutable reference to the output at this…",92,[[]]],[0,"str","wasmtime_wiggle::bitflags::_core","String manipulation.",null,null],[0,"pattern","wasmtime_wiggle::bitflags::_core::str","The string Pattern API.",null,null],[8,"Pattern","wasmtime_wiggle::bitflags::_core::str::pattern","A string pattern.",null,null],[16,"Searcher","","Associated searcher for this pattern",93,null],[10,"into_searcher","","Constructs the associated searcher from `self` and the…",93,[[]]],[11,"is_contained_in","","Checks whether the pattern matches anywhere in the haystack",93,[[]]],[11,"is_prefix_of","","Checks whether the pattern matches at the front of the…",93,[[]]],[11,"is_suffix_of","","Checks whether the pattern matches at the back of the…",93,[[]]],[11,"strip_prefix_of","","Removes the pattern from the front of haystack, if it…",93,[[],["option",4]]],[11,"strip_suffix_of","","Removes the pattern from the back of haystack, if it…",93,[[],["option",4]]],[4,"SearchStep","","Result of calling [`Searcher::next()`] or…",null,null],[13,"Match","","Expresses that a match of the pattern has been found at…",94,null],[13,"Reject","","Expresses that `haystack[a..b]` has been rejected as a…",94,null],[13,"Done","","Expresses that every byte of the haystack has been…",94,null],[8,"Searcher","","A searcher for a string pattern.",null,null],[10,"haystack","","Getter for the underlying string to be searched in",95,[[]]],[10,"next","","Performs the next search step starting from the front.",95,[[],["searchstep",4]]],[11,"next_match","","Finds the next [`Match`][SearchStep::Match] result. See…",95,[[],["option",4]]],[11,"next_reject","","Finds the next [`Reject`][SearchStep::Reject] result. See…",95,[[],["option",4]]],[8,"ReverseSearcher","","A reverse searcher for a string pattern.",null,null],[10,"next_back","","Performs the next search step starting from the back.",96,[[],["searchstep",4]]],[11,"next_match_back","","Finds the next [`Match`][SearchStep::Match] result. See…",96,[[],["option",4]]],[11,"next_reject_back","","Finds the next [`Reject`][SearchStep::Reject] result. See…",96,[[],["option",4]]],[8,"DoubleEndedSearcher","","A marker trait to express that a [`ReverseSearcher`] can…",null,null],[3,"CharSearcher","","Associated type for `<char as Pattern<\'a>>::Searcher`.",null,null],[3,"CharSliceSearcher","","Associated type for `<&[char] as Pattern<\'a>>::Searcher`.",null,null],[3,"CharPredicateSearcher","","Associated type for `<F as Pattern<\'a>>::Searcher`.",null,null],[3,"StrSearcher","","Associated type for `<&str as Pattern<\'a>>::Searcher`.",null,null],[0,"lossy","wasmtime_wiggle::bitflags::_core::str","",null,null],[3,"Utf8Lossy","wasmtime_wiggle::bitflags::_core::str::lossy","Lossy UTF-8 string.",null,null],[3,"Utf8LossyChunksIter","","Iterator over lossy UTF-8 string",null,null],[3,"Utf8LossyChunk","","",null,null],[12,"valid","","Sequence of valid chars. Can be empty between broken UTF-8…",97,null],[12,"broken","","Single broken char, empty if none. Empty iff iterator item…",97,null],[5,"from_utf8","wasmtime_wiggle::bitflags::_core::str","Converts a slice of bytes to a string slice.",null,[[],[["utf8error",3],["result",4]]]],[5,"from_utf8_unchecked","","Converts a slice of bytes to a string slice without…",null,[[]]],[5,"from_utf8_mut","","Converts a mutable slice of bytes to a mutable string slice.",null,[[],[["result",4],["utf8error",3]]]],[5,"from_utf8_unchecked_mut","","Converts a slice of bytes to a string slice without…",null,[[]]],[3,"ParseBoolError","","An error returned when parsing a `bool` using `from_str`…",null,null],[3,"Utf8Error","","Errors which can occur when attempting to interpret a…",null,null],[8,"FromStr","","Parse a value from a string",null,null],[16,"Err","","The associated error which can be returned from parsing.",98,null],[10,"from_str","","Parses a string `s` to return a value of this type.",98,[[],["result",4]]],[3,"Bytes","","An iterator over the bytes of a string slice.",null,null],[3,"CharIndices","","An iterator over the `char`s of a string slice, and their…",null,null],[3,"Chars","","An iterator over the `char`s of a string slice.",null,null],[3,"Lines","","An iterator over the lines of a string, as string slices.",null,null],[3,"SplitWhitespace","","An iterator over the non-whitespace substrings of a…",null,null],[3,"LinesAny","","Created with the method `lines_any`.",null,null],[3,"RSplit","","Created with the method `rsplit`.",null,null],[3,"RSplitTerminator","","Created with the method `rsplit_terminator`.",null,null],[3,"Split","","Created with the method `split`.",null,null],[3,"SplitTerminator","","Created with the method `split_terminator`.",null,null],[3,"RSplitN","","Created with the method `rsplitn`.",null,null],[3,"SplitN","","Created with the method `splitn`.",null,null],[3,"Matches","","Created with the method `matches`.",null,null],[3,"RMatches","","Created with the method `rmatches`.",null,null],[3,"MatchIndices","","Created with the method `match_indices`.",null,null],[3,"RMatchIndices","","Created with the method `rmatch_indices`.",null,null],[3,"EncodeUtf16","","An iterator of [`u16`] over the string encoded as UTF-16.",null,null],[3,"EscapeDebug","","The return type of [`str::escape_debug`].",null,null],[3,"EscapeDefault","","The return type of [`str::escape_default`].",null,null],[3,"EscapeUnicode","","The return type of [`str::escape_unicode`].",null,null],[3,"SplitAsciiWhitespace","","An iterator over the non-ASCII-whitespace substrings of a…",null,null],[5,"next_code_point","","Reads the next code point out of a byte iterator (assuming…",null,[[],["option",4]]],[0,"time","wasmtime_wiggle::bitflags::_core","Temporal quantification.",null,null],[3,"Duration","wasmtime_wiggle::bitflags::_core::time","A `Duration` type to represent a span of time, typically…",null,null],[0,"unicode","wasmtime_wiggle::bitflags::_core","",null,null],[17,"UNICODE_VERSION","wasmtime_wiggle::bitflags::_core::unicode","The version of Unicode that the Unicode parts of `char`…",null,null],[0,"derived_property","","",null,null],[5,"Case_Ignorable","wasmtime_wiggle::bitflags::_core::unicode::derived_property","",null,[[]]],[5,"Cased","","",null,[[]]],[5,"Alphabetic","wasmtime_wiggle::bitflags::_core::unicode","",null,[[]]],[5,"Case_Ignorable","","",null,[[]]],[5,"Cased","","",null,[[]]],[5,"Cc","","",null,[[]]],[0,"conversions","","",null,null],[5,"to_lower","wasmtime_wiggle::bitflags::_core::unicode::conversions","",null,[[]]],[5,"to_upper","","",null,[[]]],[5,"Grapheme_Extend","wasmtime_wiggle::bitflags::_core::unicode","",null,[[]]],[5,"Lowercase","","",null,[[]]],[5,"N","","",null,[[]]],[5,"Uppercase","","",null,[[]]],[5,"White_Space","","",null,[[]]],[0,"future","wasmtime_wiggle::bitflags::_core","Asynchronous values.",null,null],[8,"Future","wasmtime_wiggle::bitflags::_core::future","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",99,null],[10,"poll","","Attempt to resolve the future to a final value,…",99,[[["context",3],["pin",3]],["poll",4]]],[8,"IntoFuture","","Conversion into a `Future`.",null,null],[16,"Output","","The output that the future will produce on completion.",100,null],[16,"Future","","Which kind of future are we turning this into?",100,null],[10,"into_future","","Creates a future from a value.",100,[[]]],[5,"pending","","Creates a future which never resolves, representing a…",null,[[],["pending",3]]],[3,"Pending","","Creates a future which never resolves, representing a…",null,null],[5,"ready","","Creates a future that is immediately ready with a value.",null,[[],["ready",3]]],[3,"Ready","","Creates a future that is immediately ready with a value.",null,null],[5,"poll_fn","","Creates a future that wraps a function returning `Poll`.",null,[[],["pollfn",3]]],[3,"PollFn","","A Future that wraps a function returning `Poll`.",null,null],[0,"task","wasmtime_wiggle::bitflags::_core","Types and Traits for working with asynchronous tasks.",null,null],[4,"Poll","wasmtime_wiggle::bitflags::_core::task","Indicates whether a value is available or if the current…",null,null],[13,"Ready","","Represents that a value is immediately ready.",101,null],[13,"Pending","","Represents that a value is not ready yet.",101,null],[3,"Context","","The `Context` of an asynchronous task.",null,null],[3,"RawWaker","","A `RawWaker` allows the implementor of a task executor to…",null,null],[3,"RawWakerVTable","","A virtual function pointer table (vtable) that specifies…",null,null],[3,"Waker","","A `Waker` is a handle for waking up a task by notifying…",null,null],[14,"ready","","Extracts the successful type of a `Poll<T>`.",null,null],[0,"alloc","wasmtime_wiggle::bitflags::_core","Memory allocation APIs",null,null],[3,"AllocError","wasmtime_wiggle::bitflags::_core::alloc","The `AllocError` error indicates an allocation failure…",null,null],[8,"AllocRef","","An implementation of `AllocRef` can allocate, grow,…",null,null],[10,"alloc","","Attempts to allocate a block of memory.",102,[[["layout",3]],[["result",4],["allocerror",3],["nonnull",3]]]],[11,"alloc_zeroed","","Behaves like `alloc`, but also ensures that the returned…",102,[[["layout",3]],[["result",4],["allocerror",3],["nonnull",3]]]],[10,"dealloc","","Deallocates the memory referenced by `ptr`.",102,[[["layout",3],["nonnull",3]]]],[11,"grow","","Attempts to extend the memory block.",102,[[["layout",3],["nonnull",3]],[["result",4],["allocerror",3],["nonnull",3]]]],[11,"grow_zeroed","","Behaves like `grow`, but also ensures that the new…",102,[[["layout",3],["nonnull",3]],[["result",4],["allocerror",3],["nonnull",3]]]],[11,"shrink","","Attempts to shrink the memory block.",102,[[["layout",3],["nonnull",3]],[["result",4],["allocerror",3],["nonnull",3]]]],[11,"by_ref","","Creates a \\\"by reference\\\" adaptor for this instance of…",102,[[]]],[8,"GlobalAlloc","","A memory allocator that can be registered as the standard…",null,null],[10,"alloc","","Allocate memory as described by the given `layout`.",103,[[["layout",3]]]],[10,"dealloc","","Deallocate the block of memory at the given `ptr` pointer…",103,[[["layout",3]]]],[11,"alloc_zeroed","","Behaves like `alloc`, but also ensures that the contents…",103,[[["layout",3]]]],[11,"realloc","","Shrink or grow a block of memory to the given `new_size`.…",103,[[["layout",3]]]],[3,"Layout","","Layout of a block of memory.",null,null],[6,"LayoutErr","","",null,null],[3,"LayoutError","","The parameters given to `Layout::from_size_align` or some…",null,null],[0,"primitive","wasmtime_wiggle::bitflags::_core","This module reexports the primitive types to allow usage…",null,null],[14,"panic","","Panics the current thread.",null,null],[14,"assert_eq","","Asserts that two expressions are equal to each other…",null,null],[14,"assert_ne","","Asserts that two expressions are not equal to each other…",null,null],[14,"debug_assert","","Asserts that a boolean expression is `true` at runtime.",null,null],[14,"debug_assert_eq","","Asserts that two expressions are equal to each other.",null,null],[14,"debug_assert_ne","","Asserts that two expressions are not equal to each other.",null,null],[14,"matches","","Returns whether the given expression matches any of the…",null,null],[14,"try","","Unwraps a result or propagates its error.",null,null],[14,"write","","Writes formatted data into a buffer.",null,null],[14,"writeln","","Write formatted data into a buffer, with a newline appended.",null,null],[14,"unreachable","","Indicates unreachable code.",null,null],[14,"unimplemented","","Indicates unimplemented code by panicking with a message…",null,null],[14,"todo","","Indicates unfinished code.",null,null],[14,"compile_error","","Causes compilation to fail with the given error message…",null,null],[14,"format_args","","Constructs parameters for the other string-formatting…",null,null],[14,"format_args_nl","","Same as `format_args`, but adds a newline in the end.",null,null],[14,"env","","Inspects an environment variable at compile time.",null,null],[14,"option_env","","Optionally inspects an environment variable at compile time.",null,null],[14,"concat_idents","","Concatenates identifiers into one identifier.",null,null],[14,"concat","","Concatenates literals into a static string slice.",null,null],[14,"line","","Expands to the line number on which it was invoked.",null,null],[14,"column","","Expands to the column number at which it was invoked.",null,null],[14,"file","","Expands to the file name in which it was invoked.",null,null],[14,"stringify","","Stringifies its arguments.",null,null],[14,"include_str","","Includes a UTF-8 encoded file as a string.",null,null],[14,"include_bytes","","Includes a file as a reference to a byte array.",null,null],[14,"module_path","","Expands to a string that represents the current module path.",null,null],[14,"cfg","","Evaluates boolean combinations of configuration flags at…",null,null],[14,"include","","Parses a file as an expression or an item according to the…",null,null],[14,"assert","","Asserts that a boolean expression is `true` at runtime.",null,null],[14,"asm","","Inline assembly.",null,null],[14,"llvm_asm","","LLVM-style inline assembly.",null,null],[14,"global_asm","","Module-level inline assembly.",null,null],[14,"log_syntax","","Prints passed tokens into the standard output.",null,null],[14,"trace_macros","","Enables or disables tracing functionality used for…",null,null],[0,"arch","","SIMD and vendor intrinsics module.",null,null],[0,"x86_64","wasmtime_wiggle::bitflags::_core::arch","Platform-specific intrinsics for the `x86_64` platform.",null,null],[6,"__mmask16","wasmtime_wiggle::bitflags::_core::arch::x86_64","The `__mmask16` type used in AVX-512 intrinsics, a 16-bit…",null,null],[6,"__mmask8","","The `__mmask8` type used in AVX-512 intrinsics, a 8-bit…",null,null],[6,"_MM_CMPINT_ENUM","","The `_MM_CMPINT_ENUM` type used to specify comparison…",null,null],[6,"_MM_MANTISSA_NORM_ENUM","","The `MM_MANTISSA_NORM_ENUM` type used to specify mantissa…",null,null],[6,"_MM_MANTISSA_SIGN_ENUM","","The `MM_MANTISSA_SIGN_ENUM` type used to specify mantissa…",null,null],[6,"_MM_PERM_ENUM","","The `MM_PERM_ENUM` type used to specify shuffle operations…",null,null],[5,"ud2","","Generates the trap instruction `UD2`",null,[[]]],[5,"_fxsave","","Saves the `x87` FPU, `MMX` technology, `XMM`, and `MXCSR`…",null,[[]]],[5,"_fxrstor","","Restores the `XMM`, `MMX`, `MXCSR`, and `x87` FPU…",null,[[]]],[5,"_bswap","","Returns an integer with the reversed byte order of x",null,[[]]],[5,"_rdtsc","","Reads the current value of the processor’s time-stamp…",null,[[]]],[5,"__rdtscp","","Reads the current value of the processor’s time-stamp…",null,[[]]],[5,"__cpuid_count","","Returns the result of the `cpuid` instruction for a given…",null,[[],["cpuidresult",3]]],[5,"__cpuid","","See `__cpuid_count`.",null,[[],["cpuidresult",3]]],[5,"has_cpuid","","Does the host support the `cpuid` instruction?",null,[[]]],[5,"__get_cpuid_max","","Returns the highest-supported `leaf` (`EAX`) and sub-leaf…",null,[[]]],[5,"_xsave","","Performs a full or partial save of the enabled processor…",null,[[]]],[5,"_xrstor","","Performs a full or partial restore of the enabled…",null,[[]]],[17,"_XCR_XFEATURE_ENABLED_MASK","","`XFEATURE_ENABLED_MASK` for `XCR`",null,null],[5,"_xsetbv","","Copies 64-bits from `val` to the extended control register…",null,[[]]],[5,"_xgetbv","","Reads the contents of the extended control register `XCR`…",null,[[]]],[5,"_xsaveopt","","Performs a full or partial save of the enabled processor…",null,[[]]],[5,"_xsavec","","Performs a full or partial save of the enabled processor…",null,[[]]],[5,"_xsaves","","Performs a full or partial save of the enabled processor…",null,[[]]],[5,"_xrstors","","Performs a full or partial restore of the enabled…",null,[[]]],[5,"_mm_add_ss","","Adds the first component of `a` and `b`, the other…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_add_ps","","Adds __m128 vectors.",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_sub_ss","","Subtracts the first component of `b` from `a`, the other…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_sub_ps","","Subtracts __m128 vectors.",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mul_ss","","Multiplies the first component of `a` and `b`, the other…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mul_ps","","Multiplies __m128 vectors.",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_div_ss","","Divides the first component of `b` by `a`, the other…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_div_ps","","Divides __m128 vectors.",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_sqrt_ss","","Returns the square root of the first single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_sqrt_ps","","Returns the square root of packed single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_rcp_ss","","Returns the approximate reciprocal of the first…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_rcp_ps","","Returns the approximate reciprocal of packed…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_rsqrt_ss","","Returns the approximate reciprocal square root of the fist…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_rsqrt_ps","","Returns the approximate reciprocal square root of packed…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_min_ss","","Compares the first single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_min_ps","","Compares packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_max_ss","","Compares the first single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_max_ps","","Compares packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_and_ps","","Bitwise AND of packed single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_andnot_ps","","Bitwise AND-NOT of packed single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_or_ps","","Bitwise OR of packed single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_xor_ps","","Bitwise exclusive OR of packed single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpeq_ss","","Compares the lowest `f32` of both inputs for equality. The…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmplt_ss","","Compares the lowest `f32` of both inputs for less than.…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmple_ss","","Compares the lowest `f32` of both inputs for less than or…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpgt_ss","","Compares the lowest `f32` of both inputs for greater than.…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpge_ss","","Compares the lowest `f32` of both inputs for greater than…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpneq_ss","","Compares the lowest `f32` of both inputs for inequality.…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpnlt_ss","","Compares the lowest `f32` of both inputs for…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpnle_ss","","Compares the lowest `f32` of both inputs for…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpngt_ss","","Compares the lowest `f32` of both inputs for…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpnge_ss","","Compares the lowest `f32` of both inputs for…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpord_ss","","Checks if the lowest `f32` of both inputs are ordered. The…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpunord_ss","","Checks if the lowest `f32` of both inputs are unordered.…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpeq_ps","","Compares each of the four floats in `a` to the…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmplt_ps","","Compares each of the four floats in `a` to the…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmple_ps","","Compares each of the four floats in `a` to the…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpgt_ps","","Compares each of the four floats in `a` to the…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpge_ps","","Compares each of the four floats in `a` to the…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpneq_ps","","Compares each of the four floats in `a` to the…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpnlt_ps","","Compares each of the four floats in `a` to the…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpnle_ps","","Compares each of the four floats in `a` to the…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpngt_ps","","Compares each of the four floats in `a` to the…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpnge_ps","","Compares each of the four floats in `a` to the…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpord_ps","","Compares each of the four floats in `a` to the…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cmpunord_ps","","Compares each of the four floats in `a` to the…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_comieq_ss","","Compares two 32-bit floats from the low-order bits of `a`…",null,[[["__m128",3]]]],[5,"_mm_comilt_ss","","Compares two 32-bit floats from the low-order bits of `a`…",null,[[["__m128",3]]]],[5,"_mm_comile_ss","","Compares two 32-bit floats from the low-order bits of `a`…",null,[[["__m128",3]]]],[5,"_mm_comigt_ss","","Compares two 32-bit floats from the low-order bits of `a`…",null,[[["__m128",3]]]],[5,"_mm_comige_ss","","Compares two 32-bit floats from the low-order bits of `a`…",null,[[["__m128",3]]]],[5,"_mm_comineq_ss","","Compares two 32-bit floats from the low-order bits of `a`…",null,[[["__m128",3]]]],[5,"_mm_ucomieq_ss","","Compares two 32-bit floats from the low-order bits of `a`…",null,[[["__m128",3]]]],[5,"_mm_ucomilt_ss","","Compares two 32-bit floats from the low-order bits of `a`…",null,[[["__m128",3]]]],[5,"_mm_ucomile_ss","","Compares two 32-bit floats from the low-order bits of `a`…",null,[[["__m128",3]]]],[5,"_mm_ucomigt_ss","","Compares two 32-bit floats from the low-order bits of `a`…",null,[[["__m128",3]]]],[5,"_mm_ucomige_ss","","Compares two 32-bit floats from the low-order bits of `a`…",null,[[["__m128",3]]]],[5,"_mm_ucomineq_ss","","Compares two 32-bit floats from the low-order bits of `a`…",null,[[["__m128",3]]]],[5,"_mm_cvtss_si32","","Converts the lowest 32 bit float in the input vector to a…",null,[[["__m128",3]]]],[5,"_mm_cvt_ss2si","","Alias for `_mm_cvtss_si32`.",null,[[["__m128",3]]]],[5,"_mm_cvttss_si32","","Converts the lowest 32 bit float in the input vector to a…",null,[[["__m128",3]]]],[5,"_mm_cvtt_ss2si","","Alias for `_mm_cvttss_si32`.",null,[[["__m128",3]]]],[5,"_mm_cvtss_f32","","Extracts the lowest 32 bit float from the input vector.",null,[[["__m128",3]]]],[5,"_mm_cvtsi32_ss","","Converts a 32 bit integer to a 32 bit float. The result…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cvt_si2ss","","Alias for `_mm_cvtsi32_ss`.",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_set_ss","","Construct a `__m128` with the lowest element set to `a`…",null,[[],["__m128",3]]],[5,"_mm_set1_ps","","Construct a `__m128` with all element set to `a`.",null,[[],["__m128",3]]],[5,"_mm_set_ps1","","Alias for `_mm_set1_ps`",null,[[],["__m128",3]]],[5,"_mm_set_ps","","Construct a `__m128` from four floating point values…",null,[[],["__m128",3]]],[5,"_mm_setr_ps","","Construct a `__m128` from four floating point values…",null,[[],["__m128",3]]],[5,"_mm_setzero_ps","","Construct a `__m128` with all elements initialized to zero.",null,[[],["__m128",3]]],[5,"_MM_SHUFFLE","","A utility function for creating masks to use with Intel…",null,[[]]],[5,"_mm_shuffle_ps","","Shuffles packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_unpackhi_ps","","Unpacks and interleave single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_unpacklo_ps","","Unpacks and interleave single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_movehl_ps","","Combine higher half of `a` and `b`. The highwe half of `b`…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_movelh_ps","","Combine lower half of `a` and `b`. The lower half of `b`…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_movemask_ps","","Returns a mask of the most significant bit of each element…",null,[[["__m128",3]]]],[5,"_mm_load_ss","","Construct a `__m128` with the lowest element read from `p`…",null,[[],["__m128",3]]],[5,"_mm_load1_ps","","Construct a `__m128` by duplicating the value read from…",null,[[],["__m128",3]]],[5,"_mm_load_ps1","","Alias for `_mm_load1_ps`",null,[[],["__m128",3]]],[5,"_mm_load_ps","","Loads four `f32` values from aligned memory into a…",null,[[],["__m128",3]]],[5,"_mm_loadu_ps","","Loads four `f32` values from memory into a `__m128`. There…",null,[[],["__m128",3]]],[5,"_mm_loadr_ps","","Loads four `f32` values from aligned memory into a…",null,[[],["__m128",3]]],[5,"_mm_loadu_si64","","Loads unaligned 64-bits of integer data from memory into…",null,[[],["__m128i",3]]],[5,"_mm_store_ss","","Stores the lowest 32 bit float of `a` into memory.",null,[[["__m128",3]]]],[5,"_mm_store1_ps","","Stores the lowest 32 bit float of `a` repeated four times…",null,[[["__m128",3]]]],[5,"_mm_store_ps1","","Alias for `_mm_store1_ps`",null,[[["__m128",3]]]],[5,"_mm_store_ps","","Stores four 32-bit floats into aligned memory.",null,[[["__m128",3]]]],[5,"_mm_storeu_ps","","Stores four 32-bit floats into memory. There are no…",null,[[["__m128",3]]]],[5,"_mm_storer_ps","","Stores four 32-bit floats into aligned memory in reverse…",null,[[["__m128",3]]]],[5,"_mm_move_ss","","Returns a `__m128` with the first component from `b` and…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_sfence","","Performs a serializing operation on all store-to-memory…",null,[[]]],[5,"_mm_getcsr","","Gets the unsigned 32-bit value of the MXCSR control and…",null,[[]]],[5,"_mm_setcsr","","Sets the MXCSR register with the 32-bit unsigned integer…",null,[[]]],[17,"_MM_EXCEPT_INVALID","","See `_mm_setcsr`",null,null],[17,"_MM_EXCEPT_DENORM","","See `_mm_setcsr`",null,null],[17,"_MM_EXCEPT_DIV_ZERO","","See `_mm_setcsr`",null,null],[17,"_MM_EXCEPT_OVERFLOW","","See `_mm_setcsr`",null,null],[17,"_MM_EXCEPT_UNDERFLOW","","See `_mm_setcsr`",null,null],[17,"_MM_EXCEPT_INEXACT","","See `_mm_setcsr`",null,null],[17,"_MM_EXCEPT_MASK","","See `_MM_GET_EXCEPTION_STATE`",null,null],[17,"_MM_MASK_INVALID","","See `_mm_setcsr`",null,null],[17,"_MM_MASK_DENORM","","See `_mm_setcsr`",null,null],[17,"_MM_MASK_DIV_ZERO","","See `_mm_setcsr`",null,null],[17,"_MM_MASK_OVERFLOW","","See `_mm_setcsr`",null,null],[17,"_MM_MASK_UNDERFLOW","","See `_mm_setcsr`",null,null],[17,"_MM_MASK_INEXACT","","See `_mm_setcsr`",null,null],[17,"_MM_MASK_MASK","","See `_MM_GET_EXCEPTION_MASK`",null,null],[17,"_MM_ROUND_NEAREST","","See `_mm_setcsr`",null,null],[17,"_MM_ROUND_DOWN","","See `_mm_setcsr`",null,null],[17,"_MM_ROUND_UP","","See `_mm_setcsr`",null,null],[17,"_MM_ROUND_TOWARD_ZERO","","See `_mm_setcsr`",null,null],[17,"_MM_ROUND_MASK","","See `_MM_GET_ROUNDING_MODE`",null,null],[17,"_MM_FLUSH_ZERO_MASK","","See `_MM_GET_FLUSH_ZERO_MODE`",null,null],[17,"_MM_FLUSH_ZERO_ON","","See `_mm_setcsr`",null,null],[17,"_MM_FLUSH_ZERO_OFF","","See `_mm_setcsr`",null,null],[5,"_MM_GET_EXCEPTION_MASK","","See `_mm_setcsr`",null,[[]]],[5,"_MM_GET_EXCEPTION_STATE","","See `_mm_setcsr`",null,[[]]],[5,"_MM_GET_FLUSH_ZERO_MODE","","See `_mm_setcsr`",null,[[]]],[5,"_MM_GET_ROUNDING_MODE","","See `_mm_setcsr`",null,[[]]],[5,"_MM_SET_EXCEPTION_MASK","","See `_mm_setcsr`",null,[[]]],[5,"_MM_SET_EXCEPTION_STATE","","See `_mm_setcsr`",null,[[]]],[5,"_MM_SET_FLUSH_ZERO_MODE","","See `_mm_setcsr`",null,[[]]],[5,"_MM_SET_ROUNDING_MODE","","See `_mm_setcsr`",null,[[]]],[17,"_MM_HINT_T0","","See `_mm_prefetch`.",null,null],[17,"_MM_HINT_T1","","See `_mm_prefetch`.",null,null],[17,"_MM_HINT_T2","","See `_mm_prefetch`.",null,null],[17,"_MM_HINT_NTA","","See `_mm_prefetch`.",null,null],[5,"_mm_prefetch","","Fetch the cache line that contains address `p` using the…",null,[[]]],[5,"_mm_undefined_ps","","Returns vector of type __m128 with undefined elements.",null,[[],["__m128",3]]],[5,"_MM_TRANSPOSE4_PS","","Transpose the 4x4 matrix formed by 4 rows of __m128 in…",null,[[["__m128",3]]]],[5,"_mm_stream_ps","","Stores `a` into the memory at `mem_addr` using a…",null,[[["__m128",3]]]],[5,"_mm_pause","","Provides a hint to the processor that the code sequence is…",null,[[]]],[5,"_mm_clflush","","Invalidates and flushes the cache line that contains `p`…",null,[[]]],[5,"_mm_lfence","","Performs a serializing operation on all load-from-memory…",null,[[]]],[5,"_mm_mfence","","Performs a serializing operation on all load-from-memory…",null,[[]]],[5,"_mm_add_epi8","","Adds packed 8-bit integers in `a` and `b`.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_add_epi16","","Adds packed 16-bit integers in `a` and `b`.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_add_epi32","","Adds packed 32-bit integers in `a` and `b`.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_add_epi64","","Adds packed 64-bit integers in `a` and `b`.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_adds_epi8","","Adds packed 8-bit integers in `a` and `b` using saturation.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_adds_epi16","","Adds packed 16-bit integers in `a` and `b` using saturation.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_adds_epu8","","Adds packed unsigned 8-bit integers in `a` and `b` using…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_adds_epu16","","Adds packed unsigned 16-bit integers in `a` and `b` using…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_avg_epu8","","Averages packed unsigned 8-bit integers in `a` and `b`.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_avg_epu16","","Averages packed unsigned 16-bit integers in `a` and `b`.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_madd_epi16","","Multiplies and then horizontally add signed 16 bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_max_epi16","","Compares packed 16-bit integers in `a` and `b`, and…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_max_epu8","","Compares packed unsigned 8-bit integers in `a` and `b`,…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_min_epi16","","Compares packed 16-bit integers in `a` and `b`, and…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_min_epu8","","Compares packed unsigned 8-bit integers in `a` and `b`,…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_mulhi_epi16","","Multiplies the packed 16-bit integers in `a` and `b`.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_mulhi_epu16","","Multiplies the packed unsigned 16-bit integers in `a` and…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_mullo_epi16","","Multiplies the packed 16-bit integers in `a` and `b`.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_mul_epu32","","Multiplies the low unsigned 32-bit integers from each…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_sad_epu8","","Sum the absolute differences of packed unsigned 8-bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_sub_epi8","","Subtracts packed 8-bit integers in `b` from packed 8-bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_sub_epi16","","Subtracts packed 16-bit integers in `b` from packed 16-bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_sub_epi32","","Subtract packed 32-bit integers in `b` from packed 32-bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_sub_epi64","","Subtract packed 64-bit integers in `b` from packed 64-bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_subs_epi8","","Subtract packed 8-bit integers in `b` from packed 8-bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_subs_epi16","","Subtract packed 16-bit integers in `b` from packed 16-bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_subs_epu8","","Subtract packed unsigned 8-bit integers in `b` from packed…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_subs_epu16","","Subtract packed unsigned 16-bit integers in `b` from…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_slli_si128","","Shifts `a` left by `imm8` bytes while shifting in zeros.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_bslli_si128","","Shifts `a` left by `imm8` bytes while shifting in zeros.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_bsrli_si128","","Shifts `a` right by `imm8` bytes while shifting in zeros.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_slli_epi16","","Shifts packed 16-bit integers in `a` left by `imm8` while…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_sll_epi16","","Shifts packed 16-bit integers in `a` left by `count` while…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_slli_epi32","","Shifts packed 32-bit integers in `a` left by `imm8` while…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_sll_epi32","","Shifts packed 32-bit integers in `a` left by `count` while…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_slli_epi64","","Shifts packed 64-bit integers in `a` left by `imm8` while…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_sll_epi64","","Shifts packed 64-bit integers in `a` left by `count` while…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_srai_epi16","","Shifts packed 16-bit integers in `a` right by `imm8` while…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_sra_epi16","","Shifts packed 16-bit integers in `a` right by `count`…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_srai_epi32","","Shifts packed 32-bit integers in `a` right by `imm8` while…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_sra_epi32","","Shifts packed 32-bit integers in `a` right by `count`…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_srli_si128","","Shifts `a` right by `imm8` bytes while shifting in zeros.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_srli_epi16","","Shifts packed 16-bit integers in `a` right by `imm8` while…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_srl_epi16","","Shifts packed 16-bit integers in `a` right by `count`…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_srli_epi32","","Shifts packed 32-bit integers in `a` right by `imm8` while…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_srl_epi32","","Shifts packed 32-bit integers in `a` right by `count`…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_srli_epi64","","Shifts packed 64-bit integers in `a` right by `imm8` while…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_srl_epi64","","Shifts packed 64-bit integers in `a` right by `count`…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_and_si128","","Computes the bitwise AND of 128 bits (representing integer…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_andnot_si128","","Computes the bitwise NOT of 128 bits (representing integer…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_or_si128","","Computes the bitwise OR of 128 bits (representing integer…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_xor_si128","","Computes the bitwise XOR of 128 bits (representing integer…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cmpeq_epi8","","Compares packed 8-bit integers in `a` and `b` for equality.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cmpeq_epi16","","Compares packed 16-bit integers in `a` and `b` for equality.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cmpeq_epi32","","Compares packed 32-bit integers in `a` and `b` for equality.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cmpgt_epi8","","Compares packed 8-bit integers in `a` and `b` for…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cmpgt_epi16","","Compares packed 16-bit integers in `a` and `b` for…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cmpgt_epi32","","Compares packed 32-bit integers in `a` and `b` for…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cmplt_epi8","","Compares packed 8-bit integers in `a` and `b` for less-than.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cmplt_epi16","","Compares packed 16-bit integers in `a` and `b` for…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cmplt_epi32","","Compares packed 32-bit integers in `a` and `b` for…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cvtepi32_pd","","Converts the lower two packed 32-bit integers in `a` to…",null,[[["__m128i",3]],["__m128d",3]]],[5,"_mm_cvtsi32_sd","","Returns `a` with its lower element replaced by `b` after…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cvtepi32_ps","","Converts packed 32-bit integers in `a` to packed…",null,[[["__m128i",3]],["__m128",3]]],[5,"_mm_cvtps_epi32","","Converts packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128i",3]]],[5,"_mm_cvtsi32_si128","","Returns a vector whose lowest element is `a` and all…",null,[[],["__m128i",3]]],[5,"_mm_cvtsi128_si32","","Returns the lowest element of `a`.",null,[[["__m128i",3]]]],[5,"_mm_set_epi64x","","Sets packed 64-bit integers with the supplied values, from…",null,[[],["__m128i",3]]],[5,"_mm_set_epi32","","Sets packed 32-bit integers with the supplied values.",null,[[],["__m128i",3]]],[5,"_mm_set_epi16","","Sets packed 16-bit integers with the supplied values.",null,[[],["__m128i",3]]],[5,"_mm_set_epi8","","Sets packed 8-bit integers with the supplied values.",null,[[],["__m128i",3]]],[5,"_mm_set1_epi64x","","Broadcasts 64-bit integer `a` to all elements.",null,[[],["__m128i",3]]],[5,"_mm_set1_epi32","","Broadcasts 32-bit integer `a` to all elements.",null,[[],["__m128i",3]]],[5,"_mm_set1_epi16","","Broadcasts 16-bit integer `a` to all elements.",null,[[],["__m128i",3]]],[5,"_mm_set1_epi8","","Broadcasts 8-bit integer `a` to all elements.",null,[[],["__m128i",3]]],[5,"_mm_setr_epi32","","Sets packed 32-bit integers with the supplied values in…",null,[[],["__m128i",3]]],[5,"_mm_setr_epi16","","Sets packed 16-bit integers with the supplied values in…",null,[[],["__m128i",3]]],[5,"_mm_setr_epi8","","Sets packed 8-bit integers with the supplied values in…",null,[[],["__m128i",3]]],[5,"_mm_setzero_si128","","Returns a vector with all elements set to zero.",null,[[],["__m128i",3]]],[5,"_mm_loadl_epi64","","Loads 64-bit integer from memory into first element of…",null,[[],["__m128i",3]]],[5,"_mm_load_si128","","Loads 128-bits of integer data from memory into a new…",null,[[],["__m128i",3]]],[5,"_mm_loadu_si128","","Loads 128-bits of integer data from memory into a new…",null,[[],["__m128i",3]]],[5,"_mm_maskmoveu_si128","","Conditionally store 8-bit integer elements from `a` into…",null,[[["__m128i",3]]]],[5,"_mm_store_si128","","Stores 128-bits of integer data from `a` into memory.",null,[[["__m128i",3]]]],[5,"_mm_storeu_si128","","Stores 128-bits of integer data from `a` into memory.",null,[[["__m128i",3]]]],[5,"_mm_storel_epi64","","Stores the lower 64-bit integer `a` to a memory location.",null,[[["__m128i",3]]]],[5,"_mm_stream_si128","","Stores a 128-bit integer vector to a 128-bit aligned…",null,[[["__m128i",3]]]],[5,"_mm_stream_si32","","Stores a 32-bit integer value in the specified memory…",null,[[]]],[5,"_mm_move_epi64","","Returns a vector where the low element is extracted from…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_packs_epi16","","Converts packed 16-bit integers from `a` and `b` to packed…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_packs_epi32","","Converts packed 32-bit integers from `a` and `b` to packed…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_packus_epi16","","Converts packed 16-bit integers from `a` and `b` to packed…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_extract_epi16","","Returns the `imm8` element of `a`.",null,[[["__m128i",3]]]],[5,"_mm_insert_epi16","","Returns a new vector where the `imm8` element of `a` is…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_movemask_epi8","","Returns a mask of the most significant bit of each element…",null,[[["__m128i",3]]]],[5,"_mm_shuffle_epi32","","Shuffles 32-bit integers in `a` using the control in `imm8`.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_shufflehi_epi16","","Shuffles 16-bit integers in the high 64 bits of `a` using…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_shufflelo_epi16","","Shuffles 16-bit integers in the low 64 bits of `a` using…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_unpackhi_epi8","","Unpacks and interleave 8-bit integers from the high half…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_unpackhi_epi16","","Unpacks and interleave 16-bit integers from the high half…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_unpackhi_epi32","","Unpacks and interleave 32-bit integers from the high half…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_unpackhi_epi64","","Unpacks and interleave 64-bit integers from the high half…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_unpacklo_epi8","","Unpacks and interleave 8-bit integers from the low half of…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_unpacklo_epi16","","Unpacks and interleave 16-bit integers from the low half…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_unpacklo_epi32","","Unpacks and interleave 32-bit integers from the low half…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_unpacklo_epi64","","Unpacks and interleave 64-bit integers from the low half…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_add_sd","","Returns a new vector with the low element of `a` replaced…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_add_pd","","Adds packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_div_sd","","Returns a new vector with the low element of `a` replaced…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_div_pd","","Divide packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_max_sd","","Returns a new vector with the low element of `a` replaced…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_max_pd","","Returns a new vector with the maximum values from…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_min_sd","","Returns a new vector with the low element of `a` replaced…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_min_pd","","Returns a new vector with the minimum values from…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mul_sd","","Returns a new vector with the low element of `a` replaced…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mul_pd","","Multiplies packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_sqrt_sd","","Returns a new vector with the low element of `a` replaced…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_sqrt_pd","","Returns a new vector with the square root of each of the…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_sub_sd","","Returns a new vector with the low element of `a` replaced…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_sub_pd","","Subtract packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_and_pd","","Computes the bitwise AND of packed double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_andnot_pd","","Computes the bitwise NOT of `a` and then AND with `b`.",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_or_pd","","Computes the bitwise OR of `a` and `b`.",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_xor_pd","","Computes the bitwise OR of `a` and `b`.",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpeq_sd","","Returns a new vector with the low element of `a` replaced…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmplt_sd","","Returns a new vector with the low element of `a` replaced…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmple_sd","","Returns a new vector with the low element of `a` replaced…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpgt_sd","","Returns a new vector with the low element of `a` replaced…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpge_sd","","Returns a new vector with the low element of `a` replaced…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpord_sd","","Returns a new vector with the low element of `a` replaced…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpunord_sd","","Returns a new vector with the low element of `a` replaced…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpneq_sd","","Returns a new vector with the low element of `a` replaced…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpnlt_sd","","Returns a new vector with the low element of `a` replaced…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpnle_sd","","Returns a new vector with the low element of `a` replaced…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpngt_sd","","Returns a new vector with the low element of `a` replaced…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpnge_sd","","Returns a new vector with the low element of `a` replaced…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpeq_pd","","Compares corresponding elements in `a` and `b` for equality.",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmplt_pd","","Compares corresponding elements in `a` and `b` for…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmple_pd","","Compares corresponding elements in `a` and `b` for…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpgt_pd","","Compares corresponding elements in `a` and `b` for…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpge_pd","","Compares corresponding elements in `a` and `b` for…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpord_pd","","Compares corresponding elements in `a` and `b` to see if…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpunord_pd","","Compares corresponding elements in `a` and `b` to see if…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpneq_pd","","Compares corresponding elements in `a` and `b` for…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpnlt_pd","","Compares corresponding elements in `a` and `b` for…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpnle_pd","","Compares corresponding elements in `a` and `b` for…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpngt_pd","","Compares corresponding elements in `a` and `b` for…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmpnge_pd","","Compares corresponding elements in `a` and `b` for…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_comieq_sd","","Compares the lower element of `a` and `b` for equality.",null,[[["__m128d",3]]]],[5,"_mm_comilt_sd","","Compares the lower element of `a` and `b` for less-than.",null,[[["__m128d",3]]]],[5,"_mm_comile_sd","","Compares the lower element of `a` and `b` for…",null,[[["__m128d",3]]]],[5,"_mm_comigt_sd","","Compares the lower element of `a` and `b` for greater-than.",null,[[["__m128d",3]]]],[5,"_mm_comige_sd","","Compares the lower element of `a` and `b` for…",null,[[["__m128d",3]]]],[5,"_mm_comineq_sd","","Compares the lower element of `a` and `b` for not-equal.",null,[[["__m128d",3]]]],[5,"_mm_ucomieq_sd","","Compares the lower element of `a` and `b` for equality.",null,[[["__m128d",3]]]],[5,"_mm_ucomilt_sd","","Compares the lower element of `a` and `b` for less-than.",null,[[["__m128d",3]]]],[5,"_mm_ucomile_sd","","Compares the lower element of `a` and `b` for…",null,[[["__m128d",3]]]],[5,"_mm_ucomigt_sd","","Compares the lower element of `a` and `b` for greater-than.",null,[[["__m128d",3]]]],[5,"_mm_ucomige_sd","","Compares the lower element of `a` and `b` for…",null,[[["__m128d",3]]]],[5,"_mm_ucomineq_sd","","Compares the lower element of `a` and `b` for not-equal.",null,[[["__m128d",3]]]],[5,"_mm_cvtpd_ps","","Converts packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128",3]]],[5,"_mm_cvtps_pd","","Converts packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128d",3]]],[5,"_mm_cvtpd_epi32","","Converts packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128i",3]]],[5,"_mm_cvtsd_si32","","Converts the lower double-precision (64-bit)…",null,[[["__m128d",3]]]],[5,"_mm_cvtsd_ss","","Converts the lower double-precision (64-bit)…",null,[[["__m128d",3],["__m128",3]],["__m128",3]]],[5,"_mm_cvtsd_f64","","Returns the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]]]],[5,"_mm_cvtss_sd","","Converts the lower single-precision (32-bit)…",null,[[["__m128",3],["__m128d",3]],["__m128d",3]]],[5,"_mm_cvttpd_epi32","","Converts packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128i",3]]],[5,"_mm_cvttsd_si32","","Converts the lower double-precision (64-bit)…",null,[[["__m128d",3]]]],[5,"_mm_cvttps_epi32","","Converts packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128i",3]]],[5,"_mm_set_sd","","Copies double-precision (64-bit) floating-point element…",null,[[],["__m128d",3]]],[5,"_mm_set1_pd","","Broadcasts double-precision (64-bit) floating-point value…",null,[[],["__m128d",3]]],[5,"_mm_set_pd1","","Broadcasts double-precision (64-bit) floating-point value…",null,[[],["__m128d",3]]],[5,"_mm_set_pd","","Sets packed double-precision (64-bit) floating-point…",null,[[],["__m128d",3]]],[5,"_mm_setr_pd","","Sets packed double-precision (64-bit) floating-point…",null,[[],["__m128d",3]]],[5,"_mm_setzero_pd","","Returns packed double-precision (64-bit) floating-point…",null,[[],["__m128d",3]]],[5,"_mm_movemask_pd","","Returns a mask of the most significant bit of each element…",null,[[["__m128d",3]]]],[5,"_mm_load_pd","","Loads 128-bits (composed of 2 packed double-precision…",null,[[],["__m128d",3]]],[5,"_mm_load_sd","","Loads a 64-bit double-precision value to the low element…",null,[[],["__m128d",3]]],[5,"_mm_loadh_pd","","Loads a double-precision value into the high-order bits of…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_loadl_pd","","Loads a double-precision value into the low-order bits of…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_stream_pd","","Stores a 128-bit floating point vector of `[2 x double]`…",null,[[["__m128d",3]]]],[5,"_mm_store_sd","","Stores the lower 64 bits of a 128-bit vector of `[2 x…",null,[[["__m128d",3]]]],[5,"_mm_store_pd","","Stores 128-bits (composed of 2 packed double-precision…",null,[[["__m128d",3]]]],[5,"_mm_storeu_pd","","Stores 128-bits (composed of 2 packed double-precision…",null,[[["__m128d",3]]]],[5,"_mm_store1_pd","","Stores the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]]]],[5,"_mm_store_pd1","","Stores the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]]]],[5,"_mm_storer_pd","","Stores 2 double-precision (64-bit) floating-point elements…",null,[[["__m128d",3]]]],[5,"_mm_storeh_pd","","Stores the upper 64 bits of a 128-bit vector of `[2 x…",null,[[["__m128d",3]]]],[5,"_mm_storel_pd","","Stores the lower 64 bits of a 128-bit vector of `[2 x…",null,[[["__m128d",3]]]],[5,"_mm_load1_pd","","Loads a double-precision (64-bit) floating-point element…",null,[[],["__m128d",3]]],[5,"_mm_load_pd1","","Loads a double-precision (64-bit) floating-point element…",null,[[],["__m128d",3]]],[5,"_mm_loadr_pd","","Loads 2 double-precision (64-bit) floating-point elements…",null,[[],["__m128d",3]]],[5,"_mm_loadu_pd","","Loads 128-bits (composed of 2 packed double-precision…",null,[[],["__m128d",3]]],[5,"_mm_shuffle_pd","","Constructs a 128-bit floating-point vector of `[2 x…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_move_sd","","Constructs a 128-bit floating-point vector of `[2 x…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_castpd_ps","","Casts a 128-bit floating-point vector of `[2 x double]`…",null,[[["__m128d",3]],["__m128",3]]],[5,"_mm_castpd_si128","","Casts a 128-bit floating-point vector of `[2 x double]`…",null,[[["__m128d",3]],["__m128i",3]]],[5,"_mm_castps_pd","","Casts a 128-bit floating-point vector of `[4 x float]`…",null,[[["__m128",3]],["__m128d",3]]],[5,"_mm_castps_si128","","Casts a 128-bit floating-point vector of `[4 x float]`…",null,[[["__m128",3]],["__m128i",3]]],[5,"_mm_castsi128_pd","","Casts a 128-bit integer vector into a 128-bit…",null,[[["__m128i",3]],["__m128d",3]]],[5,"_mm_castsi128_ps","","Casts a 128-bit integer vector into a 128-bit…",null,[[["__m128i",3]],["__m128",3]]],[5,"_mm_undefined_pd","","Returns vector of type __m128d with undefined elements.",null,[[],["__m128d",3]]],[5,"_mm_undefined_si128","","Returns vector of type __m128i with undefined elements.",null,[[],["__m128i",3]]],[5,"_mm_unpackhi_pd","","The resulting `__m128d` element is composed by the…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_unpacklo_pd","","The resulting `__m128d` element is composed by the…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_addsub_ps","","Alternatively add and subtract packed single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_addsub_pd","","Alternatively add and subtract packed double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_hadd_pd","","Horizontally adds adjacent pairs of double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_hadd_ps","","Horizontally adds adjacent pairs of single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_hsub_pd","","Horizontally subtract adjacent pairs of double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_hsub_ps","","Horizontally adds adjacent pairs of single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_lddqu_si128","","Loads 128-bits of integer data from unaligned memory. This…",null,[[],["__m128i",3]]],[5,"_mm_movedup_pd","","Duplicate the low double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_loaddup_pd","","Loads a double-precision (64-bit) floating-point element…",null,[[],["__m128d",3]]],[5,"_mm_movehdup_ps","","Duplicate odd-indexed single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_moveldup_ps","","Duplicate even-indexed single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_abs_epi8","","Computes the absolute value of packed 8-bit signed…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_abs_epi16","","Computes the absolute value of each of the packed 16-bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_abs_epi32","","Computes the absolute value of each of the packed 32-bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_shuffle_epi8","","Shuffles bytes from `a` according to the content of `b`.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_alignr_epi8","","Concatenate 16-byte blocks in `a` and `b` into a 32-byte…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_hadd_epi16","","Horizontally adds the adjacent pairs of values contained…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_hadds_epi16","","Horizontally adds the adjacent pairs of values contained…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_hadd_epi32","","Horizontally adds the adjacent pairs of values contained…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_hsub_epi16","","Horizontally subtract the adjacent pairs of values…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_hsubs_epi16","","Horizontally subtract the adjacent pairs of values…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_hsub_epi32","","Horizontally subtract the adjacent pairs of values…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_maddubs_epi16","","Multiplies corresponding pairs of packed 8-bit unsigned…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_mulhrs_epi16","","Multiplies packed 16-bit signed integer values, truncate…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_sign_epi8","","Negates packed 8-bit integers in `a` when the…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_sign_epi16","","Negates packed 16-bit integers in `a` when the…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_sign_epi32","","Negates packed 32-bit integers in `a` when the…",null,[[["__m128i",3]],["__m128i",3]]],[17,"_MM_FROUND_TO_NEAREST_INT","","round to nearest",null,null],[17,"_MM_FROUND_TO_NEG_INF","","round down",null,null],[17,"_MM_FROUND_TO_POS_INF","","round up",null,null],[17,"_MM_FROUND_TO_ZERO","","truncate",null,null],[17,"_MM_FROUND_CUR_DIRECTION","","use MXCSR.RC; see `vendor::_MM_SET_ROUNDING_MODE`",null,null],[17,"_MM_FROUND_RAISE_EXC","","do not suppress exceptions",null,null],[17,"_MM_FROUND_NO_EXC","","suppress exceptions",null,null],[17,"_MM_FROUND_NINT","","round to nearest and do not suppress exceptions",null,null],[17,"_MM_FROUND_FLOOR","","round down and do not suppress exceptions",null,null],[17,"_MM_FROUND_CEIL","","round up and do not suppress exceptions",null,null],[17,"_MM_FROUND_TRUNC","","truncate and do not suppress exceptions",null,null],[17,"_MM_FROUND_RINT","","use MXCSR.RC and do not suppress exceptions; see…",null,null],[17,"_MM_FROUND_NEARBYINT","","use MXCSR.RC and suppress exceptions; see…",null,null],[5,"_mm_blendv_epi8","","Blend packed 8-bit integers from `a` and `b` using `mask`",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_blend_epi16","","Blend packed 16-bit integers from `a` and `b` using the…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_blendv_pd","","Blend packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_blendv_ps","","Blend packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_blend_pd","","Blend packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_blend_ps","","Blend packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_extract_ps","","Extracts a single-precision (32-bit) floating-point…",null,[[["__m128",3]]]],[5,"_mm_extract_epi8","","Extracts an 8-bit integer from `a`, selected with `imm8`.…",null,[[["__m128i",3]]]],[5,"_mm_extract_epi32","","Extracts an 32-bit integer from `a` selected with `imm8`",null,[[["__m128i",3]]]],[5,"_mm_insert_ps","","Select a single value in `a` to store at some position in…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_insert_epi8","","Returns a copy of `a` with the 8-bit integer from `i`…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_insert_epi32","","Returns a copy of `a` with the 32-bit integer from `i`…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_max_epi8","","Compares packed 8-bit integers in `a` and `b` and returns…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_max_epu16","","Compares packed unsigned 16-bit integers in `a` and `b`,…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_max_epi32","","Compares packed 32-bit integers in `a` and `b`, and…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_max_epu32","","Compares packed unsigned 32-bit integers in `a` and `b`,…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_min_epi8","","Compares packed 8-bit integers in `a` and `b` and returns…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_min_epu16","","Compares packed unsigned 16-bit integers in `a` and `b`,…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_min_epi32","","Compares packed 32-bit integers in `a` and `b`, and…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_min_epu32","","Compares packed unsigned 32-bit integers in `a` and `b`,…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_packus_epi32","","Converts packed 32-bit integers from `a` and `b` to packed…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cmpeq_epi64","","Compares packed 64-bit integers in `a` and `b` for equality",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cvtepi8_epi16","","Sign extend packed 8-bit integers in `a` to packed 16-bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cvtepi8_epi32","","Sign extend packed 8-bit integers in `a` to packed 32-bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cvtepi8_epi64","","Sign extend packed 8-bit integers in the low 8 bytes of…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cvtepi16_epi32","","Sign extend packed 16-bit integers in `a` to packed 32-bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cvtepi16_epi64","","Sign extend packed 16-bit integers in `a` to packed 64-bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cvtepi32_epi64","","Sign extend packed 32-bit integers in `a` to packed 64-bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cvtepu8_epi16","","Zeroes extend packed unsigned 8-bit integers in `a` to…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cvtepu8_epi32","","Zeroes extend packed unsigned 8-bit integers in `a` to…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cvtepu8_epi64","","Zeroes extend packed unsigned 8-bit integers in `a` to…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cvtepu16_epi32","","Zeroes extend packed unsigned 16-bit integers in `a` to…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cvtepu16_epi64","","Zeroes extend packed unsigned 16-bit integers in `a` to…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cvtepu32_epi64","","Zeroes extend packed unsigned 32-bit integers in `a` to…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_dp_pd","","Returns the dot product of two __m128d vectors.",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_dp_ps","","Returns the dot product of two __m128 vectors.",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_floor_pd","","Round the packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_floor_ps","","Round the packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_floor_sd","","Round the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_floor_ss","","Round the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_ceil_pd","","Round the packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_ceil_ps","","Round the packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_ceil_sd","","Round the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_ceil_ss","","Round the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_round_pd","","Round the packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_round_ps","","Round the packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_round_sd","","Round the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_round_ss","","Round the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_minpos_epu16","","Finds the minimum unsigned 16-bit element in the 128-bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_mul_epi32","","Multiplies the low 32-bit integers from each packed 64-bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_mullo_epi32","","Multiplies the packed 32-bit integers in `a` and `b`,…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_mpsadbw_epu8","","Subtracts 8-bit unsigned integer values and computes the…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_testz_si128","","Tests whether the specified bits in a 128-bit integer…",null,[[["__m128i",3]]]],[5,"_mm_testc_si128","","Tests whether the specified bits in a 128-bit integer…",null,[[["__m128i",3]]]],[5,"_mm_testnzc_si128","","Tests whether the specified bits in a 128-bit integer…",null,[[["__m128i",3]]]],[5,"_mm_test_all_zeros","","Tests whether the specified bits in a 128-bit integer…",null,[[["__m128i",3]]]],[5,"_mm_test_all_ones","","Tests whether the specified bits in `a` 128-bit integer…",null,[[["__m128i",3]]]],[5,"_mm_test_mix_ones_zeros","","Tests whether the specified bits in a 128-bit integer…",null,[[["__m128i",3]]]],[17,"_SIDD_UBYTE_OPS","","String contains unsigned 8-bit characters (Default)",null,null],[17,"_SIDD_UWORD_OPS","","String contains unsigned 16-bit characters",null,null],[17,"_SIDD_SBYTE_OPS","","String contains signed 8-bit characters",null,null],[17,"_SIDD_SWORD_OPS","","String contains unsigned 16-bit characters",null,null],[17,"_SIDD_CMP_EQUAL_ANY","","For each character in `a`, find if it is in `b` (Default)",null,null],[17,"_SIDD_CMP_RANGES","","For each character in `a`, determine if `b[0] <= c <= b[1]…",null,null],[17,"_SIDD_CMP_EQUAL_EACH","","The strings defined by `a` and `b` are equal",null,null],[17,"_SIDD_CMP_EQUAL_ORDERED","","Search for the defined substring in the target",null,null],[17,"_SIDD_POSITIVE_POLARITY","","Do not negate results (Default)",null,null],[17,"_SIDD_NEGATIVE_POLARITY","","Negates results",null,null],[17,"_SIDD_MASKED_POSITIVE_POLARITY","","Do not negate results before the end of the string",null,null],[17,"_SIDD_MASKED_NEGATIVE_POLARITY","","Negates results only before the end of the string",null,null],[17,"_SIDD_LEAST_SIGNIFICANT","","Index only: return the least significant bit (Default)",null,null],[17,"_SIDD_MOST_SIGNIFICANT","","Index only: return the most significant bit",null,null],[17,"_SIDD_BIT_MASK","","Mask only: return the bit mask",null,null],[17,"_SIDD_UNIT_MASK","","Mask only: return the byte mask",null,null],[5,"_mm_cmpistrm","","Compares packed strings with implicit lengths in `a` and…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cmpistri","","Compares packed strings with implicit lengths in `a` and…",null,[[["__m128i",3]]]],[5,"_mm_cmpistrz","","Compares packed strings with implicit lengths in `a` and…",null,[[["__m128i",3]]]],[5,"_mm_cmpistrc","","Compares packed strings with implicit lengths in `a` and…",null,[[["__m128i",3]]]],[5,"_mm_cmpistrs","","Compares packed strings with implicit lengths in `a` and…",null,[[["__m128i",3]]]],[5,"_mm_cmpistro","","Compares packed strings with implicit lengths in `a` and…",null,[[["__m128i",3]]]],[5,"_mm_cmpistra","","Compares packed strings with implicit lengths in `a` and…",null,[[["__m128i",3]]]],[5,"_mm_cmpestrm","","Compares packed strings in `a` and `b` with lengths `la`…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_cmpestri","","Compares packed strings `a` and `b` with lengths `la` and…",null,[[["__m128i",3]]]],[5,"_mm_cmpestrz","","Compares packed strings in `a` and `b` with lengths `la`…",null,[[["__m128i",3]]]],[5,"_mm_cmpestrc","","Compares packed strings in `a` and `b` with lengths `la`…",null,[[["__m128i",3]]]],[5,"_mm_cmpestrs","","Compares packed strings in `a` and `b` with lengths `la`…",null,[[["__m128i",3]]]],[5,"_mm_cmpestro","","Compares packed strings in `a` and `b` with lengths `la`…",null,[[["__m128i",3]]]],[5,"_mm_cmpestra","","Compares packed strings in `a` and `b` with lengths `la`…",null,[[["__m128i",3]]]],[5,"_mm_crc32_u8","","Starting with the initial value in `crc`, return the…",null,[[]]],[5,"_mm_crc32_u16","","Starting with the initial value in `crc`, return the…",null,[[]]],[5,"_mm_crc32_u32","","Starting with the initial value in `crc`, return the…",null,[[]]],[5,"_mm_cmpgt_epi64","","Compares packed 64-bit integers in `a` and `b` for…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm256_add_pd","","Adds packed double-precision (64-bit) floating-point…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_add_ps","","Adds packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_and_pd","","Computes the bitwise AND of a packed double-precision…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_and_ps","","Computes the bitwise AND of packed single-precision…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_or_pd","","Computes the bitwise OR packed double-precision (64-bit)…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_or_ps","","Computes the bitwise OR packed single-precision (32-bit)…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_shuffle_pd","","Shuffles double-precision (64-bit) floating-point elements…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_shuffle_ps","","Shuffles single-precision (32-bit) floating-point elements…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_andnot_pd","","Computes the bitwise NOT of packed double-precision…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_andnot_ps","","Computes the bitwise NOT of packed single-precision…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_max_pd","","Compares packed double-precision (64-bit) floating-point…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_max_ps","","Compares packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_min_pd","","Compares packed double-precision (64-bit) floating-point…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_min_ps","","Compares packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_mul_pd","","Multiplies packed double-precision (64-bit) floating-point…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_mul_ps","","Multiplies packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_addsub_pd","","Alternatively adds and subtracts packed double-precision…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_addsub_ps","","Alternatively adds and subtracts packed single-precision…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_sub_pd","","Subtracts packed double-precision (64-bit) floating-point…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_sub_ps","","Subtracts packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_div_ps","","Computes the division of each of the 8 packed 32-bit…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_div_pd","","Computes the division of each of the 4 packed 64-bit…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_round_pd","","Rounds packed double-precision (64-bit) floating point…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_ceil_pd","","Rounds packed double-precision (64-bit) floating point…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_floor_pd","","Rounds packed double-precision (64-bit) floating point…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_round_ps","","Rounds packed single-precision (32-bit) floating point…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_ceil_ps","","Rounds packed single-precision (32-bit) floating point…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_floor_ps","","Rounds packed single-precision (32-bit) floating point…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_sqrt_ps","","Returns the square root of packed single-precision…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_sqrt_pd","","Returns the square root of packed double-precision…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_blend_pd","","Blends packed double-precision (64-bit) floating-point…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_blend_ps","","Blends packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_blendv_pd","","Blends packed double-precision (64-bit) floating-point…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_blendv_ps","","Blends packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_dp_ps","","Conditionally multiplies the packed single-precision…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_hadd_pd","","Horizontal addition of adjacent pairs in the two packed…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_hadd_ps","","Horizontal addition of adjacent pairs in the two packed…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_hsub_pd","","Horizontal subtraction of adjacent pairs in the two packed…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_hsub_ps","","Horizontal subtraction of adjacent pairs in the two packed…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_xor_pd","","Computes the bitwise XOR of packed double-precision…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_xor_ps","","Computes the bitwise XOR of packed single-precision…",null,[[["__m256",3]],["__m256",3]]],[17,"_CMP_EQ_OQ","","Equal (ordered, non-signaling)",null,null],[17,"_CMP_LT_OS","","Less-than (ordered, signaling)",null,null],[17,"_CMP_LE_OS","","Less-than-or-equal (ordered, signaling)",null,null],[17,"_CMP_UNORD_Q","","Unordered (non-signaling)",null,null],[17,"_CMP_NEQ_UQ","","Not-equal (unordered, non-signaling)",null,null],[17,"_CMP_NLT_US","","Not-less-than (unordered, signaling)",null,null],[17,"_CMP_NLE_US","","Not-less-than-or-equal (unordered, signaling)",null,null],[17,"_CMP_ORD_Q","","Ordered (non-signaling)",null,null],[17,"_CMP_EQ_UQ","","Equal (unordered, non-signaling)",null,null],[17,"_CMP_NGE_US","","Not-greater-than-or-equal (unordered, signaling)",null,null],[17,"_CMP_NGT_US","","Not-greater-than (unordered, signaling)",null,null],[17,"_CMP_FALSE_OQ","","False (ordered, non-signaling)",null,null],[17,"_CMP_NEQ_OQ","","Not-equal (ordered, non-signaling)",null,null],[17,"_CMP_GE_OS","","Greater-than-or-equal (ordered, signaling)",null,null],[17,"_CMP_GT_OS","","Greater-than (ordered, signaling)",null,null],[17,"_CMP_TRUE_UQ","","True (unordered, non-signaling)",null,null],[17,"_CMP_EQ_OS","","Equal (ordered, signaling)",null,null],[17,"_CMP_LT_OQ","","Less-than (ordered, non-signaling)",null,null],[17,"_CMP_LE_OQ","","Less-than-or-equal (ordered, non-signaling)",null,null],[17,"_CMP_UNORD_S","","Unordered (signaling)",null,null],[17,"_CMP_NEQ_US","","Not-equal (unordered, signaling)",null,null],[17,"_CMP_NLT_UQ","","Not-less-than (unordered, non-signaling)",null,null],[17,"_CMP_NLE_UQ","","Not-less-than-or-equal (unordered, non-signaling)",null,null],[17,"_CMP_ORD_S","","Ordered (signaling)",null,null],[17,"_CMP_EQ_US","","Equal (unordered, signaling)",null,null],[17,"_CMP_NGE_UQ","","Not-greater-than-or-equal (unordered, non-signaling)",null,null],[17,"_CMP_NGT_UQ","","Not-greater-than (unordered, non-signaling)",null,null],[17,"_CMP_FALSE_OS","","False (ordered, signaling)",null,null],[17,"_CMP_NEQ_OS","","Not-equal (ordered, signaling)",null,null],[17,"_CMP_GE_OQ","","Greater-than-or-equal (ordered, non-signaling)",null,null],[17,"_CMP_GT_OQ","","Greater-than (ordered, non-signaling)",null,null],[17,"_CMP_TRUE_US","","True (unordered, signaling)",null,null],[5,"_mm_cmp_pd","","Compares packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm256_cmp_pd","","Compares packed double-precision (64-bit) floating-point…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm_cmp_ps","","Compares packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm256_cmp_ps","","Compares packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm_cmp_sd","","Compares the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cmp_ss","","Compares the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm256_cvtepi32_pd","","Converts packed 32-bit integers in `a` to packed…",null,[[["__m128i",3]],["__m256d",3]]],[5,"_mm256_cvtepi32_ps","","Converts packed 32-bit integers in `a` to packed…",null,[[["__m256i",3]],["__m256",3]]],[5,"_mm256_cvtpd_ps","","Converts packed double-precision (64-bit) floating-point…",null,[[["__m256d",3]],["__m128",3]]],[5,"_mm256_cvtps_epi32","","Converts packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m256i",3]]],[5,"_mm256_cvtps_pd","","Converts packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m256d",3]]],[5,"_mm256_cvttpd_epi32","","Converts packed double-precision (64-bit) floating-point…",null,[[["__m256d",3]],["__m128i",3]]],[5,"_mm256_cvtpd_epi32","","Converts packed double-precision (64-bit) floating-point…",null,[[["__m256d",3]],["__m128i",3]]],[5,"_mm256_cvttps_epi32","","Converts packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m256i",3]]],[5,"_mm256_extractf128_ps","","Extracts 128 bits (composed of 4 packed single-precision…",null,[[["__m256",3]],["__m128",3]]],[5,"_mm256_extractf128_pd","","Extracts 128 bits (composed of 2 packed double-precision…",null,[[["__m256d",3]],["__m128d",3]]],[5,"_mm256_extractf128_si256","","Extracts 128 bits (composed of integer data) from `a`,…",null,[[["__m256i",3]],["__m128i",3]]],[5,"_mm256_zeroall","","Zeroes the contents of all XMM or YMM registers.",null,[[]]],[5,"_mm256_zeroupper","","Zeroes the upper 128 bits of all YMM registers; the lower…",null,[[]]],[5,"_mm256_permutevar_ps","","Shuffles single-precision (32-bit) floating-point elements…",null,[[["__m256i",3],["__m256",3]],["__m256",3]]],[5,"_mm_permutevar_ps","","Shuffles single-precision (32-bit) floating-point elements…",null,[[["__m128i",3],["__m128",3]],["__m128",3]]],[5,"_mm256_permute_ps","","Shuffles single-precision (32-bit) floating-point elements…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm_permute_ps","","Shuffles single-precision (32-bit) floating-point elements…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm256_permutevar_pd","","Shuffles double-precision (64-bit) floating-point elements…",null,[[["__m256d",3],["__m256i",3]],["__m256d",3]]],[5,"_mm_permutevar_pd","","Shuffles double-precision (64-bit) floating-point elements…",null,[[["__m128i",3],["__m128d",3]],["__m128d",3]]],[5,"_mm256_permute_pd","","Shuffles double-precision (64-bit) floating-point elements…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm_permute_pd","","Shuffles double-precision (64-bit) floating-point elements…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm256_permute2f128_ps","","Shuffles 256 bits (composed of 8 packed single-precision…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_permute2f128_pd","","Shuffles 256 bits (composed of 4 packed double-precision…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_permute2f128_si256","","Shuffles 128-bits (composed of integer data) selected by…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_broadcast_ss","","Broadcasts a single-precision (32-bit) floating-point…",null,[[],["__m256",3]]],[5,"_mm_broadcast_ss","","Broadcasts a single-precision (32-bit) floating-point…",null,[[],["__m128",3]]],[5,"_mm256_broadcast_sd","","Broadcasts a double-precision (64-bit) floating-point…",null,[[],["__m256d",3]]],[5,"_mm256_broadcast_ps","","Broadcasts 128 bits from memory (composed of 4 packed…",null,[[["__m128",3]],["__m256",3]]],[5,"_mm256_broadcast_pd","","Broadcasts 128 bits from memory (composed of 2 packed…",null,[[["__m128d",3]],["__m256d",3]]],[5,"_mm256_insertf128_ps","","Copies `a` to result, then inserts 128 bits (composed of 4…",null,[[["__m128",3],["__m256",3]],["__m256",3]]],[5,"_mm256_insertf128_pd","","Copies `a` to result, then inserts 128 bits (composed of 2…",null,[[["__m256d",3],["__m128d",3]],["__m256d",3]]],[5,"_mm256_insertf128_si256","","Copies `a` to result, then inserts 128 bits from `b` into…",null,[[["__m256i",3],["__m128i",3]],["__m256i",3]]],[5,"_mm256_insert_epi8","","Copies `a` to result, and inserts the 8-bit integer `i`…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_insert_epi16","","Copies `a` to result, and inserts the 16-bit integer `i`…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_insert_epi32","","Copies `a` to result, and inserts the 32-bit integer `i`…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_load_pd","","Loads 256-bits (composed of 4 packed double-precision…",null,[[],["__m256d",3]]],[5,"_mm256_store_pd","","Stores 256-bits (composed of 4 packed double-precision…",null,[[["__m256d",3]]]],[5,"_mm256_load_ps","","Loads 256-bits (composed of 8 packed single-precision…",null,[[],["__m256",3]]],[5,"_mm256_store_ps","","Stores 256-bits (composed of 8 packed single-precision…",null,[[["__m256",3]]]],[5,"_mm256_loadu_pd","","Loads 256-bits (composed of 4 packed double-precision…",null,[[],["__m256d",3]]],[5,"_mm256_storeu_pd","","Stores 256-bits (composed of 4 packed double-precision…",null,[[["__m256d",3]]]],[5,"_mm256_loadu_ps","","Loads 256-bits (composed of 8 packed single-precision…",null,[[],["__m256",3]]],[5,"_mm256_storeu_ps","","Stores 256-bits (composed of 8 packed single-precision…",null,[[["__m256",3]]]],[5,"_mm256_load_si256","","Loads 256-bits of integer data from memory into result.…",null,[[],["__m256i",3]]],[5,"_mm256_store_si256","","Stores 256-bits of integer data from `a` into memory.…",null,[[["__m256i",3]]]],[5,"_mm256_loadu_si256","","Loads 256-bits of integer data from memory into result.…",null,[[],["__m256i",3]]],[5,"_mm256_storeu_si256","","Stores 256-bits of integer data from `a` into memory.…",null,[[["__m256i",3]]]],[5,"_mm256_maskload_pd","","Loads packed double-precision (64-bit) floating-point…",null,[[["__m256i",3]],["__m256d",3]]],[5,"_mm256_maskstore_pd","","Stores packed double-precision (64-bit) floating-point…",null,[[["__m256i",3],["__m256d",3]]]],[5,"_mm_maskload_pd","","Loads packed double-precision (64-bit) floating-point…",null,[[["__m128i",3]],["__m128d",3]]],[5,"_mm_maskstore_pd","","Stores packed double-precision (64-bit) floating-point…",null,[[["__m128d",3],["__m128i",3]]]],[5,"_mm256_maskload_ps","","Loads packed single-precision (32-bit) floating-point…",null,[[["__m256i",3]],["__m256",3]]],[5,"_mm256_maskstore_ps","","Stores packed single-precision (32-bit) floating-point…",null,[[["__m256i",3],["__m256",3]]]],[5,"_mm_maskload_ps","","Loads packed single-precision (32-bit) floating-point…",null,[[["__m128i",3]],["__m128",3]]],[5,"_mm_maskstore_ps","","Stores packed single-precision (32-bit) floating-point…",null,[[["__m128",3],["__m128i",3]]]],[5,"_mm256_movehdup_ps","","Duplicate odd-indexed single-precision (32-bit)…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_moveldup_ps","","Duplicate even-indexed single-precision (32-bit)…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_movedup_pd","","Duplicate even-indexed double-precision (64-bit)…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_lddqu_si256","","Loads 256-bits of integer data from unaligned memory into…",null,[[],["__m256i",3]]],[5,"_mm256_stream_si256","","Moves integer data from a 256-bit integer vector to a…",null,[[["__m256i",3]]]],[5,"_mm256_stream_pd","","Moves double-precision values from a 256-bit vector of `[4…",null,[[["__m256d",3]]]],[5,"_mm256_stream_ps","","Moves single-precision floating point values from a…",null,[[["__m256",3]]]],[5,"_mm256_rcp_ps","","Computes the approximate reciprocal of packed…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_rsqrt_ps","","Computes the approximate reciprocal square root of packed…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_unpackhi_pd","","Unpacks and interleave double-precision (64-bit)…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_unpackhi_ps","","Unpacks and interleave single-precision (32-bit)…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_unpacklo_pd","","Unpacks and interleave double-precision (64-bit)…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_unpacklo_ps","","Unpacks and interleave single-precision (32-bit)…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm256_testz_si256","","Computes the bitwise AND of 256 bits (representing integer…",null,[[["__m256i",3]]]],[5,"_mm256_testc_si256","","Computes the bitwise AND of 256 bits (representing integer…",null,[[["__m256i",3]]]],[5,"_mm256_testnzc_si256","","Computes the bitwise AND of 256 bits (representing integer…",null,[[["__m256i",3]]]],[5,"_mm256_testz_pd","","Computes the bitwise AND of 256 bits (representing…",null,[[["__m256d",3]]]],[5,"_mm256_testc_pd","","Computes the bitwise AND of 256 bits (representing…",null,[[["__m256d",3]]]],[5,"_mm256_testnzc_pd","","Computes the bitwise AND of 256 bits (representing…",null,[[["__m256d",3]]]],[5,"_mm_testz_pd","","Computes the bitwise AND of 128 bits (representing…",null,[[["__m128d",3]]]],[5,"_mm_testc_pd","","Computes the bitwise AND of 128 bits (representing…",null,[[["__m128d",3]]]],[5,"_mm_testnzc_pd","","Computes the bitwise AND of 128 bits (representing…",null,[[["__m128d",3]]]],[5,"_mm256_testz_ps","","Computes the bitwise AND of 256 bits (representing…",null,[[["__m256",3]]]],[5,"_mm256_testc_ps","","Computes the bitwise AND of 256 bits (representing…",null,[[["__m256",3]]]],[5,"_mm256_testnzc_ps","","Computes the bitwise AND of 256 bits (representing…",null,[[["__m256",3]]]],[5,"_mm_testz_ps","","Computes the bitwise AND of 128 bits (representing…",null,[[["__m128",3]]]],[5,"_mm_testc_ps","","Computes the bitwise AND of 128 bits (representing…",null,[[["__m128",3]]]],[5,"_mm_testnzc_ps","","Computes the bitwise AND of 128 bits (representing…",null,[[["__m128",3]]]],[5,"_mm256_movemask_pd","","Sets each bit of the returned mask based on the most…",null,[[["__m256d",3]]]],[5,"_mm256_movemask_ps","","Sets each bit of the returned mask based on the most…",null,[[["__m256",3]]]],[5,"_mm256_setzero_pd","","Returns vector of type __m256d with all elements set to…",null,[[],["__m256d",3]]],[5,"_mm256_setzero_ps","","Returns vector of type __m256 with all elements set to zero.",null,[[],["__m256",3]]],[5,"_mm256_setzero_si256","","Returns vector of type __m256i with all elements set to…",null,[[],["__m256i",3]]],[5,"_mm256_set_pd","","Sets packed double-precision (64-bit) floating-point…",null,[[],["__m256d",3]]],[5,"_mm256_set_ps","","Sets packed single-precision (32-bit) floating-point…",null,[[],["__m256",3]]],[5,"_mm256_set_epi8","","Sets packed 8-bit integers in returned vector with the…",null,[[],["__m256i",3]]],[5,"_mm256_set_epi16","","Sets packed 16-bit integers in returned vector with the…",null,[[],["__m256i",3]]],[5,"_mm256_set_epi32","","Sets packed 32-bit integers in returned vector with the…",null,[[],["__m256i",3]]],[5,"_mm256_set_epi64x","","Sets packed 64-bit integers in returned vector with the…",null,[[],["__m256i",3]]],[5,"_mm256_setr_pd","","Sets packed double-precision (64-bit) floating-point…",null,[[],["__m256d",3]]],[5,"_mm256_setr_ps","","Sets packed single-precision (32-bit) floating-point…",null,[[],["__m256",3]]],[5,"_mm256_setr_epi8","","Sets packed 8-bit integers in returned vector with the…",null,[[],["__m256i",3]]],[5,"_mm256_setr_epi16","","Sets packed 16-bit integers in returned vector with the…",null,[[],["__m256i",3]]],[5,"_mm256_setr_epi32","","Sets packed 32-bit integers in returned vector with the…",null,[[],["__m256i",3]]],[5,"_mm256_setr_epi64x","","Sets packed 64-bit integers in returned vector with the…",null,[[],["__m256i",3]]],[5,"_mm256_set1_pd","","Broadcasts double-precision (64-bit) floating-point value…",null,[[],["__m256d",3]]],[5,"_mm256_set1_ps","","Broadcasts single-precision (32-bit) floating-point value…",null,[[],["__m256",3]]],[5,"_mm256_set1_epi8","","Broadcasts 8-bit integer `a` to all elements of returned…",null,[[],["__m256i",3]]],[5,"_mm256_set1_epi16","","Broadcasts 16-bit integer `a` to all all elements of…",null,[[],["__m256i",3]]],[5,"_mm256_set1_epi32","","Broadcasts 32-bit integer `a` to all elements of returned…",null,[[],["__m256i",3]]],[5,"_mm256_set1_epi64x","","Broadcasts 64-bit integer `a` to all elements of returned…",null,[[],["__m256i",3]]],[5,"_mm256_castpd_ps","","Cast vector of type __m256d to type __m256.",null,[[["__m256d",3]],["__m256",3]]],[5,"_mm256_castps_pd","","Cast vector of type __m256 to type __m256d.",null,[[["__m256",3]],["__m256d",3]]],[5,"_mm256_castps_si256","","Casts vector of type __m256 to type __m256i.",null,[[["__m256",3]],["__m256i",3]]],[5,"_mm256_castsi256_ps","","Casts vector of type __m256i to type __m256.",null,[[["__m256i",3]],["__m256",3]]],[5,"_mm256_castpd_si256","","Casts vector of type __m256d to type __m256i.",null,[[["__m256d",3]],["__m256i",3]]],[5,"_mm256_castsi256_pd","","Casts vector of type __m256i to type __m256d.",null,[[["__m256i",3]],["__m256d",3]]],[5,"_mm256_castps256_ps128","","Casts vector of type __m256 to type __m128.",null,[[["__m256",3]],["__m128",3]]],[5,"_mm256_castpd256_pd128","","Casts vector of type __m256d to type __m128d.",null,[[["__m256d",3]],["__m128d",3]]],[5,"_mm256_castsi256_si128","","Casts vector of type __m256i to type __m128i.",null,[[["__m256i",3]],["__m128i",3]]],[5,"_mm256_castps128_ps256","","Casts vector of type __m128 to type __m256; the upper 128…",null,[[["__m128",3]],["__m256",3]]],[5,"_mm256_castpd128_pd256","","Casts vector of type __m128d to type __m256d; the upper…",null,[[["__m128d",3]],["__m256d",3]]],[5,"_mm256_castsi128_si256","","Casts vector of type __m128i to type __m256i; the upper…",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm256_zextps128_ps256","","Constructs a 256-bit floating-point vector of `[8 x…",null,[[["__m128",3]],["__m256",3]]],[5,"_mm256_zextsi128_si256","","Constructs a 256-bit integer vector from a 128-bit integer…",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm256_zextpd128_pd256","","Constructs a 256-bit floating-point vector of `[4 x…",null,[[["__m128d",3]],["__m256d",3]]],[5,"_mm256_undefined_ps","","Returns vector of type `__m256` with undefined elements.",null,[[],["__m256",3]]],[5,"_mm256_undefined_pd","","Returns vector of type `__m256d` with undefined elements.",null,[[],["__m256d",3]]],[5,"_mm256_undefined_si256","","Returns vector of type __m256i with undefined elements.",null,[[],["__m256i",3]]],[5,"_mm256_set_m128","","Sets packed __m256 returned vector with the supplied values.",null,[[["__m128",3]],["__m256",3]]],[5,"_mm256_set_m128d","","Sets packed __m256d returned vector with the supplied…",null,[[["__m128d",3]],["__m256d",3]]],[5,"_mm256_set_m128i","","Sets packed __m256i returned vector with the supplied…",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm256_setr_m128","","Sets packed __m256 returned vector with the supplied values.",null,[[["__m128",3]],["__m256",3]]],[5,"_mm256_setr_m128d","","Sets packed __m256d returned vector with the supplied…",null,[[["__m128d",3]],["__m256d",3]]],[5,"_mm256_setr_m128i","","Sets packed __m256i returned vector with the supplied…",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm256_loadu2_m128","","Loads two 128-bit values (composed of 4 packed…",null,[[],["__m256",3]]],[5,"_mm256_loadu2_m128d","","Loads two 128-bit values (composed of 2 packed…",null,[[],["__m256d",3]]],[5,"_mm256_loadu2_m128i","","Loads two 128-bit values (composed of integer data) from…",null,[[],["__m256i",3]]],[5,"_mm256_storeu2_m128","","Stores the high and low 128-bit halves (each composed of 4…",null,[[["__m256",3]]]],[5,"_mm256_storeu2_m128d","","Stores the high and low 128-bit halves (each composed of 2…",null,[[["__m256d",3]]]],[5,"_mm256_storeu2_m128i","","Stores the high and low 128-bit halves (each composed of…",null,[[["__m256i",3]]]],[5,"_mm256_cvtss_f32","","Returns the first element of the input vector of `[8 x…",null,[[["__m256",3]]]],[5,"_mm256_abs_epi32","","Computes the absolute values of packed 32-bit integers in…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_abs_epi16","","Computes the absolute values of packed 16-bit integers in…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_abs_epi8","","Computes the absolute values of packed 8-bit integers in…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_add_epi64","","Adds packed 64-bit integers in `a` and `b`.",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_add_epi32","","Adds packed 32-bit integers in `a` and `b`.",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_add_epi16","","Adds packed 16-bit integers in `a` and `b`.",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_add_epi8","","Adds packed 8-bit integers in `a` and `b`.",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_adds_epi8","","Adds packed 8-bit integers in `a` and `b` using saturation.",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_adds_epi16","","Adds packed 16-bit integers in `a` and `b` using saturation.",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_adds_epu8","","Adds packed unsigned 8-bit integers in `a` and `b` using…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_adds_epu16","","Adds packed unsigned 16-bit integers in `a` and `b` using…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_alignr_epi8","","Concatenates pairs of 16-byte blocks in `a` and `b` into a…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_and_si256","","Computes the bitwise AND of 256 bits (representing integer…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_andnot_si256","","Computes the bitwise NOT of 256 bits (representing integer…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_avg_epu16","","Averages packed unsigned 16-bit integers in `a` and `b`.",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_avg_epu8","","Averages packed unsigned 8-bit integers in `a` and `b`.",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm_blend_epi32","","Blends packed 32-bit integers from `a` and `b` using…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm256_blend_epi32","","Blends packed 32-bit integers from `a` and `b` using…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_blend_epi16","","Blends packed 16-bit integers from `a` and `b` using…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_blendv_epi8","","Blends packed 8-bit integers from `a` and `b` using `mask`.",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm_broadcastb_epi8","","Broadcasts the low packed 8-bit integer from `a` to all…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm256_broadcastb_epi8","","Broadcasts the low packed 8-bit integer from `a` to all…",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm_broadcastd_epi32","","Broadcasts the low packed 32-bit integer from `a` to all…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm256_broadcastd_epi32","","Broadcasts the low packed 32-bit integer from `a` to all…",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm_broadcastq_epi64","","Broadcasts the low packed 64-bit integer from `a` to all…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm256_broadcastq_epi64","","Broadcasts the low packed 64-bit integer from `a` to all…",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm_broadcastsd_pd","","Broadcasts the low double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm256_broadcastsd_pd","","Broadcasts the low double-precision (64-bit)…",null,[[["__m128d",3]],["__m256d",3]]],[5,"_mm256_broadcastsi128_si256","","Broadcasts 128 bits of integer data from a to all 128-bit…",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm_broadcastss_ps","","Broadcasts the low single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm256_broadcastss_ps","","Broadcasts the low single-precision (32-bit)…",null,[[["__m128",3]],["__m256",3]]],[5,"_mm_broadcastw_epi16","","Broadcasts the low packed 16-bit integer from a to all…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm256_broadcastw_epi16","","Broadcasts the low packed 16-bit integer from a to all…",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm256_cmpeq_epi64","","Compares packed 64-bit integers in `a` and `b` for equality.",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_cmpeq_epi32","","Compares packed 32-bit integers in `a` and `b` for equality.",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_cmpeq_epi16","","Compares packed 16-bit integers in `a` and `b` for equality.",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_cmpeq_epi8","","Compares packed 8-bit integers in `a` and `b` for equality.",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_cmpgt_epi64","","Compares packed 64-bit integers in `a` and `b` for…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_cmpgt_epi32","","Compares packed 32-bit integers in `a` and `b` for…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_cmpgt_epi16","","Compares packed 16-bit integers in `a` and `b` for…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_cmpgt_epi8","","Compares packed 8-bit integers in `a` and `b` for…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_cvtepi16_epi32","","Sign-extend 16-bit integers to 32-bit integers.",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm256_cvtepi16_epi64","","Sign-extend 16-bit integers to 64-bit integers.",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm256_cvtepi32_epi64","","Sign-extend 32-bit integers to 64-bit integers.",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm256_cvtepi8_epi16","","Sign-extend 8-bit integers to 16-bit integers.",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm256_cvtepi8_epi32","","Sign-extend 8-bit integers to 32-bit integers.",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm256_cvtepi8_epi64","","Sign-extend 8-bit integers to 64-bit integers.",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm256_cvtepu16_epi32","","Zeroes extend packed unsigned 16-bit integers in `a` to…",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm256_cvtepu16_epi64","","Zero-extend the lower four unsigned 16-bit integers in `a`…",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm256_cvtepu32_epi64","","Zero-extend unsigned 32-bit integers in `a` to 64-bit…",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm256_cvtepu8_epi16","","Zero-extend unsigned 8-bit integers in `a` to 16-bit…",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm256_cvtepu8_epi32","","Zero-extend the lower eight unsigned 8-bit integers in `a`…",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm256_cvtepu8_epi64","","Zero-extend the lower four unsigned 8-bit integers in `a`…",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm256_extracti128_si256","","Extracts 128 bits (of integer data) from `a` selected with…",null,[[["__m256i",3]],["__m128i",3]]],[5,"_mm256_hadd_epi16","","Horizontally adds adjacent pairs of 16-bit integers in `a`…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_hadd_epi32","","Horizontally adds adjacent pairs of 32-bit integers in `a`…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_hadds_epi16","","Horizontally adds adjacent pairs of 16-bit integers in `a`…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_hsub_epi16","","Horizontally subtract adjacent pairs of 16-bit integers in…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_hsub_epi32","","Horizontally subtract adjacent pairs of 32-bit integers in…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_hsubs_epi16","","Horizontally subtract adjacent pairs of 16-bit integers in…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm_i32gather_epi32","","Returns values from `slice` at offsets determined by…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_mask_i32gather_epi32","","Returns values from `slice` at offsets determined by…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm256_i32gather_epi32","","Returns values from `slice` at offsets determined by…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_mask_i32gather_epi32","","Returns values from `slice` at offsets determined by…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm_i32gather_ps","","Returns values from `slice` at offsets determined by…",null,[[["__m128i",3]],["__m128",3]]],[5,"_mm_mask_i32gather_ps","","Returns values from `slice` at offsets determined by…",null,[[["__m128i",3],["__m128",3]],["__m128",3]]],[5,"_mm256_i32gather_ps","","Returns values from `slice` at offsets determined by…",null,[[["__m256i",3]],["__m256",3]]],[5,"_mm256_mask_i32gather_ps","","Returns values from `slice` at offsets determined by…",null,[[["__m256i",3],["__m256",3]],["__m256",3]]],[5,"_mm_i32gather_epi64","","Returns values from `slice` at offsets determined by…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_mask_i32gather_epi64","","Returns values from `slice` at offsets determined by…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm256_i32gather_epi64","","Returns values from `slice` at offsets determined by…",null,[[["__m128i",3]],["__m256i",3]]],[5,"_mm256_mask_i32gather_epi64","","Returns values from `slice` at offsets determined by…",null,[[["__m256i",3],["__m128i",3]],["__m256i",3]]],[5,"_mm_i32gather_pd","","Returns values from `slice` at offsets determined by…",null,[[["__m128i",3]],["__m128d",3]]],[5,"_mm_mask_i32gather_pd","","Returns values from `slice` at offsets determined by…",null,[[["__m128i",3],["__m128d",3]],["__m128d",3]]],[5,"_mm256_i32gather_pd","","Returns values from `slice` at offsets determined by…",null,[[["__m128i",3]],["__m256d",3]]],[5,"_mm256_mask_i32gather_pd","","Returns values from `slice` at offsets determined by…",null,[[["__m256d",3],["__m128i",3]],["__m256d",3]]],[5,"_mm_i64gather_epi32","","Returns values from `slice` at offsets determined by…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_mask_i64gather_epi32","","Returns values from `slice` at offsets determined by…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm256_i64gather_epi32","","Returns values from `slice` at offsets determined by…",null,[[["__m256i",3]],["__m128i",3]]],[5,"_mm256_mask_i64gather_epi32","","Returns values from `slice` at offsets determined by…",null,[[["__m256i",3],["__m128i",3]],["__m128i",3]]],[5,"_mm_i64gather_ps","","Returns values from `slice` at offsets determined by…",null,[[["__m128i",3]],["__m128",3]]],[5,"_mm_mask_i64gather_ps","","Returns values from `slice` at offsets determined by…",null,[[["__m128i",3],["__m128",3]],["__m128",3]]],[5,"_mm256_i64gather_ps","","Returns values from `slice` at offsets determined by…",null,[[["__m256i",3]],["__m128",3]]],[5,"_mm256_mask_i64gather_ps","","Returns values from `slice` at offsets determined by…",null,[[["__m256i",3],["__m128",3]],["__m128",3]]],[5,"_mm_i64gather_epi64","","Returns values from `slice` at offsets determined by…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_mask_i64gather_epi64","","Returns values from `slice` at offsets determined by…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm256_i64gather_epi64","","Returns values from `slice` at offsets determined by…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_mask_i64gather_epi64","","Returns values from `slice` at offsets determined by…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm_i64gather_pd","","Returns values from `slice` at offsets determined by…",null,[[["__m128i",3]],["__m128d",3]]],[5,"_mm_mask_i64gather_pd","","Returns values from `slice` at offsets determined by…",null,[[["__m128i",3],["__m128d",3]],["__m128d",3]]],[5,"_mm256_i64gather_pd","","Returns values from `slice` at offsets determined by…",null,[[["__m256i",3]],["__m256d",3]]],[5,"_mm256_mask_i64gather_pd","","Returns values from `slice` at offsets determined by…",null,[[["__m256d",3],["__m256i",3]],["__m256d",3]]],[5,"_mm256_inserti128_si256","","Copies `a` to `dst`, then insert 128 bits (of integer…",null,[[["__m256i",3],["__m128i",3]],["__m256i",3]]],[5,"_mm256_madd_epi16","","Multiplies packed signed 16-bit integers in `a` and `b`,…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_maddubs_epi16","","Vertically multiplies each unsigned 8-bit integer from `a`…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm_maskload_epi32","","Loads packed 32-bit integers from memory pointed by…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm256_maskload_epi32","","Loads packed 32-bit integers from memory pointed by…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm_maskload_epi64","","Loads packed 64-bit integers from memory pointed by…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm256_maskload_epi64","","Loads packed 64-bit integers from memory pointed by…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm_maskstore_epi32","","Stores packed 32-bit integers from `a` into memory pointed…",null,[[["__m128i",3]]]],[5,"_mm256_maskstore_epi32","","Stores packed 32-bit integers from `a` into memory pointed…",null,[[["__m256i",3]]]],[5,"_mm_maskstore_epi64","","Stores packed 64-bit integers from `a` into memory pointed…",null,[[["__m128i",3]]]],[5,"_mm256_maskstore_epi64","","Stores packed 64-bit integers from `a` into memory pointed…",null,[[["__m256i",3]]]],[5,"_mm256_max_epi16","","Compares packed 16-bit integers in `a` and `b`, and…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_max_epi32","","Compares packed 32-bit integers in `a` and `b`, and…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_max_epi8","","Compares packed 8-bit integers in `a` and `b`, and returns…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_max_epu16","","Compares packed unsigned 16-bit integers in `a` and `b`,…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_max_epu32","","Compares packed unsigned 32-bit integers in `a` and `b`,…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_max_epu8","","Compares packed unsigned 8-bit integers in `a` and `b`,…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_min_epi16","","Compares packed 16-bit integers in `a` and `b`, and…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_min_epi32","","Compares packed 32-bit integers in `a` and `b`, and…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_min_epi8","","Compares packed 8-bit integers in `a` and `b`, and returns…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_min_epu16","","Compares packed unsigned 16-bit integers in `a` and `b`,…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_min_epu32","","Compares packed unsigned 32-bit integers in `a` and `b`,…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_min_epu8","","Compares packed unsigned 8-bit integers in `a` and `b`,…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_movemask_epi8","","Creates mask from the most significant bit of each 8-bit…",null,[[["__m256i",3]]]],[5,"_mm256_mpsadbw_epu8","","Computes the sum of absolute differences (SADs) of…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_mul_epi32","","Multiplies the low 32-bit integers from each packed 64-bit…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_mul_epu32","","Multiplies the low unsigned 32-bit integers from each…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_mulhi_epi16","","Multiplies the packed 16-bit integers in `a` and `b`,…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_mulhi_epu16","","Multiplies the packed unsigned 16-bit integers in `a` and…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_mullo_epi16","","Multiplies the packed 16-bit integers in `a` and `b`,…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_mullo_epi32","","Multiplies the packed 32-bit integers in `a` and `b`,…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_mulhrs_epi16","","Multiplies packed 16-bit integers in `a` and `b`,…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_or_si256","","Computes the bitwise OR of 256 bits (representing integer…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_packs_epi16","","Converts packed 16-bit integers from `a` and `b` to packed…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_packs_epi32","","Converts packed 32-bit integers from `a` and `b` to packed…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_packus_epi16","","Converts packed 16-bit integers from `a` and `b` to packed…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_packus_epi32","","Converts packed 32-bit integers from `a` and `b` to packed…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_permutevar8x32_epi32","","Permutes packed 32-bit integers from `a` according to the…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_permute4x64_epi64","","Permutes 64-bit integers from `a` using control mask `imm8`.",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_permute2x128_si256","","Shuffles 128-bits of integer data selected by `imm8` from…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_permute4x64_pd","","Shuffles 64-bit floating-point elements in `a` across…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm256_permutevar8x32_ps","","Shuffles eight 32-bit foating-point elements in `a` across…",null,[[["__m256i",3],["__m256",3]],["__m256",3]]],[5,"_mm256_sad_epu8","","Computes the absolute differences of packed unsigned 8-bit…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_shuffle_epi8","","Shuffles bytes from `a` according to the content of `b`.",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_shuffle_epi32","","Shuffles 32-bit integers in 128-bit lanes of `a` using the…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_shufflehi_epi16","","Shuffles 16-bit integers in the high 64 bits of 128-bit…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_shufflelo_epi16","","Shuffles 16-bit integers in the low 64 bits of 128-bit…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_sign_epi16","","Negates packed 16-bit integers in `a` when the…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_sign_epi32","","Negates packed 32-bit integers in `a` when the…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_sign_epi8","","Negates packed 8-bit integers in `a` when the…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_sll_epi16","","Shifts packed 16-bit integers in `a` left by `count` while…",null,[[["__m256i",3],["__m128i",3]],["__m256i",3]]],[5,"_mm256_sll_epi32","","Shifts packed 32-bit integers in `a` left by `count` while…",null,[[["__m256i",3],["__m128i",3]],["__m256i",3]]],[5,"_mm256_sll_epi64","","Shifts packed 64-bit integers in `a` left by `count` while…",null,[[["__m256i",3],["__m128i",3]],["__m256i",3]]],[5,"_mm256_slli_epi16","","Shifts packed 16-bit integers in `a` left by `imm8` while…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_slli_epi32","","Shifts packed 32-bit integers in `a` left by `imm8` while…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_slli_epi64","","Shifts packed 64-bit integers in `a` left by `imm8` while…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_slli_si256","","Shifts 128-bit lanes in `a` left by `imm8` bytes while…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_bslli_epi128","","Shifts 128-bit lanes in `a` left by `imm8` bytes while…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm_sllv_epi32","","Shifts packed 32-bit integers in `a` left by the amount…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm256_sllv_epi32","","Shifts packed 32-bit integers in `a` left by the amount…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm_sllv_epi64","","Shifts packed 64-bit integers in `a` left by the amount…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm256_sllv_epi64","","Shifts packed 64-bit integers in `a` left by the amount…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_sra_epi16","","Shifts packed 16-bit integers in `a` right by `count`…",null,[[["__m256i",3],["__m128i",3]],["__m256i",3]]],[5,"_mm256_sra_epi32","","Shifts packed 32-bit integers in `a` right by `count`…",null,[[["__m256i",3],["__m128i",3]],["__m256i",3]]],[5,"_mm256_srai_epi16","","Shifts packed 16-bit integers in `a` right by `imm8` while…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_srai_epi32","","Shifts packed 32-bit integers in `a` right by `imm8` while…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm_srav_epi32","","Shifts packed 32-bit integers in `a` right by the amount…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm256_srav_epi32","","Shifts packed 32-bit integers in `a` right by the amount…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_srli_si256","","Shifts 128-bit lanes in `a` right by `imm8` bytes while…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_bsrli_epi128","","Shifts 128-bit lanes in `a` right by `imm8` bytes while…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_srl_epi16","","Shifts packed 16-bit integers in `a` right by `count`…",null,[[["__m256i",3],["__m128i",3]],["__m256i",3]]],[5,"_mm256_srl_epi32","","Shifts packed 32-bit integers in `a` right by `count`…",null,[[["__m256i",3],["__m128i",3]],["__m256i",3]]],[5,"_mm256_srl_epi64","","Shifts packed 64-bit integers in `a` right by `count`…",null,[[["__m256i",3],["__m128i",3]],["__m256i",3]]],[5,"_mm256_srli_epi16","","Shifts packed 16-bit integers in `a` right by `imm8` while…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_srli_epi32","","Shifts packed 32-bit integers in `a` right by `imm8` while…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_srli_epi64","","Shifts packed 64-bit integers in `a` right by `imm8` while…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm_srlv_epi32","","Shifts packed 32-bit integers in `a` right by the amount…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm256_srlv_epi32","","Shifts packed 32-bit integers in `a` right by the amount…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm_srlv_epi64","","Shifts packed 64-bit integers in `a` right by the amount…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm256_srlv_epi64","","Shifts packed 64-bit integers in `a` right by the amount…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_sub_epi16","","Subtract packed 16-bit integers in `b` from packed 16-bit…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_sub_epi32","","Subtract packed 32-bit integers in `b` from packed 32-bit…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_sub_epi64","","Subtract packed 64-bit integers in `b` from packed 64-bit…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_sub_epi8","","Subtract packed 8-bit integers in `b` from packed 8-bit…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_subs_epi16","","Subtract packed 16-bit integers in `b` from packed 16-bit…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_subs_epi8","","Subtract packed 8-bit integers in `b` from packed 8-bit…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_subs_epu16","","Subtract packed unsigned 16-bit integers in `b` from…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_subs_epu8","","Subtract packed unsigned 8-bit integers in `b` from packed…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_unpackhi_epi8","","Unpacks and interleave 8-bit integers from the high half…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_unpacklo_epi8","","Unpacks and interleave 8-bit integers from the low half of…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_unpackhi_epi16","","Unpacks and interleave 16-bit integers from the high half…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_unpacklo_epi16","","Unpacks and interleave 16-bit integers from the low half…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_unpackhi_epi32","","Unpacks and interleave 32-bit integers from the high half…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_unpacklo_epi32","","Unpacks and interleave 32-bit integers from the low half…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_unpackhi_epi64","","Unpacks and interleave 64-bit integers from the high half…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_unpacklo_epi64","","Unpacks and interleave 64-bit integers from the low half…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_xor_si256","","Computes the bitwise XOR of 256 bits (representing integer…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_extract_epi8","","Extracts an 8-bit integer from `a`, selected with `imm8`.…",null,[[["__m256i",3]]]],[5,"_mm256_extract_epi16","","Extracts a 16-bit integer from `a`, selected with `imm8`.…",null,[[["__m256i",3]]]],[5,"_mm256_extract_epi32","","Extracts a 32-bit integer from `a`, selected with `imm8`.",null,[[["__m256i",3]]]],[5,"_mm256_cvtsd_f64","","Returns the first element of the input vector of `[4 x…",null,[[["__m256d",3]]]],[5,"_mm256_cvtsi256_si32","","Returns the first element of the input vector of `[8 x…",null,[[["__m256i",3]]]],[5,"_mm_fmadd_pd","","Multiplies packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm256_fmadd_pd","","Multiplies packed double-precision (64-bit) floating-point…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm_fmadd_ps","","Multiplies packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm256_fmadd_ps","","Multiplies packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm_fmadd_sd","","Multiplies the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_fmadd_ss","","Multiplies the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_fmaddsub_pd","","Multiplies packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm256_fmaddsub_pd","","Multiplies packed double-precision (64-bit) floating-point…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm_fmaddsub_ps","","Multiplies packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm256_fmaddsub_ps","","Multiplies packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm_fmsub_pd","","Multiplies packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm256_fmsub_pd","","Multiplies packed double-precision (64-bit) floating-point…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm_fmsub_ps","","Multiplies packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm256_fmsub_ps","","Multiplies packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm_fmsub_sd","","Multiplies the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_fmsub_ss","","Multiplies the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_fmsubadd_pd","","Multiplies packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm256_fmsubadd_pd","","Multiplies packed double-precision (64-bit) floating-point…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm_fmsubadd_ps","","Multiplies packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm256_fmsubadd_ps","","Multiplies packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm_fnmadd_pd","","Multiplies packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm256_fnmadd_pd","","Multiplies packed double-precision (64-bit) floating-point…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm_fnmadd_ps","","Multiplies packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm256_fnmadd_ps","","Multiplies packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm_fnmadd_sd","","Multiplies the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_fnmadd_ss","","Multiplies the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_fnmsub_pd","","Multiplies packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm256_fnmsub_pd","","Multiplies packed double-precision (64-bit) floating-point…",null,[[["__m256d",3]],["__m256d",3]]],[5,"_mm_fnmsub_ps","","Multiplies packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm256_fnmsub_ps","","Multiplies packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m256",3]]],[5,"_mm_fnmsub_sd","","Multiplies the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_fnmsub_ss","","Multiplies the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_lzcnt_u32","","Counts the leading most significant zero bits.",null,[[]]],[5,"_popcnt32","","Counts the bits that are set.",null,[[]]],[5,"_bextr_u32","","Extracts bits in range [`start`, `start` + `length`) from…",null,[[]]],[5,"_bextr2_u32","","Extracts bits of `a` specified by `control` into the least…",null,[[]]],[5,"_andn_u32","","Bitwise logical `AND` of inverted `a` with `b`.",null,[[]]],[5,"_blsi_u32","","Extracts lowest set isolated bit.",null,[[]]],[5,"_blsmsk_u32","","Gets mask up to lowest set bit.",null,[[]]],[5,"_blsr_u32","","Resets the lowest set bit of `x`.",null,[[]]],[5,"_tzcnt_u32","","Counts the number of trailing least significant zero bits.",null,[[]]],[5,"_mm_tzcnt_32","","Counts the number of trailing least significant zero bits.",null,[[]]],[5,"_mulx_u32","","Unsigned multiply without affecting flags.",null,[[]]],[5,"_bzhi_u32","","Zeroes higher bits of `a` >= `index`.",null,[[]]],[5,"_pdep_u32","","Scatter contiguous low order bits of `a` to the result at…",null,[[]]],[5,"_pext_u32","","Gathers the bits of `x` specified by the `mask` into the…",null,[[]]],[5,"_mm_extract_si64","","Extracts the bit range specified by `y` from the lower 64…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_insert_si64","","Inserts the `[length:0]` bits of `y` into `x` at `index`.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_stream_sd","","Non-temporal store of `a.0` into `p`.",null,[[["__m128d",3]]]],[5,"_mm_stream_ss","","Non-temporal store of `a.0` into `p`.",null,[[["__m128",3]]]],[5,"_blcfill_u32","","Clears all bits below the least significant zero bit of `x`.",null,[[]]],[5,"_blcfill_u64","","Clears all bits below the least significant zero bit of `x`.",null,[[]]],[5,"_blci_u32","","Sets all bits of `x` to 1 except for the least significant…",null,[[]]],[5,"_blci_u64","","Sets all bits of `x` to 1 except for the least significant…",null,[[]]],[5,"_blcic_u32","","Sets the least significant zero bit of `x` and clears all…",null,[[]]],[5,"_blcic_u64","","Sets the least significant zero bit of `x` and clears all…",null,[[]]],[5,"_blcmsk_u32","","Sets the least significant zero bit of `x` and clears all…",null,[[]]],[5,"_blcmsk_u64","","Sets the least significant zero bit of `x` and clears all…",null,[[]]],[5,"_blcs_u32","","Sets the least significant zero bit of `x`.",null,[[]]],[5,"_blcs_u64","","Sets the least significant zero bit of `x`.",null,[[]]],[5,"_blsfill_u32","","Sets all bits of `x` below the least significant one.",null,[[]]],[5,"_blsfill_u64","","Sets all bits of `x` below the least significant one.",null,[[]]],[5,"_blsic_u32","","Clears least significant bit and sets all other bits.",null,[[]]],[5,"_blsic_u64","","Clears least significant bit and sets all other bits.",null,[[]]],[5,"_t1mskc_u32","","Clears all bits below the least significant zero of `x`…",null,[[]]],[5,"_t1mskc_u64","","Clears all bits below the least significant zero of `x`…",null,[[]]],[5,"_tzmsk_u32","","Sets all bits below the least significant one of `x` and…",null,[[]]],[5,"_tzmsk_u64","","Sets all bits below the least significant one of `x` and…",null,[[]]],[5,"_mm_clmulepi64_si128","","Performs a carry-less multiplication of two 64-bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_aesdec_si128","","Performs one round of an AES decryption flow on data…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_aesdeclast_si128","","Performs the last round of an AES decryption flow on data…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_aesenc_si128","","Performs one round of an AES encryption flow on data…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_aesenclast_si128","","Performs the last round of an AES encryption flow on data…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_aesimc_si128","","Performs the `InvMixColumns` transformation on `a`.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_aeskeygenassist_si128","","Assist in expanding the AES cipher key.",null,[[["__m128i",3]],["__m128i",3]]],[5,"_rdrand16_step","","Read a hardware generated 16-bit random value and store…",null,[[]]],[5,"_rdrand32_step","","Read a hardware generated 32-bit random value and store…",null,[[]]],[5,"_rdseed16_step","","Read a 16-bit NIST SP800-90B and SP800-90C compliant…",null,[[]]],[5,"_rdseed32_step","","Read a 32-bit NIST SP800-90B and SP800-90C compliant…",null,[[]]],[5,"_mm_sha1msg1_epu32","","Performs an intermediate calculation for the next four…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_sha1msg2_epu32","","Performs the final calculation for the next four SHA1…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_sha1nexte_epu32","","Calculate SHA1 state variable E after four rounds of…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_sha1rnds4_epu32","","Performs four rounds of SHA1 operation using an initial…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_sha256msg1_epu32","","Performs an intermediate calculation for the next four…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_sha256msg2_epu32","","Performs the final calculation for the next four SHA256…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_sha256rnds2_epu32","","Performs 2 rounds of SHA256 operation using an initial…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_addcarry_u32","","Adds unsigned 32-bit integers `a` and `b` with unsigned…",null,[[]]],[5,"_addcarryx_u32","","Adds unsigned 32-bit integers `a` and `b` with unsigned…",null,[[]]],[5,"_subborrow_u32","","Adds unsigned 32-bit integers `a` and `b` with unsigned…",null,[[]]],[5,"_mm512_abs_epi32","","Computes the absolute values of packed 32-bit integers in…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_abs_epi32","","Computes the absolute value of packed 32-bit integers in…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_abs_epi32","","Computes the absolute value of packed 32-bit integers in…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_abs_epi64","","Compute the absolute value of packed signed 64-bit…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_abs_epi64","","Compute the absolute value of packed signed 64-bit…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_abs_epi64","","Compute the absolute value of packed signed 64-bit…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_abs_ps","","Finds the absolute value of each packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_abs_ps","","Finds the absolute value of each packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_abs_pd","","Finds the absolute value of each packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_abs_pd","","Finds the absolute value of each packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_mov_epi32","","Move packed 32-bit integers from a to dst using writemask…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_mov_epi32","","Move packed 32-bit integers from a into dst using zeromask…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_mov_epi64","","Move packed 64-bit integers from a to dst using writemask…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_mov_epi64","","Move packed 64-bit integers from a into dst using zeromask…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_mov_ps","","Move packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_mov_ps","","Move packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_mov_pd","","Move packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_mov_pd","","Move packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_add_epi32","","Add packed 32-bit integers in a and b, and store the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_add_epi32","","Add packed 32-bit integers in a and b, and store the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_add_epi32","","Add packed 32-bit integers in a and b, and store the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_add_epi64","","Add packed 64-bit integers in a and b, and store the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_add_epi64","","Add packed 64-bit integers in a and b, and store the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_add_epi64","","Add packed 64-bit integers in a and b, and store the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_add_ps","","Add packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_add_ps","","Add packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_add_ps","","Add packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_add_pd","","Add packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_add_pd","","Add packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_add_pd","","Add packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_sub_epi32","","Subtract packed 32-bit integers in b from packed 32-bit…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_sub_epi32","","Subtract packed 32-bit integers in b from packed 32-bit…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_sub_epi32","","Subtract packed 32-bit integers in b from packed 32-bit…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_sub_epi64","","Subtract packed 64-bit integers in b from packed 64-bit…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_sub_epi64","","Subtract packed 64-bit integers in b from packed 64-bit…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_sub_epi64","","Subtract packed 64-bit integers in b from packed 64-bit…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_sub_ps","","Subtract packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_sub_ps","","Subtract packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_sub_ps","","Subtract packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_sub_pd","","Subtract packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_sub_pd","","Subtract packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_sub_pd","","Subtract packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mul_epi32","","Multiply the low signed 32-bit integers from each packed…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_mul_epi32","","Multiply the low signed 32-bit integers from each packed…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_mul_epi32","","Multiply the low signed 32-bit integers from each packed…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mullo_epi32","","Multiply the packed 32-bit integers in a and b, producing…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_mullo_epi32","","Multiply the packed 32-bit integers in a and b, producing…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_mullo_epi32","","Multiply the packed 32-bit integers in a and b, producing…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mullox_epi64","","Multiplies elements in packed 64-bit integer vectors a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_mullox_epi64","","Multiplies elements in packed 64-bit integer vectors a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mul_epu32","","Multiply the low unsigned 32-bit integers from each packed…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_mul_epu32","","Multiply the low unsigned 32-bit integers from each packed…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_mul_epu32","","Multiply the low unsigned 32-bit integers from each packed…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mul_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_mul_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_mul_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mul_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_mul_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_mul_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_div_ps","","Divide packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_div_ps","","Divide packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_div_ps","","Divide packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_div_pd","","Divide packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_div_pd","","Divide packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_div_pd","","Divide packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_max_epi32","","Compare packed signed 32-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_max_epi32","","Compare packed signed 32-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_max_epi32","","Compare packed signed 32-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_max_epi64","","Compare packed signed 64-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_max_epi64","","Compare packed signed 64-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_max_epi64","","Compare packed signed 64-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_max_ps","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_max_ps","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_max_ps","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_max_pd","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_max_pd","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_max_pd","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_max_epu32","","Compare packed unsigned 32-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_max_epu32","","Compare packed unsigned 32-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_max_epu32","","Compare packed unsigned 32-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_max_epu64","","Compare packed unsigned 64-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_max_epu64","","Compare packed unsigned 64-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_max_epu64","","Compare packed unsigned 64-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_min_epi32","","Compare packed signed 32-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_min_epi32","","Compare packed signed 32-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_min_epi32","","Compare packed signed 32-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_min_epi64","","Compare packed signed 64-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_min_epi64","","Compare packed signed 64-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_min_epi64","","Compare packed signed 64-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_min_ps","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_min_ps","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_min_ps","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_min_pd","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_min_pd","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_min_pd","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_min_epu32","","Compare packed unsigned 32-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_min_epu32","","Compare packed unsigned 32-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_min_epu32","","Compare packed unsigned 32-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_min_epu64","","Compare packed unsigned 64-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_min_epu64","","Compare packed unsigned 64-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_min_epu64","","Compare packed unsigned 64-bit integers in a and b, and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_sqrt_ps","","Compute the square root of packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_sqrt_ps","","Compute the square root of packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_sqrt_ps","","Compute the square root of packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_sqrt_pd","","Compute the square root of packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_sqrt_pd","","Compute the square root of packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_sqrt_pd","","Compute the square root of packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_fmadd_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_fmadd_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_fmadd_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask3_fmadd_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_fmadd_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_fmadd_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_fmadd_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask3_fmadd_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_fmsub_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_fmsub_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_fmsub_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask3_fmsub_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_fmsub_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_fmsub_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_fmsub_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask3_fmsub_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_fmaddsub_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_fmaddsub_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_fmaddsub_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask3_fmaddsub_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_fmaddsub_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_fmaddsub_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_fmaddsub_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask3_fmaddsub_pd","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_fmsubadd_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_fmsubadd_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_fmsubadd_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask3_fmsubadd_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_fmsubadd_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_fmsubadd_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_fmsubadd_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask3_fmsubadd_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_fnmadd_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_fnmadd_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_fnmadd_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask3_fnmadd_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_fnmadd_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_fnmadd_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_fnmadd_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask3_fnmadd_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_fnmsub_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_fnmsub_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_fnmsub_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask3_fnmsub_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_fnmsub_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_fnmsub_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_fnmsub_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask3_fnmsub_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_rcp14_ps","","Compute the approximate reciprocal of packed…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_rcp14_ps","","Compute the approximate reciprocal of packed…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_rcp14_ps","","Compute the approximate reciprocal of packed…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_rcp14_pd","","Compute the approximate reciprocal of packed…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_rcp14_pd","","Compute the approximate reciprocal of packed…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_rcp14_pd","","Compute the approximate reciprocal of packed…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_rsqrt14_ps","","Compute the approximate reciprocal square root of packed…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_rsqrt14_ps","","Compute the approximate reciprocal square root of packed…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_rsqrt14_ps","","Compute the approximate reciprocal square root of packed…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_rsqrt14_pd","","Compute the approximate reciprocal square root of packed…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_rsqrt14_pd","","Compute the approximate reciprocal square root of packed…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_rsqrt14_pd","","Compute the approximate reciprocal square root of packed…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_getexp_ps","","Convert the exponent of each packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_getexp_ps","","Convert the exponent of each packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_getexp_ps","","Convert the exponent of each packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_getexp_pd","","Convert the exponent of each packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_getexp_pd","","Convert the exponent of each packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_getexp_pd","","Convert the exponent of each packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_roundscale_ps","","Round packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_roundscale_ps","","Round packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_roundscale_ps","","Round packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_roundscale_pd","","Round packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_roundscale_pd","","Round packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_roundscale_pd","","Round packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_scalef_ps","","Scale the packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_scalef_ps","","Scale the packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_scalef_ps","","Scale the packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_scalef_pd","","Scale the packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_scalef_pd","","Scale the packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_scalef_pd","","Scale the packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_fixupimm_ps","","Fix up packed single-precision (32-bit) floating-point…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_mask_fixupimm_ps","","Fix up packed single-precision (32-bit) floating-point…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_maskz_fixupimm_ps","","Fix up packed single-precision (32-bit) floating-point…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_fixupimm_pd","","Fix up packed double-precision (64-bit) floating-point…",null,[[["__m512d",3],["__m512i",3]],["__m512d",3]]],[5,"_mm512_mask_fixupimm_pd","","Fix up packed double-precision (64-bit) floating-point…",null,[[["__m512d",3],["__m512i",3]],["__m512d",3]]],[5,"_mm512_maskz_fixupimm_pd","","Fix up packed double-precision (64-bit) floating-point…",null,[[["__m512d",3],["__m512i",3]],["__m512d",3]]],[5,"_mm512_ternarylogic_epi32","","Bitwise ternary logic that provides the capability to…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_ternarylogic_epi32","","Bitwise ternary logic that provides the capability to…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_ternarylogic_epi32","","Bitwise ternary logic that provides the capability to…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_ternarylogic_epi64","","Bitwise ternary logic that provides the capability to…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_ternarylogic_epi64","","Bitwise ternary logic that provides the capability to…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_ternarylogic_epi64","","Bitwise ternary logic that provides the capability to…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_getmant_ps","","Normalize the mantissas of packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_getmant_ps","","Normalize the mantissas of packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_getmant_ps","","Normalize the mantissas of packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_getmant_pd","","Normalize the mantissas of packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_getmant_pd","","Normalize the mantissas of packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_getmant_pd","","Normalize the mantissas of packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_add_round_ps","","Add packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_add_round_ps","","Add packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_add_round_ps","","Add packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_add_round_pd","","Add packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_add_round_pd","","Add packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_add_round_pd","","Add packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_sub_round_ps","","Subtract packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_sub_round_ps","","Subtract packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_sub_round_ps","","Subtract packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_sub_round_pd","","Subtract packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_sub_round_pd","","Subtract packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_sub_round_pd","","Subtract packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mul_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_mul_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_mul_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mul_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_mul_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_mul_round_pd","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_div_round_ps","","Divide packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_div_round_ps","","Divide packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_div_round_ps","","Divide packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_div_round_pd","","Divide packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_div_round_pd","","Divide packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_div_round_pd","","Divide packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_sqrt_round_ps","","Compute the square root of packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_sqrt_round_ps","","Compute the square root of packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_sqrt_round_ps","","Compute the square root of packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_sqrt_round_pd","","Compute the square root of packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_sqrt_round_pd","","Compute the square root of packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_sqrt_round_pd","","Compute the square root of packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_fmadd_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_fmadd_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_fmadd_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask3_fmadd_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_fmadd_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_fmadd_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_fmadd_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask3_fmadd_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_fmsub_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_fmsub_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_fmsub_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask3_fmsub_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_fmsub_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_fmsub_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_fmsub_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask3_fmsub_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_fmaddsub_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_fmaddsub_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_fmaddsub_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask3_fmaddsub_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_fmaddsub_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_fmaddsub_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_fmaddsub_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask3_fmaddsub_round_pd","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_fmsubadd_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_fmsubadd_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_fmsubadd_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask3_fmsubadd_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_fmsubadd_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_fmsubadd_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_fmsubadd_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask3_fmsubadd_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_fnmadd_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_fnmadd_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_fnmadd_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask3_fnmadd_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_fnmadd_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_fnmadd_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_fnmadd_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask3_fnmadd_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_fnmsub_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_fnmsub_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_fnmsub_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask3_fnmsub_round_ps","","Multiply packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_fnmsub_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_fnmsub_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_fnmsub_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask3_fnmsub_round_pd","","Multiply packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_max_round_ps","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_max_round_ps","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_max_round_ps","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_max_round_pd","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_max_round_pd","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_max_round_pd","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_min_round_ps","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_min_round_ps","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_min_round_ps","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_min_round_pd","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_min_round_pd","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_min_round_pd","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_getexp_round_ps","","Convert the exponent of each packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_getexp_round_ps","","Convert the exponent of each packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_getexp_round_ps","","Convert the exponent of each packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_getexp_round_pd","","Convert the exponent of each packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_getexp_round_pd","","Convert the exponent of each packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_getexp_round_pd","","Convert the exponent of each packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_roundscale_round_ps","","Round packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_roundscale_round_ps","","Round packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_roundscale_round_ps","","Round packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_roundscale_round_pd","","Round packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_roundscale_round_pd","","Round packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_roundscale_round_pd","","Round packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_scalef_round_ps","","Scale the packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_scalef_round_ps","","Scale the packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_scalef_round_ps","","Scale the packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_scalef_round_pd","","Scale the packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_scalef_round_pd","","Scale the packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_scalef_round_pd","","Scale the packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_fixupimm_round_ps","","Fix up packed single-precision (32-bit) floating-point…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_mask_fixupimm_round_ps","","Fix up packed single-precision (32-bit) floating-point…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_maskz_fixupimm_round_ps","","Fix up packed single-precision (32-bit) floating-point…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_fixupimm_round_pd","","Fix up packed double-precision (64-bit) floating-point…",null,[[["__m512d",3],["__m512i",3]],["__m512d",3]]],[5,"_mm512_mask_fixupimm_round_pd","","Fix up packed double-precision (64-bit) floating-point…",null,[[["__m512d",3],["__m512i",3]],["__m512d",3]]],[5,"_mm512_maskz_fixupimm_round_pd","","Fix up packed double-precision (64-bit) floating-point…",null,[[["__m512d",3],["__m512i",3]],["__m512d",3]]],[5,"_mm512_getmant_round_ps","","Normalize the mantissas of packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_getmant_round_ps","","Normalize the mantissas of packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_getmant_round_ps","","Normalize the mantissas of packed single-precision…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_getmant_round_pd","","Normalize the mantissas of packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_getmant_round_pd","","Normalize the mantissas of packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_getmant_round_pd","","Normalize the mantissas of packed double-precision…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_cvtps_epi32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512i",3]]],[5,"_mm512_mask_cvtps_epi32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_cvtps_epi32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512i",3]]],[5,"_mm512_cvtps_epu32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512i",3]]],[5,"_mm512_mask_cvtps_epu32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_cvtps_epu32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512i",3]]],[5,"_mm512_cvtps_pd","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m512d",3]]],[5,"_mm512_mask_cvtps_pd","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512d",3],["__m256",3]],["__m512d",3]]],[5,"_mm512_maskz_cvtps_pd","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m512d",3]]],[5,"_mm512_cvtpslo_pd","","Performs element-by-element conversion of the lower half…",null,[[["__m512",3]],["__m512d",3]]],[5,"_mm512_mask_cvtpslo_pd","","Performs element-by-element conversion of the lower half…",null,[[["__m512d",3],["__m512",3]],["__m512d",3]]],[5,"_mm512_cvtpd_ps","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m256",3]]],[5,"_mm512_mask_cvtpd_ps","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m512d",3],["__m256",3]],["__m256",3]]],[5,"_mm512_maskz_cvtpd_ps","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m256",3]]],[5,"_mm512_cvtpd_pslo","","Performs an element-by-element conversion of packed…",null,[[["__m512d",3]],["__m512",3]]],[5,"_mm512_mask_cvtpd_pslo","","Performs an element-by-element conversion of packed…",null,[[["__m512d",3],["__m512",3]],["__m512",3]]],[5,"_mm512_cvtepi8_epi32","","Sign extend packed 8-bit integers in a to packed 32-bit…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_mask_cvtepi8_epi32","","Sign extend packed 8-bit integers in a to packed 32-bit…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_cvtepi8_epi32","","Sign extend packed 8-bit integers in a to packed 32-bit…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_cvtepi8_epi64","","Sign extend packed 8-bit integers in the low 8 bytes of a…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_mask_cvtepi8_epi64","","Sign extend packed 8-bit integers in the low 8 bytes of a…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_cvtepi8_epi64","","Sign extend packed 8-bit integers in the low 8 bytes of a…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_cvtepu8_epi32","","Zero extend packed unsigned 8-bit integers in a to packed…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_mask_cvtepu8_epi32","","Zero extend packed unsigned 8-bit integers in a to packed…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_cvtepu8_epi32","","Zero extend packed unsigned 8-bit integers in a to packed…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_cvtepu8_epi64","","Zero extend packed unsigned 8-bit integers in the low 8…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_mask_cvtepu8_epi64","","Zero extend packed unsigned 8-bit integers in the low 8…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_cvtepu8_epi64","","Zero extend packed unsigned 8-bit integers in the low 8…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_cvtepi16_epi32","","Sign extend packed 16-bit integers in a to packed 32-bit…",null,[[["__m256i",3]],["__m512i",3]]],[5,"_mm512_mask_cvtepi16_epi32","","Sign extend packed 16-bit integers in a to packed 32-bit…",null,[[["__m256i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_cvtepi16_epi32","","Sign extend packed 16-bit integers in a to packed 32-bit…",null,[[["__m256i",3]],["__m512i",3]]],[5,"_mm512_cvtepi16_epi64","","Sign extend packed 16-bit integers in a to packed 64-bit…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_mask_cvtepi16_epi64","","Sign extend packed 16-bit integers in a to packed 64-bit…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_cvtepi16_epi64","","Sign extend packed 16-bit integers in a to packed 64-bit…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_cvtepu16_epi32","","Zero extend packed unsigned 16-bit integers in a to packed…",null,[[["__m256i",3]],["__m512i",3]]],[5,"_mm512_mask_cvtepu16_epi32","","Zero extend packed unsigned 16-bit integers in a to packed…",null,[[["__m256i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_cvtepu16_epi32","","Zero extend packed unsigned 16-bit integers in a to packed…",null,[[["__m256i",3]],["__m512i",3]]],[5,"_mm512_cvtepu16_epi64","","Zero extend packed unsigned 16-bit integers in a to packed…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_mask_cvtepu16_epi64","","Zero extend packed unsigned 16-bit integers in a to packed…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_cvtepu16_epi64","","Zero extend packed unsigned 16-bit integers in a to packed…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_cvtepi32_epi64","","Sign extend packed 32-bit integers in a to packed 64-bit…",null,[[["__m256i",3]],["__m512i",3]]],[5,"_mm512_mask_cvtepi32_epi64","","Sign extend packed 32-bit integers in a to packed 64-bit…",null,[[["__m256i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_cvtepi32_epi64","","Sign extend packed 32-bit integers in a to packed 64-bit…",null,[[["__m256i",3]],["__m512i",3]]],[5,"_mm512_cvtepu32_epi64","","Zero extend packed unsigned 32-bit integers in a to packed…",null,[[["__m256i",3]],["__m512i",3]]],[5,"_mm512_mask_cvtepu32_epi64","","Zero extend packed unsigned 32-bit integers in a to packed…",null,[[["__m256i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_cvtepu32_epi64","","Zero extend packed unsigned 32-bit integers in a to packed…",null,[[["__m256i",3]],["__m512i",3]]],[5,"_mm512_cvtepi32_ps","","Convert packed signed 32-bit integers in a to packed…",null,[[["__m512i",3]],["__m512",3]]],[5,"_mm512_mask_cvtepi32_ps","","Convert packed signed 32-bit integers in a to packed…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_maskz_cvtepi32_ps","","Convert packed signed 32-bit integers in a to packed…",null,[[["__m512i",3]],["__m512",3]]],[5,"_mm512_cvtepi32_pd","","Convert packed signed 32-bit integers in a to packed…",null,[[["__m256i",3]],["__m512d",3]]],[5,"_mm512_mask_cvtepi32_pd","","Convert packed signed 32-bit integers in a to packed…",null,[[["__m512d",3],["__m256i",3]],["__m512d",3]]],[5,"_mm512_maskz_cvtepi32_pd","","Convert packed signed 32-bit integers in a to packed…",null,[[["__m256i",3]],["__m512d",3]]],[5,"_mm512_cvtepu32_ps","","Convert packed unsigned 32-bit integers in a to packed…",null,[[["__m512i",3]],["__m512",3]]],[5,"_mm512_mask_cvtepu32_ps","","Convert packed unsigned 32-bit integers in a to packed…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_maskz_cvtepu32_ps","","Convert packed unsigned 32-bit integers in a to packed…",null,[[["__m512i",3]],["__m512",3]]],[5,"_mm512_cvtepu32_pd","","Convert packed unsigned 32-bit integers in a to packed…",null,[[["__m256i",3]],["__m512d",3]]],[5,"_mm512_mask_cvtepu32_pd","","Convert packed unsigned 32-bit integers in a to packed…",null,[[["__m512d",3],["__m256i",3]],["__m512d",3]]],[5,"_mm512_maskz_cvtepu32_pd","","Convert packed unsigned 32-bit integers in a to packed…",null,[[["__m256i",3]],["__m512d",3]]],[5,"_mm512_cvtepi32lo_pd","","Performs element-by-element conversion of the lower half…",null,[[["__m512i",3]],["__m512d",3]]],[5,"_mm512_mask_cvtepi32lo_pd","","Performs element-by-element conversion of the lower half…",null,[[["__m512d",3],["__m512i",3]],["__m512d",3]]],[5,"_mm512_cvtepu32lo_pd","","Performs element-by-element conversion of the lower half…",null,[[["__m512i",3]],["__m512d",3]]],[5,"_mm512_mask_cvtepu32lo_pd","","Performs element-by-element conversion of the lower half…",null,[[["__m512d",3],["__m512i",3]],["__m512d",3]]],[5,"_mm512_cvtepi32_epi16","","Convert packed 32-bit integers in a to packed 16-bit…",null,[[["__m512i",3]],["__m256i",3]]],[5,"_mm512_mask_cvtepi32_epi16","","Convert packed 32-bit integers in a to packed 16-bit…",null,[[["__m256i",3],["__m512i",3]],["__m256i",3]]],[5,"_mm512_maskz_cvtepi32_epi16","","Convert packed 32-bit integers in a to packed 16-bit…",null,[[["__m512i",3]],["__m256i",3]]],[5,"_mm512_cvtepi32_epi8","","Convert packed 32-bit integers in a to packed 8-bit…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_mask_cvtepi32_epi8","","Convert packed 32-bit integers in a to packed 8-bit…",null,[[["__m512i",3],["__m128i",3]],["__m128i",3]]],[5,"_mm512_maskz_cvtepi32_epi8","","Convert packed 32-bit integers in a to packed 8-bit…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_cvtepi64_epi32","","Convert packed 64-bit integers in a to packed 32-bit…",null,[[["__m512i",3]],["__m256i",3]]],[5,"_mm512_mask_cvtepi64_epi32","","Convert packed 64-bit integers in a to packed 32-bit…",null,[[["__m256i",3],["__m512i",3]],["__m256i",3]]],[5,"_mm512_maskz_cvtepi64_epi32","","Convert packed 64-bit integers in a to packed 32-bit…",null,[[["__m512i",3]],["__m256i",3]]],[5,"_mm512_cvtepi64_epi16","","Convert packed 64-bit integers in a to packed 16-bit…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_mask_cvtepi64_epi16","","Convert packed 64-bit integers in a to packed 16-bit…",null,[[["__m512i",3],["__m128i",3]],["__m128i",3]]],[5,"_mm512_maskz_cvtepi64_epi16","","Convert packed 64-bit integers in a to packed 16-bit…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_cvtepi64_epi8","","Convert packed 64-bit integers in a to packed 8-bit…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_mask_cvtepi64_epi8","","Convert packed 64-bit integers in a to packed 8-bit…",null,[[["__m512i",3],["__m128i",3]],["__m128i",3]]],[5,"_mm512_maskz_cvtepi64_epi8","","Convert packed 64-bit integers in a to packed 8-bit…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_cvtsepi32_epi16","","Convert packed signed 32-bit integers in a to packed…",null,[[["__m512i",3]],["__m256i",3]]],[5,"_mm512_mask_cvtsepi32_epi16","","Convert packed signed 32-bit integers in a to packed…",null,[[["__m256i",3],["__m512i",3]],["__m256i",3]]],[5,"_mm512_maskz_cvtsepi32_epi16","","Convert packed signed 32-bit integers in a to packed…",null,[[["__m512i",3]],["__m256i",3]]],[5,"_mm512_cvtsepi32_epi8","","Convert packed signed 32-bit integers in a to packed 8-bit…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_mask_cvtsepi32_epi8","","Convert packed signed 32-bit integers in a to packed 8-bit…",null,[[["__m512i",3],["__m128i",3]],["__m128i",3]]],[5,"_mm512_maskz_cvtsepi32_epi8","","Convert packed signed 32-bit integers in a to packed 8-bit…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_cvtsepi64_epi32","","Convert packed signed 64-bit integers in a to packed…",null,[[["__m512i",3]],["__m256i",3]]],[5,"_mm512_mask_cvtsepi64_epi32","","Convert packed signed 64-bit integers in a to packed…",null,[[["__m256i",3],["__m512i",3]],["__m256i",3]]],[5,"_mm512_maskz_cvtsepi64_epi32","","Convert packed signed 64-bit integers in a to packed…",null,[[["__m512i",3]],["__m256i",3]]],[5,"_mm512_cvtsepi64_epi16","","Convert packed signed 64-bit integers in a to packed…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_mask_cvtsepi64_epi16","","Convert packed signed 64-bit integers in a to packed…",null,[[["__m512i",3],["__m128i",3]],["__m128i",3]]],[5,"_mm512_maskz_cvtsepi64_epi16","","Convert packed signed 64-bit integers in a to packed…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_cvtsepi64_epi8","","Convert packed signed 64-bit integers in a to packed 8-bit…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_mask_cvtsepi64_epi8","","Convert packed signed 64-bit integers in a to packed 8-bit…",null,[[["__m512i",3],["__m128i",3]],["__m128i",3]]],[5,"_mm512_maskz_cvtsepi64_epi8","","Convert packed signed 64-bit integers in a to packed 8-bit…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_cvtusepi32_epi16","","Convert packed unsigned 32-bit integers in a to packed…",null,[[["__m512i",3]],["__m256i",3]]],[5,"_mm512_mask_cvtusepi32_epi16","","Convert packed unsigned 32-bit integers in a to packed…",null,[[["__m256i",3],["__m512i",3]],["__m256i",3]]],[5,"_mm512_maskz_cvtusepi32_epi16","","Convert packed unsigned 32-bit integers in a to packed…",null,[[["__m512i",3]],["__m256i",3]]],[5,"_mm512_cvtusepi32_epi8","","Convert packed unsigned 32-bit integers in a to packed…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_mask_cvtusepi32_epi8","","Convert packed unsigned 32-bit integers in a to packed…",null,[[["__m512i",3],["__m128i",3]],["__m128i",3]]],[5,"_mm512_maskz_cvtusepi32_epi8","","Convert packed unsigned 32-bit integers in a to packed…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_cvtusepi64_epi32","","Convert packed unsigned 64-bit integers in a to packed…",null,[[["__m512i",3]],["__m256i",3]]],[5,"_mm512_mask_cvtusepi64_epi32","","Convert packed unsigned 64-bit integers in a to packed…",null,[[["__m256i",3],["__m512i",3]],["__m256i",3]]],[5,"_mm512_maskz_cvtusepi64_epi32","","Convert packed unsigned 64-bit integers in a to packed…",null,[[["__m512i",3]],["__m256i",3]]],[5,"_mm512_cvtusepi64_epi16","","Convert packed unsigned 64-bit integers in a to packed…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_mask_cvtusepi64_epi16","","Convert packed unsigned 64-bit integers in a to packed…",null,[[["__m512i",3],["__m128i",3]],["__m128i",3]]],[5,"_mm512_maskz_cvtusepi64_epi16","","Convert packed unsigned 64-bit integers in a to packed…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_cvtusepi64_epi8","","Convert packed unsigned 64-bit integers in a to packed…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_mask_cvtusepi64_epi8","","Convert packed unsigned 64-bit integers in a to packed…",null,[[["__m512i",3],["__m128i",3]],["__m128i",3]]],[5,"_mm512_maskz_cvtusepi64_epi8","","Convert packed unsigned 64-bit integers in a to packed…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_cvt_roundps_epi32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512i",3]]],[5,"_mm512_mask_cvt_roundps_epi32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_cvt_roundps_epi32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512i",3]]],[5,"_mm512_cvt_roundps_epu32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512i",3]]],[5,"_mm512_mask_cvt_roundps_epu32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_cvt_roundps_epu32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512i",3]]],[5,"_mm512_cvt_roundps_pd","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m512d",3]]],[5,"_mm512_mask_cvt_roundps_pd","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512d",3],["__m256",3]],["__m512d",3]]],[5,"_mm512_maskz_cvt_roundps_pd","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m256",3]],["__m512d",3]]],[5,"_mm512_cvt_roundpd_epi32","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m256i",3]]],[5,"_mm512_mask_cvt_roundpd_epi32","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m256i",3],["__m512d",3]],["__m256i",3]]],[5,"_mm512_maskz_cvt_roundpd_epi32","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m256i",3]]],[5,"_mm512_cvt_roundpd_epu32","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m256i",3]]],[5,"_mm512_mask_cvt_roundpd_epu32","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m256i",3],["__m512d",3]],["__m256i",3]]],[5,"_mm512_maskz_cvt_roundpd_epu32","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m256i",3]]],[5,"_mm512_cvt_roundpd_ps","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m256",3]]],[5,"_mm512_mask_cvt_roundpd_ps","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m512d",3],["__m256",3]],["__m256",3]]],[5,"_mm512_maskz_cvt_roundpd_ps","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m256",3]]],[5,"_mm512_cvt_roundepi32_ps","","Convert packed signed 32-bit integers in a to packed…",null,[[["__m512i",3]],["__m512",3]]],[5,"_mm512_mask_cvt_roundepi32_ps","","Convert packed signed 32-bit integers in a to packed…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_maskz_cvt_roundepi32_ps","","Convert packed signed 32-bit integers in a to packed…",null,[[["__m512i",3]],["__m512",3]]],[5,"_mm512_cvt_roundepu32_ps","","Convert packed unsigned 32-bit integers in a to packed…",null,[[["__m512i",3]],["__m512",3]]],[5,"_mm512_mask_cvt_roundepu32_ps","","Convert packed unsigned 32-bit integers in a to packed…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_maskz_cvt_roundepu32_ps","","Convert packed unsigned 32-bit integers in a to packed…",null,[[["__m512i",3]],["__m512",3]]],[5,"_mm512_cvt_roundps_ph","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m256i",3]]],[5,"_mm512_mask_cvt_roundps_ph","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m256i",3],["__m512",3]],["__m256i",3]]],[5,"_mm512_maskz_cvt_roundps_ph","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m256i",3]]],[5,"_mm512_cvtps_ph","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m256i",3]]],[5,"_mm512_mask_cvtps_ph","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m256i",3],["__m512",3]],["__m256i",3]]],[5,"_mm512_maskz_cvtps_ph","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m256i",3]]],[5,"_mm512_cvt_roundph_ps","","Convert packed half-precision (16-bit) floating-point…",null,[[["__m256i",3]],["__m512",3]]],[5,"_mm512_mask_cvt_roundph_ps","","Convert packed half-precision (16-bit) floating-point…",null,[[["__m256i",3],["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_cvt_roundph_ps","","Convert packed half-precision (16-bit) floating-point…",null,[[["__m256i",3]],["__m512",3]]],[5,"_mm512_cvtph_ps","","Convert packed half-precision (16-bit) floating-point…",null,[[["__m256i",3]],["__m512",3]]],[5,"_mm512_mask_cvtph_ps","","Convert packed half-precision (16-bit) floating-point…",null,[[["__m256i",3],["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_cvtph_ps","","Convert packed half-precision (16-bit) floating-point…",null,[[["__m256i",3]],["__m512",3]]],[5,"_mm512_cvtt_roundps_epi32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512i",3]]],[5,"_mm512_mask_cvtt_roundps_epi32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_cvtt_roundps_epi32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512i",3]]],[5,"_mm512_cvtt_roundps_epu32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512i",3]]],[5,"_mm512_mask_cvtt_roundps_epu32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_cvtt_roundps_epu32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512i",3]]],[5,"_mm512_cvtt_roundpd_epi32","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m256i",3]]],[5,"_mm512_mask_cvtt_roundpd_epi32","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m256i",3],["__m512d",3]],["__m256i",3]]],[5,"_mm512_maskz_cvtt_roundpd_epi32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512d",3]],["__m256i",3]]],[5,"_mm512_cvtt_roundpd_epu32","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m256i",3]]],[5,"_mm512_mask_cvtt_roundpd_epu32","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m256i",3],["__m512d",3]],["__m256i",3]]],[5,"_mm512_cvttps_epi32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512i",3]]],[5,"_mm512_mask_cvttps_epi32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_cvttps_epi32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512i",3]]],[5,"_mm512_cvttps_epu32","","Convert packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512i",3]]],[5,"_mm512_mask_cvttps_epu32","","Convert packed double-precision (32-bit) floating-point…",null,[[["__m512",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_cvttps_epu32","","Convert packed double-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512i",3]]],[5,"_mm512_maskz_cvtt_roundpd_epu32","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m256i",3]]],[5,"_mm512_cvttpd_epi32","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m256i",3]]],[5,"_mm512_mask_cvttpd_epi32","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m256i",3],["__m512d",3]],["__m256i",3]]],[5,"_mm512_maskz_cvttpd_epi32","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m256i",3]]],[5,"_mm512_cvttpd_epu32","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m256i",3]]],[5,"_mm512_mask_cvttpd_epu32","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m256i",3],["__m512d",3]],["__m256i",3]]],[5,"_mm512_maskz_cvttpd_epu32","","Convert packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m256i",3]]],[5,"_mm512_setzero_pd","","Returns vector of type `__m512d` with all elements set to…",null,[[],["__m512d",3]]],[5,"_mm512_setzero_ps","","Returns vector of type `__m512d` with all elements set to…",null,[[],["__m512",3]]],[5,"_mm512_setzero","","Return vector of type __m512 with all elements set to zero.",null,[[],["__m512",3]]],[5,"_mm512_setzero_si512","","Returns vector of type `__m512i` with all elements set to…",null,[[],["__m512i",3]]],[5,"_mm512_setzero_epi32","","Return vector of type __m512i with all elements set to zero.",null,[[],["__m512i",3]]],[5,"_mm512_setr_epi32","","Sets packed 32-bit integers in `dst` with the supplied…",null,[[],["__m512i",3]]],[5,"_mm512_set_epi8","","Set packed 8-bit integers in dst with the supplied values.",null,[[],["__m512i",3]]],[5,"_mm512_set_epi16","","Set packed 16-bit integers in dst with the supplied values.",null,[[],["__m512i",3]]],[5,"_mm512_set4_epi32","","Set packed 32-bit integers in dst with the repeated 4…",null,[[],["__m512i",3]]],[5,"_mm512_set4_ps","","Set packed single-precision (32-bit) floating-point…",null,[[],["__m512",3]]],[5,"_mm512_set4_pd","","Set packed double-precision (64-bit) floating-point…",null,[[],["__m512d",3]]],[5,"_mm512_setr4_epi32","","Set packed 32-bit integers in dst with the repeated 4…",null,[[],["__m512i",3]]],[5,"_mm512_setr4_ps","","Set packed single-precision (32-bit) floating-point…",null,[[],["__m512",3]]],[5,"_mm512_setr4_pd","","Set packed double-precision (64-bit) floating-point…",null,[[],["__m512d",3]]],[5,"_mm512_set_epi64","","Set packed 64-bit integers in dst with the supplied values.",null,[[],["__m512i",3]]],[5,"_mm512_setr_epi64","","Set packed 64-bit integers in dst with the supplied values…",null,[[],["__m512i",3]]],[5,"_mm512_i32gather_pd","","Gather double-precision (64-bit) floating-point elements…",null,[[["__m256i",3]],["__m512d",3]]],[5,"_mm512_mask_i32gather_pd","","Gather double-precision (64-bit) floating-point elements…",null,[[["__m512d",3],["__m256i",3]],["__m512d",3]]],[5,"_mm512_i64gather_pd","","Gather double-precision (64-bit) floating-point elements…",null,[[["__m512i",3]],["__m512d",3]]],[5,"_mm512_mask_i64gather_pd","","Gather double-precision (64-bit) floating-point elements…",null,[[["__m512d",3],["__m512i",3]],["__m512d",3]]],[5,"_mm512_i64gather_ps","","Gather single-precision (32-bit) floating-point elements…",null,[[["__m512i",3]],["__m256",3]]],[5,"_mm512_mask_i64gather_ps","","Gather single-precision (32-bit) floating-point elements…",null,[[["__m512i",3],["__m256",3]],["__m256",3]]],[5,"_mm512_i32gather_ps","","Gather single-precision (32-bit) floating-point elements…",null,[[["__m512i",3]],["__m512",3]]],[5,"_mm512_mask_i32gather_ps","","Gather single-precision (32-bit) floating-point elements…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_i32gather_epi32","","Gather 32-bit integers from memory using 32-bit indices.…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_i32gather_epi32","","Gather 32-bit integers from memory using 32-bit indices.…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_i32gather_epi64","","Gather 64-bit integers from memory using 32-bit indices.…",null,[[["__m256i",3]],["__m512i",3]]],[5,"_mm512_mask_i32gather_epi64","","Gather 64-bit integers from memory using 32-bit indices.…",null,[[["__m256i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_i64gather_epi64","","Gather 64-bit integers from memory using 64-bit indices.…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_i64gather_epi64","","Gather 64-bit integers from memory using 64-bit indices.…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_i64gather_epi32","","Gather 32-bit integers from memory using 64-bit indices.…",null,[[["__m512i",3]],["__m256i",3]]],[5,"_mm512_mask_i64gather_epi32","","Gather 32-bit integers from memory using 64-bit indices.…",null,[[["__m256i",3],["__m512i",3]],["__m256i",3]]],[5,"_mm512_i32scatter_pd","","Scatter double-precision (64-bit) floating-point elements…",null,[[["__m256i",3],["__m512d",3]]]],[5,"_mm512_mask_i32scatter_pd","","Scatter double-precision (64-bit) floating-point elements…",null,[[["__m256i",3],["__m512d",3]]]],[5,"_mm512_i64scatter_pd","","Scatter double-precision (64-bit) floating-point elements…",null,[[["__m512d",3],["__m512i",3]]]],[5,"_mm512_mask_i64scatter_pd","","Scatter double-precision (64-bit) floating-point elements…",null,[[["__m512d",3],["__m512i",3]]]],[5,"_mm512_i32scatter_ps","","Scatter single-precision (32-bit) floating-point elements…",null,[[["__m512",3],["__m512i",3]]]],[5,"_mm512_mask_i32scatter_ps","","Scatter single-precision (32-bit) floating-point elements…",null,[[["__m512",3],["__m512i",3]]]],[5,"_mm512_i64scatter_ps","","Scatter single-precision (32-bit) floating-point elements…",null,[[["__m256",3],["__m512i",3]]]],[5,"_mm512_mask_i64scatter_ps","","Scatter single-precision (32-bit) floating-point elements…",null,[[["__m256",3],["__m512i",3]]]],[5,"_mm512_i32scatter_epi64","","Scatter 64-bit integers from a into memory using 32-bit…",null,[[["__m256i",3],["__m512i",3]]]],[5,"_mm512_mask_i32scatter_epi64","","Scatter 64-bit integers from a into memory using 32-bit…",null,[[["__m256i",3],["__m512i",3]]]],[5,"_mm512_i64scatter_epi64","","Scatter 64-bit integers from a into memory using 64-bit…",null,[[["__m512i",3]]]],[5,"_mm512_mask_i64scatter_epi64","","Scatter 64-bit integers from a into memory using 64-bit…",null,[[["__m512i",3]]]],[5,"_mm512_i32scatter_epi32","","Scatter 32-bit integers from a into memory using 32-bit…",null,[[["__m512i",3]]]],[5,"_mm512_mask_i32scatter_epi32","","Scatter 32-bit integers from a into memory using 32-bit…",null,[[["__m512i",3]]]],[5,"_mm512_i64scatter_epi32","","Scatter 32-bit integers from a into memory using 64-bit…",null,[[["__m256i",3],["__m512i",3]]]],[5,"_mm512_mask_i64scatter_epi32","","Scatter 32-bit integers from a into memory using 64-bit…",null,[[["__m256i",3],["__m512i",3]]]],[5,"_mm512_mask_compress_epi32","","Contiguously store the active 32-bit integers in a (those…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_compress_epi32","","Contiguously store the active 32-bit integers in a (those…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_compress_epi64","","Contiguously store the active 64-bit integers in a (those…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_compress_epi64","","Contiguously store the active 64-bit integers in a (those…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_compress_ps","","Contiguously store the active single-precision (32-bit)…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_compress_ps","","Contiguously store the active single-precision (32-bit)…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_compress_pd","","Contiguously store the active double-precision (64-bit)…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_compress_pd","","Contiguously store the active double-precision (64-bit)…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_expand_epi32","","Load contiguous active 32-bit integers from a (those with…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_expand_epi32","","Load contiguous active 32-bit integers from a (those with…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_expand_epi64","","Load contiguous active 64-bit integers from a (those with…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_expand_epi64","","Load contiguous active 64-bit integers from a (those with…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_expand_ps","","Load contiguous active single-precision (32-bit)…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_expand_ps","","Load contiguous active single-precision (32-bit)…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_expand_pd","","Load contiguous active double-precision (64-bit)…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_expand_pd","","Load contiguous active double-precision (64-bit)…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_rol_epi32","","Rotate the bits in each packed 32-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_rol_epi32","","Rotate the bits in each packed 32-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_rol_epi32","","Rotate the bits in each packed 32-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_ror_epi32","","Rotate the bits in each packed 32-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_ror_epi32","","Rotate the bits in each packed 32-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_ror_epi32","","Rotate the bits in each packed 32-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_rol_epi64","","Rotate the bits in each packed 64-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_rol_epi64","","Rotate the bits in each packed 64-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_rol_epi64","","Rotate the bits in each packed 64-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_ror_epi64","","Rotate the bits in each packed 64-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_ror_epi64","","Rotate the bits in each packed 64-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_ror_epi64","","Rotate the bits in each packed 64-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_slli_epi32","","Shift packed 32-bit integers in a left by imm8 while…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_slli_epi32","","Shift packed 32-bit integers in a left by imm8 while…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_slli_epi32","","Shift packed 32-bit integers in a left by imm8 while…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_srli_epi32","","Shift packed 32-bit integers in a right by imm8 while…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_srli_epi32","","Shift packed 32-bit integers in a right by imm8 while…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_srli_epi32","","Shift packed 32-bit integers in a right by imm8 while…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_slli_epi64","","Shift packed 64-bit integers in a left by imm8 while…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_slli_epi64","","Shift packed 64-bit integers in a left by imm8 while…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_slli_epi64","","Shift packed 64-bit integers in a left by imm8 while…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_srli_epi64","","Shift packed 64-bit integers in a right by imm8 while…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_srli_epi64","","Shift packed 64-bit integers in a right by imm8 while…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_srli_epi64","","Shift packed 64-bit integers in a right by imm8 while…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_sll_epi32","","Shift packed 32-bit integers in a left by count while…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_sll_epi32","","Shift packed 32-bit integers in a left by count while…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_sll_epi32","","Shift packed 32-bit integers in a left by count while…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_srl_epi32","","Shift packed 32-bit integers in a right by count while…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_srl_epi32","","Shift packed 32-bit integers in a right by count while…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_srl_epi32","","Shift packed 32-bit integers in a right by count while…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_sll_epi64","","Shift packed 64-bit integers in a left by count while…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_sll_epi64","","Shift packed 64-bit integers in a left by count while…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_sll_epi64","","Shift packed 64-bit integers in a left by count while…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_srl_epi64","","Shift packed 64-bit integers in a right by count while…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_srl_epi64","","Shift packed 64-bit integers in a right by count while…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_srl_epi64","","Shift packed 64-bit integers in a left by count while…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_sra_epi32","","Shift packed 32-bit integers in a right by count while…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_sra_epi32","","Shift packed 32-bit integers in a right by count while…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_sra_epi32","","Shift packed 32-bit integers in a right by count while…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_sra_epi64","","Shift packed 64-bit integers in a right by count while…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_sra_epi64","","Shift packed 64-bit integers in a right by count while…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_sra_epi64","","Shift packed 64-bit integers in a right by count while…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_srai_epi32","","Shift packed 32-bit integers in a right by imm8 while…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_srai_epi32","","Shift packed 32-bit integers in a right by imm8 while…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_srai_epi32","","Shift packed 32-bit integers in a right by imm8 while…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_srai_epi64","","Shift packed 64-bit integers in a right by imm8 while…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_srai_epi64","","Shift packed 64-bit integers in a right by imm8 while…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_srai_epi64","","Shift packed 64-bit integers in a right by imm8 while…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_srav_epi32","","Shift packed 32-bit integers in a right by the amount…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_srav_epi32","","Shift packed 32-bit integers in a right by the amount…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_srav_epi32","","Shift packed 32-bit integers in a right by the amount…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_srav_epi64","","Shift packed 64-bit integers in a right by the amount…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_srav_epi64","","Shift packed 64-bit integers in a right by the amount…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_srav_epi64","","Shift packed 64-bit integers in a right by the amount…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_rolv_epi32","","Rotate the bits in each packed 32-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_rolv_epi32","","Rotate the bits in each packed 32-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_rolv_epi32","","Rotate the bits in each packed 32-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_rorv_epi32","","Rotate the bits in each packed 32-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_rorv_epi32","","Rotate the bits in each packed 32-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_rorv_epi32","","Rotate the bits in each packed 32-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_rolv_epi64","","Rotate the bits in each packed 64-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_rolv_epi64","","Rotate the bits in each packed 64-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_rolv_epi64","","Rotate the bits in each packed 64-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_rorv_epi64","","Rotate the bits in each packed 64-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_rorv_epi64","","Rotate the bits in each packed 64-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_rorv_epi64","","Rotate the bits in each packed 64-bit integer in a to the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_sllv_epi32","","Shift packed 32-bit integers in a left by the amount…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_sllv_epi32","","Shift packed 32-bit integers in a left by the amount…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_sllv_epi32","","Shift packed 32-bit integers in a left by the amount…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_srlv_epi32","","Shift packed 32-bit integers in a right by the amount…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_srlv_epi32","","Shift packed 32-bit integers in a right by the amount…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_srlv_epi32","","Shift packed 32-bit integers in a right by the amount…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_sllv_epi64","","Shift packed 64-bit integers in a left by the amount…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_sllv_epi64","","Shift packed 64-bit integers in a left by the amount…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_sllv_epi64","","Shift packed 64-bit integers in a left by the amount…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_srlv_epi64","","Shift packed 64-bit integers in a right by the amount…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_srlv_epi64","","Shift packed 64-bit integers in a right by the amount…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_srlv_epi64","","Shift packed 64-bit integers in a right by the amount…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_permute_ps","","Shuffle single-precision (32-bit) floating-point elements…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_permute_ps","","Shuffle single-precision (32-bit) floating-point elements…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_permute_ps","","Shuffle single-precision (32-bit) floating-point elements…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_permute_pd","","Shuffle double-precision (64-bit) floating-point elements…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_permute_pd","","Shuffle double-precision (64-bit) floating-point elements…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_permute_pd","","Shuffle double-precision (64-bit) floating-point elements…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_permutex_epi64","","Shuffle 64-bit integers in a within 256-bit lanes using…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_permutex_epi64","","Shuffle 64-bit integers in a within 256-bit lanes using…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_permutex_epi64","","Shuffle 64-bit integers in a within 256-bit lanes using…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_permutex_pd","","Shuffle double-precision (64-bit) floating-point elements…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_permutex_pd","","Shuffle double-precision (64-bit) floating-point elements…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_permutex_pd","","Shuffle double-precision (64-bit) floating-point elements…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_permutevar_epi32","","Shuffle 32-bit integers in a across lanes using the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_permutevar_epi32","","Shuffle 32-bit integers in a across lanes using the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_permutevar_ps","","Shuffle single-precision (32-bit) floating-point elements…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_mask_permutevar_ps","","Shuffle single-precision (32-bit) floating-point elements…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_maskz_permutevar_ps","","Shuffle single-precision (32-bit) floating-point elements…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_permutevar_pd","","Shuffle double-precision (64-bit) floating-point elements…",null,[[["__m512d",3],["__m512i",3]],["__m512d",3]]],[5,"_mm512_mask_permutevar_pd","","Shuffle double-precision (64-bit) floating-point elements…",null,[[["__m512d",3],["__m512i",3]],["__m512d",3]]],[5,"_mm512_maskz_permutevar_pd","","Shuffle double-precision (64-bit) floating-point elements…",null,[[["__m512d",3],["__m512i",3]],["__m512d",3]]],[5,"_mm512_permutexvar_epi32","","Shuffle 32-bit integers in a across lanes using the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_permutexvar_epi32","","Shuffle 32-bit integers in a across lanes using the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_permutexvar_epi32","","Shuffle 32-bit integers in a across lanes using the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_permutexvar_epi64","","Shuffle 64-bit integers in a across lanes using the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_permutexvar_epi64","","Shuffle 64-bit integers in a across lanes using the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_permutexvar_epi64","","Shuffle 64-bit integers in a across lanes using the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_permutexvar_ps","","Shuffle single-precision (32-bit) floating-point elements…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_mask_permutexvar_ps","","Shuffle single-precision (32-bit) floating-point elements…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_maskz_permutexvar_ps","","Shuffle single-precision (32-bit) floating-point elements…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_permutexvar_pd","","Shuffle double-precision (64-bit) floating-point elements…",null,[[["__m512d",3],["__m512i",3]],["__m512d",3]]],[5,"_mm512_mask_permutexvar_pd","","Shuffle double-precision (64-bit) floating-point elements…",null,[[["__m512d",3],["__m512i",3]],["__m512d",3]]],[5,"_mm512_maskz_permutexvar_pd","","Shuffle double-precision (64-bit) floating-point elements…",null,[[["__m512d",3],["__m512i",3]],["__m512d",3]]],[5,"_mm512_permutex2var_epi32","","Shuffle 32-bit integers in a and b across lanes using the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_permutex2var_epi32","","Shuffle 32-bit integers in a and b across lanes using the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_permutex2var_epi32","","Shuffle 32-bit integers in a and b across lanes using the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask2_permutex2var_epi32","","Shuffle 32-bit integers in a and b across lanes using the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_permutex2var_epi64","","Shuffle 64-bit integers in a and b across lanes using the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_permutex2var_epi64","","Shuffle 64-bit integers in a and b across lanes using the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_permutex2var_epi64","","Shuffle 64-bit integers in a and b across lanes using the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask2_permutex2var_epi64","","Shuffle 64-bit integers in a and b across lanes using the…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_permutex2var_ps","","Shuffle single-precision (32-bit) floating-point elements…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_mask_permutex2var_ps","","Shuffle single-precision (32-bit) floating-point elements…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_maskz_permutex2var_ps","","Shuffle single-precision (32-bit) floating-point elements…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_mask2_permutex2var_ps","","Shuffle single-precision (32-bit) floating-point elements…",null,[[["__m512",3],["__m512i",3]],["__m512",3]]],[5,"_mm512_permutex2var_pd","","Shuffle double-precision (64-bit) floating-point elements…",null,[[["__m512d",3],["__m512i",3]],["__m512d",3]]],[5,"_mm512_mask_permutex2var_pd","","Shuffle double-precision (64-bit) floating-point elements…",null,[[["__m512d",3],["__m512i",3]],["__m512d",3]]],[5,"_mm512_maskz_permutex2var_pd","","Shuffle double-precision (64-bit) floating-point elements…",null,[[["__m512d",3],["__m512i",3]],["__m512d",3]]],[5,"_mm512_mask2_permutex2var_pd","","Shuffle double-precision (64-bit) floating-point elements…",null,[[["__m512d",3],["__m512i",3]],["__m512d",3]]],[5,"_mm512_shuffle_epi32","","Shuffle single-precision (32-bit) floating-point elements…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_shuffle_epi32","","Shuffle 32-bit integers in a within 128-bit lanes using…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_shuffle_epi32","","Shuffle 32-bit integers in a within 128-bit lanes using…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_shuffle_ps","","Shuffle single-precision (32-bit) floating-point elements…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_shuffle_ps","","Shuffle single-precision (32-bit) floating-point elements…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_shuffle_ps","","Shuffle single-precision (32-bit) floating-point elements…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_shuffle_pd","","Shuffle double-precision (64-bit) floating-point elements…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_shuffle_pd","","Shuffle double-precision (64-bit) floating-point elements…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_shuffle_pd","","Shuffle double-precision (64-bit) floating-point elements…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_shuffle_i32x4","","Shuffle 128-bits (composed of 4 32-bit integers) selected…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_shuffle_i32x4","","Shuffle 128-bits (composed of 4 32-bit integers) selected…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_shuffle_i32x4","","Shuffle 128-bits (composed of 4 32-bit integers) selected…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_shuffle_i64x2","","Shuffle 128-bits (composed of 2 64-bit integers) selected…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_shuffle_i64x2","","Shuffle 128-bits (composed of 2 64-bit integers) selected…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_shuffle_i64x2","","Shuffle 128-bits (composed of 2 64-bit integers) selected…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_shuffle_f32x4","","Shuffle 128-bits (composed of 4 single-precision (32-bit)…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_shuffle_f32x4","","Shuffle 128-bits (composed of 4 single-precision (32-bit)…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_shuffle_f32x4","","Shuffle 128-bits (composed of 4 single-precision (32-bit)…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_shuffle_f64x2","","Shuffle 128-bits (composed of 2 double-precision (64-bit)…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_shuffle_f64x2","","Shuffle 128-bits (composed of 2 double-precision (64-bit)…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_shuffle_f64x2","","Shuffle 128-bits (composed of 2 double-precision (64-bit)…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_extractf32x4_ps","","Extract 128 bits (composed of 4 packed single-precision…",null,[[["__m512",3]],["__m128",3]]],[5,"_mm512_mask_extractf32x4_ps","","Extract 128 bits (composed of 4 packed single-precision…",null,[[["__m512",3],["__m128",3]],["__m128",3]]],[5,"_mm512_maskz_extractf32x4_ps","","Extract 128 bits (composed of 4 packed single-precision…",null,[[["__m512",3]],["__m128",3]]],[5,"_mm512_extracti64x4_epi64","","Extract 256 bits (composed of 4 packed 64-bit integers)…",null,[[["__m512i",3]],["__m256i",3]]],[5,"_mm512_mask_extracti64x4_epi64","","Extract 256 bits (composed of 4 packed 64-bit integers)…",null,[[["__m256i",3],["__m512i",3]],["__m256i",3]]],[5,"_mm512_maskz_extracti64x4_epi64","","Extract 256 bits (composed of 4 packed 64-bit integers)…",null,[[["__m512i",3]],["__m256i",3]]],[5,"_mm512_extractf64x4_pd","","Extract 256 bits (composed of 4 packed double-precision…",null,[[["__m512d",3]],["__m256d",3]]],[5,"_mm512_mask_extractf64x4_pd","","Extract 256 bits (composed of 4 packed double-precision…",null,[[["__m256d",3],["__m512d",3]],["__m256d",3]]],[5,"_mm512_maskz_extractf64x4_pd","","Extract 256 bits (composed of 4 packed double-precision…",null,[[["__m512d",3]],["__m256d",3]]],[5,"_mm512_extracti32x4_epi32","","Extract 128 bits (composed of 4 packed 32-bit integers)…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_mask_extracti32x4_epi32","","Extract 128 bits (composed of 4 packed 32-bit integers)…",null,[[["__m512i",3],["__m128i",3]],["__m128i",3]]],[5,"_mm512_maskz_extracti32x4_epi32","","Extract 128 bits (composed of 4 packed 32-bit integers)…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_moveldup_ps","","Duplicate even-indexed single-precision (32-bit)…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_moveldup_ps","","Duplicate even-indexed single-precision (32-bit)…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_moveldup_ps","","Duplicate even-indexed single-precision (32-bit)…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_movehdup_ps","","Duplicate odd-indexed single-precision (32-bit)…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_movehdup_ps","","Duplicate odd-indexed single-precision (32-bit)…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_movehdup_ps","","Duplicate odd-indexed single-precision (32-bit)…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_movedup_pd","","Duplicate even-indexed double-precision (64-bit)…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_movedup_pd","","Duplicate even-indexed double-precision (64-bit)…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_movedup_pd","","Duplicate even-indexed double-precision (64-bit)…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_inserti32x4","","Copy a to dst, then insert 128 bits (composed of 4 packed…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_inserti32x4","","Copy a to tmp, then insert 128 bits (composed of 4 packed…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_inserti32x4","","Copy a to tmp, then insert 128 bits (composed of 4 packed…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_inserti64x4","","Copy a to dst, then insert 256 bits (composed of 4 packed…",null,[[["__m256i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_inserti64x4","","Copy a to tmp, then insert 256 bits (composed of 4 packed…",null,[[["__m256i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_inserti64x4","","Copy a to tmp, then insert 256 bits (composed of 4 packed…",null,[[["__m256i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_insertf32x4","","Copy a to dst, then insert 128 bits (composed of 4 packed…",null,[[["__m512",3],["__m128",3]],["__m512",3]]],[5,"_mm512_mask_insertf32x4","","Copy a to tmp, then insert 128 bits (composed of 4 packed…",null,[[["__m512",3],["__m128",3]],["__m512",3]]],[5,"_mm512_maskz_insertf32x4","","Copy a to tmp, then insert 128 bits (composed of 4 packed…",null,[[["__m512",3],["__m128",3]],["__m512",3]]],[5,"_mm512_insertf64x4","","Copy a to dst, then insert 256 bits (composed of 4 packed…",null,[[["__m512d",3],["__m256d",3]],["__m512d",3]]],[5,"_mm512_mask_insertf64x4","","Copy a to tmp, then insert 256 bits (composed of 4 packed…",null,[[["__m512d",3],["__m256d",3]],["__m512d",3]]],[5,"_mm512_maskz_insertf64x4","","Copy a to tmp, then insert 256 bits (composed of 4 packed…",null,[[["__m512d",3],["__m256d",3]],["__m512d",3]]],[5,"_mm512_unpackhi_epi32","","Unpack and interleave 32-bit integers from the high half…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_unpackhi_epi32","","Unpack and interleave 32-bit integers from the high half…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_unpackhi_epi32","","Unpack and interleave 32-bit integers from the high half…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_unpackhi_epi64","","Unpack and interleave 64-bit integers from the high half…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_unpackhi_epi64","","Unpack and interleave 64-bit integers from the high half…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_unpackhi_epi64","","Unpack and interleave 64-bit integers from the high half…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_unpackhi_ps","","Unpack and interleave single-precision (32-bit)…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_unpackhi_ps","","Unpack and interleave single-precision (32-bit)…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_unpackhi_ps","","Unpack and interleave single-precision (32-bit)…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_unpackhi_pd","","Unpack and interleave double-precision (64-bit)…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_unpackhi_pd","","Unpack and interleave double-precision (64-bit)…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_unpackhi_pd","","Unpack and interleave double-precision (64-bit)…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_unpacklo_epi32","","Unpack and interleave 32-bit integers from the low half of…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_unpacklo_epi32","","Unpack and interleave 32-bit integers from the low half of…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_unpacklo_epi32","","Unpack and interleave 32-bit integers from the low half of…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_unpacklo_epi64","","Unpack and interleave 64-bit integers from the low half of…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_unpacklo_epi64","","Unpack and interleave 64-bit integers from the low half of…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_unpacklo_epi64","","Unpack and interleave 64-bit integers from the low half of…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_unpacklo_ps","","Unpack and interleave single-precision (32-bit)…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_unpacklo_ps","","Unpack and interleave single-precision (32-bit)…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_maskz_unpacklo_ps","","Unpack and interleave single-precision (32-bit)…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_unpacklo_pd","","Unpack and interleave double-precision (64-bit)…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_mask_unpacklo_pd","","Unpack and interleave double-precision (64-bit)…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_maskz_unpacklo_pd","","Unpack and interleave double-precision (64-bit)…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_castps128_ps512","","Cast vector of type __m128 to type __m512; the upper 384…",null,[[["__m128",3]],["__m512",3]]],[5,"_mm512_castps256_ps512","","Cast vector of type __m256 to type __m512; the upper 256…",null,[[["__m256",3]],["__m512",3]]],[5,"_mm512_zextps128_ps512","","Cast vector of type __m128 to type __m512; the upper 384…",null,[[["__m128",3]],["__m512",3]]],[5,"_mm512_zextps256_ps512","","Cast vector of type __m256 to type __m512; the upper 256…",null,[[["__m256",3]],["__m512",3]]],[5,"_mm512_castps512_ps128","","Cast vector of type __m512 to type __m128. This intrinsic…",null,[[["__m512",3]],["__m128",3]]],[5,"_mm512_castps512_ps256","","Cast vector of type __m512 to type __m256. This intrinsic…",null,[[["__m512",3]],["__m256",3]]],[5,"_mm512_castps_pd","","Cast vector of type __m512 to type __m512d. This intrinsic…",null,[[["__m512",3]],["__m512d",3]]],[5,"_mm512_castps_si512","","Cast vector of type __m512 to type __m512i. This intrinsic…",null,[[["__m512",3]],["__m512i",3]]],[5,"_mm512_castpd128_pd512","","Cast vector of type __m128d to type __m512d; the upper 384…",null,[[["__m128d",3]],["__m512d",3]]],[5,"_mm512_castpd256_pd512","","Cast vector of type __m256d to type __m512d; the upper 256…",null,[[["__m256d",3]],["__m512d",3]]],[5,"_mm512_zextpd128_pd512","","Cast vector of type __m128d to type __m512d; the upper 384…",null,[[["__m128d",3]],["__m512d",3]]],[5,"_mm512_zextpd256_pd512","","Cast vector of type __m256d to type __m512d; the upper 256…",null,[[["__m256d",3]],["__m512d",3]]],[5,"_mm512_castpd512_pd128","","Cast vector of type __m512d to type __m128d. This…",null,[[["__m512d",3]],["__m128d",3]]],[5,"_mm512_castpd512_pd256","","Cast vector of type __m512d to type __m256d. This…",null,[[["__m512d",3]],["__m256d",3]]],[5,"_mm512_castpd_ps","","Cast vector of type __m512d to type __m512. This intrinsic…",null,[[["__m512d",3]],["__m512",3]]],[5,"_mm512_castpd_si512","","Cast vector of type __m512d to type __m512i. This…",null,[[["__m512d",3]],["__m512i",3]]],[5,"_mm512_castsi128_si512","","Cast vector of type __m128i to type __m512i; the upper 384…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_castsi256_si512","","Cast vector of type __m256i to type __m512i; the upper 256…",null,[[["__m256i",3]],["__m512i",3]]],[5,"_mm512_zextsi128_si512","","Cast vector of type __m128i to type __m512i; the upper 384…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_zextsi256_si512","","Cast vector of type __m256i to type __m512i; the upper 256…",null,[[["__m256i",3]],["__m512i",3]]],[5,"_mm512_castsi512_si128","","Cast vector of type __m512i to type __m128i. This…",null,[[["__m512i",3]],["__m128i",3]]],[5,"_mm512_castsi512_si256","","Cast vector of type __m512i to type __m256i. This…",null,[[["__m512i",3]],["__m256i",3]]],[5,"_mm512_castsi512_ps","","Cast vector of type __m512i to type __m512. This intrinsic…",null,[[["__m512i",3]],["__m512",3]]],[5,"_mm512_castsi512_pd","","Cast vector of type __m512i to type __m512d. This…",null,[[["__m512i",3]],["__m512d",3]]],[5,"_mm512_broadcastd_epi32","","Broadcast the low packed 32-bit integer from a to all…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_mask_broadcastd_epi32","","Broadcast the low packed 32-bit integer from a to all…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_broadcastd_epi32","","Broadcast the low packed 32-bit integer from a to all…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_broadcastq_epi64","","Broadcast the low packed 64-bit integer from a to all…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_mask_broadcastq_epi64","","Broadcast the low packed 64-bit integer from a to all…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_broadcastq_epi64","","Broadcast the low packed 64-bit integer from a to all…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_broadcastss_ps","","Broadcast the low single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m512",3]]],[5,"_mm512_mask_broadcastss_ps","","Broadcast the low single-precision (32-bit) floating-point…",null,[[["__m512",3],["__m128",3]],["__m512",3]]],[5,"_mm512_maskz_broadcastss_ps","","Broadcast the low single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m512",3]]],[5,"_mm512_broadcastsd_pd","","Broadcast the low double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m512d",3]]],[5,"_mm512_mask_broadcastsd_pd","","Broadcast the low double-precision (64-bit) floating-point…",null,[[["__m512d",3],["__m128d",3]],["__m512d",3]]],[5,"_mm512_maskz_broadcastsd_pd","","Broadcast the low double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m512d",3]]],[5,"_mm512_broadcast_i32x4","","Broadcast the 4 packed 32-bit integers from a to all…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_mask_broadcast_i32x4","","Broadcast the 4 packed 32-bit integers from a to all…",null,[[["__m128i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_broadcast_i32x4","","Broadcast the 4 packed 32-bit integers from a to all…",null,[[["__m128i",3]],["__m512i",3]]],[5,"_mm512_broadcast_i64x4","","Broadcast the 4 packed 64-bit integers from a to all…",null,[[["__m256i",3]],["__m512i",3]]],[5,"_mm512_mask_broadcast_i64x4","","Broadcast the 4 packed 64-bit integers from a to all…",null,[[["__m256i",3],["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_broadcast_i64x4","","Broadcast the 4 packed 64-bit integers from a to all…",null,[[["__m256i",3]],["__m512i",3]]],[5,"_mm512_broadcast_f32x4","","Broadcast the 4 packed single-precision (32-bit)…",null,[[["__m128",3]],["__m512",3]]],[5,"_mm512_mask_broadcast_f32x4","","Broadcast the 4 packed single-precision (32-bit)…",null,[[["__m512",3],["__m128",3]],["__m512",3]]],[5,"_mm512_maskz_broadcast_f32x4","","Broadcast the 4 packed single-precision (32-bit)…",null,[[["__m128",3]],["__m512",3]]],[5,"_mm512_broadcast_f64x4","","Broadcast the 4 packed double-precision (64-bit)…",null,[[["__m256d",3]],["__m512d",3]]],[5,"_mm512_mask_broadcast_f64x4","","Broadcast the 4 packed double-precision (64-bit)…",null,[[["__m512d",3],["__m256d",3]],["__m512d",3]]],[5,"_mm512_maskz_broadcast_f64x4","","Broadcast the 4 packed double-precision (64-bit)…",null,[[["__m256d",3]],["__m512d",3]]],[5,"_mm512_mask_blend_epi32","","Blend packed 32-bit integers from a and b using control…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_blend_epi64","","Blend packed 64-bit integers from a and b using control…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_blend_ps","","Blend packed single-precision (32-bit) floating-point…",null,[[["__m512",3]],["__m512",3]]],[5,"_mm512_mask_blend_pd","","Blend packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]],["__m512d",3]]],[5,"_mm512_alignr_epi32","","Concatenate a and b into a 128-byte immediate result,…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_alignr_epi32","","Concatenate a and b into a 128-byte immediate result,…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_alignr_epi32","","Concatenate a and b into a 128-byte immediate result,…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_alignr_epi64","","Concatenate a and b into a 128-byte immediate result,…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_alignr_epi64","","Concatenate a and b into a 128-byte immediate result,…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_alignr_epi64","","Concatenate a and b into a 128-byte immediate result,…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_and_epi32","","Compute the bitwise AND of packed 32-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_and_epi32","","Performs element-by-element bitwise AND between packed…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_and_epi32","","Compute the bitwise AND of packed 32-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_and_epi64","","Compute the bitwise AND of 512 bits (composed of packed…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_and_epi64","","Compute the bitwise AND of packed 64-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_and_epi64","","Compute the bitwise AND of packed 32-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_and_si512","","Compute the bitwise AND of 512 bits (representing integer…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_or_epi32","","Compute the bitwise OR of packed 32-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_or_epi32","","Compute the bitwise OR of packed 32-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_or_epi32","","Compute the bitwise OR of packed 32-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_or_epi64","","Compute the bitwise OR of packed 64-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_or_epi64","","Compute the bitwise OR of packed 64-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_or_epi64","","Compute the bitwise OR of packed 64-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_or_si512","","Compute the bitwise OR of 512 bits (representing integer…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_xor_epi32","","Compute the bitwise XOR of packed 32-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_xor_epi32","","Compute the bitwise XOR of packed 32-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_xor_epi32","","Compute the bitwise XOR of packed 32-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_xor_epi64","","Compute the bitwise XOR of packed 64-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_xor_epi64","","Compute the bitwise XOR of packed 64-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_xor_epi64","","Compute the bitwise XOR of packed 64-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_xor_si512","","Compute the bitwise XOR of 512 bits (representing integer…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_andnot_epi32","","Compute the bitwise NOT of packed 32-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_andnot_epi32","","Compute the bitwise NOT of packed 32-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_andnot_epi32","","Compute the bitwise NOT of packed 32-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_andnot_epi64","","Compute the bitwise NOT of 512 bits (composed of packed…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_mask_andnot_epi64","","Compute the bitwise NOT of packed 64-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_andnot_epi64","","Compute the bitwise NOT of packed 64-bit integers in a and…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_andnot_si512","","Compute the bitwise NOT of 512 bits (representing integer…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_kand_mask16","","Compute the bitwise AND of 16-bit masks a and b, and store…",null,[[]]],[5,"_mm512_kand","","Compute the bitwise AND of 16-bit masks a and b, and store…",null,[[]]],[5,"_kor_mask16","","Compute the bitwise OR of 16-bit masks a and b, and store…",null,[[]]],[5,"_mm512_kor","","Compute the bitwise OR of 16-bit masks a and b, and store…",null,[[]]],[5,"_kxor_mask16","","Compute the bitwise XOR of 16-bit masks a and b, and store…",null,[[]]],[5,"_mm512_kxor","","Compute the bitwise XOR of 16-bit masks a and b, and store…",null,[[]]],[5,"_knot_mask16","","Compute the bitwise NOT of 16-bit mask a, and store the…",null,[[]]],[5,"_mm512_knot","","Compute the bitwise NOT of 16-bit mask a, and store the…",null,[[]]],[5,"_kandn_mask16","","Compute the bitwise NOT of 16-bit masks a and then AND…",null,[[]]],[5,"_mm512_kandn","","Compute the bitwise NOT of 16-bit masks a and then AND…",null,[[]]],[5,"_kxnor_mask16","","Compute the bitwise XNOR of 16-bit masks a and b, and…",null,[[]]],[5,"_mm512_kxnor","","Compute the bitwise XNOR of 16-bit masks a and b, and…",null,[[]]],[5,"_mm512_kmov","","Copy 16-bit mask a to k.",null,[[]]],[5,"_mm512_int2mask","","Converts integer mask into bitmask, storing the result in…",null,[[]]],[5,"_mm512_mask2int","","Converts bit mask k1 into an integer value, storing the…",null,[[]]],[5,"_mm512_kunpackb","","Unpack and interleave 8 bits from masks a and b, and store…",null,[[]]],[5,"_mm512_kortestc","","Performs bitwise OR between k1 and k2, storing the result…",null,[[]]],[5,"_mm512_test_epi32_mask","","Compute the bitwise AND of packed 32-bit integers in a and…",null,[[["__m512i",3]]]],[5,"_mm512_mask_test_epi32_mask","","Compute the bitwise AND of packed 32-bit integers in a and…",null,[[["__m512i",3]]]],[5,"_mm512_test_epi64_mask","","Compute the bitwise AND of packed 64-bit integers in a and…",null,[[["__m512i",3]]]],[5,"_mm512_mask_test_epi64_mask","","Compute the bitwise AND of packed 64-bit integers in a and…",null,[[["__m512i",3]]]],[5,"_mm512_testn_epi32_mask","","Compute the bitwise NAND of packed 32-bit integers in a…",null,[[["__m512i",3]]]],[5,"_mm512_mask_testn_epi32_mask","","Compute the bitwise NAND of packed 32-bit integers in a…",null,[[["__m512i",3]]]],[5,"_mm512_testn_epi64_mask","","Compute the bitwise NAND of packed 64-bit integers in a…",null,[[["__m512i",3]]]],[5,"_mm512_mask_testn_epi64_mask","","Compute the bitwise NAND of packed 64-bit integers in a…",null,[[["__m512i",3]]]],[5,"_mm512_stream_ps","","Store 512-bits (composed of 16 packed single-precision…",null,[[["__m512",3]]]],[5,"_mm512_stream_pd","","Store 512-bits (composed of 8 packed double-precision…",null,[[["__m512d",3]]]],[5,"_mm512_stream_si512","","Store 512-bits of integer data from a into memory using a…",null,[[["__m512i",3]]]],[5,"_mm512_set_ps","","Sets packed 32-bit integers in `dst` with the supplied…",null,[[],["__m512",3]]],[5,"_mm512_setr_ps","","Sets packed 32-bit integers in `dst` with the supplied…",null,[[],["__m512",3]]],[5,"_mm512_set1_pd","","Broadcast 64-bit float `a` to all elements of `dst`.",null,[[],["__m512d",3]]],[5,"_mm512_set1_ps","","Broadcast 32-bit float `a` to all elements of `dst`.",null,[[],["__m512",3]]],[5,"_mm512_set_epi32","","Sets packed 32-bit integers in `dst` with the supplied…",null,[[],["__m512i",3]]],[5,"_mm512_set1_epi8","","Broadcast 8-bit integer a to all elements of dst.",null,[[],["__m512i",3]]],[5,"_mm512_set1_epi16","","Broadcast the low packed 16-bit integer from a to all all…",null,[[],["__m512i",3]]],[5,"_mm512_set1_epi32","","Broadcast 32-bit integer `a` to all elements of `dst`.",null,[[],["__m512i",3]]],[5,"_mm512_mask_set1_epi32","","Broadcast 32-bit integer a to all elements of dst using…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_set1_epi32","","Broadcast 32-bit integer a to all elements of dst using…",null,[[],["__m512i",3]]],[5,"_mm512_set1_epi64","","Broadcast 64-bit integer `a` to all elements of `dst`.",null,[[],["__m512i",3]]],[5,"_mm512_mask_set1_epi64","","Broadcast 64-bit integer a to all elements of dst using…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_maskz_set1_epi64","","Broadcast 64-bit integer a to all elements of dst using…",null,[[],["__m512i",3]]],[5,"_mm512_set4_epi64","","Set packed 64-bit integers in dst with the repeated 4…",null,[[],["__m512i",3]]],[5,"_mm512_setr4_epi64","","Set packed 64-bit integers in dst with the repeated 4…",null,[[],["__m512i",3]]],[5,"_mm512_cmplt_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_mask_cmplt_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_cmpnlt_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_mask_cmpnlt_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_cmple_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_mask_cmple_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_cmpnle_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_mask_cmpnle_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_cmpeq_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_mask_cmpeq_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_cmpneq_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_mask_cmpneq_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_cmp_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_mask_cmp_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_cmp_round_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_mask_cmp_round_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_cmpord_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_mask_cmpord_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_cmpunord_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_mask_cmpunord_ps_mask","","Compare packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_cmplt_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_mask_cmplt_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_cmpnlt_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_mask_cmpnlt_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_cmple_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_mask_cmple_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_cmpnle_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_mask_cmpnle_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_cmpeq_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_mask_cmpeq_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_cmpneq_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_mask_cmpneq_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_cmp_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_mask_cmp_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_cmp_round_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_mask_cmp_round_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_cmpord_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_mask_cmpord_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_cmpunord_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_mask_cmpunord_pd_mask","","Compare packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm_cmp_ss_mask","","Compare the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]]]],[5,"_mm_mask_cmp_ss_mask","","Compare the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]]]],[5,"_mm_cmp_round_ss_mask","","Compare the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]]]],[5,"_mm_mask_cmp_round_ss_mask","","Compare the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]]]],[5,"_mm_cmp_sd_mask","","Compare the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]]]],[5,"_mm_mask_cmp_sd_mask","","Compare the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]]]],[5,"_mm_cmp_round_sd_mask","","Compare the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]]]],[5,"_mm_mask_cmp_round_sd_mask","","Compare the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]]]],[5,"_mm512_cmplt_epu32_mask","","Compare packed unsigned 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmplt_epu32_mask","","Compare packed unsigned 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmpgt_epu32_mask","","Compare packed unsigned 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmpgt_epu32_mask","","Compare packed unsigned 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmple_epu32_mask","","Compare packed unsigned 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmple_epu32_mask","","Compare packed unsigned 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmpge_epu32_mask","","Compare packed unsigned 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmpge_epu32_mask","","Compare packed unsigned 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmpeq_epu32_mask","","Compare packed unsigned 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmpeq_epu32_mask","","Compare packed unsigned 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmpneq_epu32_mask","","Compare packed unsigned 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmpneq_epu32_mask","","Compare packed unsigned 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmp_epu32_mask","","Compare packed unsigned 32-bit integers in a and b based…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmp_epu32_mask","","Compare packed unsigned 32-bit integers in a and b based…",null,[[["__m512i",3]]]],[5,"_mm512_cmplt_epi32_mask","","Compare packed signed 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmplt_epi32_mask","","Compare packed signed 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmpgt_epi32_mask","","Compare packed signed 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmpgt_epi32_mask","","Compare packed signed 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmple_epi32_mask","","Compare packed signed 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmple_epi32_mask","","Compare packed signed 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmpge_epi32_mask","","Compare packed signed 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmpge_epi32_mask","","Compare packed signed 32-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmpeq_epi32_mask","","Compare packed 32-bit integers in a and b for equality,…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmpeq_epi32_mask","","Compare packed 32-bit integers in a and b for equality,…",null,[[["__m512i",3]]]],[5,"_mm512_cmpneq_epi32_mask","","Compare packed 32-bit integers in a and b for not-equal,…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmpneq_epi32_mask","","Compare packed 32-bit integers in a and b for not-equal,…",null,[[["__m512i",3]]]],[5,"_mm512_cmp_epi32_mask","","Compare packed signed 32-bit integers in a and b based on…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmp_epi32_mask","","Compare packed signed 32-bit integers in a and b based on…",null,[[["__m512i",3]]]],[5,"_mm512_cmplt_epu64_mask","","Compare packed unsigned 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmplt_epu64_mask","","Compare packed unsigned 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmpgt_epu64_mask","","Compare packed unsigned 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmpgt_epu64_mask","","Compare packed unsigned 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmple_epu64_mask","","Compare packed unsigned 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmple_epu64_mask","","Compare packed unsigned 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmpge_epu64_mask","","Compare packed unsigned 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmpge_epu64_mask","","Compare packed unsigned 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmpeq_epu64_mask","","Compare packed unsigned 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmpeq_epu64_mask","","Compare packed unsigned 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmpneq_epu64_mask","","Compare packed unsigned 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmpneq_epu64_mask","","Compare packed unsigned 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmp_epu64_mask","","Compare packed unsigned 64-bit integers in a and b based…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmp_epu64_mask","","Compare packed unsigned 64-bit integers in a and b based…",null,[[["__m512i",3]]]],[5,"_mm512_cmplt_epi64_mask","","Compare packed signed 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmplt_epi64_mask","","Compare packed signed 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmpgt_epi64_mask","","Compare packed signed 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmpgt_epi64_mask","","Compare packed signed 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmple_epi64_mask","","Compare packed signed 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmple_epi64_mask","","Compare packed signed 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmpge_epi64_mask","","Compare packed signed 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmpge_epi64_mask","","Compare packed signed 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmpeq_epi64_mask","","Compare packed 64-bit integers in a and b for equality,…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmpeq_epi64_mask","","Compare packed 64-bit integers in a and b for equality,…",null,[[["__m512i",3]]]],[5,"_mm512_cmpneq_epi64_mask","","Compare packed signed 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmpneq_epi64_mask","","Compare packed signed 64-bit integers in a and b for…",null,[[["__m512i",3]]]],[5,"_mm512_cmp_epi64_mask","","Compare packed signed 64-bit integers in a and b based on…",null,[[["__m512i",3]]]],[5,"_mm512_mask_cmp_epi64_mask","","Compare packed signed 64-bit integers in a and b based on…",null,[[["__m512i",3]]]],[5,"_mm512_reduce_add_epi32","","Reduce the packed 32-bit integers in a by addition.…",null,[[["__m512i",3]]]],[5,"_mm512_mask_reduce_add_epi32","","Reduce the packed 32-bit integers in a by addition using…",null,[[["__m512i",3]]]],[5,"_mm512_reduce_add_epi64","","Reduce the packed 64-bit integers in a by addition.…",null,[[["__m512i",3]]]],[5,"_mm512_mask_reduce_add_epi64","","Reduce the packed 64-bit integers in a by addition using…",null,[[["__m512i",3]]]],[5,"_mm512_reduce_add_ps","","Reduce the packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_mask_reduce_add_ps","","Reduce the packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_reduce_add_pd","","Reduce the packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_mask_reduce_add_pd","","Reduce the packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_reduce_mul_epi32","","Reduce the packed 32-bit integers in a by multiplication.…",null,[[["__m512i",3]]]],[5,"_mm512_mask_reduce_mul_epi32","","Reduce the packed 32-bit integers in a by multiplication…",null,[[["__m512i",3]]]],[5,"_mm512_reduce_mul_epi64","","Reduce the packed 64-bit integers in a by multiplication.…",null,[[["__m512i",3]]]],[5,"_mm512_mask_reduce_mul_epi64","","Reduce the packed 64-bit integers in a by multiplication…",null,[[["__m512i",3]]]],[5,"_mm512_reduce_mul_ps","","Reduce the packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_mask_reduce_mul_ps","","Reduce the packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_reduce_mul_pd","","Reduce the packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_mask_reduce_mul_pd","","Reduce the packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_reduce_max_epi32","","Reduce the packed signed 32-bit integers in a by maximum.…",null,[[["__m512i",3]]]],[5,"_mm512_mask_reduce_max_epi32","","Reduce the packed signed 32-bit integers in a by maximum…",null,[[["__m512i",3]]]],[5,"_mm512_reduce_max_epi64","","Reduce the packed signed 64-bit integers in a by maximum.…",null,[[["__m512i",3]]]],[5,"_mm512_mask_reduce_max_epi64","","Reduce the packed signed 64-bit integers in a by maximum…",null,[[["__m512i",3]]]],[5,"_mm512_reduce_max_epu32","","Reduce the packed unsigned 32-bit integers in a by…",null,[[["__m512i",3]]]],[5,"_mm512_mask_reduce_max_epu32","","Reduce the packed unsigned 32-bit integers in a by maximum…",null,[[["__m512i",3]]]],[5,"_mm512_reduce_max_epu64","","Reduce the packed unsigned 64-bit integers in a by…",null,[[["__m512i",3]]]],[5,"_mm512_mask_reduce_max_epu64","","Reduce the packed unsigned 64-bit integers in a by maximum…",null,[[["__m512i",3]]]],[5,"_mm512_reduce_max_ps","","Reduce the packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_mask_reduce_max_ps","","Reduce the packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_reduce_max_pd","","Reduce the packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_mask_reduce_max_pd","","Reduce the packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_reduce_min_epi32","","Reduce the packed signed 32-bit integers in a by minimum.…",null,[[["__m512i",3]]]],[5,"_mm512_mask_reduce_min_epi32","","Reduce the packed signed 32-bit integers in a by maximum…",null,[[["__m512i",3]]]],[5,"_mm512_reduce_min_epi64","","Reduce the packed signed 64-bit integers in a by minimum.…",null,[[["__m512i",3]]]],[5,"_mm512_mask_reduce_min_epi64","","Reduce the packed signed 64-bit integers in a by maximum…",null,[[["__m512i",3]]]],[5,"_mm512_reduce_min_epu32","","Reduce the packed unsigned 32-bit integers in a by…",null,[[["__m512i",3]]]],[5,"_mm512_mask_reduce_min_epu32","","Reduce the packed unsigned 32-bit integers in a by maximum…",null,[[["__m512i",3]]]],[5,"_mm512_reduce_min_epu64","","Reduce the packed unsigned 64-bit integers in a by…",null,[[["__m512i",3]]]],[5,"_mm512_mask_reduce_min_epu64","","Reduce the packed signed 64-bit integers in a by maximum…",null,[[["__m512i",3]]]],[5,"_mm512_reduce_min_ps","","Reduce the packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_mask_reduce_min_ps","","Reduce the packed single-precision (32-bit) floating-point…",null,[[["__m512",3]]]],[5,"_mm512_reduce_min_pd","","Reduce the packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_mask_reduce_min_pd","","Reduce the packed double-precision (64-bit) floating-point…",null,[[["__m512d",3]]]],[5,"_mm512_reduce_and_epi32","","Reduce the packed 32-bit integers in a by bitwise AND.…",null,[[["__m512i",3]]]],[5,"_mm512_mask_reduce_and_epi32","","Reduce the packed 32-bit integers in a by bitwise AND…",null,[[["__m512i",3]]]],[5,"_mm512_reduce_and_epi64","","Reduce the packed 64-bit integers in a by bitwise AND.…",null,[[["__m512i",3]]]],[5,"_mm512_mask_reduce_and_epi64","","Reduce the packed 64-bit integers in a by addition using…",null,[[["__m512i",3]]]],[5,"_mm512_reduce_or_epi32","","Reduce the packed 32-bit integers in a by bitwise OR.…",null,[[["__m512i",3]]]],[5,"_mm512_mask_reduce_or_epi32","","Reduce the packed 32-bit integers in a by bitwise OR using…",null,[[["__m512i",3]]]],[5,"_mm512_reduce_or_epi64","","Reduce the packed 64-bit integers in a by bitwise OR.…",null,[[["__m512i",3]]]],[5,"_mm512_mask_reduce_or_epi64","","Reduce the packed 64-bit integers in a by bitwise OR using…",null,[[["__m512i",3]]]],[5,"_mm512_undefined_pd","","Returns vector of type `__m512d` with undefined elements.",null,[[],["__m512d",3]]],[5,"_mm512_undefined_ps","","Returns vector of type `__m512` with undefined elements.",null,[[],["__m512",3]]],[5,"_mm512_undefined_epi32","","Return vector of type __m512i with undefined elements.",null,[[],["__m512i",3]]],[5,"_mm512_undefined","","Return vector of type __m512 with undefined elements.",null,[[],["__m512",3]]],[5,"_mm512_loadu_epi32","","Load 512-bits (composed of 16 packed 32-bit integers) from…",null,[[],["__m512i",3]]],[5,"_mm512_storeu_epi32","","Store 512-bits (composed of 16 packed 32-bit integers)…",null,[[["__m512i",3]]]],[5,"_mm512_loadu_epi64","","Load 512-bits (composed of 8 packed 64-bit integers) from…",null,[[],["__m512i",3]]],[5,"_mm512_storeu_epi64","","Store 512-bits (composed of 8 packed 64-bit integers) from…",null,[[["__m512i",3]]]],[5,"_mm512_loadu_si512","","Load 512-bits of integer data from memory into dst.…",null,[[],["__m512i",3]]],[5,"_mm512_storeu_si512","","Store 512-bits of integer data from a into memory.…",null,[[["__m512i",3]]]],[5,"_mm512_loadu_pd","","Loads 512-bits (composed of 8 packed double-precision…",null,[[],["__m512d",3]]],[5,"_mm512_storeu_pd","","Stores 512-bits (composed of 8 packed double-precision…",null,[[["__m512d",3]]]],[5,"_mm512_loadu_ps","","Loads 512-bits (composed of 16 packed single-precision…",null,[[],["__m512",3]]],[5,"_mm512_storeu_ps","","Stores 512-bits (composed of 16 packed single-precision…",null,[[["__m512",3]]]],[5,"_mm512_load_si512","","Load 512-bits of integer data from memory into dst.…",null,[[],["__m512i",3]]],[5,"_mm512_store_si512","","Store 512-bits of integer data from a into memory.…",null,[[["__m512i",3]]]],[5,"_mm512_load_epi32","","Load 512-bits (composed of 16 packed 32-bit integers) from…",null,[[],["__m512i",3]]],[5,"_mm512_store_epi32","","Store 512-bits (composed of 16 packed 32-bit integers)…",null,[[["__m512i",3]]]],[5,"_mm512_load_epi64","","Load 512-bits (composed of 8 packed 64-bit integers) from…",null,[[],["__m512i",3]]],[5,"_mm512_store_epi64","","Store 512-bits (composed of 8 packed 64-bit integers) from…",null,[[["__m512i",3]]]],[5,"_mm512_load_ps","","Load 512-bits (composed of 16 packed single-precision…",null,[[],["__m512",3]]],[5,"_mm512_store_ps","","Store 512-bits of integer data from a into memory.…",null,[[["__m512",3]]]],[5,"_mm512_load_pd","","Load 512-bits (composed of 8 packed double-precision…",null,[[],["__m512d",3]]],[5,"_mm512_store_pd","","Store 512-bits (composed of 8 packed double-precision…",null,[[["__m512d",3]]]],[5,"_mm512_setr_pd","","Set packed double-precision (64-bit) floating-point…",null,[[],["__m512d",3]]],[5,"_mm512_set_pd","","Set packed double-precision (64-bit) floating-point…",null,[[],["__m512d",3]]],[5,"_mm_mask_move_ss","","Move the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_move_ss","","Move the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_move_sd","","Move the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_move_sd","","Move the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_add_ss","","Add the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_add_ss","","Add the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_add_sd","","Add the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_add_sd","","Add the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_sub_ss","","Subtract the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_sub_ss","","Subtract the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_sub_sd","","Subtract the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_sub_sd","","Subtract the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_mul_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_mul_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_mul_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_mul_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_div_ss","","Divide the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_div_ss","","Divide the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_div_sd","","Divide the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_div_sd","","Divide the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_max_ss","","Compare the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_max_ss","","Compare the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_max_sd","","Compare the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_max_sd","","Compare the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_min_ss","","Compare the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_min_ss","","Compare the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_min_sd","","Compare the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_min_sd","","Compare the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_sqrt_ss","","Compute the square root of the lower single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_sqrt_ss","","Compute the square root of the lower single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_sqrt_sd","","Compute the square root of the lower double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_sqrt_sd","","Compute the square root of the lower double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_rsqrt14_ss","","Compute the approximate reciprocal square root of the…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_rsqrt14_ss","","Compute the approximate reciprocal square root of the…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_rsqrt14_ss","","Compute the approximate reciprocal square root of the…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_rsqrt14_sd","","Compute the approximate reciprocal square root of the…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_rsqrt14_sd","","Compute the approximate reciprocal square root of the…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_rsqrt14_sd","","Compute the approximate reciprocal square root of the…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_rcp14_ss","","Compute the approximate reciprocal of the lower…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_rcp14_ss","","Compute the approximate reciprocal of the lower…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_rcp14_ss","","Compute the approximate reciprocal of the lower…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_rcp14_sd","","Compute the approximate reciprocal of the lower…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_rcp14_sd","","Compute the approximate reciprocal of the lower…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_rcp14_sd","","Compute the approximate reciprocal of the lower…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_getexp_ss","","Convert the exponent of the lower single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_getexp_ss","","Convert the exponent of the lower single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_getexp_ss","","Convert the exponent of the lower single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_getexp_sd","","Convert the exponent of the lower double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_getexp_sd","","Convert the exponent of the lower double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_getexp_sd","","Convert the exponent of the lower double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_getmant_ss","","Normalize the mantissas of the lower single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_getmant_ss","","Normalize the mantissas of the lower single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_getmant_ss","","Normalize the mantissas of the lower single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_getmant_sd","","Normalize the mantissas of the lower double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_getmant_sd","","Normalize the mantissas of the lower double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_getmant_sd","","Normalize the mantissas of the lower double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_roundscale_ss","","Round the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_roundscale_ss","","Round the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_roundscale_ss","","Round the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_roundscale_sd","","Round the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_roundscale_sd","","Round the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_roundscale_sd","","Round the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_scalef_ss","","Scale the packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_scalef_ss","","Scale the packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_scalef_ss","","Scale the packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_scalef_sd","","Scale the packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_scalef_sd","","Scale the packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_scalef_sd","","Scale the packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_fmadd_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_fmadd_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask3_fmadd_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_fmadd_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_fmadd_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask3_fmadd_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_fmsub_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_fmsub_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask3_fmsub_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_fmsub_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_fmsub_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask3_fmsub_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_fnmadd_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_fnmadd_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask3_fnmadd_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_fnmadd_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_fnmadd_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask3_fnmadd_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_fnmsub_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_fnmsub_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask3_fnmsub_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_fnmsub_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_fnmsub_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask3_fnmsub_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_add_round_ss","","Add the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_add_round_ss","","Add the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_add_round_ss","","Add the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_add_round_sd","","Add the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_add_round_sd","","Add the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_add_round_sd","","Add the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_sub_round_ss","","Subtract the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_sub_round_ss","","Subtract the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_sub_round_ss","","Subtract the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_sub_round_sd","","Subtract the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_sub_round_sd","","Subtract the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_sub_round_sd","","Subtract the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mul_round_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_mul_round_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_mul_round_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mul_round_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_mul_round_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_mul_round_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_div_round_ss","","Divide the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_div_round_ss","","Divide the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_div_round_ss","","Divide the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_div_round_sd","","Divide the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_div_round_sd","","Divide the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_div_round_sd","","Divide the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_max_round_ss","","Compare the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_max_round_ss","","Compare the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_max_round_ss","","Compare the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_max_round_sd","","Compare the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_max_round_sd","","Compare the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_max_round_sd","","Compare the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_min_round_ss","","Compare the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_min_round_ss","","Compare the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_min_round_ss","","Compare the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_min_round_sd","","Compare the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_min_round_sd","","Compare the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_min_round_sd","","Compare the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_sqrt_round_ss","","Compute the square root of the lower single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_sqrt_round_ss","","Compute the square root of the lower single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_sqrt_round_ss","","Compute the square root of the lower single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_sqrt_round_sd","","Compute the square root of the lower double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_sqrt_round_sd","","Compute the square root of the lower double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_sqrt_round_sd","","Compute the square root of the lower double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_getexp_round_ss","","Convert the exponent of the lower single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_getexp_round_ss","","Convert the exponent of the lower single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_getexp_round_ss","","Convert the exponent of the lower single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_getexp_round_sd","","Convert the exponent of the lower double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_getexp_round_sd","","Convert the exponent of the lower double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_getexp_round_sd","","Convert the exponent of the lower double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_getmant_round_ss","","Normalize the mantissas of the lower single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_getmant_round_ss","","Normalize the mantissas of the lower single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_getmant_round_ss","","Normalize the mantissas of the lower single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_getmant_round_sd","","Normalize the mantissas of the lower double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_getmant_round_sd","","Normalize the mantissas of the lower double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_getmant_round_sd","","Normalize the mantissas of the lower double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_roundscale_round_ss","","Round the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_roundscale_round_ss","","Round the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_roundscale_round_ss","","Round the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_roundscale_round_sd","","Round the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_roundscale_round_sd","","Round the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_roundscale_round_sd","","Round the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_scalef_round_ss","","Scale the packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_scalef_round_ss","","Scale the packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_scalef_round_ss","","Scale the packed single-precision (32-bit) floating-point…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_scalef_round_sd","","Scale the packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_scalef_round_sd","","Scale the packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_scalef_round_sd","","Scale the packed double-precision (64-bit) floating-point…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_fmadd_round_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_fmadd_round_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_fmadd_round_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask3_fmadd_round_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_fmadd_round_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_fmadd_round_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_fmadd_round_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask3_fmadd_round_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_fmsub_round_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_fmsub_round_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_fmsub_round_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask3_fmsub_round_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_fmsub_round_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_fmsub_round_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_fmsub_round_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask3_fmsub_round_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_fnmadd_round_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_fnmadd_round_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_fnmadd_round_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask3_fnmadd_round_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_fnmadd_round_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_fnmadd_round_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_fnmadd_round_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask3_fnmadd_round_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_fnmsub_round_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask_fnmsub_round_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_maskz_fnmsub_round_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_mask3_fnmsub_round_ss","","Multiply the lower single-precision (32-bit)…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_fnmsub_round_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_fnmsub_round_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_fnmsub_round_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_mask3_fnmsub_round_sd","","Multiply the lower double-precision (64-bit)…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_fixupimm_ss","","Fix up the lower single-precision (32-bit) floating-point…",null,[[["__m128i",3],["__m128",3]],["__m128",3]]],[5,"_mm_mask_fixupimm_ss","","Fix up the lower single-precision (32-bit) floating-point…",null,[[["__m128i",3],["__m128",3]],["__m128",3]]],[5,"_mm_maskz_fixupimm_ss","","Fix up the lower single-precision (32-bit) floating-point…",null,[[["__m128i",3],["__m128",3]],["__m128",3]]],[5,"_mm_fixupimm_sd","","Fix up the lower double-precision (64-bit) floating-point…",null,[[["__m128i",3],["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_fixupimm_sd","","Fix up the lower double-precision (64-bit) floating-point…",null,[[["__m128i",3],["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_fixupimm_sd","","Fix up the lower double-precision (64-bit) floating-point…",null,[[["__m128i",3],["__m128d",3]],["__m128d",3]]],[5,"_mm_fixupimm_round_ss","","Fix up the lower single-precision (32-bit) floating-point…",null,[[["__m128i",3],["__m128",3]],["__m128",3]]],[5,"_mm_mask_fixupimm_round_ss","","Fix up the lower single-precision (32-bit) floating-point…",null,[[["__m128i",3],["__m128",3]],["__m128",3]]],[5,"_mm_maskz_fixupimm_round_ss","","Fix up the lower single-precision (32-bit) floating-point…",null,[[["__m128i",3],["__m128",3]],["__m128",3]]],[5,"_mm_fixupimm_round_sd","","Fix up the lower double-precision (64-bit) floating-point…",null,[[["__m128i",3],["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_fixupimm_round_sd","","Fix up the lower double-precision (64-bit) floating-point…",null,[[["__m128i",3],["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_fixupimm_round_sd","","Fix up the lower double-precision (64-bit) floating-point…",null,[[["__m128i",3],["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_cvtss_sd","","Convert the lower single-precision (32-bit) floating-point…",null,[[["__m128",3],["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_cvtss_sd","","Convert the lower single-precision (32-bit) floating-point…",null,[[["__m128",3],["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_cvtsd_ss","","Convert the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3],["__m128",3]],["__m128",3]]],[5,"_mm_maskz_cvtsd_ss","","Convert the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3],["__m128",3]],["__m128",3]]],[5,"_mm_cvt_roundss_sd","","Convert the lower single-precision (32-bit) floating-point…",null,[[["__m128",3],["__m128d",3]],["__m128d",3]]],[5,"_mm_mask_cvt_roundss_sd","","Convert the lower single-precision (32-bit) floating-point…",null,[[["__m128",3],["__m128d",3]],["__m128d",3]]],[5,"_mm_maskz_cvt_roundss_sd","","Convert the lower single-precision (32-bit) floating-point…",null,[[["__m128",3],["__m128d",3]],["__m128d",3]]],[5,"_mm_cvt_roundsd_ss","","Convert the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3],["__m128",3]],["__m128",3]]],[5,"_mm_mask_cvt_roundsd_ss","","Convert the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3],["__m128",3]],["__m128",3]]],[5,"_mm_maskz_cvt_roundsd_ss","","Convert the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3],["__m128",3]],["__m128",3]]],[5,"_mm_cvt_roundss_si32","","Convert the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]]]],[5,"_mm_cvt_roundss_i32","","Convert the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]]]],[5,"_mm_cvt_roundss_u32","","Convert the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]]]],[5,"_mm_cvtss_i32","","Convert the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]]]],[5,"_mm_cvtss_u32","","Convert the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]]]],[5,"_mm_cvt_roundsd_si32","","Convert the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]]]],[5,"_mm_cvt_roundsd_i32","","Convert the lower single-precision (32-bit) floating-point…",null,[[["__m128d",3]]]],[5,"_mm_cvt_roundsd_u32","","Convert the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]]]],[5,"_mm_cvtsd_i32","","Convert the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]]]],[5,"_mm_cvtsd_u32","","Convert the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]]]],[5,"_mm_cvt_roundi32_ss","","Convert the signed 32-bit integer b to a single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cvt_roundsi32_ss","","Convert the signed 32-bit integer b to a single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cvt_roundu32_ss","","Convert the unsigned 32-bit integer b to a…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cvti32_ss","","Convert the signed 32-bit integer b to a single-precision…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cvti32_sd","","Convert the signed 32-bit integer b to a double-precision…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cvtt_roundss_si32","","Convert the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]]]],[5,"_mm_cvtt_roundss_i32","","Convert the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]]]],[5,"_mm_cvtt_roundss_u32","","Convert the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]]]],[5,"_mm_cvttss_i32","","Convert the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]]]],[5,"_mm_cvttss_u32","","Convert the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]]]],[5,"_mm_cvtt_roundsd_si32","","Convert the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]]]],[5,"_mm_cvtt_roundsd_i32","","Convert the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]]]],[5,"_mm_cvtt_roundsd_u32","","Convert the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]]]],[5,"_mm_cvttsd_i32","","Convert the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]]]],[5,"_mm_cvttsd_u32","","Convert the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]]]],[5,"_mm_cvtu32_ss","","Convert the unsigned 32-bit integer b to a…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cvtu32_sd","","Convert the unsigned 32-bit integer b to a…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cvtu64_ss","","Convert the unsigned 64-bit integer b to a…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cvtu64_sd","","Convert the unsigned 64-bit integer b to a…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_comi_round_ss","","Compare the lower single-precision (32-bit) floating-point…",null,[[["__m128",3]]]],[5,"_mm_comi_round_sd","","Compare the lower double-precision (64-bit) floating-point…",null,[[["__m128d",3]]]],[17,"_MM_CMPINT_EQ","","Equal",null,null],[17,"_MM_CMPINT_LT","","Less-than",null,null],[17,"_MM_CMPINT_LE","","Less-than-or-equal",null,null],[17,"_MM_CMPINT_FALSE","","False",null,null],[17,"_MM_CMPINT_NE","","Not-equal",null,null],[17,"_MM_CMPINT_NLT","","Not less-than",null,null],[17,"_MM_CMPINT_NLE","","Not less-than-or-equal",null,null],[17,"_MM_CMPINT_TRUE","","True",null,null],[17,"_MM_MANT_NORM_1_2","","interval [1, 2)",null,null],[17,"_MM_MANT_NORM_P5_2","","interval [0.5, 2)",null,null],[17,"_MM_MANT_NORM_P5_1","","interval [0.5, 1)",null,null],[17,"_MM_MANT_NORM_P75_1P5","","interval [0.75, 1.5)",null,null],[17,"_MM_MANT_SIGN_SRC","","sign = sign(SRC)",null,null],[17,"_MM_MANT_SIGN_ZERO","","sign = 0",null,null],[17,"_MM_MANT_SIGN_NAN","","DEST = NaN if sign(SRC) = 1",null,null],[17,"_MM_PERM_AAAA","","",null,null],[17,"_MM_PERM_AAAB","","",null,null],[17,"_MM_PERM_AAAC","","",null,null],[17,"_MM_PERM_AAAD","","",null,null],[17,"_MM_PERM_AABA","","",null,null],[17,"_MM_PERM_AABB","","",null,null],[17,"_MM_PERM_AABC","","",null,null],[17,"_MM_PERM_AABD","","",null,null],[17,"_MM_PERM_AACA","","",null,null],[17,"_MM_PERM_AACB","","",null,null],[17,"_MM_PERM_AACC","","",null,null],[17,"_MM_PERM_AACD","","",null,null],[17,"_MM_PERM_AADA","","",null,null],[17,"_MM_PERM_AADB","","",null,null],[17,"_MM_PERM_AADC","","",null,null],[17,"_MM_PERM_AADD","","",null,null],[17,"_MM_PERM_ABAA","","",null,null],[17,"_MM_PERM_ABAB","","",null,null],[17,"_MM_PERM_ABAC","","",null,null],[17,"_MM_PERM_ABAD","","",null,null],[17,"_MM_PERM_ABBA","","",null,null],[17,"_MM_PERM_ABBB","","",null,null],[17,"_MM_PERM_ABBC","","",null,null],[17,"_MM_PERM_ABBD","","",null,null],[17,"_MM_PERM_ABCA","","",null,null],[17,"_MM_PERM_ABCB","","",null,null],[17,"_MM_PERM_ABCC","","",null,null],[17,"_MM_PERM_ABCD","","",null,null],[17,"_MM_PERM_ABDA","","",null,null],[17,"_MM_PERM_ABDB","","",null,null],[17,"_MM_PERM_ABDC","","",null,null],[17,"_MM_PERM_ABDD","","",null,null],[17,"_MM_PERM_ACAA","","",null,null],[17,"_MM_PERM_ACAB","","",null,null],[17,"_MM_PERM_ACAC","","",null,null],[17,"_MM_PERM_ACAD","","",null,null],[17,"_MM_PERM_ACBA","","",null,null],[17,"_MM_PERM_ACBB","","",null,null],[17,"_MM_PERM_ACBC","","",null,null],[17,"_MM_PERM_ACBD","","",null,null],[17,"_MM_PERM_ACCA","","",null,null],[17,"_MM_PERM_ACCB","","",null,null],[17,"_MM_PERM_ACCC","","",null,null],[17,"_MM_PERM_ACCD","","",null,null],[17,"_MM_PERM_ACDA","","",null,null],[17,"_MM_PERM_ACDB","","",null,null],[17,"_MM_PERM_ACDC","","",null,null],[17,"_MM_PERM_ACDD","","",null,null],[17,"_MM_PERM_ADAA","","",null,null],[17,"_MM_PERM_ADAB","","",null,null],[17,"_MM_PERM_ADAC","","",null,null],[17,"_MM_PERM_ADAD","","",null,null],[17,"_MM_PERM_ADBA","","",null,null],[17,"_MM_PERM_ADBB","","",null,null],[17,"_MM_PERM_ADBC","","",null,null],[17,"_MM_PERM_ADBD","","",null,null],[17,"_MM_PERM_ADCA","","",null,null],[17,"_MM_PERM_ADCB","","",null,null],[17,"_MM_PERM_ADCC","","",null,null],[17,"_MM_PERM_ADCD","","",null,null],[17,"_MM_PERM_ADDA","","",null,null],[17,"_MM_PERM_ADDB","","",null,null],[17,"_MM_PERM_ADDC","","",null,null],[17,"_MM_PERM_ADDD","","",null,null],[17,"_MM_PERM_BAAA","","",null,null],[17,"_MM_PERM_BAAB","","",null,null],[17,"_MM_PERM_BAAC","","",null,null],[17,"_MM_PERM_BAAD","","",null,null],[17,"_MM_PERM_BABA","","",null,null],[17,"_MM_PERM_BABB","","",null,null],[17,"_MM_PERM_BABC","","",null,null],[17,"_MM_PERM_BABD","","",null,null],[17,"_MM_PERM_BACA","","",null,null],[17,"_MM_PERM_BACB","","",null,null],[17,"_MM_PERM_BACC","","",null,null],[17,"_MM_PERM_BACD","","",null,null],[17,"_MM_PERM_BADA","","",null,null],[17,"_MM_PERM_BADB","","",null,null],[17,"_MM_PERM_BADC","","",null,null],[17,"_MM_PERM_BADD","","",null,null],[17,"_MM_PERM_BBAA","","",null,null],[17,"_MM_PERM_BBAB","","",null,null],[17,"_MM_PERM_BBAC","","",null,null],[17,"_MM_PERM_BBAD","","",null,null],[17,"_MM_PERM_BBBA","","",null,null],[17,"_MM_PERM_BBBB","","",null,null],[17,"_MM_PERM_BBBC","","",null,null],[17,"_MM_PERM_BBBD","","",null,null],[17,"_MM_PERM_BBCA","","",null,null],[17,"_MM_PERM_BBCB","","",null,null],[17,"_MM_PERM_BBCC","","",null,null],[17,"_MM_PERM_BBCD","","",null,null],[17,"_MM_PERM_BBDA","","",null,null],[17,"_MM_PERM_BBDB","","",null,null],[17,"_MM_PERM_BBDC","","",null,null],[17,"_MM_PERM_BBDD","","",null,null],[17,"_MM_PERM_BCAA","","",null,null],[17,"_MM_PERM_BCAB","","",null,null],[17,"_MM_PERM_BCAC","","",null,null],[17,"_MM_PERM_BCAD","","",null,null],[17,"_MM_PERM_BCBA","","",null,null],[17,"_MM_PERM_BCBB","","",null,null],[17,"_MM_PERM_BCBC","","",null,null],[17,"_MM_PERM_BCBD","","",null,null],[17,"_MM_PERM_BCCA","","",null,null],[17,"_MM_PERM_BCCB","","",null,null],[17,"_MM_PERM_BCCC","","",null,null],[17,"_MM_PERM_BCCD","","",null,null],[17,"_MM_PERM_BCDA","","",null,null],[17,"_MM_PERM_BCDB","","",null,null],[17,"_MM_PERM_BCDC","","",null,null],[17,"_MM_PERM_BCDD","","",null,null],[17,"_MM_PERM_BDAA","","",null,null],[17,"_MM_PERM_BDAB","","",null,null],[17,"_MM_PERM_BDAC","","",null,null],[17,"_MM_PERM_BDAD","","",null,null],[17,"_MM_PERM_BDBA","","",null,null],[17,"_MM_PERM_BDBB","","",null,null],[17,"_MM_PERM_BDBC","","",null,null],[17,"_MM_PERM_BDBD","","",null,null],[17,"_MM_PERM_BDCA","","",null,null],[17,"_MM_PERM_BDCB","","",null,null],[17,"_MM_PERM_BDCC","","",null,null],[17,"_MM_PERM_BDCD","","",null,null],[17,"_MM_PERM_BDDA","","",null,null],[17,"_MM_PERM_BDDB","","",null,null],[17,"_MM_PERM_BDDC","","",null,null],[17,"_MM_PERM_BDDD","","",null,null],[17,"_MM_PERM_CAAA","","",null,null],[17,"_MM_PERM_CAAB","","",null,null],[17,"_MM_PERM_CAAC","","",null,null],[17,"_MM_PERM_CAAD","","",null,null],[17,"_MM_PERM_CABA","","",null,null],[17,"_MM_PERM_CABB","","",null,null],[17,"_MM_PERM_CABC","","",null,null],[17,"_MM_PERM_CABD","","",null,null],[17,"_MM_PERM_CACA","","",null,null],[17,"_MM_PERM_CACB","","",null,null],[17,"_MM_PERM_CACC","","",null,null],[17,"_MM_PERM_CACD","","",null,null],[17,"_MM_PERM_CADA","","",null,null],[17,"_MM_PERM_CADB","","",null,null],[17,"_MM_PERM_CADC","","",null,null],[17,"_MM_PERM_CADD","","",null,null],[17,"_MM_PERM_CBAA","","",null,null],[17,"_MM_PERM_CBAB","","",null,null],[17,"_MM_PERM_CBAC","","",null,null],[17,"_MM_PERM_CBAD","","",null,null],[17,"_MM_PERM_CBBA","","",null,null],[17,"_MM_PERM_CBBB","","",null,null],[17,"_MM_PERM_CBBC","","",null,null],[17,"_MM_PERM_CBBD","","",null,null],[17,"_MM_PERM_CBCA","","",null,null],[17,"_MM_PERM_CBCB","","",null,null],[17,"_MM_PERM_CBCC","","",null,null],[17,"_MM_PERM_CBCD","","",null,null],[17,"_MM_PERM_CBDA","","",null,null],[17,"_MM_PERM_CBDB","","",null,null],[17,"_MM_PERM_CBDC","","",null,null],[17,"_MM_PERM_CBDD","","",null,null],[17,"_MM_PERM_CCAA","","",null,null],[17,"_MM_PERM_CCAB","","",null,null],[17,"_MM_PERM_CCAC","","",null,null],[17,"_MM_PERM_CCAD","","",null,null],[17,"_MM_PERM_CCBA","","",null,null],[17,"_MM_PERM_CCBB","","",null,null],[17,"_MM_PERM_CCBC","","",null,null],[17,"_MM_PERM_CCBD","","",null,null],[17,"_MM_PERM_CCCA","","",null,null],[17,"_MM_PERM_CCCB","","",null,null],[17,"_MM_PERM_CCCC","","",null,null],[17,"_MM_PERM_CCCD","","",null,null],[17,"_MM_PERM_CCDA","","",null,null],[17,"_MM_PERM_CCDB","","",null,null],[17,"_MM_PERM_CCDC","","",null,null],[17,"_MM_PERM_CCDD","","",null,null],[17,"_MM_PERM_CDAA","","",null,null],[17,"_MM_PERM_CDAB","","",null,null],[17,"_MM_PERM_CDAC","","",null,null],[17,"_MM_PERM_CDAD","","",null,null],[17,"_MM_PERM_CDBA","","",null,null],[17,"_MM_PERM_CDBB","","",null,null],[17,"_MM_PERM_CDBC","","",null,null],[17,"_MM_PERM_CDBD","","",null,null],[17,"_MM_PERM_CDCA","","",null,null],[17,"_MM_PERM_CDCB","","",null,null],[17,"_MM_PERM_CDCC","","",null,null],[17,"_MM_PERM_CDCD","","",null,null],[17,"_MM_PERM_CDDA","","",null,null],[17,"_MM_PERM_CDDB","","",null,null],[17,"_MM_PERM_CDDC","","",null,null],[17,"_MM_PERM_CDDD","","",null,null],[17,"_MM_PERM_DAAA","","",null,null],[17,"_MM_PERM_DAAB","","",null,null],[17,"_MM_PERM_DAAC","","",null,null],[17,"_MM_PERM_DAAD","","",null,null],[17,"_MM_PERM_DABA","","",null,null],[17,"_MM_PERM_DABB","","",null,null],[17,"_MM_PERM_DABC","","",null,null],[17,"_MM_PERM_DABD","","",null,null],[17,"_MM_PERM_DACA","","",null,null],[17,"_MM_PERM_DACB","","",null,null],[17,"_MM_PERM_DACC","","",null,null],[17,"_MM_PERM_DACD","","",null,null],[17,"_MM_PERM_DADA","","",null,null],[17,"_MM_PERM_DADB","","",null,null],[17,"_MM_PERM_DADC","","",null,null],[17,"_MM_PERM_DADD","","",null,null],[17,"_MM_PERM_DBAA","","",null,null],[17,"_MM_PERM_DBAB","","",null,null],[17,"_MM_PERM_DBAC","","",null,null],[17,"_MM_PERM_DBAD","","",null,null],[17,"_MM_PERM_DBBA","","",null,null],[17,"_MM_PERM_DBBB","","",null,null],[17,"_MM_PERM_DBBC","","",null,null],[17,"_MM_PERM_DBBD","","",null,null],[17,"_MM_PERM_DBCA","","",null,null],[17,"_MM_PERM_DBCB","","",null,null],[17,"_MM_PERM_DBCC","","",null,null],[17,"_MM_PERM_DBCD","","",null,null],[17,"_MM_PERM_DBDA","","",null,null],[17,"_MM_PERM_DBDB","","",null,null],[17,"_MM_PERM_DBDC","","",null,null],[17,"_MM_PERM_DBDD","","",null,null],[17,"_MM_PERM_DCAA","","",null,null],[17,"_MM_PERM_DCAB","","",null,null],[17,"_MM_PERM_DCAC","","",null,null],[17,"_MM_PERM_DCAD","","",null,null],[17,"_MM_PERM_DCBA","","",null,null],[17,"_MM_PERM_DCBB","","",null,null],[17,"_MM_PERM_DCBC","","",null,null],[17,"_MM_PERM_DCBD","","",null,null],[17,"_MM_PERM_DCCA","","",null,null],[17,"_MM_PERM_DCCB","","",null,null],[17,"_MM_PERM_DCCC","","",null,null],[17,"_MM_PERM_DCCD","","",null,null],[17,"_MM_PERM_DCDA","","",null,null],[17,"_MM_PERM_DCDB","","",null,null],[17,"_MM_PERM_DCDC","","",null,null],[17,"_MM_PERM_DCDD","","",null,null],[17,"_MM_PERM_DDAA","","",null,null],[17,"_MM_PERM_DDAB","","",null,null],[17,"_MM_PERM_DDAC","","",null,null],[17,"_MM_PERM_DDAD","","",null,null],[17,"_MM_PERM_DDBA","","",null,null],[17,"_MM_PERM_DDBB","","",null,null],[17,"_MM_PERM_DDBC","","",null,null],[17,"_MM_PERM_DDBD","","",null,null],[17,"_MM_PERM_DDCA","","",null,null],[17,"_MM_PERM_DDCB","","",null,null],[17,"_MM_PERM_DDCC","","",null,null],[17,"_MM_PERM_DDCD","","",null,null],[17,"_MM_PERM_DDDA","","",null,null],[17,"_MM_PERM_DDDB","","",null,null],[17,"_MM_PERM_DDDC","","",null,null],[17,"_MM_PERM_DDDD","","",null,null],[5,"_mm512_madd52hi_epu64","","Multiply packed unsigned 52-bit integers in each 64-bit…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm512_madd52lo_epu64","","Multiply packed unsigned 52-bit integers in each 64-bit…",null,[[["__m512i",3]],["__m512i",3]]],[5,"_mm256_madd52hi_epu64","","Multiply packed unsigned 52-bit integers in each 64-bit…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm256_madd52lo_epu64","","Multiply packed unsigned 52-bit integers in each 64-bit…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_mm_madd52hi_epu64","","Multiply packed unsigned 52-bit integers in each 64-bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_madd52lo_epu64","","Multiply packed unsigned 52-bit integers in each 64-bit…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_bittest","","Returns the bit in position `b` of the memory addressed by…",null,[[]]],[5,"_bittestandset","","Returns the bit in position `b` of the memory addressed by…",null,[[]]],[5,"_bittestandreset","","Returns the bit in position `b` of the memory addressed by…",null,[[]]],[5,"_bittestandcomplement","","Returns the bit in position `b` of the memory addressed by…",null,[[]]],[17,"_XBEGIN_STARTED","","Transaction successfully started.",null,null],[17,"_XABORT_EXPLICIT","","Transaction explicitly aborted with xabort. The parameter…",null,null],[17,"_XABORT_RETRY","","Transaction retry is possible.",null,null],[17,"_XABORT_CONFLICT","","Transaction abort due to a memory conflict with another…",null,null],[17,"_XABORT_CAPACITY","","Transaction abort due to the transaction using too much…",null,null],[17,"_XABORT_DEBUG","","Transaction abort due to a debug trap.",null,null],[17,"_XABORT_NESTED","","Transaction abort in a inner nested transaction.",null,null],[5,"_xbegin","","Specifies the start of a restricted transactional memory…",null,[[]]],[5,"_xend","","Specifies the end of a restricted transactional memory…",null,[[]]],[5,"_xabort","","Forces a restricted transactional memory (RTM) region to…",null,[[]]],[5,"_xtest","","Queries whether the processor is executing in a…",null,[[]]],[5,"_xabort_code","","Retrieves the parameter passed to [`_xabort`] when…",null,[[]]],[5,"_mm_cvtph_ps","","Converts the 4 x 16-bit half-precision float values in the…",null,[[["__m128i",3]],["__m128",3]]],[5,"_mm256_cvtph_ps","","Converts the 8 x 16-bit half-precision float values in the…",null,[[["__m128i",3]],["__m256",3]]],[5,"_mm_cvtps_ph","","Converts the 4 x 32-bit float values in the 128-bit vector…",null,[[["__m128",3]],["__m128i",3]]],[5,"_mm256_cvtps_ph","","Converts the 8 x 32-bit float values in the 256-bit vector…",null,[[["__m256",3]],["__m128i",3]]],[5,"_fxsave64","","Saves the `x87` FPU, `MMX` technology, `XMM`, and `MXCSR`…",null,[[]]],[5,"_fxrstor64","","Restores the `XMM`, `MMX`, `MXCSR`, and `x87` FPU…",null,[[]]],[5,"_mm_cvtss_si64","","Converts the lowest 32 bit float in the input vector to a…",null,[[["__m128",3]]]],[5,"_mm_cvttss_si64","","Converts the lowest 32 bit float in the input vector to a…",null,[[["__m128",3]]]],[5,"_mm_cvtsi64_ss","","Converts a 64 bit integer to a 32 bit float. The result…",null,[[["__m128",3]],["__m128",3]]],[5,"_mm_cvtsd_si64","","Converts the lower double-precision (64-bit)…",null,[[["__m128d",3]]]],[5,"_mm_cvtsd_si64x","","Alias for `_mm_cvtsd_si64`",null,[[["__m128d",3]]]],[5,"_mm_cvttsd_si64","","Converts the lower double-precision (64-bit)…",null,[[["__m128d",3]]]],[5,"_mm_cvttsd_si64x","","Alias for `_mm_cvttsd_si64`",null,[[["__m128d",3]]]],[5,"_mm_stream_si64","","Stores a 64-bit integer value in the specified memory…",null,[[]]],[5,"_mm_cvtsi64_si128","","Returns a vector whose lowest element is `a` and all…",null,[[],["__m128i",3]]],[5,"_mm_cvtsi64x_si128","","Returns a vector whose lowest element is `a` and all…",null,[[],["__m128i",3]]],[5,"_mm_cvtsi128_si64","","Returns the lowest element of `a`.",null,[[["__m128i",3]]]],[5,"_mm_cvtsi128_si64x","","Returns the lowest element of `a`.",null,[[["__m128i",3]]]],[5,"_mm_cvtsi64_sd","","Returns `a` with its lower element replaced by `b` after…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_cvtsi64x_sd","","Returns `a` with its lower element replaced by `b` after…",null,[[["__m128d",3]],["__m128d",3]]],[5,"_mm_extract_epi64","","Extracts an 64-bit integer from `a` selected with `imm8`",null,[[["__m128i",3]]]],[5,"_mm_insert_epi64","","Returns a copy of `a` with the 64-bit integer from `i`…",null,[[["__m128i",3]],["__m128i",3]]],[5,"_mm_crc32_u64","","Starting with the initial value in `crc`, return the…",null,[[]]],[5,"_xsave64","","Performs a full or partial save of the enabled processor…",null,[[]]],[5,"_xrstor64","","Performs a full or partial restore of the enabled…",null,[[]]],[5,"_xsaveopt64","","Performs a full or partial save of the enabled processor…",null,[[]]],[5,"_xsavec64","","Performs a full or partial save of the enabled processor…",null,[[]]],[5,"_xsaves64","","Performs a full or partial save of the enabled processor…",null,[[]]],[5,"_xrstors64","","Performs a full or partial restore of the enabled…",null,[[]]],[5,"_lzcnt_u64","","Counts the leading most significant zero bits.",null,[[]]],[5,"_popcnt64","","Counts the bits that are set.",null,[[]]],[5,"_mm256_insert_epi64","","Copies `a` to result, and insert the 64-bit integer `i`…",null,[[["__m256i",3]],["__m256i",3]]],[5,"_bextr_u64","","Extracts bits in range [`start`, `start` + `length`) from…",null,[[]]],[5,"_bextr2_u64","","Extracts bits of `a` specified by `control` into the least…",null,[[]]],[5,"_andn_u64","","Bitwise logical `AND` of inverted `a` with `b`.",null,[[]]],[5,"_blsi_u64","","Extracts lowest set isolated bit.",null,[[]]],[5,"_blsmsk_u64","","Gets mask up to lowest set bit.",null,[[]]],[5,"_blsr_u64","","Resets the lowest set bit of `x`.",null,[[]]],[5,"_tzcnt_u64","","Counts the number of trailing least significant zero bits.",null,[[]]],[5,"_mm_tzcnt_64","","Counts the number of trailing least significant zero bits.",null,[[]]],[5,"_mulx_u64","","Unsigned multiply without affecting flags.",null,[[]]],[5,"_bzhi_u64","","Zeroes higher bits of `a` >= `index`.",null,[[]]],[5,"_pdep_u64","","Scatter contiguous low order bits of `a` to the result at…",null,[[]]],[5,"_pext_u64","","Gathers the bits of `x` specified by the `mask` into the…",null,[[]]],[5,"_mm256_extract_epi64","","Extracts a 64-bit integer from `a`, selected with `imm8`.",null,[[["__m256i",3]]]],[5,"_bswap64","","Returns an integer with the reversed byte order of x",null,[[]]],[5,"_rdrand64_step","","Read a hardware generated 64-bit random value and store…",null,[[]]],[5,"_rdseed64_step","","Read a 64-bit NIST SP800-90B and SP800-90C compliant…",null,[[]]],[5,"cmpxchg16b","","Compares and exchange 16 bytes (128 bits) of data…",null,[[["ordering",4]]]],[5,"_addcarry_u64","","Adds unsigned 64-bit integers `a` and `b` with unsigned…",null,[[]]],[5,"_addcarryx_u64","","Adds unsigned 64-bit integers `a` and `b` with unsigned…",null,[[]]],[5,"_subborrow_u64","","Adds unsigned 64-bit integers `a` and `b` with unsigned…",null,[[]]],[5,"_bittest64","","Returns the bit in position `b` of the memory addressed by…",null,[[]]],[5,"_bittestandset64","","Returns the bit in position `b` of the memory addressed by…",null,[[]]],[5,"_bittestandreset64","","Returns the bit in position `b` of the memory addressed by…",null,[[]]],[5,"_bittestandcomplement64","","Returns the bit in position `b` of the memory addressed by…",null,[[]]],[3,"__m128i","","128-bit wide integer vector type, x86-specific",null,null],[3,"__m128","","128-bit wide set of four `f32` types, x86-specific",null,null],[3,"__m128d","","128-bit wide set of two `f64` types, x86-specific",null,null],[3,"__m256i","","256-bit wide integer vector type, x86-specific",null,null],[3,"__m256","","256-bit wide set of eight `f32` types, x86-specific",null,null],[3,"__m256d","","256-bit wide set of four `f64` types, x86-specific",null,null],[3,"__m512i","","512-bit wide integer vector type, x86-specific",null,null],[3,"__m512","","512-bit wide set of sixteen `f32` types, x86-specific",null,null],[3,"__m512d","","512-bit wide set of eight `f64` types, x86-specific",null,null],[3,"CpuidResult","","Result of the `cpuid` instruction.",null,null],[12,"eax","","EAX register.",104,null],[12,"ebx","","EBX register.",104,null],[12,"ecx","","ECX register.",104,null],[12,"edx","","EDX register.",104,null],[14,"bitflags","wasmtime_wiggle::bitflags","The macro used to generate the flag structure.",null,null],[14,"from_witx","wasmtime_wiggle","This macro expands to a set of `pub` Rust modules:",null,null],[0,"phases","wasmtime_wiggle::witx","Paths to witx documents for various proposal phases",null,null],[5,"docs_path","wasmtime_wiggle::witx::phases","",null,[[],["pathbuf",3]]],[5,"snapshot","","",null,[[],[["result",4],["error",3],["vec",3]]]],[5,"ephemeral","","",null,[[],[["result",4],["error",3],["vec",3]]]],[0,"old","","",null,null],[5,"snapshot_0","wasmtime_wiggle::witx::phases::old","",null,[[],[["result",4],["error",3],["vec",3]]]],[0,"polyfill","wasmtime_wiggle::witx","Calculate required polyfill between interfaces",null,null],[4,"PolyfillError","wasmtime_wiggle::witx::polyfill","",null,null],[13,"ModuleNotPresent","","",105,null],[12,"name","wasmtime_wiggle::witx::polyfill::PolyfillError","",106,null],[13,"FuncNotPresent","wasmtime_wiggle::witx::polyfill","",105,null],[12,"module","wasmtime_wiggle::witx::polyfill::PolyfillError","",107,null],[12,"name","","",107,null],[3,"Polyfill","wasmtime_wiggle::witx::polyfill","",null,null],[12,"modules","","",108,null],[3,"ModulePolyfill","","",null,null],[12,"new","","",109,null],[12,"old","","",109,null],[12,"funcs","","",109,null],[3,"FuncPolyfill","","",null,null],[12,"new","","",110,null],[12,"old","","",110,null],[12,"mapped_params","","",110,null],[12,"unknown_params","","",110,null],[12,"mapped_results","","",110,null],[12,"unknown_results","","",110,null],[3,"ParamPolyfill","","",null,null],[12,"new","","",111,null],[12,"old","","",111,null],[12,"type_polyfill","","",111,null],[4,"ParamUnknown","","",null,null],[13,"Old","","",112,null],[13,"New","","",112,null],[4,"TypePolyfill","","",null,null],[13,"NewToOld","","",113,null],[13,"OldToNew","","",113,null],[5,"load","wasmtime_wiggle::witx","Load a witx document from the filesystem",null,[[],[["witxerror",4],["result",4],["document",3]]]],[5,"parse","","Parse a witx document from a str. `(use ...)` directives…",null,[[],[["witxerror",4],["result",4],["document",3]]]],[3,"Location","","Location in the source text",null,null],[12,"path","","",114,null],[12,"line","","",114,null],[12,"column","","",114,null],[4,"WitxError","","",null,null],[13,"Io","","",115,null],[13,"Parse","","",115,null],[13,"Validation","","",115,null],[4,"BuiltinType","","",null,null],[13,"String","","",116,null],[13,"Char8","","",116,null],[13,"USize","","",116,null],[13,"U8","","",116,null],[13,"U16","","",116,null],[13,"U32","","",116,null],[13,"U64","","",116,null],[13,"S8","","",116,null],[13,"S16","","",116,null],[13,"S32","","",116,null],[13,"S64","","",116,null],[13,"F32","","",116,null],[13,"F64","","",116,null],[4,"Definition","","",null,null],[13,"Typename","","",117,null],[13,"Module","","",117,null],[3,"Document","","",null,null],[4,"Entry","","",null,null],[13,"Typename","","",118,null],[13,"Module","","",118,null],[3,"EnumDatatype","","",null,null],[12,"repr","","",119,null],[12,"variants","","",119,null],[3,"EnumVariant","","",null,null],[12,"name","","",120,null],[12,"docs","","",120,null],[3,"FlagsDatatype","","",null,null],[12,"repr","","",121,null],[12,"flags","","",121,null],[3,"FlagsMember","","",null,null],[12,"name","","",122,null],[12,"docs","","",122,null],[3,"HandleDatatype","","",null,null],[3,"Id","","",null,null],[3,"IntConst","","",null,null],[12,"name","","",123,null],[12,"value","","",123,null],[12,"docs","","",123,null],[3,"IntDatatype","","",null,null],[12,"repr","","",124,null],[12,"consts","","",124,null],[4,"IntRepr","","",null,null],[13,"U8","","",125,null],[13,"U16","","",125,null],[13,"U32","","",125,null],[13,"U64","","",125,null],[3,"InterfaceFunc","","",null,null],[12,"name","","",126,null],[12,"params","","",126,null],[12,"results","","",126,null],[12,"noreturn","","",126,null],[12,"docs","","",126,null],[3,"InterfaceFuncParam","","",null,null],[12,"name","","",127,null],[12,"tref","","",127,null],[12,"position","","",127,null],[12,"docs","","",127,null],[4,"InterfaceFuncParamPosition","","",null,null],[13,"Param","","",128,null],[13,"Result","","",128,null],[3,"Module","","",null,null],[12,"name","","",129,null],[12,"docs","","",129,null],[4,"ModuleDefinition","","",null,null],[13,"Import","","",130,null],[13,"Func","","",130,null],[4,"ModuleEntry","","",null,null],[13,"Import","","",131,null],[13,"Func","","",131,null],[3,"ModuleImport","","",null,null],[12,"name","","",132,null],[12,"variant","","",132,null],[12,"docs","","",132,null],[4,"ModuleImportVariant","","",null,null],[13,"Memory","","",133,null],[3,"NamedType","","",null,null],[12,"name","","",134,null],[12,"tref","","",134,null],[12,"docs","","",134,null],[3,"StructDatatype","","",null,null],[12,"members","","",135,null],[3,"StructMember","","",null,null],[12,"name","","",136,null],[12,"tref","","",136,null],[12,"docs","","",136,null],[4,"Type","","",null,null],[13,"Enum","","",137,null],[13,"Int","","",137,null],[13,"Flags","","",137,null],[13,"Struct","","",137,null],[13,"Union","","",137,null],[13,"Handle","","",137,null],[13,"Array","","",137,null],[13,"Pointer","","",137,null],[13,"ConstPointer","","",137,null],[13,"Builtin","","",137,null],[4,"TypeRef","","",null,null],[13,"Name","","",138,null],[13,"Value","","",138,null],[3,"UnionDatatype","","",null,null],[12,"tag","","",139,null],[12,"variants","","",139,null],[3,"UnionVariant","","",null,null],[12,"name","","",140,null],[12,"tref","","",140,null],[12,"docs","","",140,null],[4,"AtomType","","Enumerates the types permitted for function arguments in…",null,null],[13,"I32","","",141,null],[13,"I64","","",141,null],[13,"F32","","",141,null],[13,"F64","","",141,null],[3,"CoreFuncType","","Describes the WebAssembly signature of a function",null,null],[12,"args","","",142,null],[12,"ret","","",142,null],[4,"CoreParamSignifies","","Enumerates the sort of relationship an WebAssembly…",null,null],[13,"Value","","Core type represents the value using an AtomType",143,null],[13,"PointerTo","","Core type represents a pointer into linear memory",143,null],[13,"LengthOf","","Core type represents a length of a region of linear memory",143,null],[3,"CoreParamType","","A parameter in the WebAssembly type of a function.",null,null],[12,"param","","The interface function parameter to which this",144,null],[12,"signifies","","The relationship of the WebAssembly parameter to the…",144,null],[4,"TypePassedBy","","Enumerates the strategies which may be used to pass a…",null,null],[13,"Value","","Pass by value specifies the AtomType used to represent…",145,null],[13,"Pointer","","Pass by a pointer into linear memory",145,null],[13,"PointerLengthPair","","Pass by a pointer and length pair, into linear memory",145,null],[8,"Documentation","","Enables generating Markdown formatted content.",null,null],[10,"to_md","","",146,[[],["string",3]]],[3,"Filesystem","","",null,null],[3,"MockFs","","",null,null],[8,"WitxIo","","",null,null],[10,"fgets","","Read the entire file into a String. Used to resolve `use`…",147,[[["path",3]],[["result",4],["string",3],["witxerror",4]]]],[10,"fget_line","","Read a line of a file into a String. Used for error…",147,[[["path",3]],[["result",4],["string",3],["witxerror",4]]]],[10,"canonicalize","","Return the canonical (non-symlinked) path of a file. Used…",147,[[["path",3]],[["witxerror",4],["result",4],["pathbuf",3]]]],[8,"Layout","","",null,null],[10,"mem_size_align","","",148,[[],["sizealign",3]]],[11,"mem_size","","",148,[[]]],[11,"mem_align","","",148,[[]]],[3,"SizeAlign","","",null,null],[12,"size","","",149,null],[12,"align","","",149,null],[3,"StructMemberLayout","","",null,null],[12,"member","","",150,null],[12,"offset","","",150,null],[3,"UnionLayout","","",null,null],[12,"tag_size","","",151,null],[12,"tag_align","","",151,null],[12,"contents_offset","","",151,null],[12,"contents_size","","",151,null],[12,"contents_align","","",151,null],[4,"DeclSyntax","","",null,null],[13,"Typename","","",152,null],[13,"Module","","",152,null],[4,"SExpr","","",null,null],[13,"Vec","","",153,null],[13,"Word","","",153,null],[13,"Ident","","",153,null],[13,"Quote","","",153,null],[13,"Annot","","Short for Annotation",153,null],[13,"Docs","","Doc comment",153,null],[4,"RepEquality","","",null,null],[13,"Eq","","",154,null],[13,"Superset","","",154,null],[13,"NotEq","","",154,null],[8,"Representable","","",null,null],[10,"representable","","",155,[[],["repequality",4]]],[4,"ValidationError","","",null,null],[13,"UnknownName","","",156,null],[12,"name","wasmtime_wiggle::witx::ValidationError","",157,null],[12,"location","","",157,null],[13,"NameAlreadyExists","wasmtime_wiggle::witx","",156,null],[12,"name","wasmtime_wiggle::witx::ValidationError","",158,null],[12,"at_location","","",158,null],[12,"previous_location","","",158,null],[13,"WrongKindName","wasmtime_wiggle::witx","",156,null],[12,"name","wasmtime_wiggle::witx::ValidationError","",159,null],[12,"location","","",159,null],[12,"expected","","",159,null],[12,"got","","",159,null],[13,"Recursive","wasmtime_wiggle::witx","",156,null],[12,"name","wasmtime_wiggle::witx::ValidationError","",160,null],[12,"location","","",160,null],[13,"InvalidRepr","wasmtime_wiggle::witx","",156,null],[12,"repr","wasmtime_wiggle::witx::ValidationError","",161,null],[12,"location","","",161,null],[13,"InvalidFirstResultType","wasmtime_wiggle::witx","",156,null],[12,"location","wasmtime_wiggle::witx::ValidationError","",162,null],[13,"AnonymousStructure","wasmtime_wiggle::witx","",156,null],[12,"location","wasmtime_wiggle::witx::ValidationError","",163,null],[13,"InvalidUnionField","wasmtime_wiggle::witx","",156,null],[12,"name","wasmtime_wiggle::witx::ValidationError","",164,null],[12,"reason","","",164,null],[12,"location","","",164,null],[0,"dispatcher","wasmtime_wiggle::tracing","Dispatches trace events to `Subscriber`s.",null,null],[5,"set_default","wasmtime_wiggle::tracing::dispatcher","Sets the dispatch as the default dispatch for the duration…",null,[[["dispatch",3]],["defaultguard",3]]],[5,"with_default","","Sets this dispatch as the default for the duration of a…",null,[[["dispatch",3]]]],[3,"DefaultGuard","","A guard that resets the current default dispatcher to the…",null,null],[5,"get_default","","Executes a closure with a reference to this thread\'s…",null,[[]]],[5,"set_global_default","","Sets this dispatch as the global default for the duration…",null,[[["dispatch",3]],[["result",4],["setglobaldefaulterror",3]]]],[3,"Dispatch","","`Dispatch` trace data to a `Subscriber`.",null,null],[3,"SetGlobalDefaultError","","Returned if setting the global dispatcher fails.",null,null],[0,"field","wasmtime_wiggle::tracing","Structured data associated with `Span`s and `Event`s.",null,null],[8,"AsField","wasmtime_wiggle::tracing::field","Trait implemented to allow a type to be used as a field key.",null,null],[10,"as_field","","Attempts to convert `&self` into a `Field` with the…",165,[[["metadata",3]],[["field",3],["option",4]]]],[8,"Value","","A field value of an erased type.",null,null],[10,"record","","Visits this value with the given `Visitor`.",166,[[["field",3],["visit",8]]]],[3,"Field","","An opaque key allowing O(1) access to a field in a…",null,null],[3,"Empty","","An empty field.",null,null],[3,"FieldSet","","Describes the fields present on a span.",null,null],[3,"ValueSet","","A set of fields and values for a span.",null,null],[3,"Iter","","An iterator over a set of fields.",null,null],[8,"Visit","","Visits typed values.",null,null],[11,"record_i64","","Visit a signed 64-bit integer value.",167,[[["field",3]]]],[11,"record_u64","","Visit an unsigned 64-bit integer value.",167,[[["field",3]]]],[11,"record_bool","","Visit a boolean value.",167,[[["field",3]]]],[11,"record_str","","Visit a string value.",167,[[["field",3]]]],[11,"record_error","","Records a type implementing `Error`.",167,[[["field",3],["error",8]]]],[10,"record_debug","","Visit a value implementing `fmt::Debug`.",167,[[["debug",8],["field",3]]]],[3,"DisplayValue","","A `Value` which serializes using `fmt::Display`.",null,null],[3,"DebugValue","","A `Value` which serializes as a string using `fmt::Debug`.",null,null],[5,"display","","Wraps a type implementing `fmt::Display` as a `Value` that…",null,[[],["displayvalue",3]]],[5,"debug","","Wraps a type implementing `fmt::Debug` as a `Value` that…",null,[[],["debugvalue",3]]],[0,"instrument","wasmtime_wiggle::tracing","Attach a span to a `std::future::Future`.",null,null],[8,"Instrument","wasmtime_wiggle::tracing::instrument","Attaches spans to a `std::future::Future`.",null,null],[11,"instrument","","Instruments this type with the provided `Span`, returning…",168,[[["span",3]],["instrumented",3]]],[11,"in_current_span","","Instruments this type with the current `Span`, returning…",168,[[],["instrumented",3]]],[8,"WithSubscriber","","Extension trait allowing futures to be instrumented with a…",null,null],[11,"with_subscriber","","Attaches the provided `Subscriber` to this type, returning…",169,[[],["withdispatch",3]]],[11,"with_current_subscriber","","Attaches the current default `Subscriber` to this type,…",169,[[],["withdispatch",3]]],[3,"WithDispatch","","A future that has been instrumented with a `tracing`…",null,null],[3,"Instrumented","","A future that has been instrumented with a `tracing` span.",null,null],[0,"level_filters","wasmtime_wiggle::tracing","Trace verbosity level filtering.",null,null],[17,"STATIC_MAX_LEVEL","wasmtime_wiggle::tracing::level_filters","The statically configured maximum trace level.",null,null],[3,"ParseLevelFilterError","","Indicates that a string could not be parsed to a valid…",null,null],[3,"LevelFilter","","A filter comparable to a verbosity `Level`.",null,null],[0,"span","wasmtime_wiggle::tracing","Spans represent periods of time in which a program was…",null,null],[8,"AsId","wasmtime_wiggle::tracing::span","Trait implemented by types which have a span `Id`.",null,null],[10,"as_id","","Returns the `Id` of the span that `self` corresponds to,…",170,[[],[["option",4],["id",3]]]],[3,"Span","","A handle representing a span, with the capability to enter…",null,null],[3,"Entered","","A guard representing a span which has been entered and is…",null,null],[3,"Attributes","","Attributes provided to a `Subscriber` describing a new…",null,null],[3,"Id","","Identifies a span within the context of a subscriber.",null,null],[3,"Record","","A set of fields recorded by a span.",null,null],[0,"subscriber","wasmtime_wiggle::tracing","Collects and records trace data.",null,null],[5,"with_default","wasmtime_wiggle::tracing::subscriber","Sets this subscriber as the default for the duration of a…",null,[[]]],[5,"set_global_default","","Sets this subscriber as the global default for the…",null,[[],[["result",4],["setglobaldefaulterror",3]]]],[5,"set_default","","Sets the subscriber as the default for the duration of the…",null,[[],["defaultguard",3]]],[3,"DefaultGuard","","A guard that resets the current default dispatcher to the…",null,null],[3,"SetGlobalDefaultError","","Returned if setting the global dispatcher fails.",null,null],[8,"Subscriber","","Trait representing the functions required to collect trace…",null,null],[11,"register_callsite","","Registers a new callsite with this subscriber, returning…",171,[[["metadata",3]],["interest",3]]],[10,"enabled","","Returns true if a span or event with the specified…",171,[[["metadata",3]]]],[11,"max_level_hint","","Returns the highest verbosity level that this `Subscriber`…",171,[[],[["option",4],["levelfilter",3]]]],[10,"new_span","","Visit the construction of a new span, returning a new span…",171,[[["attributes",3]],["id",3]]],[10,"record","","Record a set of values on a span.",171,[[["id",3],["record",3]]]],[10,"record_follows_from","","Adds an indication that `span` follows from the span with…",171,[[["id",3]]]],[10,"event","","Records that an `Event` has occurred.",171,[[["event",3]]]],[10,"enter","","Records that a span has been entered.",171,[[["id",3]]]],[10,"exit","","Records that a span has been exited.",171,[[["id",3]]]],[11,"clone_span","","Notifies the subscriber that a span ID has been cloned.",171,[[["id",3]],["id",3]]],[11,"drop_span","","This method is deprecated.",171,[[["id",3]]]],[11,"try_close","","Notifies the subscriber that a [`span ID`] has been…",171,[[["id",3]]]],[11,"current_span","","Returns a type representing this subscriber\'s view of the…",171,[[],["current",3]]],[11,"downcast_raw","","If `self` is the same type as the provided `TypeId`,…",171,[[["typeid",3]],["option",4]]],[3,"Interest","","Indicates a `Subscriber`\'s interest in a particular…",null,null],[4,"Level","wasmtime_wiggle::tracing::log","An enum representing the available verbosity levels of the…",null,null],[13,"Error","","The \\\"error\\\" level.",172,null],[13,"Warn","","The \\\"warn\\\" level.",172,null],[13,"Info","","The \\\"info\\\" level.",172,null],[13,"Debug","","The \\\"debug\\\" level.",172,null],[13,"Trace","","The \\\"trace\\\" level.",172,null],[4,"LevelFilter","","An enum representing the available verbosity level filters…",null,null],[13,"Off","","A level lower than all log levels.",173,null],[13,"Error","","Corresponds to the `Error` log level.",173,null],[13,"Warn","","Corresponds to the `Warn` log level.",173,null],[13,"Info","","Corresponds to the `Info` log level.",173,null],[13,"Debug","","Corresponds to the `Debug` log level.",173,null],[13,"Trace","","Corresponds to the `Trace` log level.",173,null],[3,"Record","","The \\\"payload\\\" of a log message.",null,null],[3,"RecordBuilder","","Builder for `Record`.",null,null],[3,"Metadata","","Metadata about a log message.",null,null],[3,"MetadataBuilder","","Builder for `Metadata`.",null,null],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata…",174,[[["metadata",3]]]],[10,"log","","Logs the `Record`.",174,[[["record",3]]]],[10,"flush","","Flushes any buffered records.",174,[[]]],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter",4]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter",4]]],[5,"set_boxed_logger","","Sets the global logger to a `Box<Log>`.",null,[[["log",8],["box",3],["global",3]],[["setloggererror",3],["result",4]]]],[5,"set_logger","","Sets the global logger to a `&\'static Log`.",null,[[["log",8]],[["setloggererror",3],["result",4]]]],[5,"set_logger_racy","","A thread-unsafe version of `set_logger`.",null,[[["log",8]],[["setloggererror",3],["result",4]]]],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has…",null,null],[3,"ParseLevelError","","The type returned by `from_str` when the string doesn\'t…",null,null],[5,"logger","","Returns a reference to the logger.",null,[[],["log",8]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"log","","The standard logging macro.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in…",null,null],[8,"Instrument","wasmtime_wiggle::tracing","Attaches spans to a `std::future::Future`.",null,null],[11,"instrument","","Instruments this type with the provided `Span`, returning…",168,[[["span",3]],["instrumented",3]]],[11,"in_current_span","","Instruments this type with the current `Span`, returning…",168,[[],["instrumented",3]]],[3,"Dispatch","","`Dispatch` trace data to a `Subscriber`.",null,null],[3,"Event","","`Event`s represent single points in time where something…",null,null],[8,"Value","","A field value of an erased type.",null,null],[10,"record","","Visits this value with the given `Visitor`.",166,[[["field",3],["visit",8]]]],[8,"Subscriber","","Trait representing the functions required to collect trace…",null,null],[11,"register_callsite","","Registers a new callsite with this subscriber, returning…",171,[[["metadata",3]],["interest",3]]],[10,"enabled","","Returns true if a span or event with the specified…",171,[[["metadata",3]]]],[11,"max_level_hint","","Returns the highest verbosity level that this `Subscriber`…",171,[[],[["option",4],["levelfilter",3]]]],[10,"new_span","","Visit the construction of a new span, returning a new span…",171,[[["attributes",3]],["id",3]]],[10,"record","","Record a set of values on a span.",171,[[["id",3],["record",3]]]],[10,"record_follows_from","","Adds an indication that `span` follows from the span with…",171,[[["id",3]]]],[10,"event","","Records that an `Event` has occurred.",171,[[["event",3]]]],[10,"enter","","Records that a span has been entered.",171,[[["id",3]]]],[10,"exit","","Records that a span has been exited.",171,[[["id",3]]]],[11,"clone_span","","Notifies the subscriber that a span ID has been cloned.",171,[[["id",3]],["id",3]]],[11,"drop_span","","This method is deprecated.",171,[[["id",3]]]],[11,"try_close","","Notifies the subscriber that a [`span ID`] has been…",171,[[["id",3]]]],[11,"current_span","","Returns a type representing this subscriber\'s view of the…",171,[[],["current",3]]],[11,"downcast_raw","","If `self` is the same type as the provided `TypeId`,…",171,[[["typeid",3]],["option",4]]],[3,"Id","","Identifies a span within the context of a subscriber.",null,null],[0,"callsite","","Callsites represent the source locations from which spans…",null,null],[8,"Callsite","wasmtime_wiggle::tracing::callsite","Trait implemented by callsites.",null,null],[10,"set_interest","","Sets the `Interest` for this callsite.",175,[[["interest",3]]]],[10,"metadata","","Returns the metadata associated with the callsite.",175,[[],["metadata",3]]],[3,"Identifier","","Uniquely identifies a `Callsite`",null,null],[5,"rebuild_interest_cache","","Clear and reregister interest on every `Callsite`",null,[[]]],[5,"register","","Register a new `Callsite` with the global registry.",null,[[["callsite",8]]]],[8,"Callsite","wasmtime_wiggle::tracing","Trait implemented by callsites.",null,null],[10,"set_interest","","Sets the `Interest` for this callsite.",175,[[["interest",3]]]],[10,"metadata","","Returns the metadata associated with the callsite.",175,[[],["metadata",3]]],[0,"metadata","","Metadata describing trace data.",null,null],[3,"Metadata","wasmtime_wiggle::tracing::metadata","Metadata describing a span or event.",null,null],[3,"Kind","","Indicates whether the callsite is a span or event.",null,null],[3,"Level","","Describes the level of verbosity of a span or event.",null,null],[3,"LevelFilter","","A filter comparable to a verbosity `Level`.",null,null],[3,"ParseLevelFilterError","","Indicates that a string could not be parsed to a valid…",null,null],[3,"ParseLevelError","","Returned if parsing a `Level` fails.",null,null],[14,"metadata","wasmtime_wiggle::tracing","Statically constructs new span metadata.",null,null],[0,"event","","Events represent single points in time during the…",null,null],[3,"Event","wasmtime_wiggle::tracing::event","`Event`s represent single points in time where something…",null,null],[14,"event","wasmtime_wiggle::tracing","Constructs a new `Event`.",null,null],[3,"Level","","Describes the level of verbosity of a span or event.",null,null],[3,"Metadata","","Metadata describing a span or event.",null,null],[3,"Span","","A handle representing a span, with the capability to enter…",null,null],[23,"instrument","","Instruments a function to create and enter a `tracing`…",null,null],[14,"span","","Constructs a new span.",null,null],[14,"trace_span","","Constructs a span at the trace level.",null,null],[14,"debug_span","","Constructs a span at the debug level.",null,null],[14,"info_span","","Constructs a span at the info level.",null,null],[14,"warn_span","","Constructs a span at the warn level.",null,null],[14,"error_span","","Constructs a span at the error level.",null,null],[14,"trace","","Constructs an event at the trace level.",null,null],[14,"debug","","Constructs an event at the debug level.",null,null],[14,"info","","Constructs an event at the info level.",null,null],[14,"warn","","Constructs an event at the warn level.",null,null],[14,"error","","Constructs an event at the error level.",null,null],[4,"GuestError","wasmtime_wiggle","",null,null],[13,"InvalidFlagValue","","",176,null],[13,"InvalidEnumValue","","",176,null],[13,"PtrOverflow","","",176,null],[13,"PtrOutOfBounds","","",176,null],[13,"PtrNotAligned","","",176,null],[13,"PtrBorrowed","","",176,null],[13,"BorrowCheckerOutOfHandles","","",176,null],[13,"SliceLengthsDiffer","","",176,null],[13,"InFunc","","",176,null],[12,"funcname","wasmtime_wiggle::GuestError","",177,null],[12,"location","","",177,null],[12,"err","","",177,null],[13,"InDataField","wasmtime_wiggle","",176,null],[12,"typename","wasmtime_wiggle::GuestError","",178,null],[12,"field","","",178,null],[12,"err","","",178,null],[13,"InvalidUtf8","wasmtime_wiggle","",176,null],[13,"TryFromIntError","","",176,null],[8,"GuestErrorType","","A trait for types which are used to report errors. Each…",null,null],[10,"success","","",179,[[]]],[8,"GuestType","","A trait for types that are intended to be pointees in…",null,null],[10,"guest_size","","Returns the size, in bytes, of this type in the guest…",180,[[]]],[10,"guest_align","","Returns the required alignment of this type, in bytes, for…",180,[[]]],[10,"read","","Reads this value from the provided `ptr`.",180,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[10,"write","","Writes a value to `ptr` after verifying that `ptr` is…",180,[[["guestptr",3]],[["guesterror",4],["result",4]]]],[8,"GuestTypeTransparent","","A trait for `GuestType`s that have the same representation…",null,null],[10,"validate","","Checks that the memory at `ptr` is a valid representation…",181,[[],[["guesterror",4],["result",4]]]],[3,"Region","","Represents a contiguous region in memory.",null,null],[12,"start","","",182,null],[12,"len","","",182,null],[3,"WasmtimeGuestMemory","","Lightweight `wasmtime::Memory` wrapper so we can implement…",null,null],[11,"new","","",183,[[["memory",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"debug","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"debug","","",184,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",184,[[]]],[11,"deref","","",184,[[]]],[11,"deref_mut","","",184,[[]]],[11,"drop","","",184,[[]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"debug","","",185,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",185,[[]]],[11,"deref","","",185,[[]]],[11,"deref_mut","","",185,[[]]],[11,"drop","","",185,[[]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"debug","","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",186,[[]]],[11,"deref","","",186,[[]]],[11,"deref_mut","","",186,[[]]],[11,"drop","","",186,[[]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"debug","","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",187,[[]]],[11,"deref","","",187,[[]]],[11,"deref_mut","","",187,[[]]],[11,"drop","","",187,[[]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"debug","","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",188,[[]]],[11,"deref","","",188,[[]]],[11,"deref_mut","","",188,[[]]],[11,"drop","","",188,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"debug","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::num","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"to_string","","",189,[[],["string",3]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"debug","","",189,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",189,[[]]],[11,"init","","",189,[[]]],[11,"deref","","",189,[[]]],[11,"deref_mut","","",189,[[]]],[11,"drop","","",189,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"debug","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"debug","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"to_string","","",190,[[],["string",3]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"debug","","",190,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",190,[[]]],[11,"init","","",190,[[]]],[11,"deref","","",190,[[]]],[11,"deref_mut","","",190,[[]]],[11,"drop","","",190,[[]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"to_string","","",191,[[],["string",3]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"debug","","",191,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",191,[[]]],[11,"init","","",191,[[]]],[11,"deref","","",191,[[]]],[11,"deref_mut","","",191,[[]]],[11,"drop","","",191,[[]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"to_string","","",192,[[],["string",3]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"debug","","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",192,[[]]],[11,"init","","",192,[[]]],[11,"deref","","",192,[[]]],[11,"deref_mut","","",192,[[]]],[11,"drop","","",192,[[]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"to_string","","",193,[[],["string",3]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"debug","","",193,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",193,[[]]],[11,"init","","",193,[[]]],[11,"deref","","",193,[[]]],[11,"deref_mut","","",193,[[]]],[11,"drop","","",193,[[]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"to_string","","",194,[[],["string",3]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"debug","","",194,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",194,[[]]],[11,"init","","",194,[[]]],[11,"deref","","",194,[[]]],[11,"deref_mut","","",194,[[]]],[11,"drop","","",194,[[]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"to_string","","",195,[[],["string",3]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"debug","","",195,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",195,[[]]],[11,"init","","",195,[[]]],[11,"deref","","",195,[[]]],[11,"deref_mut","","",195,[[]]],[11,"drop","","",195,[[]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"to_string","","",196,[[],["string",3]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"debug","","",196,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",196,[[]]],[11,"init","","",196,[[]]],[11,"deref","","",196,[[]]],[11,"deref_mut","","",196,[[]]],[11,"drop","","",196,[[]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"to_string","","",197,[[],["string",3]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"debug","","",197,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",197,[[]]],[11,"init","","",197,[[]]],[11,"deref","","",197,[[]]],[11,"deref_mut","","",197,[[]]],[11,"drop","","",197,[[]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"to_string","","",198,[[],["string",3]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"debug","","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",198,[[]]],[11,"init","","",198,[[]]],[11,"deref","","",198,[[]]],[11,"deref_mut","","",198,[[]]],[11,"drop","","",198,[[]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"to_string","","",199,[[],["string",3]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"debug","","",199,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",199,[[]]],[11,"init","","",199,[[]]],[11,"deref","","",199,[[]]],[11,"deref_mut","","",199,[[]]],[11,"drop","","",199,[[]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"to_string","","",200,[[],["string",3]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"debug","","",200,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",200,[[]]],[11,"init","","",200,[[]]],[11,"deref","","",200,[[]]],[11,"deref_mut","","",200,[[]]],[11,"drop","","",200,[[]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"to_string","","",201,[[],["string",3]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"debug","","",201,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",201,[[]]],[11,"init","","",201,[[]]],[11,"deref","","",201,[[]]],[11,"deref_mut","","",201,[[]]],[11,"drop","","",201,[[]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"to_string","","",202,[[],["string",3]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"debug","","",202,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",202,[[]]],[11,"init","","",202,[[]]],[11,"deref","","",202,[[]]],[11,"deref_mut","","",202,[[]]],[11,"drop","","",202,[[]]],[11,"from","","",203,[[]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"to_string","","",203,[[],["string",3]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"debug","","",203,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",203,[[]]],[11,"init","","",203,[[]]],[11,"deref","","",203,[[]]],[11,"deref_mut","","",203,[[]]],[11,"drop","","",203,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"debug","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::option","",24,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"debug","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"compatible_with_store","","",24,[[["weakstore",3]]]],[11,"into_abi_for_ret","","",24,[[["weakstore",3]]]],[11,"from_abi","","",24,[[["weakstore",3]]]],[11,"valtype","","",24,[[],[["option",4],["valtype",4]]]],[11,"matches","","",24,[[],[["result",4],["error",3]]]],[11,"load_from_args","","",24,[[]]],[11,"store_to_args","","",24,[[]]],[11,"equivalent","","",24,[[]]],[11,"par_iter","","",24,[[]]],[11,"par_iter_mut","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::result","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"debug","","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",25,[[]]],[11,"par_iter","","",25,[[]]],[11,"par_iter_mut","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::mem","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"debug","","",204,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",204,[[]]],[11,"init","","",204,[[]]],[11,"deref","","",204,[[]]],[11,"deref_mut","","",204,[[]]],[11,"drop","","",204,[[]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"debug","","",205,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",205,[[]]],[11,"init","","",205,[[]]],[11,"deref","","",205,[[]]],[11,"deref_mut","","",205,[[]]],[11,"drop","","",205,[[]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"debug","","",206,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",206,[[]]],[11,"deref","","",206,[[]]],[11,"deref_mut","","",206,[[]]],[11,"drop","","",206,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::ptr","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"debug","","",207,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",207,[[]]],[11,"init","","",207,[[]]],[11,"deref","","",207,[[]]],[11,"deref_mut","","",207,[[]]],[11,"drop","","",207,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::cmp","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"debug","","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"debug","","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",29,[[]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::convert","",208,[[]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"to_string","","",208,[[],["string",3]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"debug","","",208,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",208,[[]]],[11,"init","","",208,[[]]],[11,"deref","","",208,[[]]],[11,"deref_mut","","",208,[[]]],[11,"drop","","",208,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::marker","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"debug","","",209,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",209,[[]]],[11,"init","","",209,[[]]],[11,"deref","","",209,[[]]],[11,"deref_mut","","",209,[[]]],[11,"drop","","",209,[[]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"debug","","",210,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",210,[[]]],[11,"init","","",210,[[]]],[11,"deref","","",210,[[]]],[11,"deref_mut","","",210,[[]]],[11,"drop","","",210,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::ops","",59,[[]]],[11,"into","","",59,[[]]],[11,"into_iter","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"debug","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",59,[[]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"into_iter","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"debug","","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",60,[[]]],[11,"init","","",60,[[]]],[11,"deref","","",60,[[]]],[11,"deref_mut","","",60,[[]]],[11,"drop","","",60,[[]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"debug","","",211,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",211,[[]]],[11,"init","","",211,[[]]],[11,"deref","","",211,[[]]],[11,"deref_mut","","",211,[[]]],[11,"drop","","",211,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"debug","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",61,[[]]],[11,"init","","",61,[[]]],[11,"deref","","",61,[[]]],[11,"deref_mut","","",61,[[]]],[11,"drop","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"debug","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",62,[[]]],[11,"init","","",62,[[]]],[11,"deref","","",62,[[]]],[11,"deref_mut","","",62,[[]]],[11,"drop","","",62,[[]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"into_iter","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"debug","","",212,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",212,[[]]],[11,"init","","",212,[[]]],[11,"deref","","",212,[[]]],[11,"deref_mut","","",212,[[]]],[11,"drop","","",212,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"debug","","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",64,[[]]],[11,"init","","",64,[[]]],[11,"deref","","",64,[[]]],[11,"deref_mut","","",64,[[]]],[11,"drop","","",64,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"debug","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",67,[[]]],[11,"init","","",67,[[]]],[11,"deref","","",67,[[]]],[11,"deref_mut","","",67,[[]]],[11,"drop","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"debug","","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",68,[[]]],[11,"deref","","",68,[[]]],[11,"deref_mut","","",68,[[]]],[11,"drop","","",68,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::any","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"debug","","",213,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",213,[[]]],[11,"init","","",213,[[]]],[11,"deref","","",213,[[]]],[11,"deref_mut","","",213,[[]]],[11,"drop","","",213,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::array","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"to_string","","",214,[[],["string",3]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"debug","","",214,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",214,[[]]],[11,"deref","","",214,[[]]],[11,"deref_mut","","",214,[[]]],[11,"drop","","",214,[[]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"into_iter","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"debug","","",215,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",215,[[]]],[11,"deref","","",215,[[]]],[11,"deref_mut","","",215,[[]]],[11,"drop","","",215,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::ascii","",216,[[]]],[11,"into","","",216,[[]]],[11,"into_iter","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"to_string","","",216,[[],["string",3]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"debug","","",216,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",216,[[]]],[11,"deref","","",216,[[]]],[11,"deref_mut","","",216,[[]]],[11,"drop","","",216,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::cell","",217,[[]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"debug","","",217,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",217,[[]]],[11,"init","","",217,[[]]],[11,"deref","","",217,[[]]],[11,"deref_mut","","",217,[[]]],[11,"drop","","",217,[[]]],[11,"from","","",218,[[]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"debug","","",218,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",218,[[]]],[11,"init","","",218,[[]]],[11,"deref","","",218,[[]]],[11,"deref_mut","","",218,[[]]],[11,"drop","","",218,[[]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_string","","",219,[[],["string",3]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"debug","","",219,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",219,[[]]],[11,"deref","","",219,[[]]],[11,"deref_mut","","",219,[[]]],[11,"drop","","",219,[[]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_string","","",220,[[],["string",3]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"debug","","",220,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",220,[[]]],[11,"deref","","",220,[[]]],[11,"deref_mut","","",220,[[]]],[11,"drop","","",220,[[]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_string","","",221,[[],["string",3]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"debug","","",221,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",221,[[]]],[11,"deref","","",221,[[]]],[11,"deref_mut","","",221,[[]]],[11,"drop","","",221,[[]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_string","","",222,[[],["string",3]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"debug","","",222,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",222,[[]]],[11,"deref","","",222,[[]]],[11,"deref_mut","","",222,[[]]],[11,"drop","","",222,[[]]],[11,"from","","",223,[[]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"debug","","",223,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",223,[[]]],[11,"deref","","",223,[[]]],[11,"deref_mut","","",223,[[]]],[11,"drop","","",223,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::char","",224,[[]]],[11,"into","","",224,[[]]],[11,"into_iter","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"to_string","","",224,[[],["string",3]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"debug","","",224,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",224,[[]]],[11,"deref","","",224,[[]]],[11,"deref_mut","","",224,[[]]],[11,"drop","","",224,[[]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"into_iter","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"to_string","","",225,[[],["string",3]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"debug","","",225,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",225,[[]]],[11,"deref","","",225,[[]]],[11,"deref_mut","","",225,[[]]],[11,"drop","","",225,[[]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"into_iter","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"to_string","","",226,[[],["string",3]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"debug","","",226,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",226,[[]]],[11,"deref","","",226,[[]]],[11,"deref_mut","","",226,[[]]],[11,"drop","","",226,[[]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"into_iter","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"to_string","","",227,[[],["string",3]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"debug","","",227,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",227,[[]]],[11,"deref","","",227,[[]]],[11,"deref_mut","","",227,[[]]],[11,"drop","","",227,[[]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"into_iter","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"to_string","","",228,[[],["string",3]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"debug","","",228,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",228,[[]]],[11,"deref","","",228,[[]]],[11,"deref_mut","","",228,[[]]],[11,"drop","","",228,[[]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"to_string","","",229,[[],["string",3]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"debug","","",229,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",229,[[]]],[11,"init","","",229,[[]]],[11,"deref","","",229,[[]]],[11,"deref_mut","","",229,[[]]],[11,"drop","","",229,[[]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"to_string","","",230,[[],["string",3]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"debug","","",230,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",230,[[]]],[11,"init","","",230,[[]]],[11,"deref","","",230,[[]]],[11,"deref_mut","","",230,[[]]],[11,"drop","","",230,[[]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"into_iter","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"debug","","",231,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",231,[[]]],[11,"deref","","",231,[[]]],[11,"deref_mut","","",231,[[]]],[11,"drop","","",231,[[]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"to_string","","",232,[[],["string",3]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"debug","","",232,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",232,[[]]],[11,"init","","",232,[[]]],[11,"deref","","",232,[[]]],[11,"deref_mut","","",232,[[]]],[11,"drop","","",232,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::ffi","",233,[[]]],[11,"into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"debug","","",233,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",233,[[]]],[11,"deref","","",233,[[]]],[11,"deref_mut","","",233,[[]]],[11,"drop","","",233,[[]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"debug","","",234,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",234,[[]]],[11,"deref","","",234,[[]]],[11,"deref_mut","","",234,[[]]],[11,"drop","","",234,[[]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"debug","","",235,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",235,[[]]],[11,"deref","","",235,[[]]],[11,"deref_mut","","",235,[[]]],[11,"drop","","",235,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::iter","",236,[[]]],[11,"into","","",236,[[]]],[11,"into_iter","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"debug","","",236,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",236,[[]]],[11,"deref","","",236,[[]]],[11,"deref_mut","","",236,[[]]],[11,"drop","","",236,[[]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"into_iter","","",237,[[]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"debug","","",237,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",237,[[]]],[11,"deref","","",237,[[]]],[11,"deref_mut","","",237,[[]]],[11,"drop","","",237,[[]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"into_iter","","",238,[[]]],[11,"to_owned","","",238,[[]]],[11,"clone_into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"debug","","",238,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",238,[[]]],[11,"deref","","",238,[[]]],[11,"deref_mut","","",238,[[]]],[11,"drop","","",238,[[]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"into_iter","","",239,[[]]],[11,"to_owned","","",239,[[]]],[11,"clone_into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"debug","","",239,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",239,[[]]],[11,"deref","","",239,[[]]],[11,"deref_mut","","",239,[[]]],[11,"drop","","",239,[[]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"into_iter","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"debug","","",240,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",240,[[]]],[11,"deref","","",240,[[]]],[11,"deref_mut","","",240,[[]]],[11,"drop","","",240,[[]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"into_iter","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"debug","","",241,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",241,[[]]],[11,"deref","","",241,[[]]],[11,"deref_mut","","",241,[[]]],[11,"drop","","",241,[[]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"into_iter","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"debug","","",242,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",242,[[]]],[11,"deref","","",242,[[]]],[11,"deref_mut","","",242,[[]]],[11,"drop","","",242,[[]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"into_iter","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"debug","","",243,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",243,[[]]],[11,"deref","","",243,[[]]],[11,"deref_mut","","",243,[[]]],[11,"drop","","",243,[[]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"into_iter","","",244,[[]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"debug","","",244,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",244,[[]]],[11,"deref","","",244,[[]]],[11,"deref_mut","","",244,[[]]],[11,"drop","","",244,[[]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"into_iter","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"debug","","",245,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",245,[[]]],[11,"deref","","",245,[[]]],[11,"deref_mut","","",245,[[]]],[11,"drop","","",245,[[]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"into_iter","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"debug","","",246,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",246,[[]]],[11,"deref","","",246,[[]]],[11,"deref_mut","","",246,[[]]],[11,"drop","","",246,[[]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"into_iter","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"debug","","",247,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",247,[[]]],[11,"deref","","",247,[[]]],[11,"deref_mut","","",247,[[]]],[11,"drop","","",247,[[]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"into_iter","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"debug","","",248,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",248,[[]]],[11,"deref","","",248,[[]]],[11,"deref_mut","","",248,[[]]],[11,"drop","","",248,[[]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"into_iter","","",249,[[]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"debug","","",249,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",249,[[]]],[11,"deref","","",249,[[]]],[11,"deref_mut","","",249,[[]]],[11,"drop","","",249,[[]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"into_iter","","",250,[[]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"debug","","",250,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",250,[[]]],[11,"deref","","",250,[[]]],[11,"deref_mut","","",250,[[]]],[11,"drop","","",250,[[]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"into_iter","","",251,[[]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"debug","","",251,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",251,[[]]],[11,"deref","","",251,[[]]],[11,"deref_mut","","",251,[[]]],[11,"drop","","",251,[[]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"into_iter","","",252,[[]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"debug","","",252,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",252,[[]]],[11,"deref","","",252,[[]]],[11,"deref_mut","","",252,[[]]],[11,"drop","","",252,[[]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"into_iter","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"debug","","",253,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",253,[[]]],[11,"deref","","",253,[[]]],[11,"deref_mut","","",253,[[]]],[11,"drop","","",253,[[]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"into_iter","","",254,[[]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"debug","","",254,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",254,[[]]],[11,"deref","","",254,[[]]],[11,"deref_mut","","",254,[[]]],[11,"drop","","",254,[[]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"into_iter","","",255,[[]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"debug","","",255,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",255,[[]]],[11,"deref","","",255,[[]]],[11,"deref_mut","","",255,[[]]],[11,"drop","","",255,[[]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"into_iter","","",256,[[]]],[11,"to_owned","","",256,[[]]],[11,"clone_into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"debug","","",256,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",256,[[]]],[11,"deref","","",256,[[]]],[11,"deref_mut","","",256,[[]]],[11,"drop","","",256,[[]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"into_iter","","",257,[[]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"debug","","",257,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",257,[[]]],[11,"deref","","",257,[[]]],[11,"deref_mut","","",257,[[]]],[11,"drop","","",257,[[]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"into_iter","","",258,[[]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"debug","","",258,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",258,[[]]],[11,"deref","","",258,[[]]],[11,"deref_mut","","",258,[[]]],[11,"drop","","",258,[[]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"into_iter","","",259,[[]]],[11,"to_owned","","",259,[[]]],[11,"clone_into","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"debug","","",259,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",259,[[]]],[11,"deref","","",259,[[]]],[11,"deref_mut","","",259,[[]]],[11,"drop","","",259,[[]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"into_iter","","",260,[[]]],[11,"to_owned","","",260,[[]]],[11,"clone_into","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"debug","","",260,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",260,[[]]],[11,"deref","","",260,[[]]],[11,"deref_mut","","",260,[[]]],[11,"drop","","",260,[[]]],[11,"from","","",261,[[]]],[11,"into","","",261,[[]]],[11,"into_iter","","",261,[[]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"debug","","",261,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",261,[[]]],[11,"deref","","",261,[[]]],[11,"deref_mut","","",261,[[]]],[11,"drop","","",261,[[]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"into_iter","","",262,[[]]],[11,"to_owned","","",262,[[]]],[11,"clone_into","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"debug","","",262,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",262,[[]]],[11,"deref","","",262,[[]]],[11,"deref_mut","","",262,[[]]],[11,"drop","","",262,[[]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"into_iter","","",263,[[]]],[11,"to_owned","","",263,[[]]],[11,"clone_into","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"debug","","",263,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",263,[[]]],[11,"deref","","",263,[[]]],[11,"deref_mut","","",263,[[]]],[11,"drop","","",263,[[]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"into_iter","","",264,[[]]],[11,"to_owned","","",264,[[]]],[11,"clone_into","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"debug","","",264,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",264,[[]]],[11,"deref","","",264,[[]]],[11,"deref_mut","","",264,[[]]],[11,"drop","","",264,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::lazy","",265,[[]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"debug","","",265,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",265,[[]]],[11,"init","","",265,[[]]],[11,"deref","","",265,[[]]],[11,"deref_mut","","",265,[[]]],[11,"drop","","",265,[[]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"debug","","",266,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",266,[[]]],[11,"deref","","",266,[[]]],[11,"deref_mut","","",266,[[]]],[11,"drop","","",266,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::option","",267,[[]]],[11,"into","","",267,[[]]],[11,"into_iter","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"debug","","",267,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",267,[[]]],[11,"deref","","",267,[[]]],[11,"deref_mut","","",267,[[]]],[11,"drop","","",267,[[]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"into_iter","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"debug","","",268,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",268,[[]]],[11,"deref","","",268,[[]]],[11,"deref_mut","","",268,[[]]],[11,"drop","","",268,[[]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"into_iter","","",269,[[]]],[11,"to_owned","","",269,[[]]],[11,"clone_into","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"debug","","",269,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",269,[[]]],[11,"deref","","",269,[[]]],[11,"deref_mut","","",269,[[]]],[11,"drop","","",269,[[]]],[11,"from","","",270,[[]]],[11,"into","","",270,[[]]],[11,"to_owned","","",270,[[]]],[11,"clone_into","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"debug","","",270,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",270,[[]]],[11,"init","","",270,[[]]],[11,"deref","","",270,[[]]],[11,"deref_mut","","",270,[[]]],[11,"drop","","",270,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::panic","",271,[[]]],[11,"into","","",271,[[]]],[11,"to_string","","",271,[[],["string",3]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"debug","","",271,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",271,[[]]],[11,"deref","","",271,[[]]],[11,"deref_mut","","",271,[[]]],[11,"drop","","",271,[[]]],[11,"from","","",272,[[]]],[11,"into","","",272,[[]]],[11,"to_owned","","",272,[[]]],[11,"clone_into","","",272,[[]]],[11,"to_string","","",272,[[],["string",3]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"debug","","",272,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",272,[[]]],[11,"init","","",272,[[]]],[11,"deref","","",272,[[]]],[11,"deref_mut","","",272,[[]]],[11,"drop","","",272,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::pin","",273,[[]]],[11,"into","","",273,[[]]],[11,"to_owned","","",273,[[]]],[11,"clone_into","","",273,[[]]],[11,"to_string","","",273,[[],["string",3]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"into_future","","",273,[[]]],[11,"debug","","",273,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",273,[[]]],[11,"init","","",273,[[]]],[11,"deref","","",273,[[]]],[11,"deref_mut","","",273,[[]]],[11,"drop","","",273,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::raw","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"debug","","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",76,[[]]],[11,"deref","","",76,[[]]],[11,"deref_mut","","",76,[[]]],[11,"drop","","",76,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::result","",274,[[]]],[11,"into","","",274,[[]]],[11,"into_iter","","",274,[[]]],[11,"to_owned","","",274,[[]]],[11,"clone_into","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"debug","","",274,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",274,[[]]],[11,"deref","","",274,[[]]],[11,"deref_mut","","",274,[[]]],[11,"drop","","",274,[[]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"into_iter","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"debug","","",275,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",275,[[]]],[11,"deref","","",275,[[]]],[11,"deref_mut","","",275,[[]]],[11,"drop","","",275,[[]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"into_iter","","",276,[[]]],[11,"to_owned","","",276,[[]]],[11,"clone_into","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"debug","","",276,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",276,[[]]],[11,"deref","","",276,[[]]],[11,"deref_mut","","",276,[[]]],[11,"drop","","",276,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::sync::atomic","",277,[[]]],[11,"into","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"debug","","",277,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",277,[[]]],[11,"deref","","",277,[[]]],[11,"deref_mut","","",277,[[]]],[11,"drop","","",277,[[]]],[11,"from","","",278,[[]]],[11,"into","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"debug","","",278,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",278,[[]]],[11,"deref","","",278,[[]]],[11,"deref_mut","","",278,[[]]],[11,"drop","","",278,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"debug","","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",77,[[]]],[11,"init","","",77,[[]]],[11,"deref","","",77,[[]]],[11,"deref_mut","","",77,[[]]],[11,"drop","","",77,[[]]],[11,"from","","",279,[[]]],[11,"into","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"debug","","",279,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",279,[[]]],[11,"deref","","",279,[[]]],[11,"deref_mut","","",279,[[]]],[11,"drop","","",279,[[]]],[11,"from","","",280,[[]]],[11,"into","","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"debug","","",280,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",280,[[]]],[11,"deref","","",280,[[]]],[11,"deref_mut","","",280,[[]]],[11,"drop","","",280,[[]]],[11,"from","","",281,[[]]],[11,"into","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"debug","","",281,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",281,[[]]],[11,"deref","","",281,[[]]],[11,"deref_mut","","",281,[[]]],[11,"drop","","",281,[[]]],[11,"from","","",282,[[]]],[11,"into","","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"debug","","",282,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",282,[[]]],[11,"deref","","",282,[[]]],[11,"deref_mut","","",282,[[]]],[11,"drop","","",282,[[]]],[11,"from","","",283,[[]]],[11,"into","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"debug","","",283,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",283,[[]]],[11,"deref","","",283,[[]]],[11,"deref_mut","","",283,[[]]],[11,"drop","","",283,[[]]],[11,"from","","",284,[[]]],[11,"into","","",284,[[]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"debug","","",284,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",284,[[]]],[11,"deref","","",284,[[]]],[11,"deref_mut","","",284,[[]]],[11,"drop","","",284,[[]]],[11,"from","","",285,[[]]],[11,"into","","",285,[[]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"debug","","",285,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",285,[[]]],[11,"deref","","",285,[[]]],[11,"deref_mut","","",285,[[]]],[11,"drop","","",285,[[]]],[11,"from","","",286,[[]]],[11,"into","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"debug","","",286,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",286,[[]]],[11,"deref","","",286,[[]]],[11,"deref_mut","","",286,[[]]],[11,"drop","","",286,[[]]],[11,"from","","",287,[[]]],[11,"into","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"debug","","",287,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",287,[[]]],[11,"deref","","",287,[[]]],[11,"deref_mut","","",287,[[]]],[11,"drop","","",287,[[]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"debug","","",288,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",288,[[]]],[11,"deref","","",288,[[]]],[11,"deref_mut","","",288,[[]]],[11,"drop","","",288,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::fmt","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"debug","","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",78,[[]]],[11,"deref","","",78,[[]]],[11,"deref_mut","","",78,[[]]],[11,"drop","","",78,[[]]],[11,"from","","",289,[[]]],[11,"into","","",289,[[]]],[11,"to_owned","","",289,[[]]],[11,"clone_into","","",289,[[]]],[11,"to_string","","",289,[[],["string",3]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"debug","","",289,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",289,[[]]],[11,"init","","",289,[[]]],[11,"deref","","",289,[[]]],[11,"deref_mut","","",289,[[]]],[11,"drop","","",289,[[]]],[11,"from","","",290,[[]]],[11,"into","","",290,[[]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"debug","","",290,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",290,[[]]],[11,"deref","","",290,[[]]],[11,"deref_mut","","",290,[[]]],[11,"drop","","",290,[[]]],[11,"write_string","","",290,[[],[["error",3],["result",4]]]],[11,"from","","",291,[[]]],[11,"into","","",291,[[]]],[11,"to_owned","","",291,[[]]],[11,"clone_into","","",291,[[]]],[11,"to_string","","",291,[[],["string",3]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"try_into","","",291,[[],["result",4]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"debug","","",291,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",291,[[]]],[11,"deref","","",291,[[]]],[11,"deref_mut","","",291,[[]]],[11,"drop","","",291,[[]]],[11,"from","","",292,[[]]],[11,"into","","",292,[[]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"try_into","","",292,[[],["result",4]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"debug","","",292,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",292,[[]]],[11,"deref","","",292,[[]]],[11,"deref_mut","","",292,[[]]],[11,"drop","","",292,[[]]],[11,"from","","",293,[[]]],[11,"into","","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"debug","","",293,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",293,[[]]],[11,"deref","","",293,[[]]],[11,"deref_mut","","",293,[[]]],[11,"drop","","",293,[[]]],[11,"from","","",294,[[]]],[11,"into","","",294,[[]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"try_into","","",294,[[],["result",4]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"debug","","",294,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",294,[[]]],[11,"deref","","",294,[[]]],[11,"deref_mut","","",294,[[]]],[11,"drop","","",294,[[]]],[11,"from","","",295,[[]]],[11,"into","","",295,[[]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"try_into","","",295,[[],["result",4]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"debug","","",295,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",295,[[]]],[11,"deref","","",295,[[]]],[11,"deref_mut","","",295,[[]]],[11,"drop","","",295,[[]]],[11,"from","","",296,[[]]],[11,"into","","",296,[[]]],[11,"borrow","","",296,[[]]],[11,"borrow_mut","","",296,[[]]],[11,"try_from","","",296,[[],["result",4]]],[11,"try_into","","",296,[[],["result",4]]],[11,"type_id","","",296,[[],["typeid",3]]],[11,"debug","","",296,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",296,[[]]],[11,"deref","","",296,[[]]],[11,"deref_mut","","",296,[[]]],[11,"drop","","",296,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::hash","",297,[[]]],[11,"into","","",297,[[]]],[11,"to_owned","","",297,[[]]],[11,"clone_into","","",297,[[]]],[11,"borrow","","",297,[[]]],[11,"borrow_mut","","",297,[[]]],[11,"try_from","","",297,[[],["result",4]]],[11,"try_into","","",297,[[],["result",4]]],[11,"type_id","","",297,[[],["typeid",3]]],[11,"debug","","",297,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",297,[[]]],[11,"init","","",297,[[]]],[11,"deref","","",297,[[]]],[11,"deref_mut","","",297,[[]]],[11,"drop","","",297,[[]]],[11,"from","","",298,[[]]],[11,"into","","",298,[[]]],[11,"to_owned","","",298,[[]]],[11,"clone_into","","",298,[[]]],[11,"borrow","","",298,[[]]],[11,"borrow_mut","","",298,[[]]],[11,"try_from","","",298,[[],["result",4]]],[11,"try_into","","",298,[[],["result",4]]],[11,"type_id","","",298,[[],["typeid",3]]],[11,"debug","","",298,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",298,[[]]],[11,"deref","","",298,[[]]],[11,"deref_mut","","",298,[[]]],[11,"drop","","",298,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::slice","",299,[[]]],[11,"into","","",299,[[]]],[11,"into_iter","","",299,[[]]],[11,"to_owned","","",299,[[]]],[11,"clone_into","","",299,[[]]],[11,"borrow","","",299,[[]]],[11,"borrow_mut","","",299,[[]]],[11,"try_from","","",299,[[],["result",4]]],[11,"try_into","","",299,[[],["result",4]]],[11,"type_id","","",299,[[],["typeid",3]]],[11,"debug","","",299,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",299,[[]]],[11,"deref","","",299,[[]]],[11,"deref_mut","","",299,[[]]],[11,"drop","","",299,[[]]],[11,"from","","",300,[[]]],[11,"into","","",300,[[]]],[11,"into_iter","","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"debug","","",300,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",300,[[]]],[11,"deref","","",300,[[]]],[11,"deref_mut","","",300,[[]]],[11,"drop","","",300,[[]]],[11,"from","","",301,[[]]],[11,"into","","",301,[[]]],[11,"into_iter","","",301,[[]]],[11,"to_owned","","",301,[[]]],[11,"clone_into","","",301,[[]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"try_into","","",301,[[],["result",4]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"debug","","",301,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",301,[[]]],[11,"deref","","",301,[[]]],[11,"deref_mut","","",301,[[]]],[11,"drop","","",301,[[]]],[11,"from","","",302,[[]]],[11,"into","","",302,[[]]],[11,"into_iter","","",302,[[]]],[11,"to_owned","","",302,[[]]],[11,"clone_into","","",302,[[]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"try_from","","",302,[[],["result",4]]],[11,"try_into","","",302,[[],["result",4]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"debug","","",302,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",302,[[]]],[11,"deref","","",302,[[]]],[11,"deref_mut","","",302,[[]]],[11,"drop","","",302,[[]]],[11,"measure_with","","",302,[[]]],[11,"from","","",303,[[]]],[11,"into","","",303,[[]]],[11,"into_iter","","",303,[[]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"try_into","","",303,[[],["result",4]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"debug","","",303,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",303,[[]]],[11,"deref","","",303,[[]]],[11,"deref_mut","","",303,[[]]],[11,"drop","","",303,[[]]],[11,"from","","",304,[[]]],[11,"into","","",304,[[]]],[11,"into_iter","","",304,[[]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"try_into","","",304,[[],["result",4]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"debug","","",304,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",304,[[]]],[11,"deref","","",304,[[]]],[11,"deref_mut","","",304,[[]]],[11,"drop","","",304,[[]]],[11,"from","","",305,[[]]],[11,"into","","",305,[[]]],[11,"into_iter","","",305,[[]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"try_into","","",305,[[],["result",4]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"debug","","",305,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",305,[[]]],[11,"deref","","",305,[[]]],[11,"deref_mut","","",305,[[]]],[11,"drop","","",305,[[]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"into_iter","","",306,[[]]],[11,"to_owned","","",306,[[]]],[11,"clone_into","","",306,[[]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"try_into","","",306,[[],["result",4]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"debug","","",306,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",306,[[]]],[11,"deref","","",306,[[]]],[11,"deref_mut","","",306,[[]]],[11,"drop","","",306,[[]]],[11,"from","","",307,[[]]],[11,"into","","",307,[[]]],[11,"into_iter","","",307,[[]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"try_into","","",307,[[],["result",4]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"debug","","",307,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",307,[[]]],[11,"deref","","",307,[[]]],[11,"deref_mut","","",307,[[]]],[11,"drop","","",307,[[]]],[11,"from","","",308,[[]]],[11,"into","","",308,[[]]],[11,"into_iter","","",308,[[]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"try_into","","",308,[[],["result",4]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"debug","","",308,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",308,[[]]],[11,"deref","","",308,[[]]],[11,"deref_mut","","",308,[[]]],[11,"drop","","",308,[[]]],[11,"from","","",309,[[]]],[11,"into","","",309,[[]]],[11,"into_iter","","",309,[[]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"debug","","",309,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",309,[[]]],[11,"deref","","",309,[[]]],[11,"deref_mut","","",309,[[]]],[11,"drop","","",309,[[]]],[11,"from","","",310,[[]]],[11,"into","","",310,[[]]],[11,"into_iter","","",310,[[]]],[11,"to_owned","","",310,[[]]],[11,"clone_into","","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"debug","","",310,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",310,[[]]],[11,"deref","","",310,[[]]],[11,"deref_mut","","",310,[[]]],[11,"drop","","",310,[[]]],[11,"from","","",311,[[]]],[11,"into","","",311,[[]]],[11,"into_iter","","",311,[[]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"try_into","","",311,[[],["result",4]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"debug","","",311,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",311,[[]]],[11,"deref","","",311,[[]]],[11,"deref_mut","","",311,[[]]],[11,"drop","","",311,[[]]],[11,"from","","",312,[[]]],[11,"into","","",312,[[]]],[11,"into_iter","","",312,[[]]],[11,"to_owned","","",312,[[]]],[11,"clone_into","","",312,[[]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"try_into","","",312,[[],["result",4]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"debug","","",312,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",312,[[]]],[11,"deref","","",312,[[]]],[11,"deref_mut","","",312,[[]]],[11,"drop","","",312,[[]]],[11,"from","","",313,[[]]],[11,"into","","",313,[[]]],[11,"into_iter","","",313,[[]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"debug","","",313,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",313,[[]]],[11,"deref","","",313,[[]]],[11,"deref_mut","","",313,[[]]],[11,"drop","","",313,[[]]],[11,"from","","",314,[[]]],[11,"into","","",314,[[]]],[11,"into_iter","","",314,[[]]],[11,"to_owned","","",314,[[]]],[11,"clone_into","","",314,[[]]],[11,"borrow","","",314,[[]]],[11,"borrow_mut","","",314,[[]]],[11,"try_from","","",314,[[],["result",4]]],[11,"try_into","","",314,[[],["result",4]]],[11,"type_id","","",314,[[],["typeid",3]]],[11,"debug","","",314,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",314,[[]]],[11,"deref","","",314,[[]]],[11,"deref_mut","","",314,[[]]],[11,"drop","","",314,[[]]],[11,"from","","",315,[[]]],[11,"into","","",315,[[]]],[11,"into_iter","","",315,[[]]],[11,"to_owned","","",315,[[]]],[11,"clone_into","","",315,[[]]],[11,"borrow","","",315,[[]]],[11,"borrow_mut","","",315,[[]]],[11,"try_from","","",315,[[],["result",4]]],[11,"try_into","","",315,[[],["result",4]]],[11,"type_id","","",315,[[],["typeid",3]]],[11,"debug","","",315,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",315,[[]]],[11,"deref","","",315,[[]]],[11,"deref_mut","","",315,[[]]],[11,"drop","","",315,[[]]],[11,"from","","",316,[[]]],[11,"into","","",316,[[]]],[11,"into_iter","","",316,[[]]],[11,"borrow","","",316,[[]]],[11,"borrow_mut","","",316,[[]]],[11,"try_from","","",316,[[],["result",4]]],[11,"try_into","","",316,[[],["result",4]]],[11,"type_id","","",316,[[],["typeid",3]]],[11,"debug","","",316,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",316,[[]]],[11,"deref","","",316,[[]]],[11,"deref_mut","","",316,[[]]],[11,"drop","","",316,[[]]],[11,"from","","",317,[[]]],[11,"into","","",317,[[]]],[11,"into_iter","","",317,[[]]],[11,"borrow","","",317,[[]]],[11,"borrow_mut","","",317,[[]]],[11,"try_from","","",317,[[],["result",4]]],[11,"try_into","","",317,[[],["result",4]]],[11,"type_id","","",317,[[],["typeid",3]]],[11,"debug","","",317,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",317,[[]]],[11,"deref","","",317,[[]]],[11,"deref_mut","","",317,[[]]],[11,"drop","","",317,[[]]],[11,"from","","",318,[[]]],[11,"into","","",318,[[]]],[11,"into_iter","","",318,[[]]],[11,"to_owned","","",318,[[]]],[11,"clone_into","","",318,[[]]],[11,"borrow","","",318,[[]]],[11,"borrow_mut","","",318,[[]]],[11,"try_from","","",318,[[],["result",4]]],[11,"try_into","","",318,[[],["result",4]]],[11,"type_id","","",318,[[],["typeid",3]]],[11,"debug","","",318,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",318,[[]]],[11,"deref","","",318,[[]]],[11,"deref_mut","","",318,[[]]],[11,"drop","","",318,[[]]],[11,"from","","",319,[[]]],[11,"into","","",319,[[]]],[11,"into_iter","","",319,[[]]],[11,"borrow","","",319,[[]]],[11,"borrow_mut","","",319,[[]]],[11,"try_from","","",319,[[],["result",4]]],[11,"try_into","","",319,[[],["result",4]]],[11,"type_id","","",319,[[],["typeid",3]]],[11,"debug","","",319,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",319,[[]]],[11,"deref","","",319,[[]]],[11,"deref_mut","","",319,[[]]],[11,"drop","","",319,[[]]],[11,"from","","",320,[[]]],[11,"into","","",320,[[]]],[11,"into_iter","","",320,[[]]],[11,"to_owned","","",320,[[]]],[11,"clone_into","","",320,[[]]],[11,"borrow","","",320,[[]]],[11,"borrow_mut","","",320,[[]]],[11,"try_from","","",320,[[],["result",4]]],[11,"try_into","","",320,[[],["result",4]]],[11,"type_id","","",320,[[],["typeid",3]]],[11,"debug","","",320,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",320,[[]]],[11,"deref","","",320,[[]]],[11,"deref_mut","","",320,[[]]],[11,"drop","","",320,[[]]],[11,"from","","",321,[[]]],[11,"into","","",321,[[]]],[11,"into_iter","","",321,[[]]],[11,"to_owned","","",321,[[]]],[11,"clone_into","","",321,[[]]],[11,"borrow","","",321,[[]]],[11,"borrow_mut","","",321,[[]]],[11,"try_from","","",321,[[],["result",4]]],[11,"try_into","","",321,[[],["result",4]]],[11,"type_id","","",321,[[],["typeid",3]]],[11,"debug","","",321,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",321,[[]]],[11,"deref","","",321,[[]]],[11,"deref_mut","","",321,[[]]],[11,"drop","","",321,[[]]],[11,"from","","",322,[[]]],[11,"into","","",322,[[]]],[11,"into_iter","","",322,[[]]],[11,"borrow","","",322,[[]]],[11,"borrow_mut","","",322,[[]]],[11,"try_from","","",322,[[],["result",4]]],[11,"try_into","","",322,[[],["result",4]]],[11,"type_id","","",322,[[],["typeid",3]]],[11,"debug","","",322,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",322,[[]]],[11,"deref","","",322,[[]]],[11,"deref_mut","","",322,[[]]],[11,"drop","","",322,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::str::pattern","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"debug","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",94,[[]]],[11,"init","","",94,[[]]],[11,"deref","","",94,[[]]],[11,"deref_mut","","",94,[[]]],[11,"drop","","",94,[[]]],[11,"from","","",323,[[]]],[11,"into","","",323,[[]]],[11,"to_owned","","",323,[[]]],[11,"clone_into","","",323,[[]]],[11,"borrow","","",323,[[]]],[11,"borrow_mut","","",323,[[]]],[11,"try_from","","",323,[[],["result",4]]],[11,"try_into","","",323,[[],["result",4]]],[11,"type_id","","",323,[[],["typeid",3]]],[11,"debug","","",323,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",323,[[]]],[11,"deref","","",323,[[]]],[11,"deref_mut","","",323,[[]]],[11,"drop","","",323,[[]]],[11,"from","","",324,[[]]],[11,"into","","",324,[[]]],[11,"to_owned","","",324,[[]]],[11,"clone_into","","",324,[[]]],[11,"borrow","","",324,[[]]],[11,"borrow_mut","","",324,[[]]],[11,"try_from","","",324,[[],["result",4]]],[11,"try_into","","",324,[[],["result",4]]],[11,"type_id","","",324,[[],["typeid",3]]],[11,"debug","","",324,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",324,[[]]],[11,"deref","","",324,[[]]],[11,"deref_mut","","",324,[[]]],[11,"drop","","",324,[[]]],[11,"from","","",325,[[]]],[11,"into","","",325,[[]]],[11,"to_owned","","",325,[[]]],[11,"clone_into","","",325,[[]]],[11,"borrow","","",325,[[]]],[11,"borrow_mut","","",325,[[]]],[11,"try_from","","",325,[[],["result",4]]],[11,"try_into","","",325,[[],["result",4]]],[11,"type_id","","",325,[[],["typeid",3]]],[11,"debug","","",325,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",325,[[]]],[11,"deref","","",325,[[]]],[11,"deref_mut","","",325,[[]]],[11,"drop","","",325,[[]]],[11,"from","","",326,[[]]],[11,"into","","",326,[[]]],[11,"to_owned","","",326,[[]]],[11,"clone_into","","",326,[[]]],[11,"borrow","","",326,[[]]],[11,"borrow_mut","","",326,[[]]],[11,"try_from","","",326,[[],["result",4]]],[11,"try_into","","",326,[[],["result",4]]],[11,"type_id","","",326,[[],["typeid",3]]],[11,"debug","","",326,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",326,[[]]],[11,"deref","","",326,[[]]],[11,"deref_mut","","",326,[[]]],[11,"drop","","",326,[[]]],[11,"to_string","wasmtime_wiggle::bitflags::_core::str::lossy","",327,[[],["string",3]]],[11,"borrow","","",327,[[]]],[11,"borrow_mut","","",327,[[]]],[11,"type_id","","",327,[[],["typeid",3]]],[11,"from","","",328,[[]]],[11,"into","","",328,[[]]],[11,"into_iter","","",328,[[]]],[11,"borrow","","",328,[[]]],[11,"borrow_mut","","",328,[[]]],[11,"try_from","","",328,[[],["result",4]]],[11,"try_into","","",328,[[],["result",4]]],[11,"type_id","","",328,[[],["typeid",3]]],[11,"debug","","",328,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",328,[[]]],[11,"deref","","",328,[[]]],[11,"deref_mut","","",328,[[]]],[11,"drop","","",328,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"debug","","",97,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",97,[[]]],[11,"init","","",97,[[]]],[11,"deref","","",97,[[]]],[11,"deref_mut","","",97,[[]]],[11,"drop","","",97,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::str","",329,[[]]],[11,"into","","",329,[[]]],[11,"to_owned","","",329,[[]]],[11,"clone_into","","",329,[[]]],[11,"to_string","","",329,[[],["string",3]]],[11,"borrow","","",329,[[]]],[11,"borrow_mut","","",329,[[]]],[11,"try_from","","",329,[[],["result",4]]],[11,"try_into","","",329,[[],["result",4]]],[11,"type_id","","",329,[[],["typeid",3]]],[11,"debug","","",329,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",329,[[]]],[11,"init","","",329,[[]]],[11,"deref","","",329,[[]]],[11,"deref_mut","","",329,[[]]],[11,"drop","","",329,[[]]],[11,"from","","",330,[[]]],[11,"into","","",330,[[]]],[11,"to_owned","","",330,[[]]],[11,"clone_into","","",330,[[]]],[11,"to_string","","",330,[[],["string",3]]],[11,"borrow","","",330,[[]]],[11,"borrow_mut","","",330,[[]]],[11,"try_from","","",330,[[],["result",4]]],[11,"try_into","","",330,[[],["result",4]]],[11,"type_id","","",330,[[],["typeid",3]]],[11,"debug","","",330,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",330,[[]]],[11,"init","","",330,[[]]],[11,"deref","","",330,[[]]],[11,"deref_mut","","",330,[[]]],[11,"drop","","",330,[[]]],[11,"from","","",331,[[]]],[11,"into","","",331,[[]]],[11,"into_iter","","",331,[[]]],[11,"to_owned","","",331,[[]]],[11,"clone_into","","",331,[[]]],[11,"borrow","","",331,[[]]],[11,"borrow_mut","","",331,[[]]],[11,"try_from","","",331,[[],["result",4]]],[11,"try_into","","",331,[[],["result",4]]],[11,"type_id","","",331,[[],["typeid",3]]],[11,"debug","","",331,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",331,[[]]],[11,"deref","","",331,[[]]],[11,"deref_mut","","",331,[[]]],[11,"drop","","",331,[[]]],[11,"from","","",332,[[]]],[11,"into","","",332,[[]]],[11,"into_iter","","",332,[[]]],[11,"to_owned","","",332,[[]]],[11,"clone_into","","",332,[[]]],[11,"borrow","","",332,[[]]],[11,"borrow_mut","","",332,[[]]],[11,"try_from","","",332,[[],["result",4]]],[11,"try_into","","",332,[[],["result",4]]],[11,"type_id","","",332,[[],["typeid",3]]],[11,"debug","","",332,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",332,[[]]],[11,"deref","","",332,[[]]],[11,"deref_mut","","",332,[[]]],[11,"drop","","",332,[[]]],[11,"from","","",333,[[]]],[11,"into","","",333,[[]]],[11,"into_iter","","",333,[[]]],[11,"to_owned","","",333,[[]]],[11,"clone_into","","",333,[[]]],[11,"borrow","","",333,[[]]],[11,"borrow_mut","","",333,[[]]],[11,"try_from","","",333,[[],["result",4]]],[11,"try_into","","",333,[[],["result",4]]],[11,"type_id","","",333,[[],["typeid",3]]],[11,"debug","","",333,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",333,[[]]],[11,"deref","","",333,[[]]],[11,"deref_mut","","",333,[[]]],[11,"drop","","",333,[[]]],[11,"from","","",334,[[]]],[11,"into","","",334,[[]]],[11,"into_iter","","",334,[[]]],[11,"to_owned","","",334,[[]]],[11,"clone_into","","",334,[[]]],[11,"borrow","","",334,[[]]],[11,"borrow_mut","","",334,[[]]],[11,"try_from","","",334,[[],["result",4]]],[11,"try_into","","",334,[[],["result",4]]],[11,"type_id","","",334,[[],["typeid",3]]],[11,"debug","","",334,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",334,[[]]],[11,"deref","","",334,[[]]],[11,"deref_mut","","",334,[[]]],[11,"drop","","",334,[[]]],[11,"from","","",335,[[]]],[11,"into","","",335,[[]]],[11,"into_iter","","",335,[[]]],[11,"to_owned","","",335,[[]]],[11,"clone_into","","",335,[[]]],[11,"borrow","","",335,[[]]],[11,"borrow_mut","","",335,[[]]],[11,"try_from","","",335,[[],["result",4]]],[11,"try_into","","",335,[[],["result",4]]],[11,"type_id","","",335,[[],["typeid",3]]],[11,"debug","","",335,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",335,[[]]],[11,"deref","","",335,[[]]],[11,"deref_mut","","",335,[[]]],[11,"drop","","",335,[[]]],[11,"from","","",336,[[]]],[11,"into","","",336,[[]]],[11,"into_iter","","",336,[[]]],[11,"to_owned","","",336,[[]]],[11,"clone_into","","",336,[[]]],[11,"borrow","","",336,[[]]],[11,"borrow_mut","","",336,[[]]],[11,"try_from","","",336,[[],["result",4]]],[11,"try_into","","",336,[[],["result",4]]],[11,"type_id","","",336,[[],["typeid",3]]],[11,"debug","","",336,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",336,[[]]],[11,"deref","","",336,[[]]],[11,"deref_mut","","",336,[[]]],[11,"drop","","",336,[[]]],[11,"from","","",337,[[]]],[11,"into","","",337,[[]]],[11,"into_iter","","",337,[[]]],[11,"to_owned","","",337,[[]]],[11,"clone_into","","",337,[[]]],[11,"borrow","","",337,[[]]],[11,"borrow_mut","","",337,[[]]],[11,"try_from","","",337,[[],["result",4]]],[11,"try_into","","",337,[[],["result",4]]],[11,"type_id","","",337,[[],["typeid",3]]],[11,"debug","","",337,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",337,[[]]],[11,"deref","","",337,[[]]],[11,"deref_mut","","",337,[[]]],[11,"drop","","",337,[[]]],[11,"from","","",338,[[]]],[11,"into","","",338,[[]]],[11,"into_iter","","",338,[[]]],[11,"to_owned","","",338,[[]]],[11,"clone_into","","",338,[[]]],[11,"borrow","","",338,[[]]],[11,"borrow_mut","","",338,[[]]],[11,"try_from","","",338,[[],["result",4]]],[11,"try_into","","",338,[[],["result",4]]],[11,"type_id","","",338,[[],["typeid",3]]],[11,"debug","","",338,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",338,[[]]],[11,"deref","","",338,[[]]],[11,"deref_mut","","",338,[[]]],[11,"drop","","",338,[[]]],[11,"from","","",339,[[]]],[11,"into","","",339,[[]]],[11,"into_iter","","",339,[[]]],[11,"to_owned","","",339,[[]]],[11,"clone_into","","",339,[[]]],[11,"borrow","","",339,[[]]],[11,"borrow_mut","","",339,[[]]],[11,"try_from","","",339,[[],["result",4]]],[11,"try_into","","",339,[[],["result",4]]],[11,"type_id","","",339,[[],["typeid",3]]],[11,"debug","","",339,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",339,[[]]],[11,"deref","","",339,[[]]],[11,"deref_mut","","",339,[[]]],[11,"drop","","",339,[[]]],[11,"from","","",340,[[]]],[11,"into","","",340,[[]]],[11,"into_iter","","",340,[[]]],[11,"to_owned","","",340,[[]]],[11,"clone_into","","",340,[[]]],[11,"borrow","","",340,[[]]],[11,"borrow_mut","","",340,[[]]],[11,"try_from","","",340,[[],["result",4]]],[11,"try_into","","",340,[[],["result",4]]],[11,"type_id","","",340,[[],["typeid",3]]],[11,"debug","","",340,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",340,[[]]],[11,"deref","","",340,[[]]],[11,"deref_mut","","",340,[[]]],[11,"drop","","",340,[[]]],[11,"from","","",341,[[]]],[11,"into","","",341,[[]]],[11,"into_iter","","",341,[[]]],[11,"to_owned","","",341,[[]]],[11,"clone_into","","",341,[[]]],[11,"borrow","","",341,[[]]],[11,"borrow_mut","","",341,[[]]],[11,"try_from","","",341,[[],["result",4]]],[11,"try_into","","",341,[[],["result",4]]],[11,"type_id","","",341,[[],["typeid",3]]],[11,"debug","","",341,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",341,[[]]],[11,"deref","","",341,[[]]],[11,"deref_mut","","",341,[[]]],[11,"drop","","",341,[[]]],[11,"from","","",342,[[]]],[11,"into","","",342,[[]]],[11,"into_iter","","",342,[[]]],[11,"to_owned","","",342,[[]]],[11,"clone_into","","",342,[[]]],[11,"borrow","","",342,[[]]],[11,"borrow_mut","","",342,[[]]],[11,"try_from","","",342,[[],["result",4]]],[11,"try_into","","",342,[[],["result",4]]],[11,"type_id","","",342,[[],["typeid",3]]],[11,"debug","","",342,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",342,[[]]],[11,"deref","","",342,[[]]],[11,"deref_mut","","",342,[[]]],[11,"drop","","",342,[[]]],[11,"from","","",343,[[]]],[11,"into","","",343,[[]]],[11,"into_iter","","",343,[[]]],[11,"to_owned","","",343,[[]]],[11,"clone_into","","",343,[[]]],[11,"borrow","","",343,[[]]],[11,"borrow_mut","","",343,[[]]],[11,"try_from","","",343,[[],["result",4]]],[11,"try_into","","",343,[[],["result",4]]],[11,"type_id","","",343,[[],["typeid",3]]],[11,"debug","","",343,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",343,[[]]],[11,"deref","","",343,[[]]],[11,"deref_mut","","",343,[[]]],[11,"drop","","",343,[[]]],[11,"from","","",344,[[]]],[11,"into","","",344,[[]]],[11,"into_iter","","",344,[[]]],[11,"to_owned","","",344,[[]]],[11,"clone_into","","",344,[[]]],[11,"borrow","","",344,[[]]],[11,"borrow_mut","","",344,[[]]],[11,"try_from","","",344,[[],["result",4]]],[11,"try_into","","",344,[[],["result",4]]],[11,"type_id","","",344,[[],["typeid",3]]],[11,"debug","","",344,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",344,[[]]],[11,"deref","","",344,[[]]],[11,"deref_mut","","",344,[[]]],[11,"drop","","",344,[[]]],[11,"from","","",345,[[]]],[11,"into","","",345,[[]]],[11,"into_iter","","",345,[[]]],[11,"to_owned","","",345,[[]]],[11,"clone_into","","",345,[[]]],[11,"borrow","","",345,[[]]],[11,"borrow_mut","","",345,[[]]],[11,"try_from","","",345,[[],["result",4]]],[11,"try_into","","",345,[[],["result",4]]],[11,"type_id","","",345,[[],["typeid",3]]],[11,"debug","","",345,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",345,[[]]],[11,"deref","","",345,[[]]],[11,"deref_mut","","",345,[[]]],[11,"drop","","",345,[[]]],[11,"from","","",346,[[]]],[11,"into","","",346,[[]]],[11,"into_iter","","",346,[[]]],[11,"to_owned","","",346,[[]]],[11,"clone_into","","",346,[[]]],[11,"borrow","","",346,[[]]],[11,"borrow_mut","","",346,[[]]],[11,"try_from","","",346,[[],["result",4]]],[11,"try_into","","",346,[[],["result",4]]],[11,"type_id","","",346,[[],["typeid",3]]],[11,"debug","","",346,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",346,[[]]],[11,"deref","","",346,[[]]],[11,"deref_mut","","",346,[[]]],[11,"drop","","",346,[[]]],[11,"from","","",347,[[]]],[11,"into","","",347,[[]]],[11,"into_iter","","",347,[[]]],[11,"to_owned","","",347,[[]]],[11,"clone_into","","",347,[[]]],[11,"borrow","","",347,[[]]],[11,"borrow_mut","","",347,[[]]],[11,"try_from","","",347,[[],["result",4]]],[11,"try_into","","",347,[[],["result",4]]],[11,"type_id","","",347,[[],["typeid",3]]],[11,"debug","","",347,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",347,[[]]],[11,"deref","","",347,[[]]],[11,"deref_mut","","",347,[[]]],[11,"drop","","",347,[[]]],[11,"from","","",348,[[]]],[11,"into","","",348,[[]]],[11,"into_iter","","",348,[[]]],[11,"to_owned","","",348,[[]]],[11,"clone_into","","",348,[[]]],[11,"to_string","","",348,[[],["string",3]]],[11,"borrow","","",348,[[]]],[11,"borrow_mut","","",348,[[]]],[11,"try_from","","",348,[[],["result",4]]],[11,"try_into","","",348,[[],["result",4]]],[11,"type_id","","",348,[[],["typeid",3]]],[11,"debug","","",348,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",348,[[]]],[11,"deref","","",348,[[]]],[11,"deref_mut","","",348,[[]]],[11,"drop","","",348,[[]]],[11,"from","","",349,[[]]],[11,"into","","",349,[[]]],[11,"into_iter","","",349,[[]]],[11,"to_owned","","",349,[[]]],[11,"clone_into","","",349,[[]]],[11,"to_string","","",349,[[],["string",3]]],[11,"borrow","","",349,[[]]],[11,"borrow_mut","","",349,[[]]],[11,"try_from","","",349,[[],["result",4]]],[11,"try_into","","",349,[[],["result",4]]],[11,"type_id","","",349,[[],["typeid",3]]],[11,"debug","","",349,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",349,[[]]],[11,"deref","","",349,[[]]],[11,"deref_mut","","",349,[[]]],[11,"drop","","",349,[[]]],[11,"from","","",350,[[]]],[11,"into","","",350,[[]]],[11,"into_iter","","",350,[[]]],[11,"to_owned","","",350,[[]]],[11,"clone_into","","",350,[[]]],[11,"to_string","","",350,[[],["string",3]]],[11,"borrow","","",350,[[]]],[11,"borrow_mut","","",350,[[]]],[11,"try_from","","",350,[[],["result",4]]],[11,"try_into","","",350,[[],["result",4]]],[11,"type_id","","",350,[[],["typeid",3]]],[11,"debug","","",350,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",350,[[]]],[11,"deref","","",350,[[]]],[11,"deref_mut","","",350,[[]]],[11,"drop","","",350,[[]]],[11,"from","","",351,[[]]],[11,"into","","",351,[[]]],[11,"into_iter","","",351,[[]]],[11,"to_owned","","",351,[[]]],[11,"clone_into","","",351,[[]]],[11,"borrow","","",351,[[]]],[11,"borrow_mut","","",351,[[]]],[11,"try_from","","",351,[[],["result",4]]],[11,"try_into","","",351,[[],["result",4]]],[11,"type_id","","",351,[[],["typeid",3]]],[11,"debug","","",351,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",351,[[]]],[11,"deref","","",351,[[]]],[11,"deref_mut","","",351,[[]]],[11,"drop","","",351,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::time","",352,[[]]],[11,"into","","",352,[[]]],[11,"to_owned","","",352,[[]]],[11,"clone_into","","",352,[[]]],[11,"borrow","","",352,[[]]],[11,"borrow_mut","","",352,[[]]],[11,"try_from","","",352,[[],["result",4]]],[11,"try_into","","",352,[[],["result",4]]],[11,"type_id","","",352,[[],["typeid",3]]],[11,"debug","","",352,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",352,[[]]],[11,"init","","",352,[[]]],[11,"deref","","",352,[[]]],[11,"deref_mut","","",352,[[]]],[11,"drop","","",352,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::future","",353,[[]]],[11,"into","","",353,[[]]],[11,"to_owned","","",353,[[]]],[11,"clone_into","","",353,[[]]],[11,"borrow","","",353,[[]]],[11,"borrow_mut","","",353,[[]]],[11,"try_from","","",353,[[],["result",4]]],[11,"try_into","","",353,[[],["result",4]]],[11,"type_id","","",353,[[],["typeid",3]]],[11,"into_future","","",353,[[]]],[11,"debug","","",353,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",353,[[]]],[11,"deref","","",353,[[]]],[11,"deref_mut","","",353,[[]]],[11,"drop","","",353,[[]]],[11,"from","","",354,[[]]],[11,"into","","",354,[[]]],[11,"to_owned","","",354,[[]]],[11,"clone_into","","",354,[[]]],[11,"borrow","","",354,[[]]],[11,"borrow_mut","","",354,[[]]],[11,"try_from","","",354,[[],["result",4]]],[11,"try_into","","",354,[[],["result",4]]],[11,"type_id","","",354,[[],["typeid",3]]],[11,"into_future","","",354,[[]]],[11,"debug","","",354,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",354,[[]]],[11,"deref","","",354,[[]]],[11,"deref_mut","","",354,[[]]],[11,"drop","","",354,[[]]],[11,"from","","",355,[[]]],[11,"into","","",355,[[]]],[11,"borrow","","",355,[[]]],[11,"borrow_mut","","",355,[[]]],[11,"try_from","","",355,[[],["result",4]]],[11,"try_into","","",355,[[],["result",4]]],[11,"type_id","","",355,[[],["typeid",3]]],[11,"into_future","","",355,[[]]],[11,"debug","","",355,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",355,[[]]],[11,"deref","","",355,[[]]],[11,"deref_mut","","",355,[[]]],[11,"drop","","",355,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::task","",101,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"debug","","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",101,[[]]],[11,"init","","",101,[[]]],[11,"deref","","",101,[[]]],[11,"deref_mut","","",101,[[]]],[11,"drop","","",101,[[]]],[11,"from","","",356,[[]]],[11,"into","","",356,[[]]],[11,"borrow","","",356,[[]]],[11,"borrow_mut","","",356,[[]]],[11,"try_from","","",356,[[],["result",4]]],[11,"try_into","","",356,[[],["result",4]]],[11,"type_id","","",356,[[],["typeid",3]]],[11,"debug","","",356,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",356,[[]]],[11,"deref","","",356,[[]]],[11,"deref_mut","","",356,[[]]],[11,"drop","","",356,[[]]],[11,"from","","",357,[[]]],[11,"into","","",357,[[]]],[11,"borrow","","",357,[[]]],[11,"borrow_mut","","",357,[[]]],[11,"try_from","","",357,[[],["result",4]]],[11,"try_into","","",357,[[],["result",4]]],[11,"type_id","","",357,[[],["typeid",3]]],[11,"debug","","",357,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",357,[[]]],[11,"deref","","",357,[[]]],[11,"deref_mut","","",357,[[]]],[11,"drop","","",357,[[]]],[11,"from","","",358,[[]]],[11,"into","","",358,[[]]],[11,"to_owned","","",358,[[]]],[11,"clone_into","","",358,[[]]],[11,"borrow","","",358,[[]]],[11,"borrow_mut","","",358,[[]]],[11,"try_from","","",358,[[],["result",4]]],[11,"try_into","","",358,[[],["result",4]]],[11,"type_id","","",358,[[],["typeid",3]]],[11,"debug","","",358,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",358,[[]]],[11,"deref","","",358,[[]]],[11,"deref_mut","","",358,[[]]],[11,"drop","","",358,[[]]],[11,"from","","",359,[[]]],[11,"into","","",359,[[]]],[11,"to_owned","","",359,[[]]],[11,"clone_into","","",359,[[]]],[11,"borrow","","",359,[[]]],[11,"borrow_mut","","",359,[[]]],[11,"try_from","","",359,[[],["result",4]]],[11,"try_into","","",359,[[],["result",4]]],[11,"type_id","","",359,[[],["typeid",3]]],[11,"debug","","",359,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",359,[[]]],[11,"deref","","",359,[[]]],[11,"deref_mut","","",359,[[]]],[11,"drop","","",359,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::alloc","",360,[[]]],[11,"into","","",360,[[]]],[11,"to_owned","","",360,[[]]],[11,"clone_into","","",360,[[]]],[11,"to_string","","",360,[[],["string",3]]],[11,"borrow","","",360,[[]]],[11,"borrow_mut","","",360,[[]]],[11,"try_from","","",360,[[],["result",4]]],[11,"try_into","","",360,[[],["result",4]]],[11,"type_id","","",360,[[],["typeid",3]]],[11,"debug","","",360,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",360,[[]]],[11,"init","","",360,[[]]],[11,"deref","","",360,[[]]],[11,"deref_mut","","",360,[[]]],[11,"drop","","",360,[[]]],[11,"from","","",361,[[]]],[11,"into","","",361,[[]]],[11,"to_owned","","",361,[[]]],[11,"clone_into","","",361,[[]]],[11,"borrow","","",361,[[]]],[11,"borrow_mut","","",361,[[]]],[11,"try_from","","",361,[[],["result",4]]],[11,"try_into","","",361,[[],["result",4]]],[11,"type_id","","",361,[[],["typeid",3]]],[11,"debug","","",361,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",361,[[]]],[11,"init","","",361,[[]]],[11,"deref","","",361,[[]]],[11,"deref_mut","","",361,[[]]],[11,"drop","","",361,[[]]],[11,"from","","",362,[[]]],[11,"into","","",362,[[]]],[11,"to_owned","","",362,[[]]],[11,"clone_into","","",362,[[]]],[11,"to_string","","",362,[[],["string",3]]],[11,"borrow","","",362,[[]]],[11,"borrow_mut","","",362,[[]]],[11,"try_from","","",362,[[],["result",4]]],[11,"try_into","","",362,[[],["result",4]]],[11,"type_id","","",362,[[],["typeid",3]]],[11,"debug","","",362,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",362,[[]]],[11,"init","","",362,[[]]],[11,"deref","","",362,[[]]],[11,"deref_mut","","",362,[[]]],[11,"drop","","",362,[[]]],[11,"from","wasmtime_wiggle::bitflags::_core::arch::x86_64","",363,[[]]],[11,"into","","",363,[[]]],[11,"to_owned","","",363,[[]]],[11,"clone_into","","",363,[[]]],[11,"borrow","","",363,[[]]],[11,"borrow_mut","","",363,[[]]],[11,"try_from","","",363,[[],["result",4]]],[11,"try_into","","",363,[[],["result",4]]],[11,"type_id","","",363,[[],["typeid",3]]],[11,"debug","","",363,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",363,[[]]],[11,"deref","","",363,[[]]],[11,"deref_mut","","",363,[[]]],[11,"drop","","",363,[[]]],[11,"from","","",364,[[]]],[11,"into","","",364,[[]]],[11,"to_owned","","",364,[[]]],[11,"clone_into","","",364,[[]]],[11,"borrow","","",364,[[]]],[11,"borrow_mut","","",364,[[]]],[11,"try_from","","",364,[[],["result",4]]],[11,"try_into","","",364,[[],["result",4]]],[11,"type_id","","",364,[[],["typeid",3]]],[11,"debug","","",364,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",364,[[]]],[11,"deref","","",364,[[]]],[11,"deref_mut","","",364,[[]]],[11,"drop","","",364,[[]]],[11,"from","","",365,[[]]],[11,"into","","",365,[[]]],[11,"to_owned","","",365,[[]]],[11,"clone_into","","",365,[[]]],[11,"borrow","","",365,[[]]],[11,"borrow_mut","","",365,[[]]],[11,"try_from","","",365,[[],["result",4]]],[11,"try_into","","",365,[[],["result",4]]],[11,"type_id","","",365,[[],["typeid",3]]],[11,"debug","","",365,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",365,[[]]],[11,"deref","","",365,[[]]],[11,"deref_mut","","",365,[[]]],[11,"drop","","",365,[[]]],[11,"from","","",366,[[]]],[11,"into","","",366,[[]]],[11,"to_owned","","",366,[[]]],[11,"clone_into","","",366,[[]]],[11,"borrow","","",366,[[]]],[11,"borrow_mut","","",366,[[]]],[11,"try_from","","",366,[[],["result",4]]],[11,"try_into","","",366,[[],["result",4]]],[11,"type_id","","",366,[[],["typeid",3]]],[11,"debug","","",366,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",366,[[]]],[11,"deref","","",366,[[]]],[11,"deref_mut","","",366,[[]]],[11,"drop","","",366,[[]]],[11,"from","","",367,[[]]],[11,"into","","",367,[[]]],[11,"to_owned","","",367,[[]]],[11,"clone_into","","",367,[[]]],[11,"borrow","","",367,[[]]],[11,"borrow_mut","","",367,[[]]],[11,"try_from","","",367,[[],["result",4]]],[11,"try_into","","",367,[[],["result",4]]],[11,"type_id","","",367,[[],["typeid",3]]],[11,"debug","","",367,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",367,[[]]],[11,"deref","","",367,[[]]],[11,"deref_mut","","",367,[[]]],[11,"drop","","",367,[[]]],[11,"from","","",368,[[]]],[11,"into","","",368,[[]]],[11,"to_owned","","",368,[[]]],[11,"clone_into","","",368,[[]]],[11,"borrow","","",368,[[]]],[11,"borrow_mut","","",368,[[]]],[11,"try_from","","",368,[[],["result",4]]],[11,"try_into","","",368,[[],["result",4]]],[11,"type_id","","",368,[[],["typeid",3]]],[11,"debug","","",368,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",368,[[]]],[11,"deref","","",368,[[]]],[11,"deref_mut","","",368,[[]]],[11,"drop","","",368,[[]]],[11,"from","","",369,[[]]],[11,"into","","",369,[[]]],[11,"to_owned","","",369,[[]]],[11,"clone_into","","",369,[[]]],[11,"borrow","","",369,[[]]],[11,"borrow_mut","","",369,[[]]],[11,"try_from","","",369,[[],["result",4]]],[11,"try_into","","",369,[[],["result",4]]],[11,"type_id","","",369,[[],["typeid",3]]],[11,"debug","","",369,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",369,[[]]],[11,"deref","","",369,[[]]],[11,"deref_mut","","",369,[[]]],[11,"drop","","",369,[[]]],[11,"from","","",370,[[]]],[11,"into","","",370,[[]]],[11,"to_owned","","",370,[[]]],[11,"clone_into","","",370,[[]]],[11,"borrow","","",370,[[]]],[11,"borrow_mut","","",370,[[]]],[11,"try_from","","",370,[[],["result",4]]],[11,"try_into","","",370,[[],["result",4]]],[11,"type_id","","",370,[[],["typeid",3]]],[11,"debug","","",370,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",370,[[]]],[11,"deref","","",370,[[]]],[11,"deref_mut","","",370,[[]]],[11,"drop","","",370,[[]]],[11,"from","","",371,[[]]],[11,"into","","",371,[[]]],[11,"to_owned","","",371,[[]]],[11,"clone_into","","",371,[[]]],[11,"borrow","","",371,[[]]],[11,"borrow_mut","","",371,[[]]],[11,"try_from","","",371,[[],["result",4]]],[11,"try_into","","",371,[[],["result",4]]],[11,"type_id","","",371,[[],["typeid",3]]],[11,"debug","","",371,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",371,[[]]],[11,"deref","","",371,[[]]],[11,"deref_mut","","",371,[[]]],[11,"drop","","",371,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"debug","","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",104,[[]]],[11,"init","","",104,[[]]],[11,"deref","","",104,[[]]],[11,"deref_mut","","",104,[[]]],[11,"drop","","",104,[[]]],[11,"from","wasmtime_wiggle::witx::polyfill","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_string","","",105,[[],["string",3]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"debug","","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",105,[[]]],[11,"deref","","",105,[[]]],[11,"deref_mut","","",105,[[]]],[11,"drop","","",105,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"debug","","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",108,[[]]],[11,"init","","",108,[[]]],[11,"deref","","",108,[[]]],[11,"deref_mut","","",108,[[]]],[11,"drop","","",108,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"debug","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",109,[[]]],[11,"init","","",109,[[]]],[11,"deref","","",109,[[]]],[11,"deref_mut","","",109,[[]]],[11,"drop","","",109,[[]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"debug","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",110,[[]]],[11,"init","","",110,[[]]],[11,"deref","","",110,[[]]],[11,"deref_mut","","",110,[[]]],[11,"drop","","",110,[[]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"debug","","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",111,[[]]],[11,"init","","",111,[[]]],[11,"deref","","",111,[[]]],[11,"deref_mut","","",111,[[]]],[11,"drop","","",111,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"debug","","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",112,[[]]],[11,"init","","",112,[[]]],[11,"deref","","",112,[[]]],[11,"deref_mut","","",112,[[]]],[11,"drop","","",112,[[]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"debug","","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",113,[[]]],[11,"init","","",113,[[]]],[11,"deref","","",113,[[]]],[11,"deref_mut","","",113,[[]]],[11,"drop","","",113,[[]]],[11,"from","wasmtime_wiggle::witx","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"debug","","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",114,[[]]],[11,"init","","",114,[[]]],[11,"deref","","",114,[[]]],[11,"deref_mut","","",114,[[]]],[11,"drop","","",114,[[]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_string","","",115,[[],["string",3]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"debug","","",115,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",115,[[]]],[11,"deref","","",115,[[]]],[11,"deref_mut","","",115,[[]]],[11,"drop","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"debug","","",116,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",116,[[]]],[11,"init","","",116,[[]]],[11,"deref","","",116,[[]]],[11,"deref_mut","","",116,[[]]],[11,"drop","","",116,[[]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"debug","","",117,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",117,[[]]],[11,"init","","",117,[[]]],[11,"deref","","",117,[[]]],[11,"deref_mut","","",117,[[]]],[11,"drop","","",117,[[]]],[11,"from","","",372,[[]]],[11,"into","","",372,[[]]],[11,"to_owned","","",372,[[]]],[11,"clone_into","","",372,[[]]],[11,"to_string","","",372,[[],["string",3]]],[11,"borrow","","",372,[[]]],[11,"borrow_mut","","",372,[[]]],[11,"try_from","","",372,[[],["result",4]]],[11,"try_into","","",372,[[],["result",4]]],[11,"type_id","","",372,[[],["typeid",3]]],[11,"debug","","",372,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",372,[[]]],[11,"init","","",372,[[]]],[11,"deref","","",372,[[]]],[11,"deref_mut","","",372,[[]]],[11,"drop","","",372,[[]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"debug","","",118,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",118,[[]]],[11,"deref","","",118,[[]]],[11,"deref_mut","","",118,[[]]],[11,"drop","","",118,[[]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"debug","","",119,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",119,[[]]],[11,"init","","",119,[[]]],[11,"deref","","",119,[[]]],[11,"deref_mut","","",119,[[]]],[11,"drop","","",119,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"debug","","",120,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",120,[[]]],[11,"init","","",120,[[]]],[11,"deref","","",120,[[]]],[11,"deref_mut","","",120,[[]]],[11,"drop","","",120,[[]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"debug","","",121,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",121,[[]]],[11,"init","","",121,[[]]],[11,"deref","","",121,[[]]],[11,"deref_mut","","",121,[[]]],[11,"drop","","",121,[[]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"debug","","",122,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",122,[[]]],[11,"init","","",122,[[]]],[11,"deref","","",122,[[]]],[11,"deref_mut","","",122,[[]]],[11,"drop","","",122,[[]]],[11,"from","","",373,[[]]],[11,"into","","",373,[[]]],[11,"to_owned","","",373,[[]]],[11,"clone_into","","",373,[[]]],[11,"borrow","","",373,[[]]],[11,"borrow_mut","","",373,[[]]],[11,"try_from","","",373,[[],["result",4]]],[11,"try_into","","",373,[[],["result",4]]],[11,"type_id","","",373,[[],["typeid",3]]],[11,"debug","","",373,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",373,[[]]],[11,"init","","",373,[[]]],[11,"deref","","",373,[[]]],[11,"deref_mut","","",373,[[]]],[11,"drop","","",373,[[]]],[11,"from","","",374,[[]]],[11,"into","","",374,[[]]],[11,"to_owned","","",374,[[]]],[11,"clone_into","","",374,[[]]],[11,"borrow","","",374,[[]]],[11,"borrow_mut","","",374,[[]]],[11,"try_from","","",374,[[],["result",4]]],[11,"try_into","","",374,[[],["result",4]]],[11,"type_id","","",374,[[],["typeid",3]]],[11,"debug","","",374,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",374,[[]]],[11,"init","","",374,[[]]],[11,"deref","","",374,[[]]],[11,"deref_mut","","",374,[[]]],[11,"drop","","",374,[[]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"debug","","",123,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",123,[[]]],[11,"init","","",123,[[]]],[11,"deref","","",123,[[]]],[11,"deref_mut","","",123,[[]]],[11,"drop","","",123,[[]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"debug","","",124,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",124,[[]]],[11,"init","","",124,[[]]],[11,"deref","","",124,[[]]],[11,"deref_mut","","",124,[[]]],[11,"drop","","",124,[[]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"debug","","",125,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",125,[[]]],[11,"init","","",125,[[]]],[11,"deref","","",125,[[]]],[11,"deref_mut","","",125,[[]]],[11,"drop","","",125,[[]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"debug","","",126,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",126,[[]]],[11,"init","","",126,[[]]],[11,"deref","","",126,[[]]],[11,"deref_mut","","",126,[[]]],[11,"drop","","",126,[[]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"debug","","",127,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",127,[[]]],[11,"init","","",127,[[]]],[11,"deref","","",127,[[]]],[11,"deref_mut","","",127,[[]]],[11,"drop","","",127,[[]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"debug","","",128,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",128,[[]]],[11,"init","","",128,[[]]],[11,"deref","","",128,[[]]],[11,"deref_mut","","",128,[[]]],[11,"drop","","",128,[[]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"debug","","",129,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",129,[[]]],[11,"init","","",129,[[]]],[11,"deref","","",129,[[]]],[11,"deref_mut","","",129,[[]]],[11,"drop","","",129,[[]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"debug","","",130,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",130,[[]]],[11,"init","","",130,[[]]],[11,"deref","","",130,[[]]],[11,"deref_mut","","",130,[[]]],[11,"drop","","",130,[[]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"debug","","",131,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",131,[[]]],[11,"deref","","",131,[[]]],[11,"deref_mut","","",131,[[]]],[11,"drop","","",131,[[]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"debug","","",132,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",132,[[]]],[11,"init","","",132,[[]]],[11,"deref","","",132,[[]]],[11,"deref_mut","","",132,[[]]],[11,"drop","","",132,[[]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"debug","","",133,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",133,[[]]],[11,"init","","",133,[[]]],[11,"deref","","",133,[[]]],[11,"deref_mut","","",133,[[]]],[11,"drop","","",133,[[]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"debug","","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",134,[[]]],[11,"init","","",134,[[]]],[11,"deref","","",134,[[]]],[11,"deref_mut","","",134,[[]]],[11,"drop","","",134,[[]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"debug","","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",135,[[]]],[11,"init","","",135,[[]]],[11,"deref","","",135,[[]]],[11,"deref_mut","","",135,[[]]],[11,"drop","","",135,[[]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"debug","","",136,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",136,[[]]],[11,"init","","",136,[[]]],[11,"deref","","",136,[[]]],[11,"deref_mut","","",136,[[]]],[11,"drop","","",136,[[]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"debug","","",137,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",137,[[]]],[11,"init","","",137,[[]]],[11,"deref","","",137,[[]]],[11,"deref_mut","","",137,[[]]],[11,"drop","","",137,[[]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"debug","","",138,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",138,[[]]],[11,"init","","",138,[[]]],[11,"deref","","",138,[[]]],[11,"deref_mut","","",138,[[]]],[11,"drop","","",138,[[]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"debug","","",139,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",139,[[]]],[11,"init","","",139,[[]]],[11,"deref","","",139,[[]]],[11,"deref_mut","","",139,[[]]],[11,"drop","","",139,[[]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"debug","","",140,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",140,[[]]],[11,"init","","",140,[[]]],[11,"deref","","",140,[[]]],[11,"deref_mut","","",140,[[]]],[11,"drop","","",140,[[]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"debug","","",141,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",141,[[]]],[11,"init","","",141,[[]]],[11,"deref","","",141,[[]]],[11,"deref_mut","","",141,[[]]],[11,"drop","","",141,[[]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"debug","","",142,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",142,[[]]],[11,"init","","",142,[[]]],[11,"deref","","",142,[[]]],[11,"deref_mut","","",142,[[]]],[11,"drop","","",142,[[]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"debug","","",143,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",143,[[]]],[11,"init","","",143,[[]]],[11,"deref","","",143,[[]]],[11,"deref_mut","","",143,[[]]],[11,"drop","","",143,[[]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"debug","","",144,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",144,[[]]],[11,"init","","",144,[[]]],[11,"deref","","",144,[[]]],[11,"deref_mut","","",144,[[]]],[11,"drop","","",144,[[]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"debug","","",145,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",145,[[]]],[11,"init","","",145,[[]]],[11,"deref","","",145,[[]]],[11,"deref_mut","","",145,[[]]],[11,"drop","","",145,[[]]],[11,"from","","",375,[[]]],[11,"into","","",375,[[]]],[11,"borrow","","",375,[[]]],[11,"borrow_mut","","",375,[[]]],[11,"try_from","","",375,[[],["result",4]]],[11,"try_into","","",375,[[],["result",4]]],[11,"type_id","","",375,[[],["typeid",3]]],[11,"debug","","",375,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",375,[[]]],[11,"deref","","",375,[[]]],[11,"deref_mut","","",375,[[]]],[11,"drop","","",375,[[]]],[11,"from","","",376,[[]]],[11,"into","","",376,[[]]],[11,"borrow","","",376,[[]]],[11,"borrow_mut","","",376,[[]]],[11,"try_from","","",376,[[],["result",4]]],[11,"try_into","","",376,[[],["result",4]]],[11,"type_id","","",376,[[],["typeid",3]]],[11,"debug","","",376,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",376,[[]]],[11,"deref","","",376,[[]]],[11,"deref_mut","","",376,[[]]],[11,"drop","","",376,[[]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"debug","","",149,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",149,[[]]],[11,"init","","",149,[[]]],[11,"deref","","",149,[[]]],[11,"deref_mut","","",149,[[]]],[11,"drop","","",149,[[]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"debug","","",150,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",150,[[]]],[11,"deref","","",150,[[]]],[11,"deref_mut","","",150,[[]]],[11,"drop","","",150,[[]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"debug","","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",151,[[]]],[11,"init","","",151,[[]]],[11,"deref","","",151,[[]]],[11,"deref_mut","","",151,[[]]],[11,"drop","","",151,[[]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"debug","","",152,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",152,[[]]],[11,"init","","",152,[[]]],[11,"deref","","",152,[[]]],[11,"deref_mut","","",152,[[]]],[11,"drop","","",152,[[]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"to_string","","",153,[[],["string",3]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"debug","","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",153,[[]]],[11,"init","","",153,[[]]],[11,"deref","","",153,[[]]],[11,"deref_mut","","",153,[[]]],[11,"drop","","",153,[[]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"debug","","",154,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",154,[[]]],[11,"init","","",154,[[]]],[11,"deref","","",154,[[]]],[11,"deref_mut","","",154,[[]]],[11,"drop","","",154,[[]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_string","","",156,[[],["string",3]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"debug","","",156,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",156,[[]]],[11,"deref","","",156,[[]]],[11,"deref_mut","","",156,[[]]],[11,"drop","","",156,[[]]],[11,"from","wasmtime_wiggle::tracing::subscriber","",377,[[]]],[11,"into","","",377,[[]]],[11,"borrow","","",377,[[]]],[11,"borrow_mut","","",377,[[]]],[11,"try_from","","",377,[[],["result",4]]],[11,"try_into","","",377,[[],["result",4]]],[11,"type_id","","",377,[[],["typeid",3]]],[11,"debug","","",377,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",377,[[]]],[11,"deref","","",377,[[]]],[11,"deref_mut","","",377,[[]]],[11,"drop","","",377,[[]]],[11,"from","wasmtime_wiggle::tracing","",378,[[]]],[11,"into","","",378,[[]]],[11,"to_owned","","",378,[[]]],[11,"clone_into","","",378,[[]]],[11,"borrow","","",378,[[]]],[11,"borrow_mut","","",378,[[]]],[11,"try_from","","",378,[[],["result",4]]],[11,"try_into","","",378,[[],["result",4]]],[11,"type_id","","",378,[[],["typeid",3]]],[11,"debug","","",378,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",378,[[]]],[11,"deref","","",378,[[]]],[11,"deref_mut","","",378,[[]]],[11,"drop","","",378,[[]]],[11,"from","wasmtime_wiggle::tracing::subscriber","",379,[[]]],[11,"into","","",379,[[]]],[11,"to_string","","",379,[[],["string",3]]],[11,"borrow","","",379,[[]]],[11,"borrow_mut","","",379,[[]]],[11,"try_from","","",379,[[],["result",4]]],[11,"try_into","","",379,[[],["result",4]]],[11,"type_id","","",379,[[],["typeid",3]]],[11,"debug","","",379,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",379,[[]]],[11,"deref","","",379,[[]]],[11,"deref_mut","","",379,[[]]],[11,"drop","","",379,[[]]],[11,"from","wasmtime_wiggle::tracing::field","",380,[[]]],[11,"into","","",380,[[]]],[11,"to_owned","","",380,[[]]],[11,"clone_into","","",380,[[]]],[11,"to_string","","",380,[[],["string",3]]],[11,"borrow","","",380,[[]]],[11,"borrow_mut","","",380,[[]]],[11,"try_from","","",380,[[],["result",4]]],[11,"try_into","","",380,[[],["result",4]]],[11,"type_id","","",380,[[],["typeid",3]]],[11,"debug","","",380,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",380,[[]]],[11,"init","","",380,[[]]],[11,"deref","","",380,[[]]],[11,"deref_mut","","",380,[[]]],[11,"drop","","",380,[[]]],[11,"from","","",381,[[]]],[11,"into","","",381,[[]]],[11,"borrow","","",381,[[]]],[11,"borrow_mut","","",381,[[]]],[11,"try_from","","",381,[[],["result",4]]],[11,"try_into","","",381,[[],["result",4]]],[11,"type_id","","",381,[[],["typeid",3]]],[11,"debug","","",381,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",381,[[]]],[11,"init","","",381,[[]]],[11,"deref","","",381,[[]]],[11,"deref_mut","","",381,[[]]],[11,"drop","","",381,[[]]],[11,"from","","",382,[[]]],[11,"into","","",382,[[]]],[11,"to_string","","",382,[[],["string",3]]],[11,"borrow","","",382,[[]]],[11,"borrow_mut","","",382,[[]]],[11,"try_from","","",382,[[],["result",4]]],[11,"try_into","","",382,[[],["result",4]]],[11,"type_id","","",382,[[],["typeid",3]]],[11,"debug","","",382,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",382,[[]]],[11,"deref","","",382,[[]]],[11,"deref_mut","","",382,[[]]],[11,"drop","","",382,[[]]],[11,"from","","",383,[[]]],[11,"into","","",383,[[]]],[11,"to_string","","",383,[[],["string",3]]],[11,"borrow","","",383,[[]]],[11,"borrow_mut","","",383,[[]]],[11,"try_from","","",383,[[],["result",4]]],[11,"try_into","","",383,[[],["result",4]]],[11,"type_id","","",383,[[],["typeid",3]]],[11,"debug","","",383,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",383,[[]]],[11,"deref","","",383,[[]]],[11,"deref_mut","","",383,[[]]],[11,"drop","","",383,[[]]],[11,"from","","",384,[[]]],[11,"into","","",384,[[]]],[11,"into_iter","","",384,[[]]],[11,"borrow","","",384,[[]]],[11,"borrow_mut","","",384,[[]]],[11,"try_from","","",384,[[],["result",4]]],[11,"try_into","","",384,[[],["result",4]]],[11,"type_id","","",384,[[],["typeid",3]]],[11,"debug","","",384,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",384,[[]]],[11,"deref","","",384,[[]]],[11,"deref_mut","","",384,[[]]],[11,"drop","","",384,[[]]],[11,"from","","",385,[[]]],[11,"into","","",385,[[]]],[11,"to_owned","","",385,[[]]],[11,"clone_into","","",385,[[]]],[11,"to_string","","",385,[[],["string",3]]],[11,"borrow","","",385,[[]]],[11,"borrow_mut","","",385,[[]]],[11,"try_from","","",385,[[],["result",4]]],[11,"try_into","","",385,[[],["result",4]]],[11,"type_id","","",385,[[],["typeid",3]]],[11,"debug","","",385,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",385,[[]]],[11,"deref","","",385,[[]]],[11,"deref_mut","","",385,[[]]],[11,"drop","","",385,[[]]],[11,"from","","",386,[[]]],[11,"into","","",386,[[]]],[11,"to_owned","","",386,[[]]],[11,"clone_into","","",386,[[]]],[11,"borrow","","",386,[[]]],[11,"borrow_mut","","",386,[[]]],[11,"try_from","","",386,[[],["result",4]]],[11,"try_into","","",386,[[],["result",4]]],[11,"type_id","","",386,[[],["typeid",3]]],[11,"debug","","",386,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",386,[[]]],[11,"deref","","",386,[[]]],[11,"deref_mut","","",386,[[]]],[11,"drop","","",386,[[]]],[11,"from","wasmtime_wiggle::tracing::instrument","",387,[[]]],[11,"into","","",387,[[]]],[11,"to_owned","","",387,[[]]],[11,"clone_into","","",387,[[]]],[11,"borrow","","",387,[[]]],[11,"borrow_mut","","",387,[[]]],[11,"try_from","","",387,[[],["result",4]]],[11,"try_into","","",387,[[],["result",4]]],[11,"type_id","","",387,[[],["typeid",3]]],[11,"debug","","",387,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",387,[[]]],[11,"deref","","",387,[[]]],[11,"deref_mut","","",387,[[]]],[11,"drop","","",387,[[]]],[11,"from","","",388,[[]]],[11,"into","","",388,[[]]],[11,"to_owned","","",388,[[]]],[11,"clone_into","","",388,[[]]],[11,"borrow","","",388,[[]]],[11,"borrow_mut","","",388,[[]]],[11,"try_from","","",388,[[],["result",4]]],[11,"try_into","","",388,[[],["result",4]]],[11,"type_id","","",388,[[],["typeid",3]]],[11,"into_future","","",388,[[]]],[11,"debug","","",388,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",388,[[]]],[11,"deref","","",388,[[]]],[11,"deref_mut","","",388,[[]]],[11,"drop","","",388,[[]]],[11,"from","wasmtime_wiggle::tracing::metadata","",389,[[]]],[11,"into","","",389,[[]]],[11,"to_owned","","",389,[[]]],[11,"clone_into","","",389,[[]]],[11,"to_string","","",389,[[],["string",3]]],[11,"borrow","","",389,[[]]],[11,"borrow_mut","","",389,[[]]],[11,"try_from","","",389,[[],["result",4]]],[11,"try_into","","",389,[[],["result",4]]],[11,"type_id","","",389,[[],["typeid",3]]],[11,"debug","","",389,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",389,[[]]],[11,"deref","","",389,[[]]],[11,"deref_mut","","",389,[[]]],[11,"drop","","",389,[[]]],[11,"from","","",390,[[]]],[11,"into","","",390,[[]]],[11,"to_owned","","",390,[[]]],[11,"clone_into","","",390,[[]]],[11,"to_string","","",390,[[],["string",3]]],[11,"borrow","","",390,[[]]],[11,"borrow_mut","","",390,[[]]],[11,"try_from","","",390,[[],["result",4]]],[11,"try_into","","",390,[[],["result",4]]],[11,"type_id","","",390,[[],["typeid",3]]],[11,"debug","","",390,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",390,[[]]],[11,"init","","",390,[[]]],[11,"deref","","",390,[[]]],[11,"deref_mut","","",390,[[]]],[11,"drop","","",390,[[]]],[11,"from","wasmtime_wiggle::tracing","",391,[[]]],[11,"into","","",391,[[]]],[11,"to_owned","","",391,[[]]],[11,"clone_into","","",391,[[]]],[11,"borrow","","",391,[[]]],[11,"borrow_mut","","",391,[[]]],[11,"try_from","","",391,[[],["result",4]]],[11,"try_into","","",391,[[],["result",4]]],[11,"type_id","","",391,[[],["typeid",3]]],[11,"debug","","",391,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",391,[[]]],[11,"deref","","",391,[[]]],[11,"deref_mut","","",391,[[]]],[11,"drop","","",391,[[]]],[11,"from","wasmtime_wiggle::tracing::span","",392,[[]]],[11,"into","","",392,[[]]],[11,"borrow","","",392,[[]]],[11,"borrow_mut","","",392,[[]]],[11,"try_from","","",392,[[],["result",4]]],[11,"try_into","","",392,[[],["result",4]]],[11,"type_id","","",392,[[],["typeid",3]]],[11,"debug","","",392,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",392,[[]]],[11,"deref","","",392,[[]]],[11,"deref_mut","","",392,[[]]],[11,"drop","","",392,[[]]],[11,"from","","",393,[[]]],[11,"into","","",393,[[]]],[11,"borrow","","",393,[[]]],[11,"borrow_mut","","",393,[[]]],[11,"try_from","","",393,[[],["result",4]]],[11,"try_into","","",393,[[],["result",4]]],[11,"type_id","","",393,[[],["typeid",3]]],[11,"debug","","",393,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",393,[[]]],[11,"deref","","",393,[[]]],[11,"deref_mut","","",393,[[]]],[11,"drop","","",393,[[]]],[11,"from","wasmtime_wiggle::tracing","",394,[[]]],[11,"into","","",394,[[]]],[11,"to_owned","","",394,[[]]],[11,"clone_into","","",394,[[]]],[11,"borrow","","",394,[[]]],[11,"borrow_mut","","",394,[[]]],[11,"try_from","","",394,[[],["result",4]]],[11,"try_into","","",394,[[],["result",4]]],[11,"type_id","","",394,[[],["typeid",3]]],[11,"debug","","",394,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",394,[[]]],[11,"init","","",394,[[]]],[11,"deref","","",394,[[]]],[11,"deref_mut","","",394,[[]]],[11,"drop","","",394,[[]]],[11,"from","wasmtime_wiggle::tracing::span","",395,[[]]],[11,"into","","",395,[[]]],[11,"borrow","","",395,[[]]],[11,"borrow_mut","","",395,[[]]],[11,"try_from","","",395,[[],["result",4]]],[11,"try_into","","",395,[[],["result",4]]],[11,"type_id","","",395,[[],["typeid",3]]],[11,"debug","","",395,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",395,[[]]],[11,"deref","","",395,[[]]],[11,"deref_mut","","",395,[[]]],[11,"drop","","",395,[[]]],[11,"from","wasmtime_wiggle::tracing::subscriber","",396,[[]]],[11,"into","","",396,[[]]],[11,"to_owned","","",396,[[]]],[11,"clone_into","","",396,[[]]],[11,"borrow","","",396,[[]]],[11,"borrow_mut","","",396,[[]]],[11,"try_from","","",396,[[],["result",4]]],[11,"try_into","","",396,[[],["result",4]]],[11,"type_id","","",396,[[],["typeid",3]]],[11,"debug","","",396,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",396,[[]]],[11,"deref","","",396,[[]]],[11,"deref_mut","","",396,[[]]],[11,"drop","","",396,[[]]],[11,"from","wasmtime_wiggle::tracing::log","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"to_string","","",172,[[],["string",3]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"debug","","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",172,[[]]],[11,"init","","",172,[[]]],[11,"deref","","",172,[[]]],[11,"deref_mut","","",172,[[]]],[11,"drop","","",172,[[]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"to_string","","",173,[[],["string",3]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"debug","","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",173,[[]]],[11,"init","","",173,[[]]],[11,"deref","","",173,[[]]],[11,"deref_mut","","",173,[[]]],[11,"drop","","",173,[[]]],[11,"from","","",397,[[]]],[11,"into","","",397,[[]]],[11,"to_owned","","",397,[[]]],[11,"clone_into","","",397,[[]]],[11,"borrow","","",397,[[]]],[11,"borrow_mut","","",397,[[]]],[11,"try_from","","",397,[[],["result",4]]],[11,"try_into","","",397,[[],["result",4]]],[11,"type_id","","",397,[[],["typeid",3]]],[11,"debug","","",397,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",397,[[]]],[11,"deref","","",397,[[]]],[11,"deref_mut","","",397,[[]]],[11,"drop","","",397,[[]]],[11,"from","","",398,[[]]],[11,"into","","",398,[[]]],[11,"borrow","","",398,[[]]],[11,"borrow_mut","","",398,[[]]],[11,"try_from","","",398,[[],["result",4]]],[11,"try_into","","",398,[[],["result",4]]],[11,"type_id","","",398,[[],["typeid",3]]],[11,"debug","","",398,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",398,[[]]],[11,"deref","","",398,[[]]],[11,"deref_mut","","",398,[[]]],[11,"drop","","",398,[[]]],[11,"from","","",399,[[]]],[11,"into","","",399,[[]]],[11,"to_owned","","",399,[[]]],[11,"clone_into","","",399,[[]]],[11,"borrow","","",399,[[]]],[11,"borrow_mut","","",399,[[]]],[11,"try_from","","",399,[[],["result",4]]],[11,"try_into","","",399,[[],["result",4]]],[11,"type_id","","",399,[[],["typeid",3]]],[11,"debug","","",399,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",399,[[]]],[11,"init","","",399,[[]]],[11,"deref","","",399,[[]]],[11,"deref_mut","","",399,[[]]],[11,"drop","","",399,[[]]],[11,"from","","",400,[[]]],[11,"into","","",400,[[]]],[11,"borrow","","",400,[[]]],[11,"borrow_mut","","",400,[[]]],[11,"try_from","","",400,[[],["result",4]]],[11,"try_into","","",400,[[],["result",4]]],[11,"type_id","","",400,[[],["typeid",3]]],[11,"debug","","",400,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",400,[[]]],[11,"init","","",400,[[]]],[11,"deref","","",400,[[]]],[11,"deref_mut","","",400,[[]]],[11,"drop","","",400,[[]]],[11,"from","","",401,[[]]],[11,"into","","",401,[[]]],[11,"to_string","","",401,[[],["string",3]]],[11,"borrow","","",401,[[]]],[11,"borrow_mut","","",401,[[]]],[11,"try_from","","",401,[[],["result",4]]],[11,"try_into","","",401,[[],["result",4]]],[11,"type_id","","",401,[[],["typeid",3]]],[11,"debug","","",401,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",401,[[]]],[11,"deref","","",401,[[]]],[11,"deref_mut","","",401,[[]]],[11,"drop","","",401,[[]]],[11,"from","","",402,[[]]],[11,"into","","",402,[[]]],[11,"to_string","","",402,[[],["string",3]]],[11,"borrow","","",402,[[]]],[11,"borrow_mut","","",402,[[]]],[11,"try_from","","",402,[[],["result",4]]],[11,"try_into","","",402,[[],["result",4]]],[11,"type_id","","",402,[[],["typeid",3]]],[11,"debug","","",402,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",402,[[]]],[11,"deref","","",402,[[]]],[11,"deref_mut","","",402,[[]]],[11,"drop","","",402,[[]]],[11,"from","wasmtime_wiggle::tracing::event","",403,[[]]],[11,"into","","",403,[[]]],[11,"borrow","","",403,[[]]],[11,"borrow_mut","","",403,[[]]],[11,"try_from","","",403,[[],["result",4]]],[11,"try_into","","",403,[[],["result",4]]],[11,"type_id","","",403,[[],["typeid",3]]],[11,"debug","","",403,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",403,[[]]],[11,"deref","","",403,[[]]],[11,"deref_mut","","",403,[[]]],[11,"drop","","",403,[[]]],[11,"from","wasmtime_wiggle::tracing::callsite","",404,[[]]],[11,"into","","",404,[[]]],[11,"to_owned","","",404,[[]]],[11,"clone_into","","",404,[[]]],[11,"borrow","","",404,[[]]],[11,"borrow_mut","","",404,[[]]],[11,"try_from","","",404,[[],["result",4]]],[11,"try_into","","",404,[[],["result",4]]],[11,"type_id","","",404,[[],["typeid",3]]],[11,"debug","","",404,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",404,[[]]],[11,"init","","",404,[[]]],[11,"deref","","",404,[[]]],[11,"deref_mut","","",404,[[]]],[11,"drop","","",404,[[]]],[11,"from","wasmtime_wiggle::tracing","",405,[[]]],[11,"into","","",405,[[]]],[11,"borrow","","",405,[[]]],[11,"borrow_mut","","",405,[[]]],[11,"try_from","","",405,[[],["result",4]]],[11,"try_into","","",405,[[],["result",4]]],[11,"type_id","","",405,[[],["typeid",3]]],[11,"debug","","",405,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",405,[[]]],[11,"deref","","",405,[[]]],[11,"deref_mut","","",405,[[]]],[11,"drop","","",405,[[]]],[11,"from","wasmtime_wiggle::tracing::metadata","",406,[[]]],[11,"into","","",406,[[]]],[11,"to_owned","","",406,[[]]],[11,"clone_into","","",406,[[]]],[11,"borrow","","",406,[[]]],[11,"borrow_mut","","",406,[[]]],[11,"try_from","","",406,[[],["result",4]]],[11,"try_into","","",406,[[],["result",4]]],[11,"type_id","","",406,[[],["typeid",3]]],[11,"debug","","",406,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",406,[[]]],[11,"init","","",406,[[]]],[11,"deref","","",406,[[]]],[11,"deref_mut","","",406,[[]]],[11,"drop","","",406,[[]]],[11,"from","wasmtime_wiggle::tracing","",407,[[]]],[11,"into","","",407,[[]]],[11,"to_owned","","",407,[[]]],[11,"clone_into","","",407,[[]]],[11,"to_string","","",407,[[],["string",3]]],[11,"borrow","","",407,[[]]],[11,"borrow_mut","","",407,[[]]],[11,"try_from","","",407,[[],["result",4]]],[11,"try_into","","",407,[[],["result",4]]],[11,"type_id","","",407,[[],["typeid",3]]],[11,"debug","","",407,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",407,[[]]],[11,"init","","",407,[[]]],[11,"deref","","",407,[[]]],[11,"deref_mut","","",407,[[]]],[11,"drop","","",407,[[]]],[11,"from","wasmtime_wiggle::tracing::metadata","",408,[[]]],[11,"into","","",408,[[]]],[11,"to_string","","",408,[[],["string",3]]],[11,"borrow","","",408,[[]]],[11,"borrow_mut","","",408,[[]]],[11,"try_from","","",408,[[],["result",4]]],[11,"try_into","","",408,[[],["result",4]]],[11,"type_id","","",408,[[],["typeid",3]]],[11,"debug","","",408,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",408,[[]]],[11,"deref","","",408,[[]]],[11,"deref_mut","","",408,[[]]],[11,"drop","","",408,[[]]],[11,"from","wasmtime_wiggle","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_string","","",176,[[],["string",3]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"debug","","",176,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",176,[[]]],[11,"init","","",176,[[]]],[11,"deref","","",176,[[]]],[11,"deref_mut","","",176,[[]]],[11,"drop","","",176,[[]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"debug","","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"equivalent","","",182,[[]]],[11,"init","","",182,[[]]],[11,"deref","","",182,[[]]],[11,"deref_mut","","",182,[[]]],[11,"drop","","",182,[[]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"debug","","",183,[[["formatter",3]],[["error",3],["result",4]]]],[11,"init","","",183,[[]]],[11,"deref","","",183,[[]]],[11,"deref_mut","","",183,[[]]],[11,"drop","","",183,[[]]],[11,"description","wasmtime_wiggle::bitflags::_core::num","",189,[[]]],[11,"description","","",190,[[]]],[11,"description","wasmtime_wiggle::bitflags::_core::char","",229,[[]]],[11,"description","wasmtime_wiggle::bitflags::_core::str","",330,[[]]],[11,"description","wasmtime_wiggle::bitflags::_core::cell","",219,[[]]],[11,"description","wasmtime_wiggle::bitflags::_core::num","",203,[[]]],[11,"description","wasmtime_wiggle::bitflags::_core::cell","",220,[[]]],[11,"description","wasmtime_wiggle::bitflags::_core::convert","",208,[[]]],[11,"description","wasmtime_wiggle::bitflags::_core::char","",232,[[]]],[11,"description","wasmtime_wiggle::bitflags::_core::fmt","",289,[[]]],[11,"description","wasmtime_wiggle::bitflags::_core::char","",230,[[]]],[11,"description","wasmtime_wiggle::bitflags::_core::str","",329,[[]]],[11,"description","wasmtime_wiggle::bitflags::_core::array","",214,[[]]],[11,"report","wasmtime_wiggle::bitflags::_core::result","",25,[[]]],[11,"report","","",25,[[]]],[11,"bitand","wasmtime_wiggle::bitflags::_core::num","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitand","","",4,[[["wrapping",3]]]],[11,"bitand","","",4,[[["wrapping",3]]]],[11,"bitand","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitand","","",4,[[["wrapping",3]]]],[11,"bitand","","",4,[[["wrapping",3]]]],[11,"bitand","","",4,[[["wrapping",3]]]],[11,"bitand","","",4,[[["wrapping",3]]]],[11,"bitand","","",4,[[["wrapping",3]]]],[11,"bitand","","",4,[[["wrapping",3]]]],[11,"bitand","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitand","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitand","","",4,[[["wrapping",3]]]],[11,"bitand","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitand","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitand","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitand","","",4,[[["wrapping",3]]]],[11,"bitand","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitand","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitand","","",4,[[["wrapping",3]]]],[11,"bitand","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitand","","",4,[[["wrapping",3]]]],[11,"bitand","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitand","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"from_iter","wasmtime_wiggle::bitflags::_core::result","Takes each element in the `Iterator`: if it is an `Err`,…",25,[[],["result",4]]],[11,"from_iter","wasmtime_wiggle::bitflags::_core::option","Takes each element in the [`Iterator`]: if it is…",24,[[],["option",4]]],[11,"bitor_assign","wasmtime_wiggle::bitflags::_core::num","",202,[[]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",194,[[["nonzerou64",3]]]],[11,"bitor_assign","","",201,[[["nonzeroi8",3]]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",200,[[["nonzeroi64",3]]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",191,[[]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",200,[[]]],[11,"bitor_assign","","",199,[[]]],[11,"bitor_assign","","",193,[[["nonzerou32",3]]]],[11,"bitor_assign","","",192,[[]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",191,[[["nonzerou128",3]]]],[11,"bitor_assign","","",198,[[]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",202,[[["nonzeroisize",3]]]],[11,"bitor_assign","","",194,[[]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",197,[[["nonzeroi128",3]]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",196,[[]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",195,[[]]],[11,"bitor_assign","","",197,[[]]],[11,"bitor_assign","","",198,[[["nonzeroi16",3]]]],[11,"bitor_assign","","",196,[[["nonzerousize",3]]]],[11,"bitor_assign","","",201,[[]]],[11,"bitor_assign","","",193,[[]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",192,[[["nonzerou16",3]]]],[11,"bitor_assign","","",195,[[["nonzerou8",3]]]],[11,"bitor_assign","","",4,[[["wrapping",3]]]],[11,"bitor_assign","","",199,[[["nonzeroi32",3]]]],[11,"fmt","","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",200,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",194,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",196,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",202,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",193,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",195,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",191,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",197,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",199,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",201,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::mem","",205,[[["manuallydrop",3]],[["ordering",4],["option",4]]]],[11,"lt","","",205,[[["manuallydrop",3]]]],[11,"le","","",205,[[["manuallydrop",3]]]],[11,"gt","","",205,[[["manuallydrop",3]]]],[11,"ge","","",205,[[["manuallydrop",3]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::num","",197,[[["nonzeroi128",3]],[["ordering",4],["option",4]]]],[11,"lt","","",197,[[["nonzeroi128",3]]]],[11,"le","","",197,[[["nonzeroi128",3]]]],[11,"gt","","",197,[[["nonzeroi128",3]]]],[11,"ge","","",197,[[["nonzeroi128",3]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::cell","",217,[[["cell",3]],[["ordering",4],["option",4]]]],[11,"lt","","",217,[[["cell",3]]]],[11,"le","","",217,[[["cell",3]]]],[11,"gt","","",217,[[["cell",3]]]],[11,"ge","","",217,[[["cell",3]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::time","",352,[[["duration",3]],[["ordering",4],["option",4]]]],[11,"lt","","",352,[[["duration",3]]]],[11,"le","","",352,[[["duration",3]]]],[11,"gt","","",352,[[["duration",3]]]],[11,"ge","","",352,[[["duration",3]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::option","",24,[[["option",4]],[["ordering",4],["option",4]]]],[11,"lt","","",24,[[["option",4]]]],[11,"le","","",24,[[["option",4]]]],[11,"gt","","",24,[[["option",4]]]],[11,"ge","","",24,[[["option",4]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::ptr","",207,[[["nonnull",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::num","",191,[[["nonzerou128",3]],[["ordering",4],["option",4]]]],[11,"lt","","",191,[[["nonzerou128",3]]]],[11,"le","","",191,[[["nonzerou128",3]]]],[11,"gt","","",191,[[["nonzerou128",3]]]],[11,"ge","","",191,[[["nonzerou128",3]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::ops","",67,[[["generatorstate",4]],[["ordering",4],["option",4]]]],[11,"lt","","",67,[[["generatorstate",4]]]],[11,"le","","",67,[[["generatorstate",4]]]],[11,"gt","","",67,[[["generatorstate",4]]]],[11,"ge","","",67,[[["generatorstate",4]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::option","",270,[[["noneerror",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::num","",195,[[["nonzerou8",3]],[["ordering",4],["option",4]]]],[11,"lt","","",195,[[["nonzerou8",3]]]],[11,"le","","",195,[[["nonzerou8",3]]]],[11,"gt","","",195,[[["nonzerou8",3]]]],[11,"ge","","",195,[[["nonzerou8",3]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::panic","",272,[[["location",3]],[["ordering",4],["option",4]]]],[11,"lt","","",272,[[["location",3]]]],[11,"le","","",272,[[["location",3]]]],[11,"gt","","",272,[[["location",3]]]],[11,"ge","","",272,[[["location",3]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::fmt","",289,[[["error",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::cmp","",29,[[["reverse",3]],[["ordering",4],["option",4]]]],[11,"lt","","",29,[[["reverse",3]]]],[11,"le","","",29,[[["reverse",3]]]],[11,"gt","","",29,[[["reverse",3]]]],[11,"ge","","",29,[[["reverse",3]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::arch::x86_64","",104,[[["cpuidresult",3]],[["ordering",4],["option",4]]]],[11,"lt","","",104,[[["cpuidresult",3]]]],[11,"le","","",104,[[["cpuidresult",3]]]],[11,"gt","","",104,[[["cpuidresult",3]]]],[11,"ge","","",104,[[["cpuidresult",3]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::num","",201,[[["nonzeroi8",3]],[["ordering",4],["option",4]]]],[11,"lt","","",201,[[["nonzeroi8",3]]]],[11,"le","","",201,[[["nonzeroi8",3]]]],[11,"gt","","",201,[[["nonzeroi8",3]]]],[11,"ge","","",201,[[["nonzeroi8",3]]]],[11,"partial_cmp","","",193,[[["nonzerou32",3]],[["ordering",4],["option",4]]]],[11,"lt","","",193,[[["nonzerou32",3]]]],[11,"le","","",193,[[["nonzerou32",3]]]],[11,"gt","","",193,[[["nonzerou32",3]]]],[11,"ge","","",193,[[["nonzerou32",3]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::any","",213,[[["typeid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",213,[[["typeid",3]]]],[11,"le","","",213,[[["typeid",3]]]],[11,"gt","","",213,[[["typeid",3]]]],[11,"ge","","",213,[[["typeid",3]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::num","",199,[[["nonzeroi32",3]],[["ordering",4],["option",4]]]],[11,"lt","","",199,[[["nonzeroi32",3]]]],[11,"le","","",199,[[["nonzeroi32",3]]]],[11,"gt","","",199,[[["nonzeroi32",3]]]],[11,"ge","","",199,[[["nonzeroi32",3]]]],[11,"partial_cmp","","",198,[[["nonzeroi16",3]],[["ordering",4],["option",4]]]],[11,"lt","","",198,[[["nonzeroi16",3]]]],[11,"le","","",198,[[["nonzeroi16",3]]]],[11,"gt","","",198,[[["nonzeroi16",3]]]],[11,"ge","","",198,[[["nonzeroi16",3]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::pin","",273,[[["pin",3]],[["ordering",4],["option",4]]]],[11,"lt","","",273,[[["pin",3]]]],[11,"le","","",273,[[["pin",3]]]],[11,"gt","","",273,[[["pin",3]]]],[11,"ge","","",273,[[["pin",3]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::num","",192,[[["nonzerou16",3]],[["ordering",4],["option",4]]]],[11,"lt","","",192,[[["nonzerou16",3]]]],[11,"le","","",192,[[["nonzerou16",3]]]],[11,"gt","","",192,[[["nonzerou16",3]]]],[11,"ge","","",192,[[["nonzerou16",3]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::task","",101,[[["poll",4]],[["ordering",4],["option",4]]]],[11,"lt","","",101,[[["poll",4]]]],[11,"le","","",101,[[["poll",4]]]],[11,"gt","","",101,[[["poll",4]]]],[11,"ge","","",101,[[["poll",4]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::result","",25,[[["result",4]],[["ordering",4],["option",4]]]],[11,"lt","","",25,[[["result",4]]]],[11,"le","","",25,[[["result",4]]]],[11,"gt","","",25,[[["result",4]]]],[11,"ge","","",25,[[["result",4]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::num","",202,[[["nonzeroisize",3]],[["ordering",4],["option",4]]]],[11,"lt","","",202,[[["nonzeroisize",3]]]],[11,"le","","",202,[[["nonzeroisize",3]]]],[11,"gt","","",202,[[["nonzeroisize",3]]]],[11,"ge","","",202,[[["nonzeroisize",3]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::convert","",208,[[["infallible",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::cell","PanicsPanics if the value in either `RefCell` is currently…",218,[[["refcell",3]],[["ordering",4],["option",4]]]],[11,"lt","","PanicsPanics if the value in either `RefCell` is currently…",218,[[["refcell",3]]]],[11,"le","","PanicsPanics if the value in either `RefCell` is currently…",218,[[["refcell",3]]]],[11,"gt","","PanicsPanics if the value in either `RefCell` is currently…",218,[[["refcell",3]]]],[11,"ge","","PanicsPanics if the value in either `RefCell` is currently…",218,[[["refcell",3]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::num","",200,[[["nonzeroi64",3]],[["ordering",4],["option",4]]]],[11,"lt","","",200,[[["nonzeroi64",3]]]],[11,"le","","",200,[[["nonzeroi64",3]]]],[11,"gt","","",200,[[["nonzeroi64",3]]]],[11,"ge","","",200,[[["nonzeroi64",3]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::marker","",210,[[["phantompinned",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::num","",4,[[["wrapping",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["wrapping",3]]]],[11,"le","","",4,[[["wrapping",3]]]],[11,"gt","","",4,[[["wrapping",3]]]],[11,"ge","","",4,[[["wrapping",3]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::marker","",209,[[["phantomdata",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::cmp","",28,[[["ordering",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmtime_wiggle::bitflags::_core::num","",194,[[["nonzerou64",3]],[["ordering",4],["option",4]]]],[11,"lt","","",194,[[["nonzerou64",3]]]],[11,"le","","",194,[[["nonzerou64",3]]]],[11,"gt","","",194,[[["nonzerou64",3]]]],[11,"ge","","",194,[[["nonzerou64",3]]]],[11,"partial_cmp","","",196,[[["nonzerousize",3]],[["ordering",4],["option",4]]]],[11,"lt","","",196,[[["nonzerousize",3]]]],[11,"le","","",196,[[["nonzerousize",3]]]],[11,"gt","","",196,[[["nonzerousize",3]]]],[11,"ge","","",196,[[["nonzerousize",3]]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::str::pattern","",323,[[],["searchstep",4]]],[11,"next_match_back","","",323,[[],["option",4]]],[11,"next_back","","",324,[[],["searchstep",4]]],[11,"next_match_back","","",324,[[],["option",4]]],[11,"next_reject_back","","",324,[[],["option",4]]],[11,"next_back","","",326,[[],["searchstep",4]]],[11,"next_match_back","","",326,[[],["option",4]]],[11,"next_back","","",325,[[],["searchstep",4]]],[11,"next_match_back","","",325,[[],["option",4]]],[11,"next_reject_back","","",325,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::slice","",317,[[],["option",4]]],[11,"size_hint","","",317,[[]]],[11,"count","","",317,[[]]],[11,"nth","","",317,[[],["option",4]]],[11,"last","","",317,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::str","",333,[[],["option",4]]],[11,"count","","",333,[[]]],[11,"size_hint","","",333,[[]]],[11,"last","","",333,[[],["option",4]]],[11,"next","","",348,[[],["option",4]]],[11,"size_hint","","",348,[[]]],[11,"try_fold","","",348,[[]]],[11,"fold","","",348,[[]]],[11,"next","","",331,[[],["option",4]]],[11,"size_hint","","",331,[[]]],[11,"count","","",331,[[]]],[11,"last","","",331,[[],["option",4]]],[11,"nth","","",331,[[],["option",4]]],[11,"all","","",331,[[]]],[11,"any","","",331,[[]]],[11,"find","","",331,[[],["option",4]]],[11,"position","","",331,[[],["option",4]]],[11,"rposition","","",331,[[],["option",4]]],[11,"__iterator_get_unchecked","","",331,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::iter","Overflow BehaviorThe method does no guarding against…",250,[[],["option",4]]],[11,"size_hint","","",250,[[]]],[11,"nth","","",250,[[],["option",4]]],[11,"count","","",250,[[]]],[11,"try_fold","","",250,[[]]],[11,"fold","","",250,[[]]],[11,"__iterator_get_unchecked","","",250,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::str","",332,[[],["option",4]]],[11,"count","","",332,[[]]],[11,"size_hint","","",332,[[]]],[11,"last","","",332,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::slice","",316,[[],["option",4]]],[11,"size_hint","","",316,[[]]],[11,"count","","",316,[[]]],[11,"nth","","",316,[[],["option",4]]],[11,"last","","",316,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::iter","",263,[[],["option",4]]],[11,"size_hint","","",263,[[]]],[11,"try_fold","","",263,[[]]],[11,"fold","","",263,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::char","",224,[[],["option",4]]],[11,"size_hint","","",224,[[]]],[11,"count","","",224,[[]]],[11,"last","","",224,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::slice","",306,[[],["option",4]]],[11,"size_hint","","",306,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::str","",344,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::iter","",243,[[],["option",4]]],[11,"size_hint","","",243,[[]]],[11,"try_fold","","",243,[[]]],[11,"fold","","",243,[[]]],[11,"__iterator_get_unchecked","","",243,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::str","",338,[[],["option",4]]],[11,"next","","",349,[[],["option",4]]],[11,"size_hint","","",349,[[]]],[11,"try_fold","","",349,[[]]],[11,"fold","","",349,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::iter","",248,[[],["option",4]]],[11,"count","","",248,[[]]],[11,"try_fold","","",248,[[]]],[11,"fold","","",248,[[]]],[11,"advance_by","","",248,[[],["result",4]]],[11,"nth","","",248,[[],["option",4]]],[11,"find","","",248,[[],["option",4]]],[11,"last","","",248,[[],["option",4]]],[11,"size_hint","","",248,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::slice","",314,[[],["option",4]]],[11,"size_hint","","",314,[[]]],[11,"count","","",314,[[]]],[11,"nth","","",314,[[],["option",4]]],[11,"last","","",314,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::iter","",262,[[],["option",4]]],[11,"nth","","",262,[[],["option",4]]],[11,"size_hint","","",262,[[]]],[11,"try_fold","","",262,[[]]],[11,"fold","","",262,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::str","",340,[[],["option",4]]],[11,"next","","",351,[[],["option",4]]],[11,"size_hint","","",351,[[]]],[11,"last","","",351,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::slice","",319,[[],["option",4]]],[11,"size_hint","","",319,[[]]],[11,"count","","",319,[[]]],[11,"nth","","",319,[[],["option",4]]],[11,"last","","",319,[[],["option",4]]],[11,"__iterator_get_unchecked","","",319,[[]]],[11,"next","","",311,[[],["option",4]]],[11,"size_hint","","",311,[[]]],[11,"next","","",303,[[],["option",4]]],[11,"size_hint","","",303,[[]]],[11,"count","","",303,[[]]],[11,"nth","","",303,[[],["option",4]]],[11,"last","","",303,[[],["option",4]]],[11,"for_each","","",303,[[]]],[11,"all","","",303,[[]]],[11,"any","","",303,[[]]],[11,"find","","",303,[[],["option",4]]],[11,"find_map","","",303,[[],["option",4]]],[11,"position","","",303,[[],["option",4]]],[11,"rposition","","",303,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::option","",267,[[],["option",4]]],[11,"size_hint","","",267,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::iter","",251,[[],["option",4]]],[11,"size_hint","","",251,[[]]],[11,"count","","",251,[[]]],[11,"try_fold","","",251,[[]]],[11,"fold","","",251,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::str","",347,[[],["option",4]]],[11,"size_hint","","",347,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::iter","",238,[[],["option",4]]],[11,"size_hint","","",238,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::slice","",305,[[],["option",4]]],[11,"size_hint","","",305,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::str","",346,[[],["option",4]]],[11,"next","","",339,[[],["option",4]]],[11,"next","","",335,[[],["option",4]]],[11,"size_hint","","",335,[[]]],[11,"last","","",335,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::iter","",240,[[],["option",4]]],[11,"size_hint","","",240,[[]]],[11,"next","","",245,[[],["option",4]]],[11,"size_hint","","",245,[[]]],[11,"try_fold","","",245,[[]]],[11,"fold","","",245,[[]]],[11,"next","","",239,[[],["option",4]]],[11,"size_hint","","",239,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::slice","",304,[[],["option",4]]],[11,"size_hint","","",304,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::result","",276,[[],["option",4]]],[11,"size_hint","","",276,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::char","",228,[[],["option",4]]],[11,"size_hint","","",228,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::slice","",321,[[],["option",4]]],[11,"size_hint","","",321,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::str","",345,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::slice","",300,[[],["option",4]]],[11,"size_hint","","",300,[[]]],[11,"count","","",300,[[]]],[11,"nth","","",300,[[],["option",4]]],[11,"last","","",300,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::option","",269,[[],["option",4]]],[11,"size_hint","","",269,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::iter","",246,[[],["option",4]]],[11,"size_hint","","",246,[[]]],[11,"try_fold","","",246,[[]]],[11,"fold","","",246,[[]]],[11,"next","","",252,[[],["option",4]]],[11,"size_hint","","",252,[[]]],[11,"try_fold","","",252,[[]]],[11,"fold","","",252,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::char","",226,[[],["option",4]]],[11,"size_hint","","",226,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::slice","",322,[[],["option",4]]],[11,"size_hint","","",322,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::ops","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"nth","","",60,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::slice","",312,[[],["option",4]]],[11,"size_hint","","",312,[[]]],[11,"count","","",312,[[]]],[11,"nth","","",312,[[],["option",4]]],[11,"last","","",312,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::iter","",259,[[],["option",4]]],[11,"size_hint","","",259,[[]]],[11,"try_fold","","",259,[[]]],[11,"fold","","",259,[[]]],[11,"next","","",237,[[],["option",4]]],[11,"next","","",253,[[],["option",4]]],[11,"size_hint","","",253,[[]]],[11,"try_fold","","",253,[[]]],[11,"fold","","",253,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::str","",343,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::slice","",318,[[],["option",4]]],[11,"size_hint","","",318,[[]]],[11,"count","","",318,[[]]],[11,"nth","","",318,[[],["option",4]]],[11,"last","","",318,[[],["option",4]]],[11,"__iterator_get_unchecked","","",318,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::str","",337,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::slice","",315,[[],["option",4]]],[11,"size_hint","","",315,[[]]],[11,"count","","",315,[[]]],[11,"nth","","",315,[[],["option",4]]],[11,"last","","",315,[[],["option",4]]],[11,"next","","",301,[[],["option",4]]],[11,"size_hint","","",301,[[]]],[11,"count","","",301,[[]]],[11,"nth","","",301,[[],["option",4]]],[11,"last","","",301,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::result","",274,[[],["option",4]]],[11,"size_hint","","",274,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::str","",336,[[],["option",4]]],[11,"size_hint","","",336,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::char","",231,[[],[["option",4],["result",4]]]],[11,"size_hint","","",231,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::slice","",313,[[],["option",4]]],[11,"size_hint","","",313,[[]]],[11,"count","","",313,[[]]],[11,"nth","","",313,[[],["option",4]]],[11,"last","","",313,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::iter","",244,[[],["option",4]]],[11,"size_hint","","",244,[[]]],[11,"try_fold","","",244,[[]]],[11,"fold","","",244,[[]]],[11,"nth","","",244,[[],["option",4]]],[11,"last","","",244,[[],["option",4]]],[11,"count","","",244,[[]]],[11,"__iterator_get_unchecked","","",244,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::slice","",320,[[],["option",4]]],[11,"size_hint","","",320,[[]]],[11,"count","","",320,[[]]],[11,"nth","","",320,[[],["option",4]]],[11,"last","","",320,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::iter","",236,[[],["option",4]]],[11,"size_hint","","",236,[[]]],[11,"next","","",261,[[],["option",4]]],[11,"size_hint","","",261,[[]]],[11,"try_fold","","",261,[[]]],[11,"fold","","",261,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::slice","",302,[[],["option",4]]],[11,"size_hint","","",302,[[]]],[11,"count","","",302,[[]]],[11,"nth","","",302,[[],["option",4]]],[11,"last","","",302,[[],["option",4]]],[11,"for_each","","",302,[[]]],[11,"all","","",302,[[]]],[11,"any","","",302,[[]]],[11,"find","","",302,[[],["option",4]]],[11,"find_map","","",302,[[],["option",4]]],[11,"position","","",302,[[],["option",4]]],[11,"rposition","","",302,[[],["option",4]]],[11,"is_sorted_by","","",302,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::iter","",241,[[],["option",4]]],[11,"size_hint","","",241,[[]]],[11,"next","","",258,[[],["option",4]]],[11,"size_hint","","",258,[[]]],[11,"advance_by","","",258,[[],["result",4]]],[11,"nth","","",258,[[],["option",4]]],[11,"try_fold","","",258,[[]]],[11,"fold","","",258,[[]]],[11,"find","","",258,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::str","",350,[[],["option",4]]],[11,"size_hint","","",350,[[]]],[11,"try_fold","","",350,[[]]],[11,"fold","","",350,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::option","",268,[[],["option",4]]],[11,"size_hint","","",268,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::str","",334,[[],["option",4]]],[11,"size_hint","","",334,[[]]],[11,"last","","",334,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::ops","",59,[[],["option",4]]],[11,"size_hint","","",59,[[]]],[11,"nth","","",59,[[],["option",4]]],[11,"last","","",59,[[],["option",4]]],[11,"min","","",59,[[],["option",4]]],[11,"max","","",59,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::iter","",256,[[],["option",4]]],[11,"size_hint","","",256,[[]]],[11,"try_fold","","",256,[[]]],[11,"fold","","",256,[[]]],[11,"__iterator_get_unchecked","","",256,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::char","",225,[[],["option",4]]],[11,"size_hint","","",225,[[]]],[11,"count","","",225,[[]]],[11,"nth","","",225,[[],["option",4]]],[11,"last","","",225,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::str","",341,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::iter","",260,[[],["option",4]]],[11,"nth","","",260,[[],["option",4]]],[11,"count","","",260,[[]]],[11,"last","","",260,[[],["option",4]]],[11,"size_hint","","",260,[[]]],[11,"try_fold","","",260,[[]]],[11,"fold","","",260,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::char","",227,[[],["option",4]]],[11,"size_hint","","",227,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::iter","",257,[[],["option",4]]],[11,"count","","",257,[[]]],[11,"nth","","",257,[[],["option",4]]],[11,"last","","",257,[[],["option",4]]],[11,"size_hint","","",257,[[]]],[11,"try_fold","","",257,[[]]],[11,"fold","","",257,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::slice","",310,[[],["option",4]]],[11,"size_hint","","",310,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::str","",342,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::str::lossy","",328,[[],[["option",4],["utf8lossychunk",3]]]],[11,"next","wasmtime_wiggle::bitflags::_core::array","",215,[[],["option",4]]],[11,"size_hint","","",215,[[]]],[11,"count","","",215,[[]]],[11,"last","","",215,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::slice","",307,[[],["option",4]]],[11,"size_hint","","",307,[[]]],[11,"next","","",309,[[],["option",4]]],[11,"size_hint","","",309,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::iter","",254,[[],["option",4]]],[11,"nth","","",254,[[],["option",4]]],[11,"last","","",254,[[],["option",4]]],[11,"count","","",254,[[]]],[11,"size_hint","","",254,[[]]],[11,"try_fold","","",254,[[]]],[11,"fold","","",254,[[]]],[11,"find","","",254,[[],["option",4]]],[11,"__iterator_get_unchecked","","",254,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::result","",275,[[],["option",4]]],[11,"size_hint","","",275,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::iter","",255,[[],["option",4]]],[11,"size_hint","","",255,[[]]],[11,"try_fold","","",255,[[]]],[11,"fold","","",255,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::ops","",212,[[],["option",4]]],[11,"size_hint","","",212,[[]]],[11,"nth","","",212,[[],["option",4]]],[11,"try_fold","","",212,[[]]],[11,"fold","","",212,[[]]],[11,"last","","",212,[[],["option",4]]],[11,"min","","",212,[[],["option",4]]],[11,"max","","",212,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::iter","",242,[[],["option",4]]],[11,"size_hint","","",242,[[]]],[11,"next","","",247,[[],["option",4]]],[11,"size_hint","","",247,[[]]],[11,"nth","","",247,[[],["option",4]]],[11,"try_fold","","",247,[[]]],[11,"fold","","",247,[[]]],[11,"next","","",264,[[],["option",4]]],[11,"size_hint","","",264,[[]]],[11,"nth","","",264,[[],["option",4]]],[11,"__iterator_get_unchecked","","",264,[[]]],[11,"next","","",249,[[],["option",4]]],[11,"size_hint","","",249,[[]]],[11,"try_fold","","",249,[[]]],[11,"next","wasmtime_wiggle::bitflags::_core::slice","",308,[[],["option",4]]],[11,"size_hint","","",308,[[]]],[11,"next","","",299,[[],["option",4]]],[11,"size_hint","","",299,[[]]],[11,"count","","",299,[[]]],[11,"nth","","",299,[[],["option",4]]],[11,"last","","",299,[[],["option",4]]],[11,"next","wasmtime_wiggle::bitflags::_core::ascii","",216,[[],["option",4]]],[11,"size_hint","","",216,[[]]],[11,"last","","",216,[[],["option",4]]],[11,"mul_assign","wasmtime_wiggle::bitflags::_core::num","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","wasmtime_wiggle::bitflags::_core::time","",352,[[]]],[11,"mul_assign","wasmtime_wiggle::bitflags::_core::num","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"mul_assign","","",4,[[["wrapping",3]]]],[11,"neg","","",4,[[],["wrapping",3]]],[11,"neg","","",4,[[],["wrapping",3]]],[11,"neg","","",4,[[],["wrapping",3]]],[11,"neg","","",4,[[],["wrapping",3]]],[11,"neg","","",4,[[],["wrapping",3]]],[11,"neg","","",4,[[],["wrapping",3]]],[11,"neg","","",4,[[],["wrapping",3]]],[11,"neg","","",4,[[],["wrapping",3]]],[11,"neg","","",4,[[],["wrapping",3]]],[11,"neg","","",4,[[],["wrapping",3]]],[11,"neg","","",4,[[],["wrapping",3]]],[11,"neg","","",4,[[],["wrapping",3]]],[11,"div","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"div","","",4,[[["wrapping",3]]]],[11,"div","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"div","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"div","","",4,[[["wrapping",3]]]],[11,"div","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"div","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"div","","",4,[[["wrapping",3]]]],[11,"div","","",4,[[["wrapping",3]]]],[11,"div","","",4,[[["wrapping",3]]]],[11,"div","","",4,[[["wrapping",3]]]],[11,"div","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"div","","",4,[[["wrapping",3]]]],[11,"div","","",4,[[["wrapping",3]]]],[11,"div","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"div","","",4,[[["wrapping",3]]]],[11,"div","","",4,[[["wrapping",3]]]],[11,"div","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"div","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"div","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"div","","",4,[[["wrapping",3]]]],[11,"div","","",4,[[["wrapping",3]]]],[11,"div","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"div","wasmtime_wiggle::bitflags::_core::time","",352,[[],["duration",3]]],[11,"div","wasmtime_wiggle::bitflags::_core::num","",4,[[["wrapping",3]],["wrapping",3]]],[11,"get","wasmtime_wiggle::bitflags::_core::ops","",212,[[],["option",4]]],[11,"get_mut","","",212,[[],["option",4]]],[11,"get_unchecked","","",212,[[]]],[11,"get_unchecked_mut","","",212,[[]]],[11,"index","","",212,[[]]],[11,"index_mut","","",212,[[]]],[11,"get","","",64,[[],["option",4]]],[11,"get_mut","","",64,[[],["option",4]]],[11,"get_unchecked","","",64,[[]]],[11,"get_unchecked_mut","","",64,[[]]],[11,"index","","",64,[[]]],[11,"index_mut","","",64,[[]]],[11,"get","","",61,[[],["option",4]]],[11,"get_mut","","",61,[[],["option",4]]],[11,"get_unchecked","","",61,[[]]],[11,"get_unchecked_mut","","",61,[[]]],[11,"index","","",61,[[]]],[11,"index_mut","","",61,[[]]],[11,"get","","",60,[[],["option",4]]],[11,"get_mut","","",60,[[],["option",4]]],[11,"get_unchecked","","",60,[[]]],[11,"get_unchecked_mut","","",60,[[]]],[11,"index","","",60,[[]]],[11,"index_mut","","",60,[[]]],[11,"get","","",64,[[],["option",4]]],[11,"get_mut","","",64,[[],["option",4]]],[11,"get_unchecked","","",64,[[]]],[11,"get_unchecked_mut","","",64,[[]]],[11,"index","","",64,[[]]],[11,"index_mut","","",64,[[]]],[11,"get","","",212,[[],["option",4]]],[11,"get_mut","","",212,[[],["option",4]]],[11,"get_unchecked","","",212,[[]]],[11,"get_unchecked_mut","","",212,[[]]],[11,"index","","",212,[[]]],[11,"index_mut","","",212,[[]]],[11,"get","","",59,[[],["option",4]]],[11,"get_mut","","",59,[[],["option",4]]],[11,"get_unchecked","","",59,[[]]],[11,"get_unchecked_mut","","",59,[[]]],[11,"index","","",59,[[]]],[11,"index_mut","","",59,[[]]],[11,"get","","",211,[[],["option",4]]],[11,"get_mut","","",211,[[],["option",4]]],[11,"get_unchecked","","",211,[[]]],[11,"get_unchecked_mut","","",211,[[]]],[11,"index","","",211,[[]]],[11,"index_mut","","",211,[[]]],[11,"get","","",61,[[],["option",4]]],[11,"get_mut","","",61,[[],["option",4]]],[11,"get_unchecked","","",61,[[]]],[11,"get_unchecked_mut","","",61,[[]]],[11,"index","","",61,[[]]],[11,"index_mut","","",61,[[]]],[11,"get","","",59,[[],["option",4]]],[11,"get_mut","","",59,[[],["option",4]]],[11,"get_unchecked","","",59,[[]]],[11,"get_unchecked_mut","","",59,[[]]],[11,"index","","",59,[[]]],[11,"index_mut","","",59,[[]]],[11,"get","","",60,[[],["option",4]]],[11,"get_mut","","",60,[[],["option",4]]],[11,"get_unchecked","","",60,[[]]],[11,"get_unchecked_mut","","",60,[[]]],[11,"index","","",60,[[]]],[11,"index_mut","","",60,[[]]],[11,"get","","",211,[[],["option",4]]],[11,"get_mut","","",211,[[],["option",4]]],[11,"get_unchecked","","",211,[[]]],[11,"get_unchecked_mut","","",211,[[]]],[11,"index","","",211,[[]]],[11,"index_mut","","",211,[[]]],[11,"drop","wasmtime_wiggle::bitflags::_core::ffi","",234,[[]]],[11,"drop","wasmtime_wiggle::bitflags::_core::task","",359,[[]]],[11,"drop","wasmtime_wiggle::bitflags::_core::array","",215,[[]]],[11,"into_result","wasmtime_wiggle::bitflags::_core::task","",101,[[],["result",4]]],[11,"from_error","","",101,[[],[["poll",4],["result",4]]]],[11,"from_ok","","",101,[[],[["poll",4],["result",4]]]],[11,"into_result","wasmtime_wiggle::bitflags::_core::ops","",68,[[],["result",4]]],[11,"from_error","","",68,[[],["controlflow",4]]],[11,"from_ok","","",68,[[],["controlflow",4]]],[11,"into_result","wasmtime_wiggle::bitflags::_core::option","",24,[[],[["result",4],["noneerror",3]]]],[11,"from_ok","","",24,[[],["option",4]]],[11,"from_error","","",24,[[["noneerror",3]],["option",4]]],[11,"into_result","wasmtime_wiggle::bitflags::_core::task","",101,[[],["result",4]]],[11,"from_error","","",101,[[],[["option",4],["poll",4]]]],[11,"from_ok","","",101,[[],[["option",4],["poll",4]]]],[11,"into_result","wasmtime_wiggle::bitflags::_core::result","",25,[[],["result",4]]],[11,"from_ok","","",25,[[],["result",4]]],[11,"from_error","","",25,[[],["result",4]]],[11,"start_bound","wasmtime_wiggle::bitflags::_core::ops","",61,[[],["bound",4]]],[11,"end_bound","","",61,[[],["bound",4]]],[11,"start_bound","","",59,[[],["bound",4]]],[11,"end_bound","","",59,[[],["bound",4]]],[11,"start_bound","","",60,[[],["bound",4]]],[11,"end_bound","","",60,[[],["bound",4]]],[11,"start_bound","","",59,[[],["bound",4]]],[11,"end_bound","","",59,[[],["bound",4]]],[11,"start_bound","","",212,[[],["bound",4]]],[11,"end_bound","","",212,[[],["bound",4]]],[11,"start_bound","","",64,[[],["bound",4]]],[11,"end_bound","","",64,[[],["bound",4]]],[11,"start_bound","","",64,[[],["bound",4]]],[11,"end_bound","","",64,[[],["bound",4]]],[11,"start_bound","","",211,[[],["bound",4]]],[11,"end_bound","","",211,[[],["bound",4]]],[11,"start_bound","","",60,[[],["bound",4]]],[11,"end_bound","","",60,[[],["bound",4]]],[11,"start_bound","","",212,[[],["bound",4]]],[11,"end_bound","","",212,[[],["bound",4]]],[11,"start_bound","","",61,[[],["bound",4]]],[11,"end_bound","","",61,[[],["bound",4]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",191,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",197,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",201,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",195,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",199,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",194,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",193,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",200,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",196,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",202,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","wasmtime_wiggle::bitflags::_core::arch::x86_64","",370,[[],["__m512",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",243,[[],["cloned",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::ops","",61,[[],["rangeto",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",258,[[],["rev",3]]],[11,"clone","","",249,[[],["cycle",3]]],[11,"clone","","",241,[[],["repeatwith",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::char","",229,[[],["chartryfromerror",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::num","",194,[[],["nonzerou64",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",252,[[],["filtermap",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::arch::x86_64","",365,[[],["__m128d",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::task","",359,[[],["waker",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",248,[[],["chain",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str","",351,[[],["splitasciiwhitespace",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::num","",192,[[],["nonzerou16",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",253,[[],["flatmap",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::slice","",306,[[],["split",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::result","",276,[[],["intoiter",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::ops","",59,[[],["range",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::slice","",318,[[],["arraychunks",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::ops","",211,[[],["rangefull",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",236,[[],["empty",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::panic","",272,[[],["location",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::num","",4,[[],["wrapping",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::cmp","",28,[[],["ordering",4]]],[11,"clone","wasmtime_wiggle::bitflags::_core::slice","",312,[[],["chunksexact",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",261,[[],["skipwhile",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::num","",195,[[],["nonzerou8",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",260,[[],["skip",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str::pattern","",325,[[],["charpredicatesearcher",3]]],[11,"clone","","",324,[[],["charslicesearcher",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",237,[[],["fromfn",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::slice","",320,[[],["arraywindows",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::cell","",217,[[],["cell",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str","",349,[[],["escapedefault",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str::pattern","",94,[[],["searchstep",4]]],[11,"clone","wasmtime_wiggle::bitflags::_core::num","",189,[[],["parsefloaterror",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str","",337,[[],["rsplit",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::marker","",210,[[],["phantompinned",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::alloc","",361,[[],["layout",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",238,[[],["once",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::mem","",206,[[],["maybeuninit",19]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",240,[[],["repeat",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::char","",228,[[],["touppercase",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::ops","",212,[[],["rangeinclusive",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",242,[[],["successors",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::slice","",299,[[],["chunks",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str","",348,[[],["escapedebug",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::slice","",301,[[],["windows",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::mem","",205,[[],["manuallydrop",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::slice","",302,[[],["iter",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::ops","",64,[[],["rangetoinclusive",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str","",329,[[],["parseboolerror",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::alloc","",362,[[],["layouterror",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::num","",196,[[],["nonzerousize",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::cell","PanicsPanics if the value is currently mutably borrowed.",218,[[],["refcell",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",256,[[],["map",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::arch::x86_64","",368,[[],["__m256d",3]]],[11,"clone","","",104,[[],["cpuidresult",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::option","",267,[[],["iter",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",251,[[],["filter",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::option","",24,[[],["option",4]]],[11,"clone_from","","",24,[[["option",4]]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",247,[[],["stepby",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::ops","",62,[[],["bound",4]]],[11,"clone","wasmtime_wiggle::bitflags::_core::convert","",208,[[],["infallible",4]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str","",339,[[],["split",3]]],[11,"clone","","",330,[[],["utf8error",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::char","",225,[[],["escapedefault",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str","",334,[[],["lines",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::marker","",209,[[],["phantomdata",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::slice","",314,[[],["rchunks",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::arch::x86_64","",369,[[],["__m512i",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::ffi","",234,[[],["valistimpl",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str::pattern","",326,[[],["strsearcher",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str","",341,[[],["rsplitn",3]]],[11,"clone","","",336,[[],["linesany",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::future","",353,[[],["pending",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::char","",230,[[],["parsecharerror",3]]],[11,"clone","","",224,[[],["escapeunicode",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::result","",25,[[],["result",4]]],[11,"clone_from","","",25,[[["result",4]]]],[11,"clone","wasmtime_wiggle::bitflags::_core::arch::x86_64","",366,[[],["__m256i",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str","",346,[[],["rmatchindices",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::slice","",310,[[],["rsplit",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::num","",191,[[],["nonzerou128",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::mem","",204,[[],["discriminant",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",244,[[],["copied",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str::pattern","",323,[[],["charsearcher",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",246,[[],["mapwhile",3]]],[11,"clone","","",259,[[],["scan",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str","",344,[[],["rmatches",3]]],[11,"clone","","",343,[[],["matches",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::slice","",321,[[],["splitinclusive",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::arch::x86_64","",371,[[],["__m512d",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::array","",215,[[],["intoiter",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::num","",200,[[],["nonzeroi64",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",257,[[],["peekable",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str","",342,[[],["splitn",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::num","",202,[[],["nonzeroisize",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::hash","",297,[[],["buildhasherdefault",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::future","",354,[[],["ready",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str","",338,[[],["rsplitterminator",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::ops","",60,[[],["rangefrom",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::any","",213,[[],["typeid",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::num","",201,[[],["nonzeroi8",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::char","",227,[[],["tolowercase",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",245,[[],["flatten",3]]],[11,"clone","","",254,[[],["fuse",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::slice","",315,[[],["rchunksexact",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::option","",269,[[],["intoiter",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str","",333,[[],["chars",3]]],[11,"clone","","",332,[[],["charindices",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::num","",190,[[],["parseinterror",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",239,[[],["oncewith",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::arch::x86_64","",363,[[],["__m128i",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::num","",197,[[],["nonzeroi128",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str","",335,[[],["splitwhitespace",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::fmt","",291,[[],["arguments",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::time","",352,[[],["duration",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::num","",5,[[],["interrorkind",4]]],[11,"clone","","",198,[[],["nonzeroi16",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::arch::x86_64","",367,[[],["__m256",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::ops","",67,[[],["generatorstate",4]]],[11,"clone","wasmtime_wiggle::bitflags::_core::num","",203,[[],["tryfrominterror",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::pin","",273,[[],["pin",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",264,[[],["zip",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::option","",270,[[],["noneerror",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",262,[[],["take",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str","",345,[[],["matchindices",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::alloc","",360,[[],["allocerror",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str","",340,[[],["splitterminator",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::char","",231,[[],["decodeutf16",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::hash","",298,[[],["siphasher",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::num","",199,[[],["nonzeroi32",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",263,[[],["takewhile",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str","",331,[[],["bytes",3]]],[11,"clone","","",350,[[],["escapeunicode",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::num","",193,[[],["nonzerou32",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",250,[[],["enumerate",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::ascii","",216,[[],["escapedefault",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::task","",101,[[],["poll",4]]],[11,"clone","wasmtime_wiggle::bitflags::_core::ptr","",207,[[],["nonnull",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::str","",347,[[],["encodeutf16",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::ops","",68,[[],["controlflow",4]]],[11,"clone","wasmtime_wiggle::bitflags::_core::fmt","",289,[[],["error",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::iter","",255,[[],["inspect",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::sync::atomic","",77,[[],["ordering",4]]],[11,"clone","wasmtime_wiggle::bitflags::_core::cmp","",29,[[],["reverse",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::array","",214,[[],["tryfromsliceerror",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::result","",274,[[],["iter",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::char","",232,[[],["decodeutf16error",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::raw","",76,[[],["traitobject",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::arch::x86_64","",364,[[],["__m128",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::num","",3,[[],["fpcategory",4]]],[11,"clone","wasmtime_wiggle::bitflags::_core::lazy","",265,[[],["oncecell",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::task","",358,[[],["rawwakervtable",3]]],[11,"clone","wasmtime_wiggle::bitflags::_core::char","",226,[[],["escapedebug",3]]],[11,"shr","wasmtime_wiggle::bitflags::_core::num","",4,[[],["wrapping",3]]],[11,"shr","","",4,[[]]],[11,"shr","","",4,[[]]],[11,"shr","","",4,[[],["wrapping",3]]],[11,"shr","","",4,[[]]],[11,"shr","","",4,[[]]],[11,"shr","","",4,[[]]],[11,"shr","","",4,[[],["wrapping",3]]],[11,"shr","","",4,[[],["wrapping",3]]],[11,"shr","","",4,[[]]],[11,"shr","","",4,[[]]],[11,"shr","","",4,[[],["wrapping",3]]],[11,"shr","","",4,[[]]],[11,"shr","","",4,[[],["wrapping",3]]],[11,"shr","","",4,[[],["wrapping",3]]],[11,"shr","","",4,[[],["wrapping",3]]],[11,"shr","","",4,[[]]],[11,"shr","","",4,[[],["wrapping",3]]],[11,"shr","","",4,[[],["wrapping",3]]],[11,"shr","","",4,[[]]],[11,"shr","","",4,[[],["wrapping",3]]],[11,"shr","","",4,[[],["wrapping",3]]],[11,"shr","","",4,[[]]],[11,"shr","","",4,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::ops","",67,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",212,[[]]],[11,"hash","","",211,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::num","",4,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::cmp","",28,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::task","",101,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::result","",25,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::ops","",60,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::marker","",209,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::sync::atomic","",77,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::pin","",273,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::ops","",64,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::panic","",272,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::ops","",62,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::convert","",208,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::fmt","",289,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::cmp","",29,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::num","",198,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::ops","",59,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::marker","",210,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::mem","",205,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::num","",201,[[]]],[11,"hash","","",200,[[]]],[11,"hash","","",195,[[]]],[11,"hash","","",196,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::time","",352,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::num","",192,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::option","",24,[[]]],[11,"hash","","",270,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::num","",197,[[]]],[11,"hash","","",191,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::ptr","",207,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::num","",194,[[]]],[11,"hash","","",202,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::any","",213,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::num","",199,[[]]],[11,"hash","","",193,[[]]],[11,"hash","wasmtime_wiggle::bitflags::_core::mem","",204,[[]]],[11,"mul","wasmtime_wiggle::bitflags::_core::num","",4,[[["wrapping",3]]]],[11,"mul","","",4,[[["wrapping",3]]]],[11,"mul","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"mul","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"mul","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"mul","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"mul","","",4,[[["wrapping",3]]]],[11,"mul","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"mul","","",4,[[["wrapping",3]]]],[11,"mul","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"mul","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"mul","","",4,[[["wrapping",3]]]],[11,"mul","","",4,[[["wrapping",3]]]],[11,"mul","","",4,[[["wrapping",3]]]],[11,"mul","","",4,[[["wrapping",3]]]],[11,"mul","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"mul","","",4,[[["wrapping",3]]]],[11,"mul","","",4,[[["wrapping",3]]]],[11,"mul","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"mul","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"mul","wasmtime_wiggle::bitflags::_core::time","",352,[[],["duration",3]]],[11,"mul","wasmtime_wiggle::bitflags::_core::num","",4,[[["wrapping",3]],["wrapping",3]]],[11,"mul","","",4,[[["wrapping",3]]]],[11,"mul","","",4,[[["wrapping",3]]]],[11,"mul","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"deref","wasmtime_wiggle::bitflags::_core::cell","",222,[[]]],[11,"deref","wasmtime_wiggle::bitflags::_core::pin","",273,[[]]],[11,"deref","wasmtime_wiggle::bitflags::_core::lazy","",266,[[]]],[11,"deref","wasmtime_wiggle::bitflags::_core::ffi","",235,[[],["valistimpl",3]]],[11,"deref","wasmtime_wiggle::bitflags::_core::cell","",221,[[]]],[11,"deref","wasmtime_wiggle::bitflags::_core::mem","",205,[[]]],[11,"is_empty","wasmtime_wiggle::bitflags::_core::slice","",312,[[]]],[11,"is_empty","","",320,[[]]],[11,"is_empty","","",318,[[]]],[11,"len","","",302,[[]]],[11,"is_empty","","",302,[[]]],[11,"len","wasmtime_wiggle::bitflags::_core::iter","",236,[[]]],[11,"is_empty","wasmtime_wiggle::bitflags::_core::slice","",316,[[]]],[11,"len","wasmtime_wiggle::bitflags::_core::str","",331,[[]]],[11,"is_empty","","",331,[[]]],[11,"len","wasmtime_wiggle::bitflags::_core::iter","",256,[[]]],[11,"is_empty","","",256,[[]]],[11,"len","","",258,[[]]],[11,"is_empty","","",258,[[]]],[11,"len","","",239,[[]]],[11,"len","","",254,[[]]],[11,"is_empty","","",254,[[]]],[11,"len","","",243,[[]]],[11,"is_empty","","",243,[[]]],[11,"len","wasmtime_wiggle::bitflags::_core::slice","",303,[[]]],[11,"is_empty","","",303,[[]]],[11,"len","wasmtime_wiggle::bitflags::_core::char","",224,[[]]],[11,"is_empty","wasmtime_wiggle::bitflags::_core::slice","",319,[[]]],[11,"is_empty","","",313,[[]]],[11,"len","wasmtime_wiggle::bitflags::_core::array","",215,[[]]],[11,"is_empty","","",215,[[]]],[11,"len","wasmtime_wiggle::bitflags::_core::iter","",238,[[]]],[11,"len","wasmtime_wiggle::bitflags::_core::char","",225,[[]]],[11,"len","wasmtime_wiggle::bitflags::_core::iter","",255,[[]]],[11,"is_empty","","",255,[[]]],[11,"len","","",250,[[]]],[11,"is_empty","","",250,[[]]],[11,"len","","",244,[[]]],[11,"is_empty","","",244,[[]]],[11,"is_empty","wasmtime_wiggle::bitflags::_core::slice","",315,[[]]],[11,"sub","wasmtime_wiggle::bitflags::_core::num","",4,[[["wrapping",3]],["wrapping",3]]],[11,"sub","","",4,[[["wrapping",3]]]],[11,"sub","","",4,[[["wrapping",3]]]],[11,"sub","","",4,[[["wrapping",3]]]],[11,"sub","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"sub","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"sub","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"sub","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"sub","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"sub","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"sub","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"sub","","",4,[[["wrapping",3]]]],[11,"sub","","",4,[[["wrapping",3]]]],[11,"sub","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"sub","","",4,[[["wrapping",3]]]],[11,"sub","","",4,[[["wrapping",3]]]],[11,"sub","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"sub","","",4,[[["wrapping",3]]]],[11,"sub","","",4,[[["wrapping",3]]]],[11,"sub","wasmtime_wiggle::bitflags::_core::time","",352,[[["duration",3]],["duration",3]]],[11,"sub","wasmtime_wiggle::bitflags::_core::num","",4,[[["wrapping",3]]]],[11,"sub","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"sub","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"sub","","",4,[[["wrapping",3]]]],[11,"sub","","",4,[[["wrapping",3]]]],[11,"write_str","wasmtime_wiggle::bitflags::_core::fmt","",290,[[],[["error",3],["result",4]]]],[11,"write_char","","",290,[[],[["error",3],["result",4]]]],[11,"write_fmt","","",290,[[["arguments",3]],[["error",3],["result",4]]]],[11,"into_iter","wasmtime_wiggle::bitflags::_core::result","Returns a consuming iterator over the possibly contained…",25,[[],["intoiter",3]]],[11,"into_iter","wasmtime_wiggle::bitflags::_core::option","Returns a consuming iterator over the possibly contained…",24,[[],["intoiter",3]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",202,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",193,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",201,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",200,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",191,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",197,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",199,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",195,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",194,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",196,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"bitxor_assign","","",4,[[["wrapping",3]]]],[11,"add","","",4,[[["wrapping",3]]]],[11,"add","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"add","","",4,[[["wrapping",3]]]],[11,"add","","",4,[[["wrapping",3]]]],[11,"add","","",4,[[["wrapping",3]]]],[11,"add","","",4,[[["wrapping",3]]]],[11,"add","","",4,[[["wrapping",3]]]],[11,"add","","",4,[[["wrapping",3]]]],[11,"add","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"add","","",4,[[["wrapping",3]]]],[11,"add","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"add","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"add","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"add","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"add","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"add","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"add","","",4,[[["wrapping",3]]]],[11,"add","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"add","wasmtime_wiggle::bitflags::_core::time","",352,[[["duration",3]],["duration",3]]],[11,"add","wasmtime_wiggle::bitflags::_core::num","",4,[[["wrapping",3]],["wrapping",3]]],[11,"add","","",4,[[["wrapping",3]]]],[11,"add","","",4,[[["wrapping",3]]]],[11,"add","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"add","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"add","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","wasmtime_wiggle::bitflags::_core::time","",352,[[]]],[11,"div_assign","wasmtime_wiggle::bitflags::_core::num","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"div_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","wasmtime_wiggle::bitflags::_core::time","",352,[[["duration",3]]]],[11,"add_assign","wasmtime_wiggle::bitflags::_core::num","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"add_assign","","",4,[[["wrapping",3]]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"sum","wasmtime_wiggle::bitflags::_core::time","",352,[[],["duration",3]]],[11,"sum","wasmtime_wiggle::bitflags::_core::num","",4,[[],["wrapping",3]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"sum","wasmtime_wiggle::bitflags::_core::option","Takes each element in the [`Iterator`]: if it is a…",24,[[],["option",4]]],[11,"sum","wasmtime_wiggle::bitflags::_core::num","",4,[[],["wrapping",3]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"sum","wasmtime_wiggle::bitflags::_core::result","Takes each element in the [`Iterator`]: if it is an…",25,[[],["result",4]]],[11,"sum","wasmtime_wiggle::bitflags::_core::num","",4,[[],["wrapping",3]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"sum","wasmtime_wiggle::bitflags::_core::time","",352,[[],["duration",3]]],[11,"sum","wasmtime_wiggle::bitflags::_core::num","",4,[[],["wrapping",3]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"sum","","",4,[[],["wrapping",3]]],[11,"eq","wasmtime_wiggle::bitflags::_core::task","",101,[[["poll",4]]]],[11,"ne","","",101,[[["poll",4]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::panic","",272,[[["location",3]]]],[11,"ne","","",272,[[["location",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::num","",194,[[["nonzerou64",3]]]],[11,"ne","","",194,[[["nonzerou64",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::ops","",59,[[["range",3]]]],[11,"ne","","",59,[[["range",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::num","",193,[[["nonzerou32",3]]]],[11,"ne","","",193,[[["nonzerou32",3]]]],[11,"eq","","",191,[[["nonzerou128",3]]]],[11,"ne","","",191,[[["nonzerou128",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::str","",329,[[["parseboolerror",3]]]],[11,"ne","","",329,[[["parseboolerror",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::any","",213,[[["typeid",3]]]],[11,"ne","","",213,[[["typeid",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::cmp","",29,[[["reverse",3]]]],[11,"ne","","",29,[[["reverse",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::sync::atomic","",77,[[["ordering",4]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::char","",232,[[["decodeutf16error",3]]]],[11,"ne","","",232,[[["decodeutf16error",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::option","",270,[[["noneerror",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::result","",25,[[["result",4]]]],[11,"ne","","",25,[[["result",4]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::time","",352,[[["duration",3]]]],[11,"ne","","",352,[[["duration",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::mem","",204,[[["discriminant",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::num","",4,[[["wrapping",3]]]],[11,"ne","","",4,[[["wrapping",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::alloc","",360,[[["allocerror",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::num","",3,[[["fpcategory",4]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::alloc","",361,[[["layout",3]]]],[11,"ne","","",361,[[["layout",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::str","",330,[[["utf8error",3]]]],[11,"ne","","",330,[[["utf8error",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::num","",201,[[["nonzeroi8",3]]]],[11,"ne","","",201,[[["nonzeroi8",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::ops","",68,[[["controlflow",4]]]],[11,"ne","","",68,[[["controlflow",4]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::char","",230,[[["parsecharerror",3]]]],[11,"ne","","",230,[[["parsecharerror",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::ops","",60,[[["rangefrom",3]]]],[11,"ne","","",60,[[["rangefrom",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::cmp","",28,[[["ordering",4]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::num","",195,[[["nonzerou8",3]]]],[11,"ne","","",195,[[["nonzerou8",3]]]],[11,"eq","","",202,[[["nonzeroisize",3]]]],[11,"ne","","",202,[[["nonzeroisize",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::cell","",217,[[["cell",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::num","",192,[[["nonzerou16",3]]]],[11,"ne","","",192,[[["nonzerou16",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::char","",229,[[["chartryfromerror",3]]]],[11,"ne","","",229,[[["chartryfromerror",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::ops","",211,[[["rangefull",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::cell","PanicsPanics if the value in either `RefCell` is currently…",218,[[["refcell",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::task","",357,[[["rawwaker",3]]]],[11,"ne","","",357,[[["rawwaker",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::num","",189,[[["parsefloaterror",3]]]],[11,"ne","","",189,[[["parsefloaterror",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::ptr","",207,[[["nonnull",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::num","",199,[[["nonzeroi32",3]]]],[11,"ne","","",199,[[["nonzeroi32",3]]]],[11,"eq","","",196,[[["nonzerousize",3]]]],[11,"ne","","",196,[[["nonzerousize",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::ops","",67,[[["generatorstate",4]]]],[11,"ne","","",67,[[["generatorstate",4]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::num","",5,[[["interrorkind",4]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::marker","",210,[[["phantompinned",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::arch::x86_64","",104,[[["cpuidresult",3]]]],[11,"ne","","",104,[[["cpuidresult",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::ops","",62,[[["bound",4]]]],[11,"ne","","",62,[[["bound",4]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::str::lossy","",97,[[["utf8lossychunk",3]]]],[11,"ne","","",97,[[["utf8lossychunk",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::ops","",212,[[["rangeinclusive",3]]]],[11,"ne","","",212,[[["rangeinclusive",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::num","",197,[[["nonzeroi128",3]]]],[11,"ne","","",197,[[["nonzeroi128",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::hash","",297,[[["buildhasherdefault",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::lazy","",265,[[["oncecell",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::pin","",273,[[["pin",3]]]],[11,"ne","","",273,[[["pin",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::ops","",64,[[["rangetoinclusive",3]]]],[11,"ne","","",64,[[["rangetoinclusive",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::task","",358,[[["rawwakervtable",3]]]],[11,"ne","","",358,[[["rawwakervtable",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::num","",190,[[["parseinterror",3]]]],[11,"ne","","",190,[[["parseinterror",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::ops","",61,[[["rangeto",3]]]],[11,"ne","","",61,[[["rangeto",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::convert","",208,[[["infallible",4]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::num","",198,[[["nonzeroi16",3]]]],[11,"ne","","",198,[[["nonzeroi16",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::mem","",205,[[["manuallydrop",3]]]],[11,"ne","","",205,[[["manuallydrop",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::marker","",209,[[["phantomdata",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::option","",24,[[["option",4]]]],[11,"ne","","",24,[[["option",4]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::fmt","",289,[[["error",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::str::pattern","",94,[[["searchstep",4]]]],[11,"ne","","",94,[[["searchstep",4]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::num","",200,[[["nonzeroi64",3]]]],[11,"ne","","",200,[[["nonzeroi64",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::alloc","",362,[[["layouterror",3]]]],[11,"ne","","",362,[[["layouterror",3]]]],[11,"eq","wasmtime_wiggle::bitflags::_core::num","",203,[[["tryfrominterror",3]]]],[11,"ne","","",203,[[["tryfrominterror",3]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::pin","",273,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::ptr","",207,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::sync::atomic","",278,[[["formatter",3]],[["error",3],["result",4]]]],[11,"haystack","wasmtime_wiggle::bitflags::_core::str::pattern","",325,[[]]],[11,"next","","",325,[[],["searchstep",4]]],[11,"next_match","","",325,[[],["option",4]]],[11,"next_reject","","",325,[[],["option",4]]],[11,"haystack","","",326,[[]]],[11,"next","","",326,[[],["searchstep",4]]],[11,"next_match","","",326,[[],["option",4]]],[11,"haystack","","",324,[[]]],[11,"next","","",324,[[],["searchstep",4]]],[11,"next_match","","",324,[[],["option",4]]],[11,"next_reject","","",324,[[],["option",4]]],[11,"haystack","","",323,[[]]],[11,"next","","",323,[[],["searchstep",4]]],[11,"next_match","","",323,[[],["option",4]]],[11,"default","wasmtime_wiggle::bitflags::_core::marker","",210,[[],["phantompinned",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::sync::atomic","",279,[[],["atomici8",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::cell","Creates a `Cell<T>`, with the `Default` value for T.",217,[[],["cell",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::sync::atomic","",284,[[],["atomicu32",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::lazy","",265,[[],["oncecell",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::fmt","",289,[[],["error",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::mem","",205,[[],["manuallydrop",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::sync::atomic","",281,[[],["atomici16",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::time","",352,[[],["duration",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::sync::atomic","",288,[[],["atomicusize",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::marker","",209,[[],["phantomdata",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::sync::atomic","",285,[[],["atomici64",3]]],[11,"default","","",280,[[],["atomicu8",3]]],[11,"default","","Creates a null `AtomicPtr<T>`.",278,[[],["atomicptr",3]]],[11,"default","","",283,[[],["atomici32",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::lazy","Creates a new lazy value using `Default` as the…",266,[[],["lazy",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::cell","Creates an `UnsafeCell`, with the `Default` value for T.",223,[[],["unsafecell",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::sync::atomic","",282,[[],["atomicu16",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::hash","",298,[[],["siphasher",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::num","",4,[[],["wrapping",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::sync::atomic","Creates an `AtomicBool` initialized to `false`.",277,[[],["atomicbool",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::option","Returns [`None`][Option::None].",24,[[],["option",4]]],[11,"default","wasmtime_wiggle::bitflags::_core::sync::atomic","",287,[[],["atomicisize",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::cmp","",29,[[],["reverse",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::iter","",236,[[],["empty",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::ops","",211,[[],["rangefull",3]]],[11,"default","","",59,[[],["range",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::hash","",297,[[],["buildhasherdefault",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::sync::atomic","",286,[[],["atomicu64",3]]],[11,"default","wasmtime_wiggle::bitflags::_core::cell","Creates a `RefCell<T>`, with the `Default` value for T.",218,[[],["refcell",3]]],[11,"as_inner","wasmtime_wiggle::bitflags::_core::iter","",255,[[]]],[11,"as_inner","","",254,[[]]],[11,"as_inner","","",251,[[]]],[11,"as_inner","","",264,[[]]],[11,"as_inner","","",250,[[]]],[11,"as_inner","","",260,[[]]],[11,"as_inner","","",262,[[]]],[11,"as_inner","","",256,[[]]],[11,"as_inner","","",261,[[]]],[11,"as_inner","","",259,[[]]],[11,"as_inner","","",263,[[]]],[11,"as_inner","","",257,[[]]],[11,"as_inner","","",252,[[]]],[11,"as_inner","","",246,[[]]],[11,"shr_assign","wasmtime_wiggle::bitflags::_core::num","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",4,[[]]],[11,"as_ref","wasmtime_wiggle::bitflags::_core::slice","",302,[[]]],[11,"rem","wasmtime_wiggle::bitflags::_core::num","",4,[[["wrapping",3]]]],[11,"rem","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"rem","","",4,[[["wrapping",3]]]],[11,"rem","","",4,[[["wrapping",3]]]],[11,"rem","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"rem","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"rem","","",4,[[["wrapping",3]]]],[11,"rem","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"rem","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"rem","","",4,[[["wrapping",3]]]],[11,"rem","","",4,[[["wrapping",3]]]],[11,"rem","","",4,[[["wrapping",3]]]],[11,"rem","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"rem","","",4,[[["wrapping",3]]]],[11,"rem","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"rem","","",4,[[["wrapping",3]]]],[11,"rem","","",4,[[["wrapping",3]]]],[11,"rem","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"rem","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"rem","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"rem","","",4,[[["wrapping",3]]]],[11,"rem","","",4,[[["wrapping",3]]]],[11,"rem","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"rem","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::mem","",205,[[["manuallydrop",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::cell","PanicsPanics if the value in either `RefCell` is currently…",218,[[["refcell",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::num","",198,[[["nonzeroi16",3]],["ordering",4]]],[11,"cmp","","",192,[[["nonzerou16",3]],["ordering",4]]],[11,"cmp","","",4,[[["wrapping",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::option","",270,[[["noneerror",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::cmp","",29,[[["reverse",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::num","",197,[[["nonzeroi128",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::ops","",67,[[["generatorstate",4]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::num","",191,[[["nonzerou128",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::ptr","",207,[[["nonnull",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::task","",101,[[["poll",4]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::marker","",210,[[["phantompinned",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::result","",25,[[["result",4]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::num","",195,[[["nonzerou8",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::fmt","",289,[[["error",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::time","",352,[[["duration",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::marker","",209,[[["phantomdata",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::num","",194,[[["nonzerou64",3]],["ordering",4]]],[11,"cmp","","",202,[[["nonzeroisize",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::convert","",208,[[["infallible",4]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::panic","",272,[[["location",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::num","",201,[[["nonzeroi8",3]],["ordering",4]]],[11,"cmp","","",196,[[["nonzerousize",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::any","",213,[[["typeid",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::cmp","",28,[[["ordering",4]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::pin","",273,[[["pin",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::option","",24,[[["option",4]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::num","",199,[[["nonzeroi32",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::cell","",217,[[["cell",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::num","",200,[[["nonzeroi64",3]],["ordering",4]]],[11,"cmp","","",193,[[["nonzerou32",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::bitflags::_core::arch::x86_64","",104,[[["cpuidresult",3]],["ordering",4]]],[11,"not","wasmtime_wiggle::bitflags::_core::num","",4,[[],["wrapping",3]]],[11,"not","","",4,[[],["wrapping",3]]],[11,"not","","",4,[[],["wrapping",3]]],[11,"not","","",4,[[],["wrapping",3]]],[11,"not","","",4,[[],["wrapping",3]]],[11,"not","","",4,[[],["wrapping",3]]],[11,"not","","",4,[[],["wrapping",3]]],[11,"not","","",4,[[],["wrapping",3]]],[11,"not","","",4,[[],["wrapping",3]]],[11,"not","","",4,[[],["wrapping",3]]],[11,"not","","",4,[[],["wrapping",3]]],[11,"not","","",4,[[],["wrapping",3]]],[11,"poll","wasmtime_wiggle::bitflags::_core::future","",354,[[["pin",3],["ready",3],["context",3]],["poll",4]]],[11,"poll","","",355,[[["pollfn",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","wasmtime_wiggle::bitflags::_core::pin","",273,[[["pin",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","wasmtime_wiggle::bitflags::_core::future","",353,[[["pending",3],["context",3],["pin",3]],["poll",4]]],[11,"shl_assign","wasmtime_wiggle::bitflags::_core::num","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",4,[[]]],[11,"fmt","","",191,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",348,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::char","",227,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",199,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",189,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str::lossy","",327,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::alloc","",360,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::char","",226,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",201,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::ascii","",216,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::char","",228,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",230,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",329,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",200,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::char","",229,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",193,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::cell","",222,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::array","",214,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",196,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",349,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",202,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::cell","",219,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",194,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::char","",232,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",224,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::fmt","",289,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",195,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::char","",225,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::panic","",272,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",330,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::cell","",221,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",203,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",190,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",197,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::pin","",273,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::panic","",271,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",350,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::alloc","",362,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::fmt","",291,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::cell","",220,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::convert","",208,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitand_assign","wasmtime_wiggle::bitflags::_core::num","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"bitand_assign","","",4,[[["wrapping",3]]]],[11,"shl","","",4,[[],["wrapping",3]]],[11,"shl","","",4,[[]]],[11,"shl","","",4,[[],["wrapping",3]]],[11,"shl","","",4,[[]]],[11,"shl","","",4,[[]]],[11,"shl","","",4,[[],["wrapping",3]]],[11,"shl","","",4,[[],["wrapping",3]]],[11,"shl","","",4,[[]]],[11,"shl","","",4,[[],["wrapping",3]]],[11,"shl","","",4,[[],["wrapping",3]]],[11,"shl","","",4,[[],["wrapping",3]]],[11,"shl","","",4,[[]]],[11,"shl","","",4,[[]]],[11,"shl","","",4,[[],["wrapping",3]]],[11,"shl","","",4,[[]]],[11,"shl","","",4,[[],["wrapping",3]]],[11,"shl","","",4,[[]]],[11,"shl","","",4,[[],["wrapping",3]]],[11,"shl","","",4,[[]]],[11,"shl","","",4,[[]]],[11,"shl","","",4,[[],["wrapping",3]]],[11,"shl","","",4,[[]]],[11,"shl","","",4,[[]]],[11,"shl","","",4,[[],["wrapping",3]]],[11,"from_str","","",193,[[],[["result",4],["nonzerou32",3]]]],[11,"from_str","","",195,[[],[["nonzerou8",3],["result",4]]]],[11,"from_str","","",202,[[],[["result",4],["nonzeroisize",3]]]],[11,"from_str","","",200,[[],[["nonzeroi64",3],["result",4]]]],[11,"from_str","","",197,[[],[["result",4],["nonzeroi128",3]]]],[11,"from_str","","",201,[[],[["result",4],["nonzeroi8",3]]]],[11,"from_str","","",191,[[],[["result",4],["nonzerou128",3]]]],[11,"from_str","","",199,[[],[["nonzeroi32",3],["result",4]]]],[11,"from_str","","",192,[[],[["result",4],["nonzerou16",3]]]],[11,"from_str","","",198,[[],[["nonzeroi16",3],["result",4]]]],[11,"from_str","","",194,[[],[["result",4],["nonzerou64",3]]]],[11,"from_str","","",196,[[],[["nonzerousize",3],["result",4]]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::slice","",299,[[],["option",4]]],[11,"nth_back","","",299,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::iter","",255,[[],["option",4]]],[11,"try_rfold","","",255,[[]]],[11,"rfold","","",255,[[]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::slice","",313,[[],["option",4]]],[11,"nth_back","","",313,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::str","",337,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::slice","",317,[[],["option",4]]],[11,"nth_back","","",317,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::iter","",256,[[],["option",4]]],[11,"try_rfold","","",256,[[]]],[11,"rfold","","",256,[[]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::str","",335,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::iter","",236,[[],["option",4]]],[11,"next_back","","",248,[[],["option",4]]],[11,"advance_back_by","","",248,[[],["result",4]]],[11,"nth_back","","",248,[[],["option",4]]],[11,"rfind","","",248,[[],["option",4]]],[11,"try_rfold","","",248,[[]]],[11,"rfold","","",248,[[]]],[11,"next_back","","",262,[[],["option",4]]],[11,"nth_back","","",262,[[],["option",4]]],[11,"try_rfold","","",262,[[]]],[11,"rfold","","",262,[[]]],[11,"next_back","","",240,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::slice","",303,[[],["option",4]]],[11,"nth_back","","",303,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::ascii","",216,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::str","",331,[[],["option",4]]],[11,"nth_back","","",331,[[],["option",4]]],[11,"rfind","","",331,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::slice","",315,[[],["option",4]]],[11,"nth_back","","",315,[[],["option",4]]],[11,"next_back","","",316,[[],["option",4]]],[11,"nth_back","","",316,[[],["option",4]]],[11,"next_back","","",307,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::ops","",212,[[],["option",4]]],[11,"nth_back","","",212,[[],["option",4]]],[11,"try_rfold","","",212,[[]]],[11,"rfold","","",212,[[]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::slice","",310,[[],["option",4]]],[11,"next_back","","",312,[[],["option",4]]],[11,"nth_back","","",312,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::iter","",258,[[],["option",4]]],[11,"advance_back_by","","",258,[[],["result",4]]],[11,"nth_back","","",258,[[],["option",4]]],[11,"try_rfold","","",258,[[]]],[11,"rfold","","",258,[[]]],[11,"rfind","","",258,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::str","",344,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::iter","",247,[[],["option",4]]],[11,"nth_back","","",247,[[],["option",4]]],[11,"try_rfold","","",247,[[]]],[11,"rfold","","",247,[[]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::slice","",311,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::iter","",245,[[],["option",4]]],[11,"try_rfold","","",245,[[]]],[11,"rfold","","",245,[[]]],[11,"next_back","","",252,[[],["option",4]]],[11,"try_rfold","","",252,[[]]],[11,"rfold","","",252,[[]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::slice","",318,[[],["option",4]]],[11,"nth_back","","",318,[[],["option",4]]],[11,"next_back","","",322,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::iter","",260,[[],["option",4]]],[11,"nth_back","","",260,[[],["option",4]]],[11,"try_rfold","","",260,[[]]],[11,"rfold","","",260,[[]]],[11,"next_back","","",253,[[],["option",4]]],[11,"try_rfold","","",253,[[]]],[11,"rfold","","",253,[[]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::option","",267,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::slice","",300,[[],["option",4]]],[11,"nth_back","","",300,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::str","",336,[[],["option",4]]],[11,"next_back","","",333,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::ops","",59,[[],["option",4]]],[11,"nth_back","","",59,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::iter","",254,[[],["option",4]]],[11,"nth_back","","",254,[[],["option",4]]],[11,"try_rfold","","",254,[[]]],[11,"rfold","","",254,[[]]],[11,"rfind","","",254,[[],["option",4]]],[11,"next_back","","",239,[[],["option",4]]],[11,"next_back","","",244,[[],["option",4]]],[11,"try_rfold","","",244,[[]]],[11,"rfold","","",244,[[]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::str","",334,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::slice","",301,[[],["option",4]]],[11,"nth_back","","",301,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::str","",339,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::iter","",264,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::result","",276,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::option","",268,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::result","",274,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::slice","",306,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::str","",338,[[],["option",4]]],[11,"next_back","","",345,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::slice","",319,[[],["option",4]]],[11,"nth_back","","",319,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::str","",351,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::iter","",238,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::str","",343,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::option","",269,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::result","",275,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::array","",215,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::slice","",321,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::str","",340,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::iter","",251,[[],["option",4]]],[11,"try_rfold","","",251,[[]]],[11,"rfold","","",251,[[]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::slice","",314,[[],["option",4]]],[11,"nth_back","","",314,[[],["option",4]]],[11,"next_back","","",302,[[],["option",4]]],[11,"nth_back","","",302,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::str","",332,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::iter","",257,[[],["option",4]]],[11,"try_rfold","","",257,[[]]],[11,"rfold","","",257,[[]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::slice","",320,[[],["option",4]]],[11,"nth_back","","",320,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::str","",346,[[],["option",4]]],[11,"next_back","wasmtime_wiggle::bitflags::_core::iter","",243,[[],["option",4]]],[11,"try_rfold","","",243,[[]]],[11,"rfold","","",243,[[]]],[11,"next_back","","",250,[[],["option",4]]],[11,"nth_back","","",250,[[],["option",4]]],[11,"try_rfold","","",250,[[]]],[11,"rfold","","",250,[[]]],[11,"rem_assign","wasmtime_wiggle::bitflags::_core::num","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"rem_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","wasmtime_wiggle::bitflags::_core::time","",352,[[["duration",3]]]],[11,"sub_assign","wasmtime_wiggle::bitflags::_core::num","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"sub_assign","","",4,[[["wrapping",3]]]],[11,"deref_mut","wasmtime_wiggle::bitflags::_core::ffi","",235,[[],["valistimpl",3]]],[11,"deref_mut","wasmtime_wiggle::bitflags::_core::cell","",222,[[]]],[11,"deref_mut","wasmtime_wiggle::bitflags::_core::mem","",205,[[]]],[11,"deref_mut","wasmtime_wiggle::bitflags::_core::pin","",273,[[]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::sync::atomic","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::arch::x86_64","",367,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::lazy","",265,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::char","",226,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::option","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::fmt","",291,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::cell","",220,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",236,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::char","",232,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::sync::atomic","",287,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",333,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",316,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",317,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",241,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",322,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::arch::x86_64","",365,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::task","",358,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",339,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",338,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::arch::x86_64","",371,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::lazy","",266,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::task","",356,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::ops","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",329,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::sync::atomic","",284,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",336,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",312,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::array","",214,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",306,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str::lossy","",327,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::ffi","",233,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str::pattern","",326,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",200,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",197,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::cell","",219,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",256,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::char","",231,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::any","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",251,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::option","",270,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::marker","",210,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",343,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::any","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",202,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",263,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",302,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::cell","",218,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",196,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::char","",224,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",300,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",311,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",350,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",347,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::ops","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::task","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::arch::x86_64","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",346,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::ops","",212,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",334,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::ops","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",337,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",340,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",299,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",335,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::result","",274,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",304,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",264,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::panic","",272,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::array","",215,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",237,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::cell","",223,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::ffi","",234,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::cell","",217,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::sync::atomic","",281,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",199,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str::lossy","",97,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::arch::x86_64","",366,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",191,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",201,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::option","",269,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::alloc","",361,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::ops","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",314,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",309,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::arch::x86_64","",370,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::pin","",273,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",321,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::sync::atomic","",285,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",319,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::fmt","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",243,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::alloc","",360,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",301,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",250,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",320,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str::pattern","",324,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",190,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",305,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::sync::atomic","",283,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::ffi","",235,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",331,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",310,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::result","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",313,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",262,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::marker","",209,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::fmt","",289,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",240,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",318,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",189,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",258,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",253,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",247,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",249,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::hash","",297,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::sync::atomic","",286,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",351,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::cell","",221,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",203,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",255,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",259,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::result","",275,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::sync::atomic","",280,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::ptr","",207,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",238,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",195,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",330,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",349,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",252,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::char","",228,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",303,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::arch::x86_64","",369,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",257,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::char","",227,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",348,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",239,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",341,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::ops","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str::pattern","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",332,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::ascii","",216,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",261,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",307,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::future","",354,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::cell","",222,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::panic","",271,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::mem","",204,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",254,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::option","",267,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::char","",229,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::option","",268,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::sync::atomic","",278,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::future","",353,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::task","",359,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::sync::atomic","",279,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",344,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str::pattern","",325,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::char","",230,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::arch::x86_64","",368,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",248,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::sync::atomic","",277,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",194,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::char","",225,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::future","",355,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::arch::x86_64","",363,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",315,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",245,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::sync::atomic","",282,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",193,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::sync::atomic","",288,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str::pattern","",323,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::alloc","",362,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::task","",357,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::convert","",208,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::ops","",211,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::ops","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::time","",352,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::hash","",298,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",244,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::mem","",205,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::cmp","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",342,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::mem","",206,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::ops","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::result","",276,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::cmp","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",242,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::slice","",308,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::any","",213,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::iter","",260,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",246,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::str","",345,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::arch::x86_64","",364,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitxor","wasmtime_wiggle::bitflags::_core::num","",4,[[["wrapping",3]]]],[11,"bitxor","","",4,[[["wrapping",3]]]],[11,"bitxor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitxor","","",4,[[["wrapping",3]]]],[11,"bitxor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitxor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitxor","","",4,[[["wrapping",3]]]],[11,"bitxor","","",4,[[["wrapping",3]]]],[11,"bitxor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitxor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitxor","","",4,[[["wrapping",3]]]],[11,"bitxor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitxor","","",4,[[["wrapping",3]]]],[11,"bitxor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitxor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitxor","","",4,[[["wrapping",3]]]],[11,"bitxor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitxor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitxor","","",4,[[["wrapping",3]]]],[11,"bitxor","","",4,[[["wrapping",3]]]],[11,"bitxor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitxor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitxor","","",4,[[["wrapping",3]]]],[11,"bitxor","","",4,[[["wrapping",3]]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","wasmtime_wiggle::bitflags::_core::result","Takes each element in the [`Iterator`]: if it is an…",25,[[],["result",4]]],[11,"product","wasmtime_wiggle::bitflags::_core::num","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","wasmtime_wiggle::bitflags::_core::option","Takes each element in the [`Iterator`]: if it is a…",24,[[],["option",4]]],[11,"product","wasmtime_wiggle::bitflags::_core::num","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"product","","",4,[[],["wrapping",3]]],[11,"from","","",197,[[["nonzerou64",3]],["nonzeroi128",3]]],[11,"from","","",191,[[["nonzerou16",3]],["nonzerou128",3]]],[11,"from","","",199,[[["nonzeroi8",3]],["nonzeroi32",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::sync::atomic","Converts an `i8` into an `AtomicI8`.",279,[[],["atomici8",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::ptr","",207,[[],["nonnull",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::option","Converts from `&Option<T>` to `Option<&T>`.",24,[[["option",4]],["option",4]]],[11,"from","wasmtime_wiggle::bitflags::_core::sync::atomic","Converts a `bool` into an `AtomicBool`.",277,[[],["atomicbool",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::num","",203,[[["infallible",4]],["tryfrominterror",3]]],[11,"from","","",200,[[["nonzerou16",3]],["nonzeroi64",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::convert","",208,[[],["infallible",4]]],[11,"from","wasmtime_wiggle::bitflags::_core::sync::atomic","Converts an `u8` into an `AtomicU8`.",280,[[],["atomicu8",3]]],[11,"from","","Converts an `u16` into an `AtomicU16`.",282,[[],["atomicu16",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::cell","",223,[[],["unsafecell",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::lazy","",265,[[],["oncecell",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::num","",198,[[["nonzeroi8",3]],["nonzeroi16",3]]],[11,"from","","",200,[[["nonzeroi32",3]],["nonzeroi64",3]]],[11,"from","","",191,[[["nonzerou8",3]],["nonzerou128",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::sync::atomic","Converts an `i32` into an `AtomicI32`.",283,[[],["atomici32",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::num","",200,[[["nonzerou8",3]],["nonzeroi64",3]]],[11,"from","","",196,[[["nonzerou16",3]],["nonzerousize",3]]],[11,"from","","",199,[[["nonzerou16",3]],["nonzeroi32",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::sync::atomic","",278,[[],["atomicptr",3]]],[11,"from","","Converts an `usize` into an `AtomicUsize`.",288,[[],["atomicusize",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::num","",194,[[["nonzerou8",3]],["nonzerou64",3]]],[11,"from","","",202,[[["nonzeroi16",3]],["nonzeroisize",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::cell","",217,[[],["cell",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::num","",203,[[],["tryfrominterror",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::ptr","",207,[[["unique",3]],["nonnull",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::sync::atomic","Converts an `u32` into an `AtomicU32`.",284,[[],["atomicu32",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::option","Converts from `&mut Option<T>` to `Option<&mut T>`",24,[[["option",4]],["option",4]]],[11,"from","wasmtime_wiggle::bitflags::_core::num","",197,[[["nonzerou8",3]],["nonzeroi128",3]]],[11,"from","","",198,[[["nonzerou8",3]],["nonzeroi16",3]]],[11,"from","","",199,[[["nonzeroi16",3]],["nonzeroi32",3]]],[11,"from","","",194,[[["nonzerou32",3]],["nonzerou64",3]]],[11,"from","","",202,[[["nonzeroi8",3]],["nonzeroisize",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::sync::atomic","Converts an `isize` into an `AtomicIsize`.",287,[[],["atomicisize",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::task","Convert to a `Ready` variant.",101,[[],["poll",4]]],[11,"from","wasmtime_wiggle::bitflags::_core::num","",194,[[["nonzerou16",3]],["nonzerou64",3]]],[11,"from","","",197,[[["nonzeroi64",3]],["nonzeroi128",3]]],[11,"from","","",193,[[["nonzerou16",3]],["nonzerou32",3]]],[11,"from","","",197,[[["nonzeroi32",3]],["nonzeroi128",3]]],[11,"from","","",196,[[["nonzerou8",3]],["nonzerousize",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::option","Copies `val` into a new `Some`.",24,[[],["option",4]]],[11,"from","wasmtime_wiggle::bitflags::_core::num","",197,[[["nonzeroi16",3]],["nonzeroi128",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::array","",214,[[["infallible",4]],["tryfromsliceerror",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::num","",193,[[["nonzerou8",3]],["nonzerou32",3]]],[11,"from","","",200,[[["nonzeroi16",3]],["nonzeroi64",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::sync::atomic","Converts an `i64` into an `AtomicI64`.",285,[[],["atomici64",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::num","",197,[[["nonzeroi8",3]],["nonzeroi128",3]]],[11,"from","","",192,[[["nonzerou8",3]],["nonzerou16",3]]],[11,"from","","",197,[[["nonzerou16",3]],["nonzeroi128",3]]],[11,"from","","",200,[[["nonzerou32",3]],["nonzeroi64",3]]],[11,"from","","",197,[[["nonzerou32",3]],["nonzeroi128",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::cell","",218,[[],["refcell",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::num","",191,[[["nonzerou64",3]],["nonzerou128",3]]],[11,"from","","",200,[[["nonzeroi8",3]],["nonzeroi64",3]]],[11,"from","","",202,[[["nonzerou8",3]],["nonzeroisize",3]]],[11,"from","","",191,[[["nonzerou32",3]],["nonzerou128",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::sync::atomic","Converts an `u64` into an `AtomicU64`.",286,[[],["atomicu64",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::num","",199,[[["nonzerou8",3]],["nonzeroi32",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::ptr","",207,[[],["nonnull",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::sync::atomic","Converts an `i16` into an `AtomicI16`.",281,[[],["atomici16",3]]],[11,"write","wasmtime_wiggle::bitflags::_core::hash","",298,[[]]],[11,"finish","","",298,[[]]],[11,"fmt","wasmtime_wiggle::bitflags::_core::num","",196,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",193,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",202,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",195,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",199,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",194,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",191,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",201,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",197,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",200,[[["formatter",3]],[["error",3],["result",4]]]],[11,"resume","wasmtime_wiggle::bitflags::_core::pin","",273,[[["pin",3],["pin",3]],["generatorstate",4]]],[11,"bitor","wasmtime_wiggle::bitflags::_core::num","",192,[[]]],[11,"bitor","","",202,[[]]],[11,"bitor","","",191,[[["nonzerou128",3]]]],[11,"bitor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitor","","",197,[[]]],[11,"bitor","","",199,[[["nonzeroi32",3]]]],[11,"bitor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitor","","",198,[[]]],[11,"bitor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitor","","",195,[[]]],[11,"bitor","","",4,[[["wrapping",3]]]],[11,"bitor","","",196,[[]]],[11,"bitor","","",4,[[["wrapping",3]]]],[11,"bitor","","",197,[[["nonzeroi128",3]]]],[11,"bitor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitor","","",192,[[["nonzerou16",3]]]],[11,"bitor","","",4,[[["wrapping",3]]]],[11,"bitor","","",4,[[["wrapping",3]]]],[11,"bitor","","",198,[[["nonzeroi16",3]]]],[11,"bitor","","",196,[[["nonzerousize",3]]]],[11,"bitor","","",201,[[["nonzeroi8",3]]]],[11,"bitor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitor","","",4,[[["wrapping",3]]]],[11,"bitor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitor","","",4,[[["wrapping",3]]]],[11,"bitor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitor","","",195,[[["nonzerou8",3]]]],[11,"bitor","","",4,[[["wrapping",3]]]],[11,"bitor","","",194,[[["nonzerou64",3]]]],[11,"bitor","","",4,[[["wrapping",3]]]],[11,"bitor","","",4,[[["wrapping",3]]]],[11,"bitor","","",202,[[["nonzeroisize",3]]]],[11,"bitor","","",4,[[["wrapping",3]]]],[11,"bitor","","",191,[[]]],[11,"bitor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitor","","",193,[[]]],[11,"bitor","","",4,[[["wrapping",3]],["wrapping",3]]],[11,"bitor","","",199,[[]]],[11,"bitor","","",193,[[["nonzerou32",3]]]],[11,"bitor","","",194,[[]]],[11,"bitor","","",4,[[["wrapping",3]]]],[11,"bitor","","",200,[[["nonzeroi64",3]]]],[11,"bitor","","",201,[[]]],[11,"bitor","","",200,[[]]],[11,"bitor","","",4,[[["wrapping",3]]]],[11,"try_from","","",192,[[["nonzerou32",3]],[["nonzerou16",3],["result",4]]]],[11,"try_from","","",192,[[["nonzeroi64",3]],[["nonzerou16",3],["result",4]]]],[11,"try_from","","",196,[[["nonzeroi8",3]],[["result",4],["nonzerousize",3]]]],[11,"try_from","","",200,[[],[["nonzeroi64",3],["result",4]]]],[11,"try_from","","",201,[[["nonzerou128",3]],[["result",4],["nonzeroi8",3]]]],[11,"try_from","","",194,[[["nonzeroi8",3]],[["result",4],["nonzerou64",3]]]],[11,"try_from","","",195,[[["nonzeroi32",3]],[["result",4],["nonzerou8",3]]]],[11,"try_from","","",195,[[["nonzeroi8",3]],[["result",4],["nonzerou8",3]]]],[11,"try_from","","",202,[[["nonzerou16",3]],[["result",4],["nonzeroisize",3]]]],[11,"try_from","","",195,[[["nonzerou128",3]],[["result",4],["nonzerou8",3]]]],[11,"try_from","","",199,[[["nonzeroisize",3]],[["result",4],["nonzeroi32",3]]]],[11,"try_from","","",193,[[],[["nonzerou32",3],["result",4]]]],[11,"try_from","","",201,[[["nonzerousize",3]],[["nonzeroi8",3],["result",4]]]],[11,"try_from","","",192,[[["nonzeroi8",3]],[["nonzerou16",3],["result",4]]]],[11,"try_from","","",197,[[["nonzerousize",3]],[["nonzeroi128",3],["result",4]]]],[11,"try_from","","",198,[[["nonzeroi128",3]],[["result",4],["nonzeroi16",3]]]],[11,"try_from","","",200,[[["nonzerou128",3]],[["result",4],["nonzeroi64",3]]]],[11,"try_from","","",202,[[["nonzeroi32",3]],[["result",4],["nonzeroisize",3]]]],[11,"try_from","","",191,[[["nonzeroi32",3]],[["nonzerou128",3],["result",4]]]],[11,"try_from","","",198,[[],[["nonzeroi16",3],["result",4]]]],[11,"try_from","","",192,[[["nonzeroi128",3]],[["nonzerou16",3],["result",4]]]],[11,"try_from","","",192,[[["nonzerou64",3]],[["nonzerou16",3],["result",4]]]],[11,"try_from","","",192,[[["nonzeroi16",3]],[["nonzerou16",3],["result",4]]]],[11,"try_from","","",191,[[["nonzeroisize",3]],[["result",4],["nonzerou128",3]]]],[11,"try_from","","",193,[[["nonzeroi32",3]],[["nonzerou32",3],["result",4]]]],[11,"try_from","","",197,[[["nonzeroisize",3]],[["result",4],["nonzeroi128",3]]]],[11,"try_from","","",198,[[["nonzerou64",3]],[["result",4],["nonzeroi16",3]]]],[11,"try_from","","",198,[[["nonzerousize",3]],[["result",4],["nonzeroi16",3]]]],[11,"try_from","","",199,[[["nonzeroi64",3]],[["nonzeroi32",3],["result",4]]]],[11,"try_from","","",202,[[["nonzeroi64",3]],[["nonzeroisize",3],["result",4]]]],[11,"try_from","","",195,[[["nonzerou32",3]],[["result",4],["nonzerou8",3]]]],[11,"try_from","","",193,[[["nonzeroi64",3]],[["result",4],["nonzerou32",3]]]],[11,"try_from","","",197,[[["nonzerou128",3]],[["nonzeroi128",3],["result",4]]]],[11,"try_from","","",195,[[["nonzerou64",3]],[["result",4],["nonzerou8",3]]]],[11,"try_from","","",193,[[["nonzeroi16",3]],[["result",4],["nonzerou32",3]]]],[11,"try_from","","",199,[[["nonzerou64",3]],[["nonzeroi32",3],["result",4]]]],[11,"try_from","","",201,[[["nonzeroi32",3]],[["nonzeroi8",3],["result",4]]]],[11,"try_from","","",199,[[["nonzerousize",3]],[["nonzeroi32",3],["result",4]]]],[11,"try_from","","",193,[[["nonzerousize",3]],[["nonzerou32",3],["result",4]]]],[11,"try_from","","",195,[[],[["nonzerou8",3],["result",4]]]],[11,"try_from","","",196,[[["nonzeroi64",3]],[["result",4],["nonzerousize",3]]]],[11,"try_from","","",194,[[],[["result",4],["nonzerou64",3]]]],[11,"try_from","","",198,[[["nonzerou32",3]],[["nonzeroi16",3],["result",4]]]],[11,"try_from","","",195,[[["nonzeroi64",3]],[["nonzerou8",3],["result",4]]]],[11,"try_from","","",192,[[["nonzeroi32",3]],[["result",4],["nonzerou16",3]]]],[11,"try_from","","",191,[[["nonzeroi128",3]],[["result",4],["nonzerou128",3]]]],[11,"try_from","","",193,[[["nonzerou64",3]],[["result",4],["nonzerou32",3]]]],[11,"try_from","","",191,[[["nonzerousize",3]],[["result",4],["nonzerou128",3]]]],[11,"try_from","","",196,[[],[["nonzerousize",3],["result",4]]]],[11,"try_from","","",200,[[["nonzeroi128",3]],[["result",4],["nonzeroi64",3]]]],[11,"try_from","","",195,[[["nonzeroi16",3]],[["result",4],["nonzerou8",3]]]],[11,"try_from","","",194,[[["nonzerousize",3]],[["result",4],["nonzerou64",3]]]],[11,"try_from","","",192,[[["nonzerousize",3]],[["result",4],["nonzerou16",3]]]],[11,"try_from","","",199,[[["nonzerou32",3]],[["nonzeroi32",3],["result",4]]]],[11,"try_from","","",202,[[["nonzerou128",3]],[["result",4],["nonzeroisize",3]]]],[11,"try_from","","",200,[[["nonzerousize",3]],[["result",4],["nonzeroi64",3]]]],[11,"try_from","","",195,[[["nonzeroisize",3]],[["nonzerou8",3],["result",4]]]],[11,"try_from","","",202,[[["nonzerou64",3]],[["result",4],["nonzeroisize",3]]]],[11,"try_from","","",194,[[["nonzeroi32",3]],[["nonzerou64",3],["result",4]]]],[11,"try_from","","",201,[[["nonzerou64",3]],[["nonzeroi8",3],["result",4]]]],[11,"try_from","","",191,[[],[["nonzerou128",3],["result",4]]]],[11,"try_from","","",201,[[["nonzeroi128",3]],[["nonzeroi8",3],["result",4]]]],[11,"try_from","","",201,[[["nonzerou8",3]],[["result",4],["nonzeroi8",3]]]],[11,"try_from","","",196,[[["nonzeroi128",3]],[["result",4],["nonzerousize",3]]]],[11,"try_from","","",198,[[["nonzerou16",3]],[["result",4],["nonzeroi16",3]]]],[11,"try_from","","",201,[[],[["nonzeroi8",3],["result",4]]]],[11,"try_from","","",198,[[["nonzerou128",3]],[["result",4],["nonzeroi16",3]]]],[11,"try_from","","",193,[[["nonzeroi128",3]],[["nonzerou32",3],["result",4]]]],[11,"try_from","","",195,[[["nonzerousize",3]],[["result",4],["nonzerou8",3]]]],[11,"try_from","","",191,[[["nonzeroi8",3]],[["nonzerou128",3],["result",4]]]],[11,"try_from","","",197,[[],[["result",4],["nonzeroi128",3]]]],[11,"try_from","","",198,[[["nonzeroi64",3]],[["result",4],["nonzeroi16",3]]]],[11,"try_from","","",192,[[["nonzerou128",3]],[["nonzerou16",3],["result",4]]]],[11,"try_from","","",202,[[["nonzerousize",3]],[["result",4],["nonzeroisize",3]]]],[11,"try_from","","",202,[[["nonzerou32",3]],[["result",4],["nonzeroisize",3]]]],[11,"try_from","","",201,[[["nonzeroisize",3]],[["result",4],["nonzeroi8",3]]]],[11,"try_from","","",194,[[["nonzeroi128",3]],[["nonzerou64",3],["result",4]]]],[11,"try_from","","",196,[[["nonzeroisize",3]],[["result",4],["nonzerousize",3]]]],[11,"try_from","","",192,[[["nonzeroisize",3]],[["nonzerou16",3],["result",4]]]],[11,"try_from","","",194,[[["nonzeroi64",3]],[["result",4],["nonzerou64",3]]]],[11,"try_from","","",202,[[],[["result",4],["nonzeroisize",3]]]],[11,"try_from","","",191,[[["nonzeroi64",3]],[["nonzerou128",3],["result",4]]]],[11,"try_from","","",193,[[["nonzeroisize",3]],[["result",4],["nonzerou32",3]]]],[11,"try_from","","",201,[[["nonzerou32",3]],[["nonzeroi8",3],["result",4]]]],[11,"try_from","","",198,[[["nonzeroi32",3]],[["result",4],["nonzeroi16",3]]]],[11,"try_from","","",201,[[["nonzeroi64",3]],[["result",4],["nonzeroi8",3]]]],[11,"try_from","","",196,[[["nonzeroi16",3]],[["nonzerousize",3],["result",4]]]],[11,"try_from","","",194,[[["nonzerou128",3]],[["result",4],["nonzerou64",3]]]],[11,"try_from","","",194,[[["nonzeroi16",3]],[["result",4],["nonzerou64",3]]]],[11,"try_from","","",198,[[["nonzeroisize",3]],[["nonzeroi16",3],["result",4]]]],[11,"try_from","","",199,[[],[["nonzeroi32",3],["result",4]]]],[11,"try_from","","",192,[[],[["nonzerou16",3],["result",4]]]],[11,"try_from","","",193,[[["nonzeroi8",3]],[["result",4],["nonzerou32",3]]]],[11,"try_from","","",196,[[["nonzerou32",3]],[["nonzerousize",3],["result",4]]]],[11,"try_from","","",191,[[["nonzeroi16",3]],[["nonzerou128",3],["result",4]]]],[11,"try_from","","",200,[[["nonzerou64",3]],[["result",4],["nonzeroi64",3]]]],[11,"try_from","","",195,[[["nonzeroi128",3]],[["result",4],["nonzerou8",3]]]],[11,"try_from","","",196,[[["nonzeroi32",3]],[["nonzerousize",3],["result",4]]]],[11,"try_from","","",195,[[["nonzerou16",3]],[["result",4],["nonzerou8",3]]]],[11,"try_from","","",201,[[["nonzeroi16",3]],[["nonzeroi8",3],["result",4]]]],[11,"try_from","","",194,[[["nonzeroisize",3]],[["result",4],["nonzerou64",3]]]],[11,"try_from","","",196,[[["nonzerou128",3]],[["nonzerousize",3],["result",4]]]],[11,"try_from","","",193,[[["nonzerou128",3]],[["result",4],["nonzerou32",3]]]],[11,"try_from","","",196,[[["nonzerou64",3]],[["nonzerousize",3],["result",4]]]],[11,"try_from","","",201,[[["nonzerou16",3]],[["nonzeroi8",3],["result",4]]]],[11,"try_from","","",202,[[["nonzeroi128",3]],[["nonzeroisize",3],["result",4]]]],[11,"try_from","","",199,[[["nonzerou128",3]],[["result",4],["nonzeroi32",3]]]],[11,"try_from","","",199,[[["nonzeroi128",3]],[["nonzeroi32",3],["result",4]]]],[11,"try_from","","",200,[[["nonzeroisize",3]],[["nonzeroi64",3],["result",4]]]],[11,"build_hasher","wasmtime_wiggle::bitflags::_core::hash","",297,[[]]],[11,"resume","wasmtime_wiggle::bitflags::_core::pin","",273,[[["pin",3],["pin",3]],["generatorstate",4]]],[11,"from","wasmtime_wiggle::bitflags::_core::task","",359,[[["arc",3]],["waker",3]]],[11,"from","","",357,[[["arc",3]],["rawwaker",3]]],[11,"from","wasmtime_wiggle::bitflags::_core::pin","Converts a `Box<T>` into a `Pin<Box<T>>`",273,[[["box",3]],[["pin",3],["box",3]]]],[11,"from","wasmtime_wiggle::bitflags::_core::result","",25,[[["streamresult",3]],[["mzerror",4],["result",4],["mzstatus",4]]]],[11,"from","","",25,[[["streamresult",3]],[["mzerror",4],["result",4],["mzstatus",4]]]],[11,"eq","wasmtime_wiggle","",182,[[["region",3]]]],[11,"ne","","",182,[[["region",3]]]],[11,"eq","","",2,[[["trap",4]]]],[11,"ne","","",2,[[["trap",4]]]],[11,"eq","","",1,[[["borrowhandle",3]]]],[11,"ne","","",1,[[["borrowhandle",3]]]],[11,"eq","","",176,[[["guesterror",4]]]],[11,"ne","","",176,[[["guesterror",4]]]],[11,"source","","",176,[[],[["option",4],["error",8]]]],[11,"drop","","",188,[[]]],[11,"drop","","",187,[[]]],[11,"drop","","",185,[[]]],[11,"drop","","",186,[[]]],[11,"deref_mut","","",188,[[]]],[11,"deref_mut","","",186,[[]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",176,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",184,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",176,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",1,[[]]],[11,"guest_size","","",184,[[]]],[11,"guest_align","","",184,[[]]],[11,"read","","",184,[[["guestptr",3]],[["result",4],["guesterror",4],["guestptr",3]]]],[11,"write","","",184,[[["guestptr",3],["guestptr",3]],[["guesterror",4],["result",4]]]],[11,"guest_size","","",184,[[]]],[11,"guest_align","","",184,[[]]],[11,"read","","",184,[[["guestptr",3]],[["guestptr",3],["result",4],["guesterror",4]]]],[11,"write","","",184,[[["guestptr",3],["guestptr",3]],[["guesterror",4],["result",4]]]],[11,"from","","",176,[[["tryfrominterror",3]],["guesterror",4]]],[11,"from","","",176,[[["utf8error",3]],["guesterror",4]]],[11,"deref","","",187,[[]]],[11,"deref","","",186,[[]]],[11,"deref","","",188,[[]]],[11,"deref","","",185,[[]]],[11,"clone","","",182,[[],["region",3]]],[11,"clone","","",1,[[],["borrowhandle",3]]],[11,"clone","","",184,[[],["guestptr",3]]],[11,"clone","","",2,[[],["trap",4]]],[11,"as_field","wasmtime_wiggle::tracing::field","",380,[[["metadata",3]],[["field",3],["option",4]]]],[11,"eq","wasmtime_wiggle::tracing","",391,[[["span",3]]]],[11,"poll","wasmtime_wiggle::tracing::instrument","",388,[[["instrumented",3],["pin",3],["context",3]],["poll",4]]],[11,"drop","wasmtime_wiggle::tracing::span","",392,[[]]],[11,"drop","wasmtime_wiggle::tracing","",391,[[]]],[11,"fmt","wasmtime_wiggle::tracing::instrument","",387,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::span","",392,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing","",391,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::instrument","",388,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","wasmtime_wiggle::tracing","",391,[[]]],[11,"into","","",391,[[],[["id",3],["option",4]]]],[11,"clone","wasmtime_wiggle::tracing::instrument","",388,[[],["instrumented",3]]],[11,"clone","wasmtime_wiggle::tracing","",391,[[],["span",3]]],[11,"clone","wasmtime_wiggle::tracing::instrument","",387,[[],["withdispatch",3]]],[11,"eq","wasmtime_wiggle::tracing::log","",172,[[["level",4]]]],[11,"eq","","",173,[[["level",4]]]],[11,"eq","","",172,[[["levelfilter",4]]]],[11,"eq","","",173,[[["levelfilter",4]]]],[11,"eq","","",399,[[["metadata",3]]]],[11,"ne","","",399,[[["metadata",3]]]],[11,"eq","","",400,[[["metadatabuilder",3]]]],[11,"ne","","",400,[[["metadatabuilder",3]]]],[11,"eq","","",402,[[["parselevelerror",3]]]],[11,"ne","","",402,[[["parselevelerror",3]]]],[11,"partial_cmp","","",400,[[["metadatabuilder",3]],[["ordering",4],["option",4]]]],[11,"lt","","",400,[[["metadatabuilder",3]]]],[11,"le","","",400,[[["metadatabuilder",3]]]],[11,"gt","","",400,[[["metadatabuilder",3]]]],[11,"ge","","",400,[[["metadatabuilder",3]]]],[11,"partial_cmp","","",172,[[["level",4]],[["ordering",4],["option",4]]]],[11,"lt","","",172,[[["level",4]]]],[11,"le","","",172,[[["level",4]]]],[11,"gt","","",172,[[["level",4]]]],[11,"ge","","",172,[[["level",4]]]],[11,"partial_cmp","","",172,[[["levelfilter",4]],[["ordering",4],["option",4]]]],[11,"lt","","",172,[[["levelfilter",4]]]],[11,"le","","",172,[[["levelfilter",4]]]],[11,"gt","","",172,[[["levelfilter",4]]]],[11,"ge","","",172,[[["levelfilter",4]]]],[11,"partial_cmp","","",399,[[["metadata",3]],[["ordering",4],["option",4]]]],[11,"lt","","",399,[[["metadata",3]]]],[11,"le","","",399,[[["metadata",3]]]],[11,"gt","","",399,[[["metadata",3]]]],[11,"ge","","",399,[[["metadata",3]]]],[11,"partial_cmp","","",173,[[["levelfilter",4]],[["ordering",4],["option",4]]]],[11,"lt","","",173,[[["levelfilter",4]]]],[11,"le","","",173,[[["levelfilter",4]]]],[11,"gt","","",173,[[["levelfilter",4]]]],[11,"ge","","",173,[[["levelfilter",4]]]],[11,"partial_cmp","","",173,[[["level",4]],[["ordering",4],["option",4]]]],[11,"lt","","",173,[[["level",4]]]],[11,"le","","",173,[[["level",4]]]],[11,"gt","","",173,[[["level",4]]]],[11,"ge","","",173,[[["level",4]]]],[11,"fmt","","",401,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",397,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",399,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",402,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",398,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",400,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",401,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",402,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",400,[[]]],[11,"hash","","",399,[[]]],[11,"hash","","",173,[[]]],[11,"hash","","",172,[[]]],[11,"from_str","","",172,[[],[["level",4],["result",4]]]],[11,"from_str","","",173,[[],[["levelfilter",4],["result",4]]]],[11,"cmp","","",400,[[["metadatabuilder",3]],["ordering",4]]],[11,"cmp","","",399,[[["metadata",3]],["ordering",4]]],[11,"cmp","","",173,[[["levelfilter",4]],["ordering",4]]],[11,"cmp","","",172,[[["level",4]],["ordering",4]]],[11,"clone","","",399,[[],["metadata",3]]],[11,"clone","","",172,[[],["level",4]]],[11,"clone","","",173,[[],["levelfilter",4]]],[11,"clone","","",397,[[],["record",3]]],[11,"eq","wasmtime_wiggle::tracing::field","",381,[[["empty",3]]]],[11,"eq","wasmtime_wiggle::tracing::metadata","",390,[[["levelfilter",3]]]],[11,"ne","","",390,[[["levelfilter",3]]]],[11,"eq","wasmtime_wiggle::tracing::callsite","",404,[[["identifier",3]]]],[11,"eq","wasmtime_wiggle::tracing::metadata","",406,[[["kind",3]]]],[11,"ne","","",406,[[["kind",3]]]],[11,"eq","wasmtime_wiggle::tracing::field","",380,[[["field",3]]]],[11,"eq","wasmtime_wiggle::tracing","",407,[[["levelfilter",3]]]],[11,"eq","","",394,[[["id",3]]]],[11,"ne","","",394,[[["id",3]]]],[11,"eq","wasmtime_wiggle::tracing::metadata","",390,[[["level",3]]]],[11,"eq","wasmtime_wiggle::tracing","",407,[[["level",3]]]],[11,"ne","","",407,[[["level",3]]]],[11,"as_ref","wasmtime_wiggle::tracing::field","",380,[[]]],[11,"record_debug","wasmtime_wiggle::bitflags::_core::fmt","",293,[[["debug",8],["field",3]]]],[11,"record_debug","","",295,[[["debug",8],["field",3]]]],[11,"from_str","wasmtime_wiggle::tracing::metadata","",390,[[],[["result",4],["levelfilter",3]]]],[11,"from_str","wasmtime_wiggle::tracing","",407,[[],[["result",4],["level",3],["parselevelerror",3]]]],[11,"cmp","wasmtime_wiggle::tracing::metadata","",390,[[["levelfilter",3]],["ordering",4]]],[11,"cmp","wasmtime_wiggle::tracing","",407,[[["level",3]],["ordering",4]]],[11,"drop","wasmtime_wiggle::tracing::subscriber","",377,[[]]],[11,"partial_cmp","wasmtime_wiggle::tracing","",407,[[["level",3]],[["ordering",4],["option",4]]]],[11,"lt","","",407,[[["level",3]]]],[11,"le","","",407,[[["level",3]]]],[11,"gt","","",407,[[["level",3]]]],[11,"ge","","",407,[[["level",3]]]],[11,"partial_cmp","wasmtime_wiggle::tracing::metadata","",390,[[["level",3]],[["ordering",4],["option",4]]]],[11,"lt","","",390,[[["level",3]]]],[11,"le","","",390,[[["level",3]]]],[11,"gt","","",390,[[["level",3]]]],[11,"ge","","",390,[[["level",3]]]],[11,"partial_cmp","wasmtime_wiggle::tracing","",407,[[["levelfilter",3]],[["ordering",4],["option",4]]]],[11,"lt","","",407,[[["levelfilter",3]]]],[11,"le","","",407,[[["levelfilter",3]]]],[11,"gt","","",407,[[["levelfilter",3]]]],[11,"ge","","",407,[[["levelfilter",3]]]],[11,"partial_cmp","wasmtime_wiggle::tracing::metadata","",390,[[["levelfilter",3]],[["ordering",4],["option",4]]]],[11,"lt","","",390,[[["levelfilter",3]]]],[11,"le","","",390,[[["levelfilter",3]]]],[11,"gt","","",390,[[["levelfilter",3]]]],[11,"ge","","",390,[[["levelfilter",3]]]],[11,"fmt","wasmtime_wiggle::tracing","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::metadata","",390,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::subscriber","",377,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing","",407,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::field","",381,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",384,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing","",405,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::field","",382,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing","",394,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::event","",403,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::subscriber","",396,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::span","",393,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",395,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing","",378,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::subscriber","",379,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::field","",380,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::metadata","",406,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::callsite","",404,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::field","",386,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",385,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::metadata","",389,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",408,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::field","",383,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing","",407,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::metadata","",390,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::field","",385,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::metadata","",389,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::field","",380,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",383,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::metadata","",408,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::field","",382,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::tracing::subscriber","",379,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","wasmtime_wiggle::tracing::callsite","",404,[[]]],[11,"hash","wasmtime_wiggle::tracing","",394,[[]]],[11,"hash","wasmtime_wiggle::tracing::field","",380,[[]]],[11,"record","","",385,[[["field",3],["visit",8]]]],[11,"record","wasmtime_wiggle::bitflags::_core::num","",4,[[["field",3],["visit",8]]]],[11,"record","","",198,[[["field",3],["visit",8]]]],[11,"record","","",200,[[["field",3],["visit",8]]]],[11,"record","","",196,[[["field",3],["visit",8]]]],[11,"record","","",194,[[["field",3],["visit",8]]]],[11,"record","","",195,[[["field",3],["visit",8]]]],[11,"record","wasmtime_wiggle::tracing::field","",381,[[["field",3],["visit",8]]]],[11,"record","wasmtime_wiggle::bitflags::_core::num","",201,[[["field",3],["visit",8]]]],[11,"record","","",202,[[["field",3],["visit",8]]]],[11,"record","wasmtime_wiggle::tracing::field","",386,[[["field",3],["visit",8]]]],[11,"record","wasmtime_wiggle::bitflags::_core::num","",199,[[["field",3],["visit",8]]]],[11,"record","wasmtime_wiggle::bitflags::_core::fmt","",291,[[["field",3],["visit",8]]]],[11,"record","wasmtime_wiggle::bitflags::_core::num","",192,[[["field",3],["visit",8]]]],[11,"record","","",193,[[["field",3],["visit",8]]]],[11,"next","wasmtime_wiggle::tracing::field","",384,[[],[["field",3],["option",4]]]],[11,"into","wasmtime_wiggle::tracing::metadata","",390,[[],[["option",4],["level",3]]]],[11,"from","","",390,[[["level",3]],["levelfilter",3]]],[11,"from","","",390,[[["option",4],["level",3]],["levelfilter",3]]],[11,"from","wasmtime_wiggle::tracing","",378,[[],["dispatch",3]]],[11,"default","","Returns the current default dispatcher",378,[[],["dispatch",3]]],[11,"clone","wasmtime_wiggle::tracing::callsite","",404,[[],["identifier",3]]],[11,"clone","wasmtime_wiggle::tracing::subscriber","",396,[[],["interest",3]]],[11,"clone","wasmtime_wiggle::tracing","",378,[[],["dispatch",3]]],[11,"clone","wasmtime_wiggle::tracing::field","",386,[[],["debugvalue",3]]],[11,"clone","","",380,[[],["field",3]]],[11,"clone","wasmtime_wiggle::tracing::metadata","",389,[[],["parselevelfiltererror",3]]],[11,"clone","wasmtime_wiggle::tracing","",394,[[],["id",3]]],[11,"clone","","",407,[[],["level",3]]],[11,"clone","wasmtime_wiggle::tracing::metadata","",390,[[],["levelfilter",3]]],[11,"clone","wasmtime_wiggle::tracing::field","",385,[[],["displayvalue",3]]],[11,"clone","wasmtime_wiggle::tracing::metadata","",406,[[],["kind",3]]],[11,"parse","wasmtime_wiggle::witx","",152,[[["parser",3]],[["error",3],["declsyntax",4],["result",4]]]],[11,"parse","","",116,[[["parser",3]],[["error",3],["builtintype",4],["result",4]]]],[11,"eq","wasmtime_wiggle::witx::polyfill","",109,[[["modulepolyfill",3]]]],[11,"ne","","",109,[[["modulepolyfill",3]]]],[11,"eq","wasmtime_wiggle::witx","",127,[[["interfacefuncparam",3]]]],[11,"ne","","",127,[[["interfacefuncparam",3]]]],[11,"eq","","",114,[[["location",3]]]],[11,"ne","","",114,[[["location",3]]]],[11,"eq","","",122,[[["flagsmember",3]]]],[11,"ne","","",122,[[["flagsmember",3]]]],[11,"eq","","",373,[[["handledatatype",3]]]],[11,"eq","","",143,[[["coreparamsignifies",4]]]],[11,"ne","","",143,[[["coreparamsignifies",4]]]],[11,"eq","","",151,[[["unionlayout",3]]]],[11,"ne","","",151,[[["unionlayout",3]]]],[11,"eq","","",131,[[["moduleentry",4]]]],[11,"eq","","",152,[[["declsyntax",4]]]],[11,"ne","","",152,[[["declsyntax",4]]]],[11,"eq","","",125,[[["intrepr",4]]]],[11,"eq","","",124,[[["intdatatype",3]]]],[11,"ne","","",124,[[["intdatatype",3]]]],[11,"eq","","",142,[[["corefunctype",3]]]],[11,"ne","","",142,[[["corefunctype",3]]]],[11,"eq","","",135,[[["structdatatype",3]]]],[11,"ne","","",135,[[["structdatatype",3]]]],[11,"eq","","",128,[[["interfacefuncparamposition",4]]]],[11,"ne","","",128,[[["interfacefuncparamposition",4]]]],[11,"eq","","",118,[[["entry",4]]]],[11,"eq","","",372,[[["document",3]]]],[11,"eq","","",374,[[["id",3]]]],[11,"ne","","",374,[[["id",3]]]],[11,"eq","","",141,[[["atomtype",4]]]],[11,"eq","","",139,[[["uniondatatype",3]]]],[11,"ne","","",139,[[["uniondatatype",3]]]],[11,"eq","","",119,[[["enumdatatype",3]]]],[11,"ne","","",119,[[["enumdatatype",3]]]],[11,"eq","wasmtime_wiggle::witx::polyfill","",110,[[["funcpolyfill",3]]]],[11,"ne","","",110,[[["funcpolyfill",3]]]],[11,"eq","wasmtime_wiggle::witx","",126,[[["interfacefunc",3]]]],[11,"ne","","",126,[[["interfacefunc",3]]]],[11,"eq","","",130,[[["moduledefinition",4]]]],[11,"ne","","",130,[[["moduledefinition",4]]]],[11,"eq","","",129,[[["module",3]]]],[11,"eq","","",153,[[["sexpr",4]]]],[11,"ne","","",153,[[["sexpr",4]]]],[11,"eq","","",138,[[["typeref",4]]]],[11,"ne","","",138,[[["typeref",4]]]],[11,"eq","","",137,[[["type",4]]]],[11,"ne","","",137,[[["type",4]]]],[11,"eq","","",116,[[["builtintype",4]]]],[11,"eq","","",136,[[["structmember",3]]]],[11,"ne","","",136,[[["structmember",3]]]],[11,"eq","wasmtime_wiggle::witx::polyfill","",113,[[["typepolyfill",4]]]],[11,"ne","","",113,[[["typepolyfill",4]]]],[11,"eq","wasmtime_wiggle::witx","",149,[[["sizealign",3]]]],[11,"ne","","",149,[[["sizealign",3]]]],[11,"eq","","",144,[[["coreparamtype",3]]]],[11,"ne","","",144,[[["coreparamtype",3]]]],[11,"eq","","",120,[[["enumvariant",3]]]],[11,"ne","","",120,[[["enumvariant",3]]]],[11,"eq","","",123,[[["intconst",3]]]],[11,"ne","","",123,[[["intconst",3]]]],[11,"eq","","",154,[[["repequality",4]]]],[11,"eq","wasmtime_wiggle::witx::polyfill","",112,[[["paramunknown",4]]]],[11,"ne","","",112,[[["paramunknown",4]]]],[11,"eq","wasmtime_wiggle::witx","",117,[[["definition",4]]]],[11,"ne","","",117,[[["definition",4]]]],[11,"eq","wasmtime_wiggle::witx::polyfill","",111,[[["parampolyfill",3]]]],[11,"ne","","",111,[[["parampolyfill",3]]]],[11,"eq","wasmtime_wiggle::witx","",121,[[["flagsdatatype",3]]]],[11,"ne","","",121,[[["flagsdatatype",3]]]],[11,"eq","","",374,[[]]],[11,"eq","","",140,[[["unionvariant",3]]]],[11,"ne","","",140,[[["unionvariant",3]]]],[11,"eq","wasmtime_wiggle::witx::polyfill","",108,[[["polyfill",3]]]],[11,"ne","","",108,[[["polyfill",3]]]],[11,"eq","wasmtime_wiggle::witx","",132,[[["moduleimport",3]]]],[11,"ne","","",132,[[["moduleimport",3]]]],[11,"eq","","",134,[[["namedtype",3]]]],[11,"ne","","",134,[[["namedtype",3]]]],[11,"eq","","",133,[[["moduleimportvariant",4]]]],[11,"eq","","",145,[[["typepassedby",4]]]],[11,"ne","","",145,[[["typepassedby",4]]]],[11,"source","","",115,[[],[["option",4],["error",8]]]],[11,"fgets","","",376,[[["path",3]],[["result",4],["string",3],["witxerror",4]]]],[11,"fget_line","","",376,[[["path",3]],[["result",4],["string",3],["witxerror",4]]]],[11,"canonicalize","","",376,[[["path",3]],[["witxerror",4],["result",4],["pathbuf",3]]]],[11,"fgets","","",375,[[["path",3]],[["result",4],["string",3],["witxerror",4]]]],[11,"fget_line","","",375,[[["path",3]],[["result",4],["string",3],["witxerror",4]]]],[11,"canonicalize","","",375,[[["path",3]],[["witxerror",4],["result",4],["pathbuf",3]]]],[11,"cmp","","",149,[[["sizealign",3]],["ordering",4]]],[11,"mem_size_align","","",116,[[],["sizealign",3]]],[11,"mem_size_align","","",373,[[],["sizealign",3]]],[11,"mem_size_align","","",137,[[],["sizealign",3]]],[11,"mem_size_align","","",151,[[],["sizealign",3]]],[11,"mem_size_align","","",134,[[],["sizealign",3]]],[11,"mem_size_align","","",125,[[],["sizealign",3]]],[11,"mem_size_align","","",138,[[],["sizealign",3]]],[11,"mem_size_align","","",135,[[],["sizealign",3]]],[11,"mem_size_align","","",139,[[],["sizealign",3]]],[11,"partial_cmp","","",149,[[["sizealign",3]],[["ordering",4],["option",4]]]],[11,"lt","","",149,[[["sizealign",3]]]],[11,"le","","",149,[[["sizealign",3]]]],[11,"gt","","",149,[[["sizealign",3]]]],[11,"ge","","",149,[[["sizealign",3]]]],[11,"fmt","","",120,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",128,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",152,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::witx::polyfill","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::witx","",115,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",144,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",126,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::witx::polyfill","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::witx","",139,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",372,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",122,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::witx::polyfill","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::witx","",141,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::witx::polyfill","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::witx","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",129,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::witx::polyfill","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::witx","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",137,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",133,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",119,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",132,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",121,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",373,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",116,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",131,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",154,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",118,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",140,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",142,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",117,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",123,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",136,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",124,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::witx::polyfill","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::witx","",130,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",374,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",149,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::witx::polyfill","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::witx","",138,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",127,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",156,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",145,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",143,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",125,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",156,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",372,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::witx::polyfill","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmtime_wiggle::witx","",115,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",115,[[["error",3]],["witxerror",4]]],[11,"from","","",374,[[],["id",3]]],[11,"from","","",115,[[["validationerror",4]],["witxerror",4]]],[11,"from","","",141,[[["intrepr",4]],["atomtype",4]]],[11,"hash","wasmtime_wiggle::witx::polyfill","",110,[[]]],[11,"hash","wasmtime_wiggle::witx","",129,[[]]],[11,"hash","","",133,[[]]],[11,"hash","","",116,[[]]],[11,"hash","","",135,[[]]],[11,"hash","","",140,[[]]],[11,"hash","wasmtime_wiggle::witx::polyfill","",113,[[]]],[11,"hash","wasmtime_wiggle::witx","",119,[[]]],[11,"hash","wasmtime_wiggle::witx::polyfill","",108,[[]]],[11,"hash","wasmtime_wiggle::witx","",117,[[]]],[11,"hash","","",372,[[]]],[11,"hash","wasmtime_wiggle::witx::polyfill","",112,[[]]],[11,"hash","wasmtime_wiggle::witx","",127,[[]]],[11,"hash","","",130,[[]]],[11,"hash","","",136,[[]]],[11,"hash","","",121,[[]]],[11,"hash","","",132,[[]]],[11,"hash","","",137,[[]]],[11,"hash","","",139,[[]]],[11,"hash","","",374,[[]]],[11,"hash","","",123,[[]]],[11,"hash","","",126,[[]]],[11,"hash","wasmtime_wiggle::witx::polyfill","",109,[[]]],[11,"hash","wasmtime_wiggle::witx","",122,[[]]],[11,"hash","","",134,[[]]],[11,"hash","","",128,[[]]],[11,"hash","","",149,[[]]],[11,"hash","","",138,[[]]],[11,"hash","","",125,[[]]],[11,"hash","","",124,[[]]],[11,"hash","wasmtime_wiggle::witx::polyfill","",111,[[]]],[11,"hash","wasmtime_wiggle::witx","",120,[[]]],[11,"hash","","",373,[[]]],[11,"representable","","",137,[[["type",4]],["repequality",4]]],[11,"representable","","",138,[[["typeref",4]],["repequality",4]]],[11,"representable","","",116,[[["builtintype",4]],["repequality",4]]],[11,"representable","","",139,[[["uniondatatype",3]],["repequality",4]]],[11,"representable","","",134,[[["namedtype",3]],["repequality",4]]],[11,"representable","","",125,[[["intrepr",4]],["repequality",4]]],[11,"representable","","",135,[[["structdatatype",3]],["repequality",4]]],[11,"representable","","",119,[[["enumdatatype",3]],["repequality",4]]],[11,"representable","","",121,[[["flagsdatatype",3]],["repequality",4]]],[11,"to_md","wasmtime_wiggle::witx::polyfill","",110,[[],["string",3]]],[11,"to_md","","",113,[[],["string",3]]],[11,"to_md","wasmtime_wiggle::witx","",372,[[],["string",3]]],[11,"to_md","wasmtime_wiggle::witx::polyfill","",111,[[],["string",3]]],[11,"to_md","","",109,[[],["string",3]]],[11,"to_md","","",108,[[],["string",3]]],[11,"peek","wasmtime_wiggle::witx","",116,[[["cursor",3]]]],[11,"display","","",116,[[]]],[11,"clone","wasmtime_wiggle::witx::polyfill","",112,[[],["paramunknown",4]]],[11,"clone","wasmtime_wiggle::witx","",374,[[],["id",3]]],[11,"clone","","",117,[[],["definition",4]]],[11,"clone","","",373,[[],["handledatatype",3]]],[11,"clone","","",132,[[],["moduleimport",3]]],[11,"clone","","",119,[[],["enumdatatype",3]]],[11,"clone","","",372,[[],["document",3]]],[11,"clone","","",149,[[],["sizealign",3]]],[11,"clone","","",116,[[],["builtintype",4]]],[11,"clone","","",131,[[],["moduleentry",4]]],[11,"clone","","",143,[[],["coreparamsignifies",4]]],[11,"clone","","",125,[[],["intrepr",4]]],[11,"clone","","",139,[[],["uniondatatype",3]]],[11,"clone","","",144,[[],["coreparamtype",3]]],[11,"clone","wasmtime_wiggle::witx::polyfill","",109,[[],["modulepolyfill",3]]],[11,"clone","wasmtime_wiggle::witx","",137,[[],["type",4]]],[11,"clone","wasmtime_wiggle::witx::polyfill","",111,[[],["parampolyfill",3]]],[11,"clone","wasmtime_wiggle::witx","",124,[[],["intdatatype",3]]],[11,"clone","","",127,[[],["interfacefuncparam",3]]],[11,"clone","","",121,[[],["flagsdatatype",3]]],[11,"clone","wasmtime_wiggle::witx::polyfill","",110,[[],["funcpolyfill",3]]],[11,"clone","wasmtime_wiggle::witx","",153,[[],["sexpr",4]]],[11,"clone","","",123,[[],["intconst",3]]],[11,"clone","","",133,[[],["moduleimportvariant",4]]],[11,"clone","wasmtime_wiggle::witx::polyfill","",113,[[],["typepolyfill",4]]],[11,"clone","wasmtime_wiggle::witx","",145,[[],["typepassedby",4]]],[11,"clone","","",142,[[],["corefunctype",3]]],[11,"clone","","",130,[[],["moduledefinition",4]]],[11,"clone","","",154,[[],["repequality",4]]],[11,"clone","","",126,[[],["interfacefunc",3]]],[11,"clone","","",120,[[],["enumvariant",3]]],[11,"clone","","",118,[[],["entry",4]]],[11,"clone","","",135,[[],["structdatatype",3]]],[11,"clone","","",129,[[],["module",3]]],[11,"clone","","",138,[[],["typeref",4]]],[11,"clone","","",140,[[],["unionvariant",3]]],[11,"clone","","",128,[[],["interfacefuncparamposition",4]]],[11,"clone","","",114,[[],["location",3]]],[11,"clone","","",141,[[],["atomtype",4]]],[11,"clone","wasmtime_wiggle::witx::polyfill","",108,[[],["polyfill",3]]],[11,"clone","wasmtime_wiggle::witx","",134,[[],["namedtype",3]]],[11,"clone","","",152,[[],["declsyntax",4]]],[11,"clone","","",136,[[],["structmember",3]]],[11,"clone","","",151,[[],["unionlayout",3]]],[11,"clone","","",122,[[],["flagsmember",3]]],[11,"as_ref","","",374,[[]]],[11,"parse","wasmtime_wiggle::bitflags::_core::option","",24,[[["parser",3]],[["option",4],["error",3],["result",4]]]],[11,"parse","","",24,[[["parser",3]],[["result",4],["error",3],["option",4]]]],[11,"context","","",24,[[],[["error",3],["result",4]]]],[11,"with_context","","",24,[[],[["error",3],["result",4]]]],[11,"context","wasmtime_wiggle::bitflags::_core::result","",25,[[],[["error",3],["result",4]]]],[11,"with_context","","",25,[[],[["error",3],["result",4]]]],[11,"compatible_with_store","wasmtime_wiggle::bitflags::_core::option","",24,[[["weakstore",3]]]],[11,"into_abi_for_arg","","",24,[[["weakstore",3]]]],[11,"from_abi","","",24,[[["weakstore",3]],[["externref",3],["option",4]]]],[11,"valtype","","",24,[[],[["option",4],["valtype",4]]]],[11,"matches","","",24,[[],[["result",4],["error",3]]]],[11,"load_from_args","","",24,[[]]],[11,"store_to_args","","",24,[[]]],[11,"compatible_with_store","","",24,[[["weakstore",3]]]],[11,"into_abi_for_arg","","",24,[[["weakstore",3]]]],[11,"from_abi","","",24,[[["weakstore",3]],[["option",4],["func",3]]]],[11,"valtype","","",24,[[],[["option",4],["valtype",4]]]],[11,"matches","","",24,[[],[["result",4],["error",3]]]],[11,"load_from_args","","",24,[[]]],[11,"store_to_args","","",24,[[]]],[11,"compatible_with_store","wasmtime_wiggle::bitflags::_core::result","",25,[[["weakstore",3]]]],[11,"into_abi_for_ret","","",25,[[["weakstore",3]]]],[11,"from_abi","","",25,[[["weakstore",3]],[["result",4],["trap",3]]]],[11,"valtype","","",25,[[],[["option",4],["valtype",4]]]],[11,"matches","","",25,[[],[["result",4],["error",3]]]],[11,"load_from_args","","",25,[[]]],[11,"store_to_args","","",25,[[]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::num","",199,[[],[["result",4],["nonzeroi32",3]]]],[11,"deserialize","","",202,[[],[["result",4],["nonzeroisize",3]]]],[11,"deserialize","","",195,[[],[["result",4],["nonzerou8",3]]]],[11,"deserialize","","",194,[[],[["result",4],["nonzerou64",3]]]],[11,"deserialize","","",197,[[],[["nonzeroi128",3],["result",4]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::result","",25,[[],[["result",4],["result",4]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::num","",4,[[],[["result",4],["wrapping",3]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::ops","",62,[[],[["bound",4],["result",4]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::num","",196,[[],[["result",4],["nonzerousize",3]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::sync::atomic","",286,[[],[["result",4],["atomicu64",3]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::num","",193,[[],[["result",4],["nonzerou32",3]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::sync::atomic","",282,[[],[["atomicu16",3],["result",4]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::num","",198,[[],[["result",4],["nonzeroi16",3]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::ops","",59,[[],[["result",4],["range",3]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::num","",192,[[],[["result",4],["nonzerou16",3]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::sync::atomic","",283,[[],[["result",4],["atomici32",3]]]],[11,"deserialize","","",277,[[],[["result",4],["atomicbool",3]]]],[11,"deserialize","","",288,[[],[["result",4],["atomicusize",3]]]],[11,"deserialize","","",280,[[],[["atomicu8",3],["result",4]]]],[11,"deserialize","","",279,[[],[["result",4],["atomici8",3]]]],[11,"deserialize","","",281,[[],[["atomici16",3],["result",4]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::ops","",212,[[],[["rangeinclusive",3],["result",4]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::sync::atomic","",284,[[],[["result",4],["atomicu32",3]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::time","",352,[[],[["result",4],["duration",3]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::cell","",217,[[],[["result",4],["cell",3]]]],[11,"deserialize","","",218,[[],[["refcell",3],["result",4]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::sync::atomic","",285,[[],[["atomici64",3],["result",4]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::num","",201,[[],[["nonzeroi8",3],["result",4]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::sync::atomic","",287,[[],[["result",4],["atomicisize",3]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::num","",200,[[],[["nonzeroi64",3],["result",4]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::cmp","",29,[[],[["result",4],["reverse",3]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::option","",24,[[],[["result",4],["option",4]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::marker","",209,[[],[["result",4],["phantomdata",3]]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::num","",191,[[],[["nonzerou128",3],["result",4]]]],[11,"custom","wasmtime_wiggle::bitflags::_core::fmt","",289,[[],["error",3]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::num","",201,[[],["result",4]]],[11,"serialize","","",198,[[],["result",4]]],[11,"serialize","","",194,[[],["result",4]]],[11,"serialize","","",196,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::result","",25,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::sync::atomic","",287,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::num","",199,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::sync::atomic","",279,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::cell","",217,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::sync::atomic","",282,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::option","",24,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::num","",195,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::ops","",59,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::fmt","",291,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::cmp","",29,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::num","",192,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::ops","",212,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::marker","",209,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::num","",191,[[],["result",4]]],[11,"serialize","","",193,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::time","",352,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::sync::atomic","",284,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::num","",197,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::sync::atomic","",280,[[],["result",4]]],[11,"serialize","","",288,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::ops","",62,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::sync::atomic","",283,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::num","",202,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::sync::atomic","",285,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::num","",200,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::sync::atomic","",277,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::cell","",218,[[],["result",4]]],[11,"serialize","wasmtime_wiggle::bitflags::_core::sync::atomic","",281,[[],["result",4]]],[11,"serialize","","",286,[[],["result",4]]],[11,"deserialize","wasmtime_wiggle::bitflags::_core::marker","",209,[[],["result",4]]],[11,"from","wasmtime_wiggle::bitflags::_core::ops","",59,[[["match",3]],["range",3]]],[11,"from","","",59,[[["match",3]],["range",3]]],[11,"context","wasmtime_wiggle::bitflags::_core::result","",25,[[],[["context",3],["result",4]]]],[11,"from","wasmtime_wiggle::bitflags::_core::num","",193,[[["opcode",4]],["nonzerou32",3]]],[11,"parse","wasmtime_wiggle::bitflags::_core::option","",24,[[["parser",3]],[["option",4],["result",4],["parseerror",3]]]],[11,"peeking_next","wasmtime_wiggle::bitflags::_core::iter","",236,[[],["option",4]]],[11,"peeking_next","wasmtime_wiggle::bitflags::_core::str","",331,[[],["option",4]]],[11,"peeking_next","wasmtime_wiggle::bitflags::_core::result","",274,[[],["option",4]]],[11,"peeking_next","wasmtime_wiggle::bitflags::_core::slice","",302,[[],["option",4]]],[11,"peeking_next","wasmtime_wiggle::bitflags::_core::iter","",257,[[],["option",4]]],[11,"peeking_next","wasmtime_wiggle::bitflags::_core::str","",333,[[],["option",4]]],[11,"peeking_next","wasmtime_wiggle::bitflags::_core::option","",267,[[],["option",4]]],[11,"peeking_next","wasmtime_wiggle::bitflags::_core::iter","",258,[[],["option",4]]],[11,"peeking_next","wasmtime_wiggle::bitflags::_core::str","",332,[[],["option",4]]],[11,"try_from","wasmtime_wiggle::bitflags::_core::option","",24,[[["tableelement",4]],[["result",4],["option",4]]]],[11,"from","wasmtime_wiggle::bitflags::_core::result","",25,[[["streamresult",3]],[["result",4],["mzerror",4],["mzstatus",4]]]],[11,"from","","",25,[[["streamresult",3]],[["result",4],["mzerror",4],["mzstatus",4]]]],[11,"into_par_iter","wasmtime_wiggle::bitflags::_core::ops","",59,[[]]],[11,"into_par_iter","wasmtime_wiggle::bitflags::_core::result","",25,[[]]],[11,"into_par_iter","wasmtime_wiggle::bitflags::_core::ops","",212,[[]]],[11,"into_par_iter","wasmtime_wiggle::bitflags::_core::option","",24,[[]]],[11,"from_par_iter","","",24,[[],["option",4]]],[11,"from_par_iter","wasmtime_wiggle::bitflags::_core::result","",25,[[],["result",4]]],[11,"load_consume","wasmtime_wiggle::bitflags::_core::sync::atomic","",287,[[]]],[11,"load_consume","","",286,[[]]],[11,"load_consume","","",285,[[]]],[11,"load_consume","","",279,[[]]],[11,"load_consume","","",284,[[]]],[11,"load_consume","","",281,[[]]],[11,"load_consume","","",282,[[]]],[11,"load_consume","","",278,[[]]],[11,"load_consume","","",283,[[]]],[11,"load_consume","","",277,[[]]],[11,"load_consume","","",280,[[]]],[11,"load_consume","","",288,[[]]],[11,"success","","",77,[[],["ordering",4]]],[11,"failure","","",77,[[],["ordering",4]]],[11,"parse","wasmtime_wiggle::bitflags::_core::option","",24,[[["parser",3]],[["result",4],["error",3],["option",4]]]],[11,"parse","","",24,[[["parser",3]],[["result",4],["option",4],["error",3]]]],[11,"base","wasmtime_wiggle","",183,[[]]],[11,"has_outstanding_borrows","","",183,[[]]],[11,"is_shared_borrowed","","",183,[[["region",3]]]],[11,"is_mut_borrowed","","",183,[[["region",3]]]],[11,"shared_borrow","","",183,[[["region",3]],[["result",4],["borrowhandle",3],["guesterror",4]]]],[11,"mut_borrow","","",183,[[["region",3]],[["result",4],["borrowhandle",3],["guesterror",4]]]],[11,"shared_unborrow","","",183,[[["borrowhandle",3]]]],[11,"mut_unborrow","","",183,[[["borrowhandle",3]]]],[11,"new","","Creates a new `GuestPtr` from the given `mem` and…",184,[[["guestmemory",8]],["guestptr",3]]],[11,"offset","","Returns the offset of this pointer in guest memory.",184,[[]]],[11,"mem","","Returns the guest memory that this pointer is coming from.",184,[[],["guestmemory",8]]],[11,"cast","","Casts this `GuestPtr` type to a different type.",184,[[],["guestptr",3]]],[11,"read","","Safely read a value from this pointer.",184,[[],[["result",4],["guesterror",4]]]],[11,"write","","Safely write a value to this pointer.",184,[[],[["guesterror",4],["result",4]]]],[11,"add","","Performs pointer arithmetic on this pointer, moving the…",184,[[],[["guestptr",3],["result",4],["guesterror",4]]]],[11,"as_array","","Returns a `GuestPtr` for an array of `T`s using this…",184,[[],["guestptr",3]]],[11,"offset_base","","For slices, specifically returns the relative pointer to…",184,[[]]],[11,"len","","For slices, returns the length of the slice, in elements.",184,[[]]],[11,"iter","","Returns an iterator over interior pointers.",184,[[]]],[11,"as_slice","","Attempts to create a [`GuestSlice<\'_, T>`] from this…",184,[[],[["guestslice",3],["guesterror",4],["result",4]]]],[11,"as_slice_mut","","Attempts to create a [`GuestSliceMut<\'_, T>`] from this…",184,[[],[["result",4],["guesterror",4],["guestslicemut",3]]]],[11,"copy_from_slice","","Copies the data pointed to by `slice` into this guest…",184,[[],[["guesterror",4],["result",4]]]],[11,"as_ptr","","Returns a `GuestPtr` pointing to the base of the array for…",184,[[],["guestptr",3]]],[11,"get","","",184,[[],[["guestptr",3],["option",4]]]],[11,"get_range","","",184,[[["range",3]],[["option",4],["guestptr",3]]]],[11,"offset_base","","For strings, returns the relative pointer to the base of…",184,[[]]],[11,"len","","Returns the length, in bytes, of the string.",184,[[]]],[11,"as_bytes","","Returns a raw pointer for the underlying slice of bytes…",184,[[],["guestptr",3]]],[11,"as_byte_ptr","","Returns a pointer for the underlying slice of bytes that…",184,[[],["guestptr",3]]],[11,"as_str","","Attempts to create a [`GuestStr<\'_>`] from this pointer,…",184,[[],[["guesterror",4],["result",4],["gueststr",3]]]],[11,"as_str_mut","","Attempts to create a [`GuestStrMut<\'_>`] from this…",184,[[],[["guesterror",4],["result",4],["gueststrmut",3]]]],[11,"as_str_ptr","","Returns a pointer to the string represented by a `[u8]`…",184,[[],["guestptr",3]]],[18,"MIN","wasmtime_wiggle::bitflags::_core::num","Returns the smallest value that can be represented by this…",4,null],[18,"MAX","","Returns the largest value that can be represented by this…",4,null],[11,"count_ones","","Returns the number of ones in the binary representation of…",4,[[]]],[11,"count_zeros","","Returns the number of zeros in the binary representation…",4,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",4,[[]]],[11,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"swap_bytes","","Reverses the byte order of the integer.",4,[[],["wrapping",3]]],[11,"reverse_bits","","Reverses the bit pattern of the integer.",4,[[],["wrapping",3]]],[11,"from_be","","Converts an integer from big endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"from_le","","Converts an integer from little endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"to_be","","Converts `self` to big endian from the target\'s endianness.",4,[[],["wrapping",3]]],[11,"to_le","","Converts `self` to little endian from the target\'s…",4,[[],["wrapping",3]]],[11,"pow","","Raises self to the power of `exp`, using exponentiation by…",4,[[],["wrapping",3]]],[18,"MIN","","Returns the smallest value that can be represented by this…",4,null],[18,"MAX","","Returns the largest value that can be represented by this…",4,null],[11,"count_ones","","Returns the number of ones in the binary representation of…",4,[[]]],[11,"count_zeros","","Returns the number of zeros in the binary representation…",4,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",4,[[]]],[11,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"swap_bytes","","Reverses the byte order of the integer.",4,[[],["wrapping",3]]],[11,"reverse_bits","","Reverses the bit pattern of the integer.",4,[[],["wrapping",3]]],[11,"from_be","","Converts an integer from big endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"from_le","","Converts an integer from little endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"to_be","","Converts `self` to big endian from the target\'s endianness.",4,[[],["wrapping",3]]],[11,"to_le","","Converts `self` to little endian from the target\'s…",4,[[],["wrapping",3]]],[11,"pow","","Raises self to the power of `exp`, using exponentiation by…",4,[[],["wrapping",3]]],[18,"MIN","","Returns the smallest value that can be represented by this…",4,null],[18,"MAX","","Returns the largest value that can be represented by this…",4,null],[11,"count_ones","","Returns the number of ones in the binary representation of…",4,[[]]],[11,"count_zeros","","Returns the number of zeros in the binary representation…",4,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",4,[[]]],[11,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"swap_bytes","","Reverses the byte order of the integer.",4,[[],["wrapping",3]]],[11,"reverse_bits","","Reverses the bit pattern of the integer.",4,[[],["wrapping",3]]],[11,"from_be","","Converts an integer from big endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"from_le","","Converts an integer from little endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"to_be","","Converts `self` to big endian from the target\'s endianness.",4,[[],["wrapping",3]]],[11,"to_le","","Converts `self` to little endian from the target\'s…",4,[[],["wrapping",3]]],[11,"pow","","Raises self to the power of `exp`, using exponentiation by…",4,[[],["wrapping",3]]],[18,"MIN","","Returns the smallest value that can be represented by this…",4,null],[18,"MAX","","Returns the largest value that can be represented by this…",4,null],[11,"count_ones","","Returns the number of ones in the binary representation of…",4,[[]]],[11,"count_zeros","","Returns the number of zeros in the binary representation…",4,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",4,[[]]],[11,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"swap_bytes","","Reverses the byte order of the integer.",4,[[],["wrapping",3]]],[11,"reverse_bits","","Reverses the bit pattern of the integer.",4,[[],["wrapping",3]]],[11,"from_be","","Converts an integer from big endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"from_le","","Converts an integer from little endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"to_be","","Converts `self` to big endian from the target\'s endianness.",4,[[],["wrapping",3]]],[11,"to_le","","Converts `self` to little endian from the target\'s…",4,[[],["wrapping",3]]],[11,"pow","","Raises self to the power of `exp`, using exponentiation by…",4,[[],["wrapping",3]]],[18,"MIN","","Returns the smallest value that can be represented by this…",4,null],[18,"MAX","","Returns the largest value that can be represented by this…",4,null],[11,"count_ones","","Returns the number of ones in the binary representation of…",4,[[]]],[11,"count_zeros","","Returns the number of zeros in the binary representation…",4,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",4,[[]]],[11,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"swap_bytes","","Reverses the byte order of the integer.",4,[[],["wrapping",3]]],[11,"reverse_bits","","Reverses the bit pattern of the integer.",4,[[],["wrapping",3]]],[11,"from_be","","Converts an integer from big endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"from_le","","Converts an integer from little endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"to_be","","Converts `self` to big endian from the target\'s endianness.",4,[[],["wrapping",3]]],[11,"to_le","","Converts `self` to little endian from the target\'s…",4,[[],["wrapping",3]]],[11,"pow","","Raises self to the power of `exp`, using exponentiation by…",4,[[],["wrapping",3]]],[18,"MIN","","Returns the smallest value that can be represented by this…",4,null],[18,"MAX","","Returns the largest value that can be represented by this…",4,null],[11,"count_ones","","Returns the number of ones in the binary representation of…",4,[[]]],[11,"count_zeros","","Returns the number of zeros in the binary representation…",4,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",4,[[]]],[11,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"swap_bytes","","Reverses the byte order of the integer.",4,[[],["wrapping",3]]],[11,"reverse_bits","","Reverses the bit pattern of the integer.",4,[[],["wrapping",3]]],[11,"from_be","","Converts an integer from big endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"from_le","","Converts an integer from little endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"to_be","","Converts `self` to big endian from the target\'s endianness.",4,[[],["wrapping",3]]],[11,"to_le","","Converts `self` to little endian from the target\'s…",4,[[],["wrapping",3]]],[11,"pow","","Raises self to the power of `exp`, using exponentiation by…",4,[[],["wrapping",3]]],[18,"MIN","","Returns the smallest value that can be represented by this…",4,null],[18,"MAX","","Returns the largest value that can be represented by this…",4,null],[11,"count_ones","","Returns the number of ones in the binary representation of…",4,[[]]],[11,"count_zeros","","Returns the number of zeros in the binary representation…",4,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",4,[[]]],[11,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"swap_bytes","","Reverses the byte order of the integer.",4,[[],["wrapping",3]]],[11,"reverse_bits","","Reverses the bit pattern of the integer.",4,[[],["wrapping",3]]],[11,"from_be","","Converts an integer from big endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"from_le","","Converts an integer from little endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"to_be","","Converts `self` to big endian from the target\'s endianness.",4,[[],["wrapping",3]]],[11,"to_le","","Converts `self` to little endian from the target\'s…",4,[[],["wrapping",3]]],[11,"pow","","Raises self to the power of `exp`, using exponentiation by…",4,[[],["wrapping",3]]],[18,"MIN","","Returns the smallest value that can be represented by this…",4,null],[18,"MAX","","Returns the largest value that can be represented by this…",4,null],[11,"count_ones","","Returns the number of ones in the binary representation of…",4,[[]]],[11,"count_zeros","","Returns the number of zeros in the binary representation…",4,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",4,[[]]],[11,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"swap_bytes","","Reverses the byte order of the integer.",4,[[],["wrapping",3]]],[11,"reverse_bits","","Reverses the bit pattern of the integer.",4,[[],["wrapping",3]]],[11,"from_be","","Converts an integer from big endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"from_le","","Converts an integer from little endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"to_be","","Converts `self` to big endian from the target\'s endianness.",4,[[],["wrapping",3]]],[11,"to_le","","Converts `self` to little endian from the target\'s…",4,[[],["wrapping",3]]],[11,"pow","","Raises self to the power of `exp`, using exponentiation by…",4,[[],["wrapping",3]]],[18,"MIN","","Returns the smallest value that can be represented by this…",4,null],[18,"MAX","","Returns the largest value that can be represented by this…",4,null],[11,"count_ones","","Returns the number of ones in the binary representation of…",4,[[]]],[11,"count_zeros","","Returns the number of zeros in the binary representation…",4,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",4,[[]]],[11,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"swap_bytes","","Reverses the byte order of the integer.",4,[[],["wrapping",3]]],[11,"reverse_bits","","Reverses the bit pattern of the integer.",4,[[],["wrapping",3]]],[11,"from_be","","Converts an integer from big endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"from_le","","Converts an integer from little endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"to_be","","Converts `self` to big endian from the target\'s endianness.",4,[[],["wrapping",3]]],[11,"to_le","","Converts `self` to little endian from the target\'s…",4,[[],["wrapping",3]]],[11,"pow","","Raises self to the power of `exp`, using exponentiation by…",4,[[],["wrapping",3]]],[18,"MIN","","Returns the smallest value that can be represented by this…",4,null],[18,"MAX","","Returns the largest value that can be represented by this…",4,null],[11,"count_ones","","Returns the number of ones in the binary representation of…",4,[[]]],[11,"count_zeros","","Returns the number of zeros in the binary representation…",4,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",4,[[]]],[11,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"swap_bytes","","Reverses the byte order of the integer.",4,[[],["wrapping",3]]],[11,"reverse_bits","","Reverses the bit pattern of the integer.",4,[[],["wrapping",3]]],[11,"from_be","","Converts an integer from big endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"from_le","","Converts an integer from little endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"to_be","","Converts `self` to big endian from the target\'s endianness.",4,[[],["wrapping",3]]],[11,"to_le","","Converts `self` to little endian from the target\'s…",4,[[],["wrapping",3]]],[11,"pow","","Raises self to the power of `exp`, using exponentiation by…",4,[[],["wrapping",3]]],[18,"MIN","","Returns the smallest value that can be represented by this…",4,null],[18,"MAX","","Returns the largest value that can be represented by this…",4,null],[11,"count_ones","","Returns the number of ones in the binary representation of…",4,[[]]],[11,"count_zeros","","Returns the number of zeros in the binary representation…",4,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",4,[[]]],[11,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"swap_bytes","","Reverses the byte order of the integer.",4,[[],["wrapping",3]]],[11,"reverse_bits","","Reverses the bit pattern of the integer.",4,[[],["wrapping",3]]],[11,"from_be","","Converts an integer from big endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"from_le","","Converts an integer from little endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"to_be","","Converts `self` to big endian from the target\'s endianness.",4,[[],["wrapping",3]]],[11,"to_le","","Converts `self` to little endian from the target\'s…",4,[[],["wrapping",3]]],[11,"pow","","Raises self to the power of `exp`, using exponentiation by…",4,[[],["wrapping",3]]],[18,"MIN","","Returns the smallest value that can be represented by this…",4,null],[18,"MAX","","Returns the largest value that can be represented by this…",4,null],[11,"count_ones","","Returns the number of ones in the binary representation of…",4,[[]]],[11,"count_zeros","","Returns the number of zeros in the binary representation…",4,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",4,[[]]],[11,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",4,[[],["wrapping",3]]],[11,"swap_bytes","","Reverses the byte order of the integer.",4,[[],["wrapping",3]]],[11,"reverse_bits","","Reverses the bit pattern of the integer.",4,[[],["wrapping",3]]],[11,"from_be","","Converts an integer from big endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"from_le","","Converts an integer from little endian to the target\'s…",4,[[["wrapping",3]],["wrapping",3]]],[11,"to_be","","Converts `self` to big endian from the target\'s endianness.",4,[[],["wrapping",3]]],[11,"to_le","","Converts `self` to little endian from the target\'s…",4,[[],["wrapping",3]]],[11,"pow","","Raises self to the power of `exp`, using exponentiation by…",4,[[],["wrapping",3]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",4,[[]]],[11,"abs","","Computes the absolute value of `self`, wrapping around at…",4,[[],["wrapping",3]]],[11,"signum","","Returns a number representing sign of `self`.",4,[[],["wrapping",3]]],[11,"is_positive","","Returns `true` if `self` is positive and `false` if the…",4,[[]]],[11,"is_negative","","Returns `true` if `self` is negative and `false` if the…",4,[[]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",4,[[]]],[11,"abs","","Computes the absolute value of `self`, wrapping around at…",4,[[],["wrapping",3]]],[11,"signum","","Returns a number representing sign of `self`.",4,[[],["wrapping",3]]],[11,"is_positive","","Returns `true` if `self` is positive and `false` if the…",4,[[]]],[11,"is_negative","","Returns `true` if `self` is negative and `false` if the…",4,[[]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",4,[[]]],[11,"abs","","Computes the absolute value of `self`, wrapping around at…",4,[[],["wrapping",3]]],[11,"signum","","Returns a number representing sign of `self`.",4,[[],["wrapping",3]]],[11,"is_positive","","Returns `true` if `self` is positive and `false` if the…",4,[[]]],[11,"is_negative","","Returns `true` if `self` is negative and `false` if the…",4,[[]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",4,[[]]],[11,"abs","","Computes the absolute value of `self`, wrapping around at…",4,[[],["wrapping",3]]],[11,"signum","","Returns a number representing sign of `self`.",4,[[],["wrapping",3]]],[11,"is_positive","","Returns `true` if `self` is positive and `false` if the…",4,[[]]],[11,"is_negative","","Returns `true` if `self` is negative and `false` if the…",4,[[]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",4,[[]]],[11,"abs","","Computes the absolute value of `self`, wrapping around at…",4,[[],["wrapping",3]]],[11,"signum","","Returns a number representing sign of `self`.",4,[[],["wrapping",3]]],[11,"is_positive","","Returns `true` if `self` is positive and `false` if the…",4,[[]]],[11,"is_negative","","Returns `true` if `self` is negative and `false` if the…",4,[[]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",4,[[]]],[11,"abs","","Computes the absolute value of `self`, wrapping around at…",4,[[],["wrapping",3]]],[11,"signum","","Returns a number representing sign of `self`.",4,[[],["wrapping",3]]],[11,"is_positive","","Returns `true` if `self` is positive and `false` if the…",4,[[]]],[11,"is_negative","","Returns `true` if `self` is negative and `false` if the…",4,[[]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",4,[[]]],[11,"is_power_of_two","","Returns `true` if and only if `self == 2^k` for some `k`.",4,[[]]],[11,"next_power_of_two","","Returns the smallest power of two greater than or equal to…",4,[[],["wrapping",3]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",4,[[]]],[11,"is_power_of_two","","Returns `true` if and only if `self == 2^k` for some `k`.",4,[[]]],[11,"next_power_of_two","","Returns the smallest power of two greater than or equal to…",4,[[],["wrapping",3]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",4,[[]]],[11,"is_power_of_two","","Returns `true` if and only if `self == 2^k` for some `k`.",4,[[]]],[11,"next_power_of_two","","Returns the smallest power of two greater than or equal to…",4,[[],["wrapping",3]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",4,[[]]],[11,"is_power_of_two","","Returns `true` if and only if `self == 2^k` for some `k`.",4,[[]]],[11,"next_power_of_two","","Returns the smallest power of two greater than or equal to…",4,[[],["wrapping",3]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",4,[[]]],[11,"is_power_of_two","","Returns `true` if and only if `self == 2^k` for some `k`.",4,[[]]],[11,"next_power_of_two","","Returns the smallest power of two greater than or equal to…",4,[[],["wrapping",3]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",4,[[]]],[11,"is_power_of_two","","Returns `true` if and only if `self == 2^k` for some `k`.",4,[[]]],[11,"next_power_of_two","","Returns the smallest power of two greater than or equal to…",4,[[],["wrapping",3]]],[11,"kind","","Outputs the detailed cause of parsing an integer failing.",190,[[],["interrorkind",4]]],[11,"new_unchecked","","Creates a non-zero without checking the value.",191,[[],["nonzerou128",3]]],[11,"new","","Creates a non-zero if the given value is not zero.",191,[[],[["nonzerou128",3],["option",4]]]],[11,"get","","Returns the value as a primitive type.",191,[[]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",191,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",191,[[]]],[11,"new_unchecked","","Creates a non-zero without checking the value.",192,[[],["nonzerou16",3]]],[11,"new","","Creates a non-zero if the given value is not zero.",192,[[],[["nonzerou16",3],["option",4]]]],[11,"get","","Returns the value as a primitive type.",192,[[]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",192,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",192,[[]]],[11,"new_unchecked","","Creates a non-zero without checking the value.",193,[[],["nonzerou32",3]]],[11,"new","","Creates a non-zero if the given value is not zero.",193,[[],[["nonzerou32",3],["option",4]]]],[11,"get","","Returns the value as a primitive type.",193,[[]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",193,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",193,[[]]],[11,"new_unchecked","","Creates a non-zero without checking the value.",194,[[],["nonzerou64",3]]],[11,"new","","Creates a non-zero if the given value is not zero.",194,[[],[["option",4],["nonzerou64",3]]]],[11,"get","","Returns the value as a primitive type.",194,[[]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",194,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",194,[[]]],[11,"new_unchecked","","Creates a non-zero without checking the value.",195,[[],["nonzerou8",3]]],[11,"new","","Creates a non-zero if the given value is not zero.",195,[[],[["option",4],["nonzerou8",3]]]],[11,"get","","Returns the value as a primitive type.",195,[[]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",195,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",195,[[]]],[11,"new_unchecked","","Creates a non-zero without checking the value.",196,[[],["nonzerousize",3]]],[11,"new","","Creates a non-zero if the given value is not zero.",196,[[],[["nonzerousize",3],["option",4]]]],[11,"get","","Returns the value as a primitive type.",196,[[]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",196,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",196,[[]]],[11,"new_unchecked","","Creates a non-zero without checking the value.",197,[[],["nonzeroi128",3]]],[11,"new","","Creates a non-zero if the given value is not zero.",197,[[],[["nonzeroi128",3],["option",4]]]],[11,"get","","Returns the value as a primitive type.",197,[[]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",197,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",197,[[]]],[11,"new_unchecked","","Creates a non-zero without checking the value.",198,[[],["nonzeroi16",3]]],[11,"new","","Creates a non-zero if the given value is not zero.",198,[[],[["option",4],["nonzeroi16",3]]]],[11,"get","","Returns the value as a primitive type.",198,[[]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",198,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",198,[[]]],[11,"new_unchecked","","Creates a non-zero without checking the value.",199,[[],["nonzeroi32",3]]],[11,"new","","Creates a non-zero if the given value is not zero.",199,[[],[["option",4],["nonzeroi32",3]]]],[11,"get","","Returns the value as a primitive type.",199,[[]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",199,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",199,[[]]],[11,"new_unchecked","","Creates a non-zero without checking the value.",200,[[],["nonzeroi64",3]]],[11,"new","","Creates a non-zero if the given value is not zero.",200,[[],[["option",4],["nonzeroi64",3]]]],[11,"get","","Returns the value as a primitive type.",200,[[]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",200,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",200,[[]]],[11,"new_unchecked","","Creates a non-zero without checking the value.",201,[[],["nonzeroi8",3]]],[11,"new","","Creates a non-zero if the given value is not zero.",201,[[],[["nonzeroi8",3],["option",4]]]],[11,"get","","Returns the value as a primitive type.",201,[[]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",201,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",201,[[]]],[11,"new_unchecked","","Creates a non-zero without checking the value.",202,[[],["nonzeroisize",3]]],[11,"new","","Creates a non-zero if the given value is not zero.",202,[[],[["option",4],["nonzeroisize",3]]]],[11,"get","","Returns the value as a primitive type.",202,[[]]],[11,"leading_zeros","","Returns the number of leading zeros in the binary…",202,[[]]],[11,"trailing_zeros","","Returns the number of trailing zeros in the binary…",202,[[]]],[11,"is_some","wasmtime_wiggle::bitflags::_core::option","Returns `true` if the option is a [`Some`] value.",24,[[]]],[11,"is_none","","Returns `true` if the option is a [`None`] value.",24,[[]]],[11,"contains","","Returns `true` if the option is a [`Some`] value…",24,[[]]],[11,"as_ref","","Converts from `&Option<T>` to `Option<&T>`.",24,[[],["option",4]]],[11,"as_mut","","Converts from `&mut Option<T>` to `Option<&mut T>`.",24,[[],["option",4]]],[11,"as_pin_ref","","Converts from [`Pin`]`<&Option<T>>` to…",24,[[["pin",3],["option",4]],[["pin",3],["option",4]]]],[11,"as_pin_mut","","Converts from [`Pin`]`<&mut Option<T>>` to…",24,[[["pin",3],["option",4]],[["option",4],["pin",3]]]],[11,"expect","","Returns the contained [`Some`] value, consuming the `self`…",24,[[]]],[11,"unwrap","","Returns the contained [`Some`] value, consuming the `self`…",24,[[]]],[11,"unwrap_or","","Returns the contained [`Some`] value or a provided default.",24,[[]]],[11,"unwrap_or_else","","Returns the contained [`Some`] value or computes it from a…",24,[[]]],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function…",24,[[],["option",4]]],[11,"map_or","","Applies a function to the contained value (if any), or…",24,[[]]],[11,"map_or_else","","Applies a function to the contained value (if any), or…",24,[[]]],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping…",24,[[],["result",4]]],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping…",24,[[],["result",4]]],[11,"insert","","Inserts `value` into the option then returns a mutable…",24,[[]]],[11,"iter","","Returns an iterator over the possibly contained value.",24,[[],["iter",3]]],[11,"iter_mut","","Returns a mutable iterator over the possibly contained…",24,[[],["itermut",3]]],[11,"and","","Returns [`None`] if the option is [`None`], otherwise…",24,[[["option",4]],["option",4]]],[11,"and_then","","Returns [`None`] if the option is [`None`], otherwise…",24,[[],["option",4]]],[11,"filter","","Returns [`None`] if the option is [`None`], otherwise…",24,[[],["option",4]]],[11,"or","","Returns the option if it contains a value, otherwise…",24,[[["option",4]],["option",4]]],[11,"or_else","","Returns the option if it contains a value, otherwise calls…",24,[[],["option",4]]],[11,"xor","","Returns [`Some`] if exactly one of `self`, `optb` is…",24,[[["option",4]],["option",4]]],[11,"get_or_insert","","Inserts `value` into the option if it is [`None`], then…",24,[[]]],[11,"get_or_insert_with","","Inserts a value computed from `f` into the option if it is…",24,[[]]],[11,"take","","Takes the value out of the option, leaving a [`None`] in…",24,[[],["option",4]]],[11,"replace","","Replaces the actual value in the option by the value given…",24,[[],["option",4]]],[11,"zip","","Zips `self` with another `Option`.",24,[[["option",4]],["option",4]]],[11,"zip_with","","Zips `self` and another `Option` with function `f`.",24,[[["option",4]],["option",4]]],[11,"copied","","Maps an `Option<&T>` to an `Option<T>` by copying the…",24,[[],["option",4]]],[11,"copied","","Maps an `Option<&mut T>` to an `Option<T>` by copying the…",24,[[],["option",4]]],[11,"cloned","","Maps an `Option<&T>` to an `Option<T>` by cloning the…",24,[[],["option",4]]],[11,"cloned","","Maps an `Option<&mut T>` to an `Option<T>` by cloning the…",24,[[],["option",4]]],[11,"expect_none","","Consumes `self` while expecting [`None`] and returning…",24,[[]]],[11,"unwrap_none","","Consumes `self` while expecting [`None`] and returning…",24,[[]]],[11,"unwrap_or_default","","Returns the contained [`Some`] value or a default",24,[[]]],[11,"as_deref","","Converts from `Option<T>` (or `&Option<T>`) to…",24,[[],["option",4]]],[11,"as_deref_mut","","Converts from `Option<T>` (or `&mut Option<T>`) to…",24,[[],["option",4]]],[11,"transpose","","Transposes an `Option` of a [`Result`] into a [`Result`]…",24,[[],[["result",4],["option",4]]]],[11,"flatten","","Converts from `Option<Option<T>>` to `Option<T>`",24,[[],["option",4]]],[11,"is_ok","wasmtime_wiggle::bitflags::_core::result","Returns `true` if the result is [`Ok`].",25,[[]]],[11,"is_err","","Returns `true` if the result is [`Err`].",25,[[]]],[11,"contains","","Returns `true` if the result is an [`Ok`] value containing…",25,[[]]],[11,"contains_err","","Returns `true` if the result is an [`Err`] value…",25,[[]]],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`.",25,[[],["option",4]]],[11,"err","","Converts from `Result<T, E>` to `Option<E>`.",25,[[],["option",4]]],[11,"as_ref","","Converts from `&Result<T, E>` to `Result<&T, &E>`.",25,[[],["result",4]]],[11,"as_mut","","Converts from `&mut Result<T, E>` to `Result<&mut T, &mut…",25,[[],["result",4]]],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a…",25,[[],["result",4]]],[11,"map_or","","Applies a function to the contained value (if [`Ok`]), or…",25,[[]]],[11,"map_or_else","","Maps a `Result<T, E>` to `U` by applying a function to a…",25,[[]]],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a…",25,[[],["result",4]]],[11,"iter","","Returns an iterator over the possibly contained value.",25,[[],["iter",3]]],[11,"iter_mut","","Returns a mutable iterator over the possibly contained…",25,[[],["itermut",3]]],[11,"and","","Returns `res` if the result is [`Ok`], otherwise returns…",25,[[["result",4]],["result",4]]],[11,"and_then","","Calls `op` if the result is [`Ok`], otherwise returns the…",25,[[],["result",4]]],[11,"or","","Returns `res` if the result is [`Err`], otherwise returns…",25,[[["result",4]],["result",4]]],[11,"or_else","","Calls `op` if the result is [`Err`], otherwise returns the…",25,[[],["result",4]]],[11,"unwrap_or","","Returns the contained [`Ok`] value or a provided default.",25,[[]]],[11,"unwrap_or_else","","Returns the contained [`Ok`] value or computes it from a…",25,[[]]],[11,"copied","","Maps a `Result<&T, E>` to a `Result<T, E>` by copying the…",25,[[],["result",4]]],[11,"copied","","Maps a `Result<&mut T, E>` to a `Result<T, E>` by copying…",25,[[],["result",4]]],[11,"cloned","","Maps a `Result<&T, E>` to a `Result<T, E>` by cloning the…",25,[[],["result",4]]],[11,"cloned","","Maps a `Result<&mut T, E>` to a `Result<T, E>` by cloning…",25,[[],["result",4]]],[11,"expect","","Returns the contained [`Ok`] value, consuming the `self`…",25,[[]]],[11,"unwrap","","Returns the contained [`Ok`] value, consuming the `self`…",25,[[]]],[11,"expect_err","","Returns the contained [`Err`] value, consuming the `self`…",25,[[]]],[11,"unwrap_err","","Returns the contained [`Err`] value, consuming the `self`…",25,[[]]],[11,"unwrap_or_default","","Returns the contained [`Ok`] value or a default",25,[[]]],[11,"into_ok","","Returns the contained [`Ok`] value, but never panics.",25,[[]]],[11,"as_deref","","Converts from `Result<T, E>` (or `&Result<T, E>`) to…",25,[[],["result",4]]],[11,"as_deref_mut","","Converts from `Result<T, E>` (or `&mut Result<T, E>`) to…",25,[[],["result",4]]],[11,"transpose","","Transposes a `Result` of an `Option` into an `Option` of a…",25,[[],[["option",4],["result",4]]]],[11,"flatten","","Converts from `Result<Result<T, E>, E>` to `Result<T, E>`",25,[[],["result",4]]],[11,"new","wasmtime_wiggle::bitflags::_core::mem","Wrap a value to be manually dropped.",205,[[],["manuallydrop",3]]],[11,"into_inner","","Extracts the value from the `ManuallyDrop` container.",205,[[["manuallydrop",3]]]],[11,"take","","Takes the value from the `ManuallyDrop<T>` container out.",205,[[["manuallydrop",3]]]],[11,"drop","","Manually drops the contained value. This is exactly…",205,[[["manuallydrop",3]]]],[11,"new","","Creates a new `MaybeUninit<T>` initialized with the given…",206,[[],["maybeuninit",19]]],[11,"uninit","","Creates a new `MaybeUninit<T>` in an uninitialized state.",206,[[],["maybeuninit",19]]],[11,"uninit_array","","Create a new array of `MaybeUninit<T>` items, in an…",206,[[]]],[11,"zeroed","","Creates a new `MaybeUninit<T>` in an uninitialized state,…",206,[[],["maybeuninit",19]]],[11,"write","","Sets the value of the `MaybeUninit<T>`. This overwrites…",206,[[]]],[11,"as_ptr","","Gets a pointer to the contained value. Reading from this…",206,[[]]],[11,"as_mut_ptr","","Gets a mutable pointer to the contained value. Reading…",206,[[]]],[11,"assume_init","","Extracts the value from the `MaybeUninit<T>` container.…",206,[[]]],[11,"assume_init_read","","Reads the value from the `MaybeUninit<T>` container. The…",206,[[]]],[11,"assume_init_drop","","Drops the contained value in place.",206,[[]]],[11,"assume_init_ref","","Gets a shared reference to the contained value.",206,[[]]],[11,"assume_init_mut","","Gets a mutable (unique) reference to the contained value.",206,[[]]],[11,"slice_assume_init_ref","","Assuming all the elements are initialized, get a slice to…",206,[[]]],[11,"slice_assume_init_mut","","Assuming all the elements are initialized, get a mutable…",206,[[]]],[11,"slice_as_ptr","","Gets a pointer to the first element of the array.",206,[[]]],[11,"slice_as_mut_ptr","","Gets a mutable pointer to the first element of the array.",206,[[]]],[11,"dangling","wasmtime_wiggle::bitflags::_core::ptr","Creates a new `NonNull` that is dangling, but well-aligned.",207,[[],["nonnull",3]]],[11,"as_uninit_ref","","Returns a shared references to the value. In contrast to…",207,[[],["maybeuninit",19]]],[11,"as_uninit_mut","","Returns a unique references to the value. In contrast to…",207,[[],["maybeuninit",19]]],[11,"new_unchecked","","Creates a new `NonNull`.",207,[[],["nonnull",3]]],[11,"new","","Creates a new `NonNull` if `ptr` is non-null.",207,[[],[["option",4],["nonnull",3]]]],[11,"as_ptr","","Acquires the underlying `*mut` pointer.",207,[[]]],[11,"as_ref","","Returns a shared reference to the value. If the value may…",207,[[]]],[11,"as_mut","","Returns a unique reference to the value. If the value may…",207,[[]]],[11,"cast","","Casts to a pointer of another type.",207,[[],["nonnull",3]]],[11,"slice_from_raw_parts","","Creates a non-null raw slice from a thin pointer and a…",207,[[["nonnull",3]],["nonnull",3]]],[11,"len","","Returns the length of a non-null raw slice.",207,[[]]],[11,"as_non_null_ptr","","Returns a non-null pointer to the slice\'s buffer.",207,[[],["nonnull",3]]],[11,"as_mut_ptr","","Returns a raw pointer to the slice\'s buffer.",207,[[]]],[11,"as_uninit_slice","","Returns a shared reference to a slice of possibly…",207,[[]]],[11,"as_uninit_slice_mut","","Returns a unique reference to a slice of possibly…",207,[[]]],[11,"get_unchecked_mut","","Returns a raw pointer to an element or subslice, without…",207,[[],["nonnull",3]]],[11,"reverse","wasmtime_wiggle::bitflags::_core::cmp","Reverses the `Ordering`.",28,[[],["ordering",4]]],[11,"then","","Chains two orderings.",28,[[["ordering",4]],["ordering",4]]],[11,"then_with","","Chains the ordering with the given function.",28,[[],["ordering",4]]],[11,"contains","wasmtime_wiggle::bitflags::_core::ops","Returns `true` if `item` is contained in the range.",59,[[]]],[11,"is_empty","","Returns `true` if the range contains no items.",59,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",60,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",61,[[]]],[11,"cloned","","Map a `Bound<&T>` to a `Bound<T>` by cloning the contents…",62,[[],["bound",4]]],[11,"new","","Creates a new inclusive range. Equivalent to writing…",212,[[],["rangeinclusive",3]]],[11,"start","","Returns the lower bound of the range (inclusive).",212,[[]]],[11,"end","","Returns the upper bound of the range (inclusive).",212,[[]]],[11,"into_inner","","Destructures the `RangeInclusive` into (lower bound, upper…",212,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",212,[[]]],[11,"is_empty","","Returns `true` if the range contains no items.",212,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",64,[[]]],[11,"is_break","","Returns `true` if this is a `Break` variant.",68,[[]]],[11,"is_continue","","Returns `true` if this is a `Continue` variant.",68,[[]]],[11,"break_value","","Converts the `ControlFlow` into an `Option` which is…",68,[[],["option",4]]],[11,"from_try","","Create a `ControlFlow` from any type implementing `Try`.",68,[[],["controlflow",4]]],[11,"into_try","","Convert a `ControlFlow` into any type implementing `Try`;",68,[[]]],[18,"CONTINUE","","It\'s frequently the case that there\'s no value needed with…",68,null],[18,"BREAK","","APIs like `try_for_each` don\'t need values with `Break`,…",68,null],[11,"is","wasmtime_wiggle::bitflags::_core::any","Returns `true` if the boxed type is the same as `T`.",69,[[]]],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type…",69,[[],["option",4]]],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is…",69,[[],["option",4]]],[11,"is","","Forwards to the method defined on the type `Any`.",69,[[]]],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",69,[[],["option",4]]],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",69,[[],["option",4]]],[11,"is","","Forwards to the method defined on the type `Any`.",69,[[]]],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",69,[[],["option",4]]],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",69,[[],["option",4]]],[11,"of","","Returns the `TypeId` of the type this generic function has…",213,[[],["typeid",3]]],[11,"new","wasmtime_wiggle::bitflags::_core::array","Creates a new iterator over the given `array`.",215,[[],["intoiter",3]]],[11,"as_slice","","Returns an immutable slice of all elements that have not…",215,[[]]],[11,"as_mut_slice","","Returns a mutable slice of all elements that have not been…",215,[[]]],[11,"new","wasmtime_wiggle::bitflags::_core::cell","Creates a new `Cell` containing the given value.",217,[[],["cell",3]]],[11,"set","","Sets the contained value.",217,[[]]],[11,"swap","","Swaps the values of two Cells. Difference with…",217,[[["cell",3]]]],[11,"replace","","Replaces the contained value, and returns it.",217,[[]]],[11,"into_inner","","Unwraps the value.",217,[[]]],[11,"get","","Returns a copy of the contained value.",217,[[]]],[11,"update","","Updates the contained value using a function and returns…",217,[[]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this cell.",217,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",217,[[]]],[11,"from_mut","","Returns a `&Cell<T>` from a `&mut T`",217,[[],["cell",3]]],[11,"take","","Takes the value of the cell, leaving `Default::default()`…",217,[[]]],[11,"as_slice_of_cells","","Returns a `&[Cell<T>]` from a `&Cell<[T]>`",217,[[]]],[11,"new","","Creates a new `RefCell` containing `value`.",218,[[],["refcell",3]]],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",218,[[]]],[11,"replace","","Replaces the wrapped value with a new one, returning the…",218,[[]]],[11,"replace_with","","Replaces the wrapped value with a new one computed from…",218,[[]]],[11,"swap","","Swaps the wrapped value of `self` with the wrapped value…",218,[[["refcell",3]]]],[11,"borrow","","Immutably borrows the wrapped value.",218,[[],["ref",3]]],[11,"try_borrow","","Immutably borrows the wrapped value, returning an error if…",218,[[],[["result",4],["ref",3],["borrowerror",3]]]],[11,"borrow_mut","","Mutably borrows the wrapped value.",218,[[],["refmut",3]]],[11,"try_borrow_mut","","Mutably borrows the wrapped value, returning an error if…",218,[[],[["refmut",3],["result",4],["borrowmuterror",3]]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this cell.",218,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",218,[[]]],[11,"undo_leak","","Undo the effect of leaked guards on the borrow state of…",218,[[]]],[11,"try_borrow_unguarded","","Immutably borrows the wrapped value, returning an error if…",218,[[],[["borrowerror",3],["result",4]]]],[11,"take","","Takes the wrapped value, leaving `Default::default()` in…",218,[[]]],[11,"clone","","Copies a `Ref`.",221,[[["ref",3]],["ref",3]]],[11,"map","","Makes a new `Ref` for a component of the borrowed data.",221,[[["ref",3]],["ref",3]]],[11,"map_split","","Splits a `Ref` into multiple `Ref`s for different…",221,[[["ref",3]]]],[11,"leak","","Convert into a reference to the underlying data.",221,[[["ref",3]]]],[11,"map","","Makes a new `RefMut` for a component of the borrowed data,…",222,[[["refmut",3]],["refmut",3]]],[11,"map_split","","Splits a `RefMut` into multiple `RefMut`s for different…",222,[[["refmut",3]]]],[11,"leak","","Convert into a mutable reference to the underlying data.",222,[[["refmut",3]]]],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap…",223,[[],["unsafecell",3]]],[11,"into_inner","","Unwraps the value.",223,[[]]],[11,"get","","Gets a mutable pointer to the wrapped value.",223,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",223,[[]]],[11,"raw_get","","Gets a mutable pointer to the wrapped value. The…",223,[[]]],[11,"unpaired_surrogate","wasmtime_wiggle::bitflags::_core::char","Returns the unpaired surrogate which caused this error.",232,[[]]],[11,"as_va_list","wasmtime_wiggle::bitflags::_core::ffi","Convert a `VaListImpl` into a `VaList` that is…",234,[[],["valist",3]]],[11,"arg","","Advance to the next arg.",234,[[]]],[11,"with_copy","","Copies the `va_list` at the current location.",234,[[]]],[11,"peek","wasmtime_wiggle::bitflags::_core::iter","Returns a reference to the next() value without advancing…",257,[[],["option",4]]],[11,"peek_mut","","Returns a mutable reference to the next() value without…",257,[[],["option",4]]],[11,"next_if","","Consume and return the next value of this iterator if a…",257,[[],["option",4]]],[11,"next_if_eq","","Consume and return the next item if it is equal to…",257,[[],["option",4]]],[11,"new","wasmtime_wiggle::bitflags::_core::lazy","Creates a new empty cell.",265,[[],["oncecell",3]]],[11,"get","","Gets the reference to the underlying value.",265,[[],["option",4]]],[11,"get_mut","","Gets the mutable reference to the underlying value.",265,[[],["option",4]]],[11,"set","","Sets the contents of the cell to `value`.",265,[[],["result",4]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with `f` if…",265,[[]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with `f` if…",265,[[],["result",4]]],[11,"into_inner","","Consumes the cell, returning the wrapped value.",265,[[],["option",4]]],[11,"take","","Takes the value out of this `OnceCell`, moving it back to…",265,[[],["option",4]]],[11,"new","","Creates a new lazy value with the given initializing…",266,[[],["lazy",3]]],[11,"force","","Forces the evaluation of this lazy value and returns a…",266,[[["lazy",3]]]],[11,"payload","wasmtime_wiggle::bitflags::_core::panic","Returns the payload associated with the panic.",271,[[],["any",8]]],[11,"message","","If the `panic!` macro from the `core` crate (not from…",271,[[],[["option",4],["arguments",3]]]],[11,"location","","Returns information about the location from which the…",271,[[],[["option",4],["location",3]]]],[11,"caller","","Returns the source location of the caller of this…",272,[[],["location",3]]],[11,"file","","Returns the name of the source file from which the panic…",272,[[]]],[11,"line","","Returns the line number from which the panic originated.",272,[[]]],[11,"column","","Returns the column from which the panic originated.",272,[[]]],[11,"new","wasmtime_wiggle::bitflags::_core::pin","Construct a new `Pin<P>` around a pointer to some data of…",273,[[],["pin",3]]],[11,"into_inner","","Unwraps this `Pin<P>` returning the underlying pointer.",273,[[["pin",3]]]],[11,"new_unchecked","","Construct a new `Pin<P>` around a reference to some data…",273,[[],["pin",3]]],[11,"as_ref","","Gets a pinned shared reference from this pinned pointer.",273,[[],["pin",3]]],[11,"into_inner_unchecked","","Unwraps this `Pin<P>` returning the underlying pointer.",273,[[["pin",3]]]],[11,"as_mut","","Gets a pinned mutable reference from this pinned pointer.",273,[[],["pin",3]]],[11,"set","","Assigns a new value to the memory behind the pinned…",273,[[]]],[11,"map_unchecked","","Constructs a new pin by mapping the interior value.",273,[[],["pin",3]]],[11,"get_ref","","Gets a shared reference out of a pin.",273,[[]]],[11,"into_ref","","Converts this `Pin<&mut T>` into a `Pin<&T>` with the same…",273,[[],["pin",3]]],[11,"get_mut","","Gets a mutable reference to the data inside of this `Pin`.",273,[[]]],[11,"get_unchecked_mut","","Gets a mutable reference to the data inside of this `Pin`.",273,[[]]],[11,"map_unchecked_mut","","Construct a new pin by mapping the interior value.",273,[[],["pin",3]]],[11,"static_ref","","Get a pinned reference from a static reference.",273,[[],["pin",3]]],[11,"static_mut","","Get a pinned mutable reference from a static mutable…",273,[[],["pin",3]]],[11,"new","wasmtime_wiggle::bitflags::_core::sync::atomic","Creates a new `AtomicBool`.",277,[[],["atomicbool",3]]],[11,"get_mut","","Returns a mutable reference to the underlying [`bool`].",277,[[]]],[11,"from_mut","","Get atomic access to a `&mut bool`.",277,[[],["atomicbool",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",277,[[]]],[11,"load","","Loads a value from the bool.",277,[[["ordering",4]]]],[11,"store","","Stores a value into the bool.",277,[[["ordering",4]]]],[11,"swap","","Stores a value into the bool, returning the previous value.",277,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the [`bool`] if the current value is…",277,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the [`bool`] if the current value is…",277,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the [`bool`] if the current value is…",277,[[["ordering",4]],["result",4]]],[11,"fetch_and","","Logical \\\"and\\\" with a boolean value.",277,[[["ordering",4]]]],[11,"fetch_nand","","Logical \\\"nand\\\" with a boolean value.",277,[[["ordering",4]]]],[11,"fetch_or","","Logical \\\"or\\\" with a boolean value.",277,[[["ordering",4]]]],[11,"fetch_xor","","Logical \\\"xor\\\" with a boolean value.",277,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying [`bool`].",277,[[]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",277,[[["ordering",4]],["result",4]]],[11,"new","","Creates a new `AtomicPtr`.",278,[[],["atomicptr",3]]],[11,"get_mut","","Returns a mutable reference to the underlying pointer.",278,[[]]],[11,"from_mut","","Get atomic access to a pointer.",278,[[],["atomicptr",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",278,[[]]],[11,"load","","Loads a value from the pointer.",278,[[["ordering",4]]]],[11,"store","","Stores a value into the pointer.",278,[[["ordering",4]]]],[11,"swap","","Stores a value into the pointer, returning the previous…",278,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the pointer if the current value is…",278,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the pointer if the current value is…",278,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is…",278,[[["ordering",4]],["result",4]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",278,[[["ordering",4]],["result",4]]],[11,"new","","Creates a new atomic integer.",279,[[],["atomici8",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",279,[[]]],[11,"from_mut","","Get atomic access to a `&mut i8`.",279,[[],["atomici8",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",279,[[]]],[11,"load","","Loads a value from the atomic integer.",279,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",279,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",279,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",279,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",279,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",279,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",279,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",279,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",279,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",279,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",279,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",279,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",279,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",279,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",279,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",279,[[]]],[11,"new","","Creates a new atomic integer.",280,[[],["atomicu8",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",280,[[]]],[11,"from_mut","","Get atomic access to a `&mut u8`.",280,[[],["atomicu8",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",280,[[]]],[11,"load","","Loads a value from the atomic integer.",280,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",280,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",280,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",280,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",280,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",280,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",280,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",280,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",280,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",280,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",280,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",280,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",280,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",280,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",280,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",280,[[]]],[11,"new","","Creates a new atomic integer.",281,[[],["atomici16",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",281,[[]]],[11,"from_mut","","Get atomic access to a `&mut i16`.",281,[[],["atomici16",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",281,[[]]],[11,"load","","Loads a value from the atomic integer.",281,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",281,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",281,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",281,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",281,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",281,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",281,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",281,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",281,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",281,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",281,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",281,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",281,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",281,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",281,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",281,[[]]],[11,"new","","Creates a new atomic integer.",282,[[],["atomicu16",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",282,[[]]],[11,"from_mut","","Get atomic access to a `&mut u16`.",282,[[],["atomicu16",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",282,[[]]],[11,"load","","Loads a value from the atomic integer.",282,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",282,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",282,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",282,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",282,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",282,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",282,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",282,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",282,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",282,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",282,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",282,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",282,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",282,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",282,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",282,[[]]],[11,"new","","Creates a new atomic integer.",283,[[],["atomici32",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",283,[[]]],[11,"from_mut","","Get atomic access to a `&mut i32`.",283,[[],["atomici32",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",283,[[]]],[11,"load","","Loads a value from the atomic integer.",283,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",283,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",283,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",283,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",283,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",283,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",283,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",283,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",283,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",283,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",283,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",283,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",283,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",283,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",283,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",283,[[]]],[11,"new","","Creates a new atomic integer.",284,[[],["atomicu32",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",284,[[]]],[11,"from_mut","","Get atomic access to a `&mut u32`.",284,[[],["atomicu32",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",284,[[]]],[11,"load","","Loads a value from the atomic integer.",284,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",284,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",284,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",284,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",284,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",284,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",284,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",284,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",284,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",284,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",284,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",284,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",284,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",284,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",284,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",284,[[]]],[11,"new","","Creates a new atomic integer.",285,[[],["atomici64",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",285,[[]]],[11,"from_mut","","Get atomic access to a `&mut i64`.",285,[[],["atomici64",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",285,[[]]],[11,"load","","Loads a value from the atomic integer.",285,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",285,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",285,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",285,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",285,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",285,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",285,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",285,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",285,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",285,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",285,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",285,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",285,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",285,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",285,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",285,[[]]],[11,"new","","Creates a new atomic integer.",286,[[],["atomicu64",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",286,[[]]],[11,"from_mut","","Get atomic access to a `&mut u64`.",286,[[],["atomicu64",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",286,[[]]],[11,"load","","Loads a value from the atomic integer.",286,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",286,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",286,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",286,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",286,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",286,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",286,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",286,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",286,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",286,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",286,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",286,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",286,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",286,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",286,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",286,[[]]],[11,"new","","Creates a new atomic integer.",287,[[],["atomicisize",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",287,[[]]],[11,"from_mut","","Get atomic access to a `&mut isize`.",287,[[],["atomicisize",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",287,[[]]],[11,"load","","Loads a value from the atomic integer.",287,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",287,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",287,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",287,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",287,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",287,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",287,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",287,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",287,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",287,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",287,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",287,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",287,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",287,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",287,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",287,[[]]],[11,"new","","Creates a new atomic integer.",288,[[],["atomicusize",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",288,[[]]],[11,"from_mut","","Get atomic access to a `&mut usize`.",288,[[],["atomicusize",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",288,[[]]],[11,"load","","Loads a value from the atomic integer.",288,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",288,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",288,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",288,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",288,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",288,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",288,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",288,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",288,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",288,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",288,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",288,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",288,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",288,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",288,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",288,[[]]],[11,"pad_integral","wasmtime_wiggle::bitflags::_core::fmt","Performs the correct padding for an integer which has…",290,[[],[["error",3],["result",4]]]],[11,"pad","","This function takes a string slice and emits it to the…",290,[[],[["error",3],["result",4]]]],[11,"write_str","","Writes some data to the underlying buffer contained within…",290,[[],[["error",3],["result",4]]]],[11,"write_fmt","","Writes some formatted information into this instance.",290,[[["arguments",3]],[["error",3],["result",4]]]],[11,"flags","","Flags for formatting",290,[[]]],[11,"fill","","Character used as \'fill\' whenever there is alignment.",290,[[]]],[11,"align","","Flag indicating what form of alignment was requested.",290,[[],[["option",4],["alignment",4]]]],[11,"width","","Optionally specified integer width that the output should…",290,[[],["option",4]]],[11,"precision","","Optionally specified precision for numeric types.…",290,[[],["option",4]]],[11,"sign_plus","","Determines if the `+` flag was specified.",290,[[]]],[11,"sign_minus","","Determines if the `-` flag was specified.",290,[[]]],[11,"alternate","","Determines if the `#` flag was specified.",290,[[]]],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",290,[[]]],[11,"debug_struct","","Creates a [`DebugStruct`] builder designed to assist with…",290,[[],["debugstruct",3]]],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with…",290,[[],["debugtuple",3]]],[11,"debug_list","","Creates a `DebugList` builder designed to assist with…",290,[[],["debuglist",3]]],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with…",290,[[],["debugset",3]]],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with…",290,[[],["debugmap",3]]],[11,"as_str","","Get the formatted string, if it has no arguments to be…",291,[[],["option",4]]],[11,"entry","","Adds a new entry to the list output.",292,[[["debug",8]],["debuglist",3]]],[11,"entries","","Adds the contents of an iterator of entries to the list…",292,[[],["debuglist",3]]],[11,"finish","","Finishes output and returns any error encountered.",292,[[],[["error",3],["result",4]]]],[11,"entry","","Adds a new entry to the map output.",293,[[["debug",8]],["debugmap",3]]],[11,"key","","Adds the key part of a new entry to the map output.",293,[[["debug",8]],["debugmap",3]]],[11,"value","","Adds the value part of a new entry to the map output.",293,[[["debug",8]],["debugmap",3]]],[11,"entries","","Adds the contents of an iterator of entries to the map…",293,[[],["debugmap",3]]],[11,"finish","","Finishes output and returns any error encountered.",293,[[],[["error",3],["result",4]]]],[11,"entry","","Adds a new entry to the set output.",294,[[["debug",8]],["debugset",3]]],[11,"entries","","Adds the contents of an iterator of entries to the set…",294,[[],["debugset",3]]],[11,"finish","","Finishes output and returns any error encountered.",294,[[],[["error",3],["result",4]]]],[11,"field","","Adds a new field to the generated struct output.",295,[[["debug",8]],["debugstruct",3]]],[11,"finish_non_exhaustive","","Marks the struct as non-exhaustive, indicating to the…",295,[[],[["error",3],["result",4]]]],[11,"finish","","Finishes output and returns any error encountered.",295,[[],[["error",3],["result",4]]]],[11,"field","","Adds a new field to the generated tuple struct output.",296,[[["debug",8]],["debugtuple",3]]],[11,"finish","","Finishes output and returns any error encountered.",296,[[],[["error",3],["result",4]]]],[11,"new","wasmtime_wiggle::bitflags::_core::hash","Creates a new `SipHasher` with the two initial keys set to…",298,[[],["siphasher",3]]],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",298,[[],["siphasher",3]]],[11,"as_slice","wasmtime_wiggle::bitflags::_core::slice","Views the underlying data as a subslice of the original…",302,[[]]],[11,"into_slice","","Views the underlying data as a subslice of the original…",303,[[]]],[11,"as_slice","","Views the underlying data as a subslice of the original…",303,[[]]],[11,"remainder","","Returns the remainder of the original slice that is not…",312,[[]]],[11,"into_remainder","","Returns the remainder of the original slice that is not…",313,[[]]],[11,"remainder","","Returns the remainder of the original slice that is not…",315,[[]]],[11,"into_remainder","","Returns the remainder of the original slice that is not…",316,[[]]],[11,"remainder","","Returns the remainder of the original slice that is not…",318,[[]]],[11,"into_remainder","","Returns the remainder of the original slice that is not…",319,[[]]],[11,"from_str","wasmtime_wiggle::bitflags::_core::str::lossy","",327,[[],["utf8lossy",3]]],[11,"from_bytes","","",327,[[],["utf8lossy",3]]],[11,"chunks","","",327,[[],["utf8lossychunksiter",3]]],[11,"valid_up_to","wasmtime_wiggle::bitflags::_core::str","Returns the index in the given string up to which valid…",330,[[]]],[11,"error_len","","Provides more information about the failure:",330,[[],["option",4]]],[11,"as_str","","Views the underlying data as a subslice of the original…",332,[[]]],[11,"as_str","","Views the underlying data as a subslice of the original…",333,[[]]],[11,"as_str","","Returns remainder of the splitted string",337,[[]]],[11,"as_str","","Returns remainder of the splitted string",338,[[]]],[11,"as_str","","Returns remainder of the splitted string",339,[[]]],[11,"as_str","","Returns remainder of the splitted string",340,[[]]],[11,"as_str","","Returns remainder of the splitted string",341,[[]]],[11,"as_str","","Returns remainder of the splitted string",342,[[]]],[18,"SECOND","wasmtime_wiggle::bitflags::_core::time","The duration of one second.",352,null],[18,"MILLISECOND","","The duration of one millisecond.",352,null],[18,"MICROSECOND","","The duration of one microsecond.",352,null],[18,"NANOSECOND","","The duration of one nanosecond.",352,null],[18,"ZERO","","A duration of zero time.",352,null],[18,"MAX","","The maximum duration.",352,null],[11,"new","","Creates a new `Duration` from the specified number of…",352,[[],["duration",3]]],[11,"from_secs","","Creates a new `Duration` from the specified number of…",352,[[],["duration",3]]],[11,"from_millis","","Creates a new `Duration` from the specified number of…",352,[[],["duration",3]]],[11,"from_micros","","Creates a new `Duration` from the specified number of…",352,[[],["duration",3]]],[11,"from_nanos","","Creates a new `Duration` from the specified number of…",352,[[],["duration",3]]],[11,"is_zero","","Returns true if this `Duration` spans no time.",352,[[]]],[11,"as_secs","","Returns the number of whole seconds contained by this…",352,[[]]],[11,"subsec_millis","","Returns the fractional part of this `Duration`, in whole…",352,[[]]],[11,"subsec_micros","","Returns the fractional part of this `Duration`, in whole…",352,[[]]],[11,"subsec_nanos","","Returns the fractional part of this `Duration`, in…",352,[[]]],[11,"as_millis","","Returns the total number of whole milliseconds contained…",352,[[]]],[11,"as_micros","","Returns the total number of whole microseconds contained…",352,[[]]],[11,"as_nanos","","Returns the total number of nanoseconds contained by this…",352,[[]]],[11,"checked_add","","Checked `Duration` addition. Computes `self + other`,…",352,[[["duration",3]],[["duration",3],["option",4]]]],[11,"saturating_add","","Saturating `Duration` addition. Computes `self + other`,…",352,[[["duration",3]],["duration",3]]],[11,"checked_sub","","Checked `Duration` subtraction. Computes `self - other`,…",352,[[["duration",3]],[["duration",3],["option",4]]]],[11,"saturating_sub","","Saturating `Duration` subtraction. Computes `self -…",352,[[["duration",3]],["duration",3]]],[11,"checked_mul","","Checked `Duration` multiplication. Computes `self *…",352,[[],[["duration",3],["option",4]]]],[11,"saturating_mul","","Saturating `Duration` multiplication. Computes `self *…",352,[[],["duration",3]]],[11,"checked_div","","Checked `Duration` division. Computes `self / other`,…",352,[[],[["duration",3],["option",4]]]],[11,"as_secs_f64","","Returns the number of seconds contained by this `Duration`…",352,[[]]],[11,"as_secs_f32","","Returns the number of seconds contained by this `Duration`…",352,[[]]],[11,"from_secs_f64","","Creates a new `Duration` from the specified number of…",352,[[],["duration",3]]],[11,"from_secs_f32","","Creates a new `Duration` from the specified number of…",352,[[],["duration",3]]],[11,"mul_f64","","Multiplies `Duration` by `f64`.",352,[[],["duration",3]]],[11,"mul_f32","","Multiplies `Duration` by `f32`.",352,[[],["duration",3]]],[11,"div_f64","","Divide `Duration` by `f64`.",352,[[],["duration",3]]],[11,"div_f32","","Divide `Duration` by `f32`.",352,[[],["duration",3]]],[11,"div_duration_f64","","Divide `Duration` by `Duration` and return `f64`.",352,[[["duration",3]]]],[11,"div_duration_f32","","Divide `Duration` by `Duration` and return `f32`.",352,[[["duration",3]]]],[11,"map","wasmtime_wiggle::bitflags::_core::task","Changes the ready value of this `Poll` with the closure…",101,[[],["poll",4]]],[11,"is_ready","","Returns `true` if this is `Poll::Ready`",101,[[]]],[11,"is_pending","","Returns `true` if this is `Poll::Pending`",101,[[]]],[11,"map_ok","","Changes the success value of this `Poll` with the closure…",101,[[],[["poll",4],["result",4]]]],[11,"map_err","","Changes the error value of this `Poll` with the closure…",101,[[],[["result",4],["poll",4]]]],[11,"map_ok","","Changes the success value of this `Poll` with the closure…",101,[[],[["option",4],["poll",4]]]],[11,"map_err","","Changes the error value of this `Poll` with the closure…",101,[[],[["option",4],["poll",4]]]],[11,"from_waker","","Create a new `Context` from a `&Waker`.",356,[[["waker",3]],["context",3]]],[11,"waker","","Returns a reference to the `Waker` for the current task.",356,[[],["waker",3]]],[11,"new","","Creates a new `RawWaker` from the provided `data` pointer…",357,[[["rawwakervtable",3]],["rawwaker",3]]],[11,"new","","Creates a new `RawWakerVTable` from the provided `clone`,…",358,[[],["rawwakervtable",3]]],[11,"wake","","Wake up the task associated with this `Waker`.",359,[[]]],[11,"wake_by_ref","","Wake up the task associated with this `Waker` without…",359,[[]]],[11,"will_wake","","Returns `true` if this `Waker` and another `Waker` have…",359,[[["waker",3]]]],[11,"from_raw","","Creates a new `Waker` from [`RawWaker`].",359,[[["rawwaker",3]],["waker",3]]],[11,"from_size_align","wasmtime_wiggle::bitflags::_core::alloc","Constructs a `Layout` from a given `size` and `align`, or…",361,[[],[["result",4],["layout",3],["layouterror",3]]]],[11,"from_size_align_unchecked","","Creates a layout, bypassing all checks.",361,[[],["layout",3]]],[11,"size","","The minimum size in bytes for a memory block of this layout.",361,[[]]],[11,"align","","The minimum byte alignment for a memory block of this…",361,[[]]],[11,"new","","Constructs a `Layout` suitable for holding a value of type…",361,[[],["layout",3]]],[11,"for_value","","Produces layout describing a record that could be used to…",361,[[],["layout",3]]],[11,"for_value_raw","","Produces layout describing a record that could be used to…",361,[[],["layout",3]]],[11,"dangling","","Creates a `NonNull` that is dangling, but well-aligned for…",361,[[],["nonnull",3]]],[11,"align_to","","Creates a layout describing the record that can hold a…",361,[[],[["result",4],["layout",3],["layouterror",3]]]],[11,"padding_needed_for","","Returns the amount of padding we must insert after `self`…",361,[[]]],[11,"pad_to_align","","Creates a layout by rounding the size of this layout up to…",361,[[],["layout",3]]],[11,"repeat","","Creates a layout describing the record for `n` instances…",361,[[],[["layouterror",3],["result",4]]]],[11,"extend","","Creates a layout describing the record for `self` followed…",361,[[["layout",3]],[["layouterror",3],["result",4]]]],[11,"repeat_packed","","Creates a layout describing the record for `n` instances…",361,[[],[["result",4],["layout",3],["layouterror",3]]]],[11,"extend_packed","","Creates a layout describing the record for `self` followed…",361,[[["layout",3]],[["result",4],["layout",3],["layouterror",3]]]],[11,"array","","Creates a layout describing the record for a `[T; n]`.",361,[[],[["result",4],["layout",3],["layouterror",3]]]],[11,"new","wasmtime_wiggle::witx::polyfill","",108,[[["document",3],["hashmap",3]],[["polyfill",3],["polyfillerror",4],["result",4]]]],[11,"type_polyfills","","",108,[[],[["typepolyfill",4],["randomstate",3],["hashset",3]]]],[11,"new","","",109,[[["module",3],["rc",3]],[["modulepolyfill",3],["polyfillerror",4],["result",4]]]],[11,"type_polyfills","","",109,[[],[["typepolyfill",4],["randomstate",3],["hashset",3]]]],[11,"new","","",110,[[["rc",3],["interfacefunc",3]],["funcpolyfill",3]]],[11,"full_compat","","",110,[[]]],[11,"type_polyfills","","",110,[[],[["typepolyfill",4],["randomstate",3],["hashset",3]]]],[11,"param","","",111,[[["interfacefuncparam",3]],["parampolyfill",3]]],[11,"result","","",111,[[["interfacefuncparam",3]],["parampolyfill",3]]],[11,"full_compat","","",111,[[]]],[11,"repeq","","",111,[[],["repequality",4]]],[11,"which","","",112,[[]]],[11,"param","","",112,[[],["interfacefuncparam",3]]],[11,"repeq","","",113,[[],["repequality",4]]],[11,"highlight_source_with","wasmtime_wiggle::witx","",114,[[["witxio",8]],["string",3]]],[11,"highlight_source","","",114,[[],["string",3]]],[11,"report_with","","",115,[[["witxio",8]],["string",3]]],[11,"report","","",115,[[],["string",3]]],[11,"type_name","","",116,[[]]],[11,"to_sexpr","","",116,[[],["sexpr",4]]],[11,"typename","","",372,[[["id",3]],[["rc",3],["option",4]]]],[11,"typenames","","",372,[[]]],[11,"error_types","","All of the (unique) types used as the first result value…",372,[[]]],[11,"module","","",372,[[["id",3]],[["rc",3],["option",4]]]],[11,"modules","","",372,[[]]],[11,"kind","","",118,[[]]],[11,"to_sexpr","","",119,[[],["sexpr",4]]],[11,"to_sexpr","","",121,[[],["sexpr",4]]],[11,"to_sexpr","","",373,[[],["sexpr",4]]],[11,"new","","",374,[[],["id",3]]],[11,"as_str","","",374,[[]]],[11,"to_sexpr","","",374,[[],["sexpr",4]]],[11,"to_sexpr","","",125,[[],["sexpr",4]]],[11,"core_type","","Get the WebAssembly type signature for this interface…",126,[[],["corefunctype",3]]],[11,"to_sexpr","","",126,[[],["sexpr",4]]],[11,"pass_by_value","","Gives the WebAssembly type that corresponds to passing…",127,[[],[["coreparamtype",3],["option",4]]]],[11,"pass_by_reference","","Gives the WebAssembly types that correspond to passing…",127,[[],[["coreparamtype",3],["global",3],["vec",3]]]],[11,"import","","",129,[[["id",3]],[["option",4],["rc",3]]]],[11,"imports","","",129,[[]]],[11,"func","","",129,[[["id",3]],[["rc",3],["option",4]]]],[11,"funcs","","",129,[[]]],[11,"to_sexpr","","",129,[[],["sexpr",4]]],[11,"to_sexpr","","",132,[[],["sexpr",4]]],[11,"type_","","",134,[[],[["rc",3],["type",4]]]],[11,"to_sexpr","","",134,[[],["sexpr",4]]],[11,"member_layout","","",135,[[],[["structmemberlayout",3],["global",3],["vec",3]]]],[11,"to_sexpr","","",135,[[],["sexpr",4]]],[11,"kind","","",137,[[]]],[11,"passed_by","","Determine the simplest strategy by which a type may be…",137,[[],["typepassedby",4]]],[11,"to_sexpr","","",137,[[],["sexpr",4]]],[11,"type_","","",138,[[],[["rc",3],["type",4]]]],[11,"type_name","","",138,[[],["string",3]]],[11,"to_sexpr","","",138,[[],["sexpr",4]]],[11,"union_layout","","",139,[[],["unionlayout",3]]],[11,"to_sexpr","","",139,[[],["sexpr",4]]],[11,"repr","","Representation of the WebAssembly parameter.",143,[[],["atomtype",4]]],[11,"repr","","Representation of the WebAssembly parameter. This is the…",144,[[],["atomtype",4]]],[11,"new","","",376,[[],["mockfs",3]]],[11,"word","","",153,[[],["sexpr",4]]],[11,"ident","","",153,[[],["sexpr",4]]],[11,"quote","","",153,[[],["sexpr",4]]],[11,"annot","","",153,[[],["sexpr",4]]],[11,"docs","","",153,[[["sexpr",4]],["sexpr",4]]],[11,"join","","",154,[[["repequality",4]],["repequality",4]]],[11,"report_with","","",156,[[["witxio",8]],["string",3]]],[11,"report","","",156,[[],["string",3]]],[11,"none","wasmtime_wiggle::tracing","Returns a new `Dispatch` that discards events and spans.",378,[[],["dispatch",3]]],[11,"new","","Returns a `Dispatch` that forwards to the given…",378,[[],["dispatch",3]]],[11,"register_callsite","","Registers a new callsite with this subscriber, returning…",378,[[["metadata",3]],["interest",3]]],[11,"new_span","","Record the construction of a new span, returning a new ID…",378,[[["attributes",3]],["id",3]]],[11,"record","","Record a set of values on a span.",378,[[["id",3],["record",3]]]],[11,"record_follows_from","","Adds an indication that `span` follows from the span with…",378,[[["id",3]]]],[11,"enabled","","Returns true if a span with the specified metadata would…",378,[[["metadata",3]]]],[11,"event","","Records that an `Event` has occurred.",378,[[["event",3]]]],[11,"enter","","Records that a span has been can_enter.",378,[[["id",3]]]],[11,"exit","","Records that a span has been exited.",378,[[["id",3]]]],[11,"clone_span","","Notifies the subscriber that a span ID has been cloned.",378,[[["id",3]],["id",3]]],[11,"drop_span","","Notifies the subscriber that a span ID has been dropped.",378,[[["id",3]]]],[11,"try_close","","Notifies the subscriber that a span ID has been dropped,…",378,[[["id",3]]]],[11,"current_span","","Returns a type representing this subscriber\'s view of the…",378,[[],["current",3]]],[11,"is","","Returns `true` if this `Dispatch` forwards to a…",378,[[]]],[11,"downcast_ref","","Returns some reference to the `Subscriber` this `Dispatch`…",378,[[],["option",4]]],[11,"callsite","wasmtime_wiggle::tracing::field","Returns an `Identifier` that uniquely identifies the…",380,[[],["identifier",3]]],[11,"name","","Returns a string representing the name of the field.",380,[[]]],[11,"new","","Constructs a new `FieldSet` with the given array of field…",382,[[["identifier",3]],["fieldset",3]]],[11,"field","","Returns the `Field` named `name`, or `None` if no such…",382,[[],[["field",3],["option",4]]]],[11,"contains","","Returns `true` if `self` contains the given `field`.",382,[[["field",3]]]],[11,"iter","","Returns an iterator over the `Field`s in this `FieldSet`.",382,[[],["iter",3]]],[11,"len","","Returns the number of fields in this `FieldSet`.",382,[[]]],[11,"is_empty","","Returns whether or not this `FieldSet` has fields.",382,[[]]],[11,"callsite","","Returns an `Identifier` that uniquely identifies the…",383,[[],["identifier",3]]],[11,"span","wasmtime_wiggle::tracing::instrument","Borrows the `Span` that this type is instrumented by.",388,[[],["span",3]]],[11,"span_mut","","Mutably borrows the `Span` that this type is instrumented…",388,[[],["span",3]]],[11,"inner","","Borrows the wrapped type.",388,[[]]],[11,"inner_mut","","Mutably borrows the wrapped type.",388,[[]]],[11,"inner_pin_ref","","Get a pinned reference to the wrapped type.",388,[[["pin",3],["instrumented",3]],["pin",3]]],[11,"inner_pin_mut","","Get a pinned mutable reference to the wrapped type.",388,[[["instrumented",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes the `Instrumented`, returning the wrapped type.",388,[[]]],[18,"OFF","wasmtime_wiggle::tracing::metadata","The \\\"off\\\" level.",390,null],[18,"ERROR","","The \\\"error\\\" level.",390,null],[18,"WARN","","The \\\"warn\\\" level.",390,null],[18,"INFO","","The \\\"info\\\" level.",390,null],[18,"DEBUG","","The \\\"debug\\\" level.",390,null],[18,"TRACE","","The \\\"trace\\\" level.",390,null],[11,"from_level","","Returns a `LevelFilter` that enables spans and events with…",390,[[["level",3]],["levelfilter",3]]],[11,"into_level","","Returns the most verbose `Level` that this filter accepts,…",390,[[],[["option",4],["level",3]]]],[11,"current","","Returns a `LevelFilter` that matches the most verbose…",390,[[],["levelfilter",3]]],[11,"new","wasmtime_wiggle::tracing","Constructs a new `Span` with the given metadata and set of…",391,[[["valueset",3],["metadata",3]],["span",3]]],[11,"new_root","","Constructs a new `Span` as the root of its own trace tree,…",391,[[["valueset",3],["metadata",3]],["span",3]]],[11,"child_of","","Constructs a new `Span` as child of the given parent span,…",391,[[["valueset",3],["metadata",3]],["span",3]]],[11,"new_disabled","","Constructs a new disabled span with the given `Metadata`.",391,[[["metadata",3]],["span",3]]],[11,"none","","Constructs a new span that is completely disabled.",391,[[],["span",3]]],[11,"current","","Returns a handle to the span considered by the…",391,[[],["span",3]]],[11,"enter","","Enters this span, returning a guard that will exit the…",391,[[],["entered",3]]],[11,"in_scope","","Executes the given function in the context of this span.",391,[[]]],[11,"field","","Returns a `Field` for the field with the given `name`, if…",391,[[],[["field",3],["option",4]]]],[11,"has_field","","Returns true if this `Span` has a field for the given…",391,[[]]],[11,"record","","Records that the field described by `field` has the value…",391,[[],["span",3]]],[11,"record_all","","Records all the fields in the provided `ValueSet`.",391,[[["valueset",3]],["span",3]]],[11,"is_disabled","","Returns `true` if this span was disabled by the subscriber…",391,[[]]],[11,"is_none","","Returns `true` if this span was constructed by…",391,[[]]],[11,"follows_from","","Indicates that the span with the given ID has an indirect…",391,[[],["span",3]]],[11,"id","","Returns this span\'s `Id`, if it is enabled.",391,[[],[["id",3],["option",4]]]],[11,"metadata","","Returns this span\'s `Metadata`, if it is enabled.",391,[[],[["option",4],["metadata",3]]]],[11,"with_subscriber","","Invokes a function with a reference to this span\'s ID and…",391,[[],["option",4]]],[11,"new","wasmtime_wiggle::tracing::span","Returns `Attributes` describing a new child span of the…",393,[[["valueset",3],["metadata",3]],["attributes",3]]],[11,"new_root","","Returns `Attributes` describing a new span at the root of…",393,[[["valueset",3],["metadata",3]],["attributes",3]]],[11,"child_of","","Returns `Attributes` describing a new child span of the…",393,[[["id",3],["valueset",3],["metadata",3]],["attributes",3]]],[11,"metadata","","Returns a reference to the new span\'s metadata.",393,[[],["metadata",3]]],[11,"values","","Returns a reference to a `ValueSet` containing any values…",393,[[],["valueset",3]]],[11,"is_root","","Returns true if the new span should be a root.",393,[[]]],[11,"is_contextual","","Returns true if the new span\'s parent should be determined…",393,[[]]],[11,"parent","","Returns the new span\'s explicitly-specified parent, if…",393,[[],[["option",4],["id",3]]]],[11,"record","","Records all the fields in this set of `Attributes` with…",393,[[["visit",8]]]],[11,"contains","","Returns `true` if this set of `Attributes` contains a…",393,[[["field",3]]]],[11,"is_empty","","Returns true if this set of `Attributes` contains no values.",393,[[]]],[11,"from_u64","wasmtime_wiggle::tracing","Constructs a new span ID from the given `u64`.",394,[[],["id",3]]],[11,"from_non_zero_u64","","Constructs a new span ID from the given `NonZeroU64`.",394,[[["nonzerou64",3]],["id",3]]],[11,"into_u64","","Returns the span\'s ID as a `u64`.",394,[[]]],[11,"into_non_zero_u64","","Returns the span\'s ID as a `NonZeroU64`.",394,[[],["nonzerou64",3]]],[11,"new","wasmtime_wiggle::tracing::span","Constructs a new `Record` from a `ValueSet`.",395,[[["valueset",3]],["record",3]]],[11,"record","","Records all the fields in this `Record` with the provided…",395,[[["visit",8]]]],[11,"contains","","Returns `true` if this `Record` contains a value for the…",395,[[["field",3]]]],[11,"is_empty","","Returns true if this `Record` contains no values.",395,[[]]],[11,"is","wasmtime_wiggle::tracing","Returns `true` if this `Subscriber` is the same type as `T`.",171,[[]]],[11,"downcast_ref","","Returns some reference to this `Subscriber` value if it is…",171,[[],["option",4]]],[11,"never","wasmtime_wiggle::tracing::subscriber","Returns an `Interest` indicating that the subscriber is…",396,[[],["interest",3]]],[11,"sometimes","","Returns an `Interest` indicating the subscriber is…",396,[[],["interest",3]]],[11,"always","","Returns an `Interest` indicating the subscriber is always…",396,[[],["interest",3]]],[11,"is_never","","Returns `true` if the subscriber is never interested in…",396,[[]]],[11,"is_sometimes","","Returns `true` if the subscriber is sometimes interested…",396,[[]]],[11,"is_always","","Returns `true` if the subscriber is always interested in…",396,[[]]],[11,"max","wasmtime_wiggle::tracing::log","Returns the most verbose logging level.",172,[[],["level",4]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",172,[[],["levelfilter",4]]],[11,"max","","Returns the most verbose logging level filter.",173,[[],["levelfilter",4]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",173,[[],[["level",4],["option",4]]]],[11,"builder","","Returns a new builder.",397,[[],["recordbuilder",3]]],[11,"args","","The message body.",397,[[],["arguments",3]]],[11,"metadata","","Metadata about the log directive.",397,[[],["metadata",3]]],[11,"level","","The verbosity level of the message.",397,[[],["level",4]]],[11,"target","","The name of the target of the directive.",397,[[]]],[11,"module_path","","The module path of the message.",397,[[],["option",4]]],[11,"module_path_static","","The module path of the message, if it is a `\'static` string.",397,[[],["option",4]]],[11,"file","","The source file containing the message.",397,[[],["option",4]]],[11,"file_static","","The module path of the message, if it is a `\'static` string.",397,[[],["option",4]]],[11,"line","","The line containing the message.",397,[[],["option",4]]],[11,"new","","Construct new `RecordBuilder`.",398,[[],["recordbuilder",3]]],[11,"args","","Set `args`.",398,[[["arguments",3]],["recordbuilder",3]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",398,[[["metadata",3]],["recordbuilder",3]]],[11,"level","","Set `Metadata::level`.",398,[[["level",4]],["recordbuilder",3]]],[11,"target","","Set `Metadata::target`",398,[[],["recordbuilder",3]]],[11,"module_path","","Set `module_path`",398,[[["option",4]],["recordbuilder",3]]],[11,"module_path_static","","Set `module_path` to a `\'static` string",398,[[["option",4]],["recordbuilder",3]]],[11,"file","","Set `file`",398,[[["option",4]],["recordbuilder",3]]],[11,"file_static","","Set `file` to a `\'static` string.",398,[[["option",4]],["recordbuilder",3]]],[11,"line","","Set `line`",398,[[["option",4]],["recordbuilder",3]]],[11,"build","","Invoke the builder and return a `Record`",398,[[],["record",3]]],[11,"builder","","Returns a new builder.",399,[[],["metadatabuilder",3]]],[11,"level","","The verbosity level of the message.",399,[[],["level",4]]],[11,"target","","The name of the target of the directive.",399,[[]]],[11,"new","","Construct a new `MetadataBuilder`.",400,[[],["metadatabuilder",3]]],[11,"level","","Setter for `level`.",400,[[["level",4]],["metadatabuilder",3]]],[11,"target","","Setter for `target`.",400,[[],["metadatabuilder",3]]],[11,"build","","Returns a `Metadata` object.",400,[[],["metadata",3]]],[11,"dispatch","wasmtime_wiggle::tracing::event","Constructs a new `Event` with the specified metadata and…",403,[[["valueset",3],["metadata",3]]]],[11,"new","","Returns a new `Event` in the current span, with the…",403,[[["valueset",3],["metadata",3]],["event",3]]],[11,"new_child_of","","Returns a new `Event` as a child of the specified span,…",403,[[["valueset",3],["metadata",3]],["event",3]]],[11,"child_of","","Constructs a new `Event` with the specified metadata and…",403,[[["valueset",3],["metadata",3]]]],[11,"record","","Visits all the fields on this `Event` with the specified…",403,[[["visit",8]]]],[11,"fields","","Returns an iterator over the set of values on this `Event`.",403,[[],["iter",3]]],[11,"metadata","","Returns metadata describing this `Event`.",403,[[],["metadata",3]]],[11,"is_root","","Returns true if the new event should be a root.",403,[[]]],[11,"is_contextual","","Returns true if the new event\'s parent should be…",403,[[]]],[11,"parent","","Returns the new event\'s explicitly-specified parent, if…",403,[[],[["option",4],["id",3]]]],[11,"new","wasmtime_wiggle::tracing","Construct new metadata for a span or event, with a name,…",405,[[["level",3],["option",4],["kind",3],["option",4],["fieldset",3]],["metadata",3]]],[11,"fields","","Returns the names of the fields on the described span or…",405,[[],["fieldset",3]]],[11,"level","","Returns the level of verbosity of the described span or…",405,[[],["level",3]]],[11,"name","","Returns the name of the span.",405,[[]]],[11,"target","","Returns a string describing the part of the system where…",405,[[]]],[11,"module_path","","Returns the path to the Rust module where the span…",405,[[],["option",4]]],[11,"file","","Returns the name of the source code file where the span…",405,[[],["option",4]]],[11,"line","","Returns the line number in the source code file where the…",405,[[],["option",4]]],[11,"callsite","","Returns an opaque `Identifier` that uniquely identifies…",405,[[],["identifier",3]]],[11,"is_event","","Returns true if the callsite kind is `Event`.",405,[[]]],[11,"is_span","","Return true if the callsite kind is `Span`.",405,[[]]],[18,"EVENT","wasmtime_wiggle::tracing::metadata","`Event` callsite",406,null],[18,"SPAN","","`Span` callsite",406,null],[11,"is_span","","Return true if the callsite kind is `Span`",406,[[]]],[11,"is_event","","Return true if the callsite kind is `Event`",406,[[]]],[18,"ERROR","wasmtime_wiggle::tracing","The \\\"error\\\" level.",407,null],[18,"WARN","","The \\\"warn\\\" level.",407,null],[18,"INFO","","The \\\"info\\\" level.",407,null],[18,"DEBUG","","The \\\"debug\\\" level.",407,null],[18,"TRACE","","The \\\"trace\\\" level.",407,null],[11,"new","wasmtime_wiggle","",182,[[],["region",3]]],[11,"overlaps","","Checks if this `Region` overlaps with `rhs` `Region`.",182,[[["region",3]]]],[11,"extend","","",182,[[],["region",3]]]],"p":[[8,"GuestMemory"],[3,"BorrowHandle"],[4,"Trap"],[4,"FpCategory"],[3,"Wrapping"],[4,"IntErrorKind"],[8,"Drop"],[8,"Fn"],[8,"FnMut"],[8,"FnOnce"],[8,"Clone"],[8,"Ord"],[8,"PartialEq"],[8,"PartialOrd"],[8,"AsMut"],[8,"AsRef"],[8,"From"],[8,"Into"],[8,"Default"],[8,"DoubleEndedIterator"],[8,"ExactSizeIterator"],[8,"Extend"],[8,"IntoIterator"],[8,"Iterator"],[4,"Option"],[4,"Result"],[8,"Borrow"],[8,"BorrowMut"],[4,"Ordering"],[3,"Reverse"],[8,"TryInto"],[8,"TryFrom"],[8,"DiscriminantKind"],[8,"Add"],[8,"Div"],[8,"Mul"],[8,"Neg"],[8,"Rem"],[8,"Sub"],[8,"AddAssign"],[8,"DivAssign"],[8,"MulAssign"],[8,"RemAssign"],[8,"SubAssign"],[8,"BitAnd"],[8,"BitOr"],[8,"BitXor"],[8,"Not"],[8,"Shl"],[8,"Shr"],[8,"BitAndAssign"],[8,"BitOrAssign"],[8,"BitXorAssign"],[8,"ShlAssign"],[8,"ShrAssign"],[8,"Deref"],[8,"DerefMut"],[8,"Index"],[8,"IndexMut"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Bound"],[8,"RangeBounds"],[3,"RangeToInclusive"],[8,"Try"],[8,"Generator"],[4,"GeneratorState"],[4,"ControlFlow"],[8,"Any"],[8,"FixedSizeArray"],[8,"Step"],[8,"FromIterator"],[8,"Product"],[8,"Sum"],[8,"SourceIter"],[3,"TraitObject"],[4,"Ordering"],[4,"Alignment"],[8,"Write"],[8,"Debug"],[8,"Display"],[8,"Octal"],[8,"Binary"],[8,"LowerHex"],[8,"UpperHex"],[8,"Pointer"],[8,"LowerExp"],[8,"UpperExp"],[8,"Hash"],[8,"Hasher"],[8,"BuildHasher"],[8,"SliceIndex"],[8,"Pattern"],[4,"SearchStep"],[8,"Searcher"],[8,"ReverseSearcher"],[3,"Utf8LossyChunk"],[8,"FromStr"],[8,"Future"],[8,"IntoFuture"],[4,"Poll"],[8,"AllocRef"],[8,"GlobalAlloc"],[3,"CpuidResult"],[4,"PolyfillError"],[13,"ModuleNotPresent"],[13,"FuncNotPresent"],[3,"Polyfill"],[3,"ModulePolyfill"],[3,"FuncPolyfill"],[3,"ParamPolyfill"],[4,"ParamUnknown"],[4,"TypePolyfill"],[3,"Location"],[4,"WitxError"],[4,"BuiltinType"],[4,"Definition"],[4,"Entry"],[3,"EnumDatatype"],[3,"EnumVariant"],[3,"FlagsDatatype"],[3,"FlagsMember"],[3,"IntConst"],[3,"IntDatatype"],[4,"IntRepr"],[3,"InterfaceFunc"],[3,"InterfaceFuncParam"],[4,"InterfaceFuncParamPosition"],[3,"Module"],[4,"ModuleDefinition"],[4,"ModuleEntry"],[3,"ModuleImport"],[4,"ModuleImportVariant"],[3,"NamedType"],[3,"StructDatatype"],[3,"StructMember"],[4,"Type"],[4,"TypeRef"],[3,"UnionDatatype"],[3,"UnionVariant"],[4,"AtomType"],[3,"CoreFuncType"],[4,"CoreParamSignifies"],[3,"CoreParamType"],[4,"TypePassedBy"],[8,"Documentation"],[8,"WitxIo"],[8,"Layout"],[3,"SizeAlign"],[3,"StructMemberLayout"],[3,"UnionLayout"],[4,"DeclSyntax"],[4,"SExpr"],[4,"RepEquality"],[8,"Representable"],[4,"ValidationError"],[13,"UnknownName"],[13,"NameAlreadyExists"],[13,"WrongKindName"],[13,"Recursive"],[13,"InvalidRepr"],[13,"InvalidFirstResultType"],[13,"AnonymousStructure"],[13,"InvalidUnionField"],[8,"AsField"],[8,"Value"],[8,"Visit"],[8,"Instrument"],[8,"WithSubscriber"],[8,"AsId"],[8,"Subscriber"],[4,"Level"],[4,"LevelFilter"],[8,"Log"],[8,"Callsite"],[4,"GuestError"],[13,"InFunc"],[13,"InDataField"],[8,"GuestErrorType"],[8,"GuestType"],[8,"GuestTypeTransparent"],[3,"Region"],[3,"WasmtimeGuestMemory"],[3,"GuestPtr"],[3,"GuestSlice"],[3,"GuestSliceMut"],[3,"GuestStr"],[3,"GuestStrMut"],[3,"ParseFloatError"],[3,"ParseIntError"],[3,"NonZeroU128"],[3,"NonZeroU16"],[3,"NonZeroU32"],[3,"NonZeroU64"],[3,"NonZeroU8"],[3,"NonZeroUsize"],[3,"NonZeroI128"],[3,"NonZeroI16"],[3,"NonZeroI32"],[3,"NonZeroI64"],[3,"NonZeroI8"],[3,"NonZeroIsize"],[3,"TryFromIntError"],[3,"Discriminant"],[3,"ManuallyDrop"],[19,"MaybeUninit"],[3,"NonNull"],[4,"Infallible"],[3,"PhantomData"],[3,"PhantomPinned"],[3,"RangeFull"],[3,"RangeInclusive"],[3,"TypeId"],[3,"TryFromSliceError"],[3,"IntoIter"],[3,"EscapeDefault"],[3,"Cell"],[3,"RefCell"],[3,"BorrowError"],[3,"BorrowMutError"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EscapeDebug"],[3,"ToLowercase"],[3,"ToUppercase"],[3,"CharTryFromError"],[3,"ParseCharError"],[3,"DecodeUtf16"],[3,"DecodeUtf16Error"],[4,"c_void"],[3,"VaListImpl"],[3,"VaList"],[3,"Empty"],[3,"FromFn"],[3,"Once"],[3,"OnceWith"],[3,"Repeat"],[3,"RepeatWith"],[3,"Successors"],[3,"Cloned"],[3,"Copied"],[3,"Flatten"],[3,"MapWhile"],[3,"StepBy"],[3,"Chain"],[3,"Cycle"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Map"],[3,"Peekable"],[3,"Rev"],[3,"Scan"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Zip"],[3,"OnceCell"],[3,"Lazy"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"NoneError"],[3,"PanicInfo"],[3,"Location"],[3,"Pin"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"AtomicBool"],[3,"AtomicPtr"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Error"],[3,"Formatter"],[3,"Arguments"],[3,"DebugList"],[3,"DebugMap"],[3,"DebugSet"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"BuildHasherDefault"],[3,"SipHasher"],[3,"Chunks"],[3,"ChunksMut"],[3,"Windows"],[3,"Iter"],[3,"IterMut"],[3,"RSplitN"],[3,"RSplitNMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"SplitNMut"],[3,"RSplit"],[3,"RSplitMut"],[3,"ChunksExact"],[3,"ChunksExactMut"],[3,"RChunks"],[3,"RChunksExact"],[3,"RChunksExactMut"],[3,"RChunksMut"],[3,"ArrayChunks"],[3,"ArrayChunksMut"],[3,"ArrayWindows"],[3,"SplitInclusive"],[3,"SplitInclusiveMut"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"Utf8Lossy"],[3,"Utf8LossyChunksIter"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Bytes"],[3,"CharIndices"],[3,"Chars"],[3,"Lines"],[3,"SplitWhitespace"],[3,"LinesAny"],[3,"RSplit"],[3,"RSplitTerminator"],[3,"Split"],[3,"SplitTerminator"],[3,"RSplitN"],[3,"SplitN"],[3,"Matches"],[3,"RMatches"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"EncodeUtf16"],[3,"EscapeDebug"],[3,"EscapeDefault"],[3,"EscapeUnicode"],[3,"SplitAsciiWhitespace"],[3,"Duration"],[3,"Pending"],[3,"Ready"],[3,"PollFn"],[3,"Context"],[3,"RawWaker"],[3,"RawWakerVTable"],[3,"Waker"],[3,"AllocError"],[3,"Layout"],[3,"LayoutError"],[3,"__m128i"],[3,"__m128"],[3,"__m128d"],[3,"__m256i"],[3,"__m256"],[3,"__m256d"],[3,"__m512i"],[3,"__m512"],[3,"__m512d"],[3,"Document"],[3,"HandleDatatype"],[3,"Id"],[3,"Filesystem"],[3,"MockFs"],[3,"DefaultGuard"],[3,"Dispatch"],[3,"SetGlobalDefaultError"],[3,"Field"],[3,"Empty"],[3,"FieldSet"],[3,"ValueSet"],[3,"Iter"],[3,"DisplayValue"],[3,"DebugValue"],[3,"WithDispatch"],[3,"Instrumented"],[3,"ParseLevelFilterError"],[3,"LevelFilter"],[3,"Span"],[3,"Entered"],[3,"Attributes"],[3,"Id"],[3,"Record"],[3,"Interest"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"],[3,"Event"],[3,"Identifier"],[3,"Metadata"],[3,"Kind"],[3,"Level"],[3,"ParseLevelError"]],"a":{"!=":[181,189,608,611],"%":[689,701],"%=":[701],"&":[705],"&*":[733],"&=":[723],"*":[683,699,733,736],"*=":[699],"+":[677,695],"+=":[695],"-":[686,692,703],"-=":[703],"..":[752,755,757,758],"..=":[769,770],"/":[680,697],"/=":[697],"<":[183,193,618,623],"<<":[717],"<<=":[729],"<=":[183,193,618,623],"==":[181,189,608,611],">":[183,193,618,623],">=":[183,193,618,623],">>":[720],">>=":[731],"?":[772,1283],"[":[747,750],"[]":[747,750],"]":[747,750],"^":[711],"^=":[727],"inject":[263,871],"memcpy":[545,591],"memmove":[546,592],"reduce":[263,871],"{:?}":[1059],"{}":[1061],"|":[708],"|=":[725]}},\
"wasmtime_wiggle_macro":{"doc":"","i":[[14,"wasmtime_integration","wasmtime_wiggle_macro","Define the structs required to integrate a Wiggle…",null,null]],"p":[]},\
"wiggle":{"doc":"","i":[[14,"from_witx","wiggle","This macro expands to a set of `pub` Rust modules:",null,null],[4,"GuestError","","",null,null],[13,"InvalidFlagValue","","",0,null],[13,"InvalidEnumValue","","",0,null],[13,"PtrOverflow","","",0,null],[13,"PtrOutOfBounds","","",0,null],[13,"PtrNotAligned","","",0,null],[13,"PtrBorrowed","","",0,null],[13,"BorrowCheckerOutOfHandles","","",0,null],[13,"SliceLengthsDiffer","","",0,null],[13,"InFunc","","",0,null],[12,"funcname","wiggle::GuestError","",1,null],[12,"location","","",1,null],[12,"err","","",1,null],[13,"InDataField","wiggle","",0,null],[12,"typename","wiggle::GuestError","",2,null],[12,"field","","",2,null],[12,"err","","",2,null],[13,"InvalidUtf8","wiggle","",0,null],[13,"TryFromIntError","","",0,null],[8,"GuestErrorType","","A trait for types which are used to report errors. Each…",null,null],[10,"success","","",3,[[]]],[8,"GuestType","","A trait for types that are intended to be pointees in…",null,null],[10,"guest_size","","Returns the size, in bytes, of this type in the guest…",4,[[]]],[10,"guest_align","","Returns the required alignment of this type, in bytes, for…",4,[[]]],[10,"read","","Reads this value from the provided `ptr`.",4,[[["guestptr",3]],[["guesterror",4],["result",4]]]],[10,"write","","Writes a value to `ptr` after verifying that `ptr` is…",4,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[8,"GuestTypeTransparent","","A trait for `GuestType`s that have the same representation…",null,null],[10,"validate","","Checks that the memory at `ptr` is a valid representation…",5,[[],[["result",4],["guesterror",4]]]],[3,"Region","","Represents a contiguous region in memory.",null,null],[12,"start","","",6,null],[12,"len","","",6,null],[8,"GuestMemory","","A trait which abstracts how to get at the region of host…",null,null],[10,"base","","Returns the base allocation of this guest memory, located…",7,[[]]],[11,"validate_size_align","","Validates a guest-relative pointer given various…",7,[[],[["result",4],["guesterror",4]]]],[11,"ptr","","Convenience method for creating a `GuestPtr` at a…",7,[[],[["guestptr",3],["sized",8]]]],[10,"has_outstanding_borrows","","Indicates whether any outstanding borrows are known to the…",7,[[]]],[10,"is_mut_borrowed","","Check if a region of linear memory is exclusively…",7,[[["region",3]]]],[10,"is_shared_borrowed","","Check if a region of linear memory has any shared borrows.",7,[[["region",3]]]],[10,"mut_borrow","","Exclusively borrow a region of linear memory. This is used…",7,[[["region",3]],[["borrowhandle",3],["result",4],["guesterror",4]]]],[10,"shared_borrow","","Shared borrow a region of linear memory. This is used when…",7,[[["region",3]],[["borrowhandle",3],["result",4],["guesterror",4]]]],[10,"mut_unborrow","","Unborrow a previously borrowed mutable region. As long as…",7,[[["borrowhandle",3]]]],[10,"shared_unborrow","","Unborrow a previously borrowed shared region. As long as…",7,[[["borrowhandle",3]]]],[3,"BorrowHandle","","A handle to a borrow on linear memory. It is produced by…",null,null],[12,"0","","",8,null],[3,"GuestPtr","","A guest pointer into host memory.",null,null],[11,"new","","Creates a new `GuestPtr` from the given `mem` and…",9,[[["guestmemory",8]],["guestptr",3]]],[11,"offset","","Returns the offset of this pointer in guest memory.",9,[[]]],[11,"mem","","Returns the guest memory that this pointer is coming from.",9,[[],["guestmemory",8]]],[11,"cast","","Casts this `GuestPtr` type to a different type.",9,[[],["guestptr",3]]],[11,"read","","Safely read a value from this pointer.",9,[[],[["result",4],["guesterror",4]]]],[11,"write","","Safely write a value to this pointer.",9,[[],[["result",4],["guesterror",4]]]],[11,"add","","Performs pointer arithmetic on this pointer, moving the…",9,[[],[["guestptr",3],["result",4],["guesterror",4]]]],[11,"as_array","","Returns a `GuestPtr` for an array of `T`s using this…",9,[[],["guestptr",3]]],[11,"offset_base","","For slices, specifically returns the relative pointer to…",9,[[]]],[11,"len","","For slices, returns the length of the slice, in elements.",9,[[]]],[11,"iter","","Returns an iterator over interior pointers.",9,[[]]],[11,"as_slice","","Attempts to create a [`GuestSlice<\'_, T>`] from this…",9,[[],[["result",4],["guestslice",3],["guesterror",4]]]],[11,"as_slice_mut","","Attempts to create a [`GuestSliceMut<\'_, T>`] from this…",9,[[],[["guesterror",4],["result",4],["guestslicemut",3]]]],[11,"copy_from_slice","","Copies the data pointed to by `slice` into this guest…",9,[[],[["result",4],["guesterror",4]]]],[11,"as_ptr","","Returns a `GuestPtr` pointing to the base of the array for…",9,[[],["guestptr",3]]],[11,"get","","",9,[[],[["option",4],["guestptr",3]]]],[11,"get_range","","",9,[[["range",3]],[["option",4],["guestptr",3]]]],[11,"offset_base","","For strings, returns the relative pointer to the base of…",9,[[]]],[11,"len","","Returns the length, in bytes, of the string.",9,[[]]],[11,"as_bytes","","Returns a raw pointer for the underlying slice of bytes…",9,[[],["guestptr",3]]],[11,"as_byte_ptr","","Returns a pointer for the underlying slice of bytes that…",9,[[],["guestptr",3]]],[11,"as_str","","Attempts to create a [`GuestStr<\'_>`] from this pointer,…",9,[[],[["result",4],["gueststr",3],["guesterror",4]]]],[11,"as_str_mut","","Attempts to create a [`GuestStrMut<\'_>`] from this…",9,[[],[["gueststrmut",3],["guesterror",4],["result",4]]]],[11,"as_str_ptr","","Returns a pointer to the string represented by a `[u8]`…",9,[[],["guestptr",3]]],[3,"GuestSlice","","A smart pointer to an sharedable slice in guest memory.…",null,null],[3,"GuestSliceMut","","A smart pointer to a mutable slice in guest memory. Usable…",null,null],[3,"GuestStr","","A smart pointer to an sharedable `str` in guest memory.…",null,null],[3,"GuestStrMut","","A smart pointer to a mutable `str` in guest memory. Usable…",null,null],[8,"Pointee","","Types that can be pointed to by `GuestPtr<T>`.",null,null],[4,"Trap","","A runtime-independent way for Wiggle to terminate…",null,null],[13,"I32Exit","","A Trap which indicates an i32 (posix-style) exit code.…",10,null],[13,"String","","Any other Trap is just an unstructured String, for…",10,null],[11,"debug","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"debug","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"debug","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"debug","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"debug","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"debug","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"debug","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"debug","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"debug","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"guest_size","","",9,[[]]],[11,"guest_align","","",9,[[]]],[11,"read","","",9,[[["guestptr",3]],[["guesterror",4],["result",4]]]],[11,"write","","",9,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"guest_size","","",9,[[]]],[11,"guest_align","","",9,[[]]],[11,"read","","",9,[[["guestptr",3]],[["guesterror",4],["result",4]]]],[11,"write","","",9,[[["guestptr",3]],[["result",4],["guesterror",4]]]],[11,"drop","","",11,[[]]],[11,"drop","","",12,[[]]],[11,"drop","","",13,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",0,[[["utf8error",3]]]],[11,"from","","",0,[[["tryfrominterror",3]]]],[11,"clone","","",6,[[],["region",3]]],[11,"clone","","",8,[[],["borrowhandle",3]]],[11,"clone","","",9,[[]]],[11,"clone","","",10,[[],["trap",4]]],[11,"eq","","",0,[[["guesterror",4]]]],[11,"ne","","",0,[[["guesterror",4]]]],[11,"eq","","",6,[[["region",3]]]],[11,"ne","","",6,[[["region",3]]]],[11,"eq","","",8,[[["borrowhandle",3]]]],[11,"ne","","",8,[[["borrowhandle",3]]]],[11,"eq","","",10,[[["trap",4]]]],[11,"ne","","",10,[[["trap",4]]]],[11,"deref","","",11,[[]]],[11,"deref","","",12,[[]]],[11,"deref","","",13,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",12,[[]]],[11,"deref_mut","","",14,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",8,[[]]],[11,"source","","",0,[[],[["error",8],["option",4]]]],[11,"new","","",6,[[]]],[11,"overlaps","","Checks if this `Region` overlaps with `rhs` `Region`.",6,[[["region",3]]]],[11,"extend","","",6,[[]]]],"p":[[4,"GuestError"],[13,"InFunc"],[13,"InDataField"],[8,"GuestErrorType"],[8,"GuestType"],[8,"GuestTypeTransparent"],[3,"Region"],[8,"GuestMemory"],[3,"BorrowHandle"],[3,"GuestPtr"],[4,"Trap"],[3,"GuestSlice"],[3,"GuestSliceMut"],[3,"GuestStr"],[3,"GuestStrMut"]]},\
"wiggle_borrow":{"doc":"","i":[[3,"BorrowChecker","wiggle_borrow","",null,null],[11,"new","","A `BorrowChecker` manages run-time validation of borrows…",0,[[]]],[11,"has_outstanding_borrows","","Indicates whether any outstanding shared or mutable…",0,[[]]],[11,"shared_borrow","","",0,[[["region",3]],[["borrowhandle",3],["result",4],["guesterror",4]]]],[11,"mut_borrow","","",0,[[["region",3]],[["borrowhandle",3],["result",4],["guesterror",4]]]],[11,"shared_unborrow","","",0,[[["borrowhandle",3]]]],[11,"mut_unborrow","","",0,[[["borrowhandle",3]]]],[11,"is_shared_borrowed","","",0,[[["region",3]]]],[11,"is_mut_borrowed","","",0,[[["region",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"debug","","",0,[[["formatter",3]],[["error",3],["result",4]]]]],"p":[[3,"BorrowChecker"]]},\
"wiggle_generate":{"doc":"","i":[[0,"config","wiggle_generate","",null,null],[3,"Config","wiggle_generate::config","",null,null],[12,"witx","","",0,null],[12,"ctx","","",0,null],[12,"errors","","",0,null],[4,"ConfigField","","",null,null],[13,"Witx","","",1,null],[13,"Ctx","","",1,null],[13,"Error","","",1,null],[11,"build","","",0,[[["span",3]],["result",6]]],[11,"load_document","","Load the `witx` document for the configuration.",0,[[],["document",3]]],[4,"WitxConf","","The witx document(s) that will be loaded from a `Config`.",null,null],[13,"Paths","","A collection of paths pointing to witx files.",2,null],[13,"Literal","","A single witx document, provided as a string literal.",2,null],[11,"load_document","","Load the `witx` document.",2,[[],["document",3]]],[3,"Paths","","A collection of paths, pointing to witx documents.",null,null],[11,"new","","Create a new, empty collection of paths.",3,[[]]],[3,"Literal","","A single witx document, provided as a string literal.",null,null],[3,"CtxConf","","",null,null],[12,"name","","",4,null],[3,"ErrorConf","","Map from abi error type to rich error type",null,null],[11,"iter","","",5,[[]]],[3,"ErrorConfField","","",null,null],[12,"abi_error","","",6,null],[12,"rich_error","","",6,null],[12,"err_loc","","",6,null],[3,"ErrorTransform","wiggle_generate","",null,null],[3,"UserErrorType","","",null,null],[5,"define_func","","",null,[[["interfacefunc",3],["module",3],["errortransform",3],["names",3]],["tokenstream",3]]],[5,"define_module_trait","","",null,[[["module",3],["errortransform",3],["names",3]],["tokenstream",3]]],[3,"Names","","",null,null],[5,"define_datatype","","",null,[[["namedtype",3],["names",3]],["tokenstream",3]]],[5,"generate","","",null,[[["errortransform",3],["document",3],["names",3]],["tokenstream",3]]],[5,"generate_metadata","","",null,[[["document",3],["names",3]],["tokenstream",3]]],[11,"from","wiggle_generate::config","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","wiggle_generate","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"as_mut","wiggle_generate::config","",3,[[]]],[11,"as_ref","","",3,[[]]],[11,"as_ref","","",7,[[]]],[11,"clone","","",0,[[],["config",3]]],[11,"clone","","",1,[[],["configfield",4]]],[11,"clone","","",2,[[],["witxconf",4]]],[11,"clone","","",3,[[],["paths",3]]],[11,"clone","","",7,[[],["literal",3]]],[11,"clone","","",4,[[],["ctxconf",3]]],[11,"clone","","",5,[[],["errorconf",3]]],[11,"clone","","",6,[[],["errorconffield",3]]],[11,"default","","",3,[[]]],[11,"default","","",5,[[],["errorconf",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"from_iter","","",3,[[]]],[11,"parse","","",1,[[["parsestream",6]],["result",6]]],[11,"parse","","",0,[[["parsestream",6]],["result",6]]],[11,"parse","","",3,[[["parsestream",6]],["result",6]]],[11,"parse","","",7,[[["parsestream",6]],["result",6]]],[11,"parse","","",4,[[["parsestream",6]],["result",6]]],[11,"parse","","",5,[[["parsestream",6]],["result",6]]],[11,"parse","","",6,[[["parsestream",6]],["result",6]]],[11,"empty","wiggle_generate","",8,[[]]],[11,"new","","",8,[[["document",3],["errorconf",3]],[["error",3],["result",4]]]],[11,"iter","","",8,[[]]],[11,"for_abi_error","","",8,[[["typeref",4]],[["option",4],["usererrortype",3]]]],[11,"abi_type","","",9,[[],["typeref",4]]],[11,"typename","","",9,[[],["tokenstream",3]]],[11,"method_fragment","","",9,[[]]],[11,"new","","",10,[[["ident",3],["tokenstream",3]],["names",3]]],[11,"ctx_type","","",10,[[],["ident",3]]],[11,"runtime_mod","","",10,[[],["tokenstream",3]]],[11,"type_","","",10,[[["id",3]],["tokenstream",3]]],[11,"builtin_type","","",10,[[["builtintype",4],["tokenstream",3]],["tokenstream",3]]],[11,"atom_type","","",10,[[["atomtype",4]],["tokenstream",3]]],[11,"type_ref","","",10,[[["typeref",4],["tokenstream",3]],["tokenstream",3]]],[11,"enum_variant","","Convert an enum variant from its `Id` name to its Rust…",10,[[["id",3]],["ident",3]]],[11,"flag_member","","",10,[[["id",3]],["ident",3]]],[11,"int_member","","",10,[[["id",3]],["ident",3]]],[11,"struct_member","","Convert a struct member from its `Id` name to its Rust…",10,[[["id",3]],["ident",3]]],[11,"module","","Convert a module name from its `Id` name to its Rust…",10,[[["id",3]],["ident",3]]],[11,"trait_name","","Convert a trait name from its `Id` name to its Rust…",10,[[["id",3]],["ident",3]]],[11,"func","","Convert a function name from its `Id` name to its Rust…",10,[[["id",3]],["ident",3]]],[11,"func_param","","Convert a parameter name from its `Id` name to its Rust…",10,[[["id",3]],["ident",3]]],[11,"func_core_arg","","",10,[[["coreparamtype",3]],["ident",3]]],[11,"func_ptr_binding","","For when you need a {name}_ptr binding for passing a value…",10,[[["id",3]],["ident",3]]],[11,"func_len_binding","","For when you need a {name}_len binding for passing an array:",10,[[["id",3]],["ident",3]]],[11,"guest_error_conversion_method","","",10,[[["typeref",4]],["ident",3]]],[11,"user_error_conversion_method","","",10,[[["usererrortype",3]],["ident",3]]]],"p":[[3,"Config"],[4,"ConfigField"],[4,"WitxConf"],[3,"Paths"],[3,"CtxConf"],[3,"ErrorConf"],[3,"ErrorConfField"],[3,"Literal"],[3,"ErrorTransform"],[3,"UserErrorType"],[3,"Names"]]},\
"wiggle_macro":{"doc":"","i":[[14,"from_witx","wiggle_macro","This macro expands to a set of `pub` Rust modules:",null,null]],"p":[]},\
"wiggle_test":{"doc":"","i":[[3,"MemAreas","wiggle_test","",null,null],[11,"new","","",0,[[]]],[11,"insert","","",0,[[["memarea",3]]]],[11,"iter","","",0,[[]]],[3,"HostMemory","","",null,null],[11,"new","","",1,[[]]],[11,"mem_area_strat","","",1,[[],[["boxedstrategy",3],["memarea",3]]]],[11,"invert","","Takes a sorted list or memareas, and gives a sorted list…",1,[[["memareas",3]],["memareas",3]]],[11,"byte_slice_strat","","",1,[[["memareas",3]],[["boxedstrategy",3],["memarea",3]]]],[3,"MemArea","","",null,null],[12,"ptr","","",2,null],[12,"len","","",2,null],[11,"overlapping","","",2,[[]]],[11,"non_overlapping_set","","",2,[[]]],[3,"WasiCtx","","",null,null],[12,"guest_errors","","",3,null],[12,"log","","",3,null],[11,"new","","",3,[[]]],[14,"impl_errno","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"debug","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"debug","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"debug","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"debug","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",0,[[],["memareas",3]]],[11,"into","","",0,[[],[["memarea",3],["vec",3]]]],[11,"clone","","",0,[[],["memareas",3]]],[11,"clone","","",2,[[],["memarea",3]]],[11,"cmp","","",2,[[["memarea",3]],["ordering",4]]],[11,"eq","","",2,[[["memarea",3]]]],[11,"ne","","",2,[[["memarea",3]]]],[11,"partial_cmp","","",2,[[["memarea",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["memarea",3]]]],[11,"le","","",2,[[["memarea",3]]]],[11,"gt","","",2,[[["memarea",3]]]],[11,"ge","","",2,[[["memarea",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"base","","",1,[[]]],[11,"has_outstanding_borrows","","",1,[[]]],[11,"is_shared_borrowed","","",1,[[["region",3]]]],[11,"is_mut_borrowed","","",1,[[["region",3]]]],[11,"mut_borrow","","",1,[[["region",3]],[["result",4],["borrowhandle",3],["guesterror",4]]]],[11,"shared_borrow","","",1,[[["region",3]],[["result",4],["borrowhandle",3],["guesterror",4]]]],[11,"shared_unborrow","","",1,[[["borrowhandle",3]]]],[11,"mut_unborrow","","",1,[[["borrowhandle",3]]]]],"p":[[3,"MemAreas"],[3,"HostMemory"],[3,"MemArea"],[3,"WasiCtx"]]},\
"winx":{"doc":"","i":[],"p":[]},\
"witx":{"doc":"","i":[[0,"phases","witx","Paths to witx documents for various proposal phases",null,null],[0,"old","witx::phases","",null,null],[5,"snapshot_0","witx::phases::old","",null,[[],[["result",6],["vec",3]]]],[5,"docs_path","witx::phases","",null,[[],["pathbuf",3]]],[5,"snapshot","","",null,[[],[["result",6],["vec",3]]]],[5,"ephemeral","","",null,[[],[["result",6],["vec",3]]]],[0,"polyfill","witx","Calculate required polyfill between interfaces",null,null],[4,"PolyfillError","witx::polyfill","",null,null],[13,"ModuleNotPresent","","",0,null],[12,"name","witx::polyfill::PolyfillError","",1,null],[13,"FuncNotPresent","witx::polyfill","",0,null],[12,"module","witx::polyfill::PolyfillError","",2,null],[12,"name","","",2,null],[3,"Polyfill","witx::polyfill","",null,null],[12,"modules","","",3,null],[11,"new","","",3,[[["document",3],["hashmap",3]],[["result",4],["polyfillerror",4]]]],[11,"type_polyfills","","",3,[[],[["typepolyfill",4],["hashset",3]]]],[3,"ModulePolyfill","","",null,null],[12,"new","","",4,null],[12,"old","","",4,null],[12,"funcs","","",4,null],[11,"new","","",4,[[["module",3],["rc",3]],[["result",4],["polyfillerror",4]]]],[11,"type_polyfills","","",4,[[],[["typepolyfill",4],["hashset",3]]]],[3,"FuncPolyfill","","",null,null],[12,"new","","",5,null],[12,"old","","",5,null],[12,"mapped_params","","",5,null],[12,"unknown_params","","",5,null],[12,"mapped_results","","",5,null],[12,"unknown_results","","",5,null],[11,"new","","",5,[[["rc",3],["interfacefunc",3]],["funcpolyfill",3]]],[11,"full_compat","","",5,[[]]],[11,"type_polyfills","","",5,[[],[["typepolyfill",4],["hashset",3]]]],[3,"ParamPolyfill","","",null,null],[12,"new","","",6,null],[12,"old","","",6,null],[12,"type_polyfill","","",6,null],[11,"param","","",6,[[["interfacefuncparam",3]]]],[11,"result","","",6,[[["interfacefuncparam",3]]]],[11,"full_compat","","",6,[[]]],[11,"repeq","","",6,[[],["repequality",4]]],[4,"ParamUnknown","","",null,null],[13,"Old","","",7,null],[13,"New","","",7,null],[11,"which","","",7,[[]]],[11,"param","","",7,[[],["interfacefuncparam",3]]],[4,"TypePolyfill","","",null,null],[13,"NewToOld","","",8,null],[13,"OldToNew","","",8,null],[11,"repeq","","",8,[[],["repequality",4]]],[4,"BuiltinType","witx","",null,null],[13,"String","","",9,null],[13,"Char8","","",9,null],[13,"USize","","",9,null],[13,"U8","","",9,null],[13,"U16","","",9,null],[13,"U32","","",9,null],[13,"U64","","",9,null],[13,"S8","","",9,null],[13,"S16","","",9,null],[13,"S32","","",9,null],[13,"S64","","",9,null],[13,"F32","","",9,null],[13,"F64","","",9,null],[4,"Definition","","",null,null],[13,"Typename","","",10,null],[13,"Module","","",10,null],[3,"Document","","",null,null],[4,"Entry","","",null,null],[13,"Typename","","",11,null],[13,"Module","","",11,null],[3,"EnumDatatype","","",null,null],[12,"repr","","",12,null],[12,"variants","","",12,null],[3,"EnumVariant","","",null,null],[12,"name","","",13,null],[12,"docs","","",13,null],[3,"FlagsDatatype","","",null,null],[12,"repr","","",14,null],[12,"flags","","",14,null],[3,"FlagsMember","","",null,null],[12,"name","","",15,null],[12,"docs","","",15,null],[3,"HandleDatatype","","",null,null],[3,"Id","","",null,null],[3,"IntConst","","",null,null],[12,"name","","",16,null],[12,"value","","",16,null],[12,"docs","","",16,null],[3,"IntDatatype","","",null,null],[12,"repr","","",17,null],[12,"consts","","",17,null],[4,"IntRepr","","",null,null],[13,"U8","","",18,null],[13,"U16","","",18,null],[13,"U32","","",18,null],[13,"U64","","",18,null],[3,"InterfaceFunc","","",null,null],[12,"name","","",19,null],[12,"params","","",19,null],[12,"results","","",19,null],[12,"noreturn","","",19,null],[12,"docs","","",19,null],[3,"InterfaceFuncParam","","",null,null],[12,"name","","",20,null],[12,"tref","","",20,null],[12,"position","","",20,null],[12,"docs","","",20,null],[4,"InterfaceFuncParamPosition","","",null,null],[13,"Param","","",21,null],[13,"Result","","",21,null],[3,"Module","","",null,null],[12,"name","","",22,null],[12,"docs","","",22,null],[4,"ModuleDefinition","","",null,null],[13,"Import","","",23,null],[13,"Func","","",23,null],[4,"ModuleEntry","","",null,null],[13,"Import","","",24,null],[13,"Func","","",24,null],[3,"ModuleImport","","",null,null],[12,"name","","",25,null],[12,"variant","","",25,null],[12,"docs","","",25,null],[4,"ModuleImportVariant","","",null,null],[13,"Memory","","",26,null],[3,"NamedType","","",null,null],[12,"name","","",27,null],[12,"tref","","",27,null],[12,"docs","","",27,null],[3,"StructDatatype","","",null,null],[12,"members","","",28,null],[3,"StructMember","","",null,null],[12,"name","","",29,null],[12,"tref","","",29,null],[12,"docs","","",29,null],[4,"Type","","",null,null],[13,"Enum","","",30,null],[13,"Int","","",30,null],[13,"Flags","","",30,null],[13,"Struct","","",30,null],[13,"Union","","",30,null],[13,"Handle","","",30,null],[13,"Array","","",30,null],[13,"Pointer","","",30,null],[13,"ConstPointer","","",30,null],[13,"Builtin","","",30,null],[4,"TypeRef","","",null,null],[13,"Name","","",31,null],[13,"Value","","",31,null],[3,"UnionDatatype","","",null,null],[12,"tag","","",32,null],[12,"variants","","",32,null],[3,"UnionVariant","","",null,null],[12,"name","","",33,null],[12,"tref","","",33,null],[12,"docs","","",33,null],[4,"AtomType","","Enumerates the types permitted for function arguments in…",null,null],[13,"I32","","",34,null],[13,"I64","","",34,null],[13,"F32","","",34,null],[13,"F64","","",34,null],[3,"CoreFuncType","","Describes the WebAssembly signature of a function",null,null],[12,"args","","",35,null],[12,"ret","","",35,null],[4,"CoreParamSignifies","","Enumerates the sort of relationship an WebAssembly…",null,null],[13,"Value","","Core type represents the value using an AtomType",36,null],[13,"PointerTo","","Core type represents a pointer into linear memory",36,null],[13,"LengthOf","","Core type represents a length of a region of linear memory",36,null],[3,"CoreParamType","","A parameter in the WebAssembly type of a function.",null,null],[12,"param","","The interface function parameter to which this",37,null],[12,"signifies","","The relationship of the WebAssembly parameter to the…",37,null],[4,"TypePassedBy","","Enumerates the strategies which may be used to pass a…",null,null],[13,"Value","","Pass by value specifies the AtomType used to represent…",38,null],[13,"Pointer","","Pass by a pointer into linear memory",38,null],[13,"PointerLengthPair","","Pass by a pointer and length pair, into linear memory",38,null],[8,"Documentation","","Enables generating Markdown formatted content.",null,null],[10,"to_md","","",39,[[],["string",3]]],[3,"Filesystem","","",null,null],[3,"MockFs","","",null,null],[8,"WitxIo","","",null,null],[10,"fgets","","Read the entire file into a String. Used to resolve `use`…",40,[[["path",3]],[["result",4],["string",3],["witxerror",4]]]],[10,"fget_line","","Read a line of a file into a String. Used for error…",40,[[["path",3]],[["result",4],["string",3],["witxerror",4]]]],[10,"canonicalize","","Return the canonical (non-symlinked) path of a file. Used…",40,[[["path",3]],[["result",4],["pathbuf",3],["witxerror",4]]]],[8,"Layout","","",null,null],[10,"mem_size_align","","",41,[[],["sizealign",3]]],[11,"mem_size","","",41,[[]]],[11,"mem_align","","",41,[[]]],[3,"SizeAlign","","",null,null],[12,"size","","",42,null],[12,"align","","",42,null],[3,"StructMemberLayout","","",null,null],[12,"member","","",43,null],[12,"offset","","",43,null],[3,"UnionLayout","","",null,null],[12,"tag_size","","",44,null],[12,"tag_align","","",44,null],[12,"contents_offset","","",44,null],[12,"contents_size","","",44,null],[12,"contents_align","","",44,null],[4,"DeclSyntax","","",null,null],[13,"Typename","","",45,null],[13,"Module","","",45,null],[4,"SExpr","","",null,null],[13,"Vec","","",46,null],[13,"Word","","",46,null],[13,"Ident","","",46,null],[13,"Quote","","",46,null],[13,"Annot","","Short for Annotation",46,null],[13,"Docs","","Doc comment",46,null],[4,"RepEquality","","",null,null],[13,"Eq","","",47,null],[13,"Superset","","",47,null],[13,"NotEq","","",47,null],[8,"Representable","","",null,null],[10,"representable","","",48,[[],["repequality",4]]],[4,"ValidationError","","",null,null],[13,"UnknownName","","",49,null],[12,"name","witx::ValidationError","",50,null],[12,"location","","",50,null],[13,"NameAlreadyExists","witx","",49,null],[12,"name","witx::ValidationError","",51,null],[12,"at_location","","",51,null],[12,"previous_location","","",51,null],[13,"WrongKindName","witx","",49,null],[12,"name","witx::ValidationError","",52,null],[12,"location","","",52,null],[12,"expected","","",52,null],[12,"got","","",52,null],[13,"Recursive","witx","",49,null],[12,"name","witx::ValidationError","",53,null],[12,"location","","",53,null],[13,"InvalidRepr","witx","",49,null],[12,"repr","witx::ValidationError","",54,null],[12,"location","","",54,null],[13,"InvalidFirstResultType","witx","",49,null],[12,"location","witx::ValidationError","",55,null],[13,"AnonymousStructure","witx","",49,null],[12,"location","witx::ValidationError","",56,null],[13,"InvalidUnionField","witx","",49,null],[12,"name","witx::ValidationError","",57,null],[12,"reason","","",57,null],[12,"location","","",57,null],[5,"load","witx","Load a witx document from the filesystem",null,[[],[["document",3],["result",4],["witxerror",4]]]],[5,"parse","","Parse a witx document from a str. `(use ...)` directives…",null,[[],[["document",3],["result",4],["witxerror",4]]]],[3,"Location","","Location in the source text",null,null],[12,"path","","",58,null],[12,"line","","",58,null],[12,"column","","",58,null],[4,"WitxError","","",null,null],[13,"Io","","",59,null],[13,"Parse","","",59,null],[13,"Validation","","",59,null],[11,"report_with","","",59,[[["witxio",8]],["string",3]]],[11,"report","","",59,[[],["string",3]]],[11,"highlight_source_with","","",58,[[["witxio",8]],["string",3]]],[11,"highlight_source","","",58,[[],["string",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"to_string","","",61,[[],["string",3]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","witx::polyfill","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","witx","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_string","","",59,[[],["string",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"to_md","witx::polyfill","",3,[[],["string",3]]],[11,"to_md","","",4,[[],["string",3]]],[11,"to_md","","",5,[[],["string",3]]],[11,"to_md","","",6,[[],["string",3]]],[11,"to_md","","",8,[[],["string",3]]],[11,"to_md","witx","",61,[[],["string",3]]],[11,"fgets","","",63,[[["path",3]],[["result",4],["string",3],["witxerror",4]]]],[11,"fget_line","","",63,[[["path",3]],[["result",4],["string",3],["witxerror",4]]]],[11,"canonicalize","","",63,[[["path",3]],[["result",4],["pathbuf",3],["witxerror",4]]]],[11,"fgets","","",64,[[["path",3]],[["result",4],["string",3],["witxerror",4]]]],[11,"fget_line","","",64,[[["path",3]],[["result",4],["string",3],["witxerror",4]]]],[11,"canonicalize","","",64,[[["path",3]],[["result",4],["pathbuf",3],["witxerror",4]]]],[11,"mem_size_align","","",31,[[],["sizealign",3]]],[11,"mem_size_align","","",27,[[],["sizealign",3]]],[11,"mem_size_align","","",30,[[],["sizealign",3]]],[11,"mem_size_align","","",18,[[],["sizealign",3]]],[11,"mem_size_align","","",28,[[],["sizealign",3]]],[11,"mem_size_align","","",44,[[],["sizealign",3]]],[11,"mem_size_align","","",32,[[],["sizealign",3]]],[11,"mem_size_align","","",62,[[],["sizealign",3]]],[11,"mem_size_align","","",9,[[],["sizealign",3]]],[11,"representable","","",9,[[],["repequality",4]]],[11,"representable","","",18,[[],["repequality",4]]],[11,"representable","","",12,[[],["repequality",4]]],[11,"representable","","",14,[[],["repequality",4]]],[11,"representable","","",28,[[],["repequality",4]]],[11,"representable","","",32,[[],["repequality",4]]],[11,"representable","","",31,[[],["repequality",4]]],[11,"representable","","",27,[[],["repequality",4]]],[11,"representable","","",30,[[],["repequality",4]]],[11,"as_ref","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",34,[[["intrepr",4]],["atomtype",4]]],[11,"from","","",59,[[["error",3]]]],[11,"from","","",59,[[["validationerror",4]]]],[11,"clone","","",60,[[],["id",3]]],[11,"clone","","",61,[[],["document",3]]],[11,"clone","","",10,[[],["definition",4]]],[11,"clone","","",11,[[],["entry",4]]],[11,"clone","","",31,[[],["typeref",4]]],[11,"clone","","",27,[[],["namedtype",3]]],[11,"clone","","",30,[[],["type",4]]],[11,"clone","","",9,[[],["builtintype",4]]],[11,"clone","","",18,[[],["intrepr",4]]],[11,"clone","","",12,[[],["enumdatatype",3]]],[11,"clone","","",13,[[],["enumvariant",3]]],[11,"clone","","",17,[[],["intdatatype",3]]],[11,"clone","","",16,[[],["intconst",3]]],[11,"clone","","",14,[[],["flagsdatatype",3]]],[11,"clone","","",15,[[],["flagsmember",3]]],[11,"clone","","",28,[[],["structdatatype",3]]],[11,"clone","","",29,[[],["structmember",3]]],[11,"clone","","",32,[[],["uniondatatype",3]]],[11,"clone","","",33,[[],["unionvariant",3]]],[11,"clone","","",62,[[],["handledatatype",3]]],[11,"clone","","",22,[[],["module",3]]],[11,"clone","","",23,[[],["moduledefinition",4]]],[11,"clone","","",24,[[],["moduleentry",4]]],[11,"clone","","",25,[[],["moduleimport",3]]],[11,"clone","","",26,[[],["moduleimportvariant",4]]],[11,"clone","","",19,[[],["interfacefunc",3]]],[11,"clone","","",20,[[],["interfacefuncparam",3]]],[11,"clone","","",21,[[],["interfacefuncparamposition",4]]],[11,"clone","","",34,[[],["atomtype",4]]],[11,"clone","","",38,[[],["typepassedby",4]]],[11,"clone","","",37,[[],["coreparamtype",3]]],[11,"clone","","",36,[[],["coreparamsignifies",4]]],[11,"clone","","",35,[[],["corefunctype",3]]],[11,"clone","","",42,[[],["sizealign",3]]],[11,"clone","","",44,[[],["unionlayout",3]]],[11,"clone","","",45,[[],["declsyntax",4]]],[11,"clone","witx::polyfill","",3,[[],["polyfill",3]]],[11,"clone","","",4,[[],["modulepolyfill",3]]],[11,"clone","","",5,[[],["funcpolyfill",3]]],[11,"clone","","",6,[[],["parampolyfill",3]]],[11,"clone","","",7,[[],["paramunknown",4]]],[11,"clone","","",8,[[],["typepolyfill",4]]],[11,"clone","witx","",46,[[],["sexpr",4]]],[11,"clone","","",47,[[],["repequality",4]]],[11,"clone","","",58,[[],["location",3]]],[11,"cmp","","",42,[[["sizealign",3]],["ordering",4]]],[11,"eq","","",60,[[["id",3]]]],[11,"ne","","",60,[[["id",3]]]],[11,"eq","","",60,[[]]],[11,"eq","","",61,[[["document",3]]]],[11,"eq","","",10,[[["definition",4]]]],[11,"ne","","",10,[[["definition",4]]]],[11,"eq","","",11,[[["entry",4]]]],[11,"eq","","",31,[[["typeref",4]]]],[11,"ne","","",31,[[["typeref",4]]]],[11,"eq","","",27,[[["namedtype",3]]]],[11,"ne","","",27,[[["namedtype",3]]]],[11,"eq","","",30,[[["type",4]]]],[11,"ne","","",30,[[["type",4]]]],[11,"eq","","",9,[[["builtintype",4]]]],[11,"eq","","",18,[[["intrepr",4]]]],[11,"eq","","",12,[[["enumdatatype",3]]]],[11,"ne","","",12,[[["enumdatatype",3]]]],[11,"eq","","",13,[[["enumvariant",3]]]],[11,"ne","","",13,[[["enumvariant",3]]]],[11,"eq","","",17,[[["intdatatype",3]]]],[11,"ne","","",17,[[["intdatatype",3]]]],[11,"eq","","",16,[[["intconst",3]]]],[11,"ne","","",16,[[["intconst",3]]]],[11,"eq","","",14,[[["flagsdatatype",3]]]],[11,"ne","","",14,[[["flagsdatatype",3]]]],[11,"eq","","",15,[[["flagsmember",3]]]],[11,"ne","","",15,[[["flagsmember",3]]]],[11,"eq","","",28,[[["structdatatype",3]]]],[11,"ne","","",28,[[["structdatatype",3]]]],[11,"eq","","",29,[[["structmember",3]]]],[11,"ne","","",29,[[["structmember",3]]]],[11,"eq","","",32,[[["uniondatatype",3]]]],[11,"ne","","",32,[[["uniondatatype",3]]]],[11,"eq","","",33,[[["unionvariant",3]]]],[11,"ne","","",33,[[["unionvariant",3]]]],[11,"eq","","",62,[[["handledatatype",3]]]],[11,"eq","","",22,[[["module",3]]]],[11,"eq","","",23,[[["moduledefinition",4]]]],[11,"ne","","",23,[[["moduledefinition",4]]]],[11,"eq","","",24,[[["moduleentry",4]]]],[11,"eq","","",25,[[["moduleimport",3]]]],[11,"ne","","",25,[[["moduleimport",3]]]],[11,"eq","","",26,[[["moduleimportvariant",4]]]],[11,"eq","","",19,[[["interfacefunc",3]]]],[11,"ne","","",19,[[["interfacefunc",3]]]],[11,"eq","","",20,[[["interfacefuncparam",3]]]],[11,"ne","","",20,[[["interfacefuncparam",3]]]],[11,"eq","","",21,[[["interfacefuncparamposition",4]]]],[11,"ne","","",21,[[["interfacefuncparamposition",4]]]],[11,"eq","","",34,[[["atomtype",4]]]],[11,"eq","","",38,[[["typepassedby",4]]]],[11,"ne","","",38,[[["typepassedby",4]]]],[11,"eq","","",37,[[["coreparamtype",3]]]],[11,"ne","","",37,[[["coreparamtype",3]]]],[11,"eq","","",36,[[["coreparamsignifies",4]]]],[11,"ne","","",36,[[["coreparamsignifies",4]]]],[11,"eq","","",35,[[["corefunctype",3]]]],[11,"ne","","",35,[[["corefunctype",3]]]],[11,"eq","","",42,[[["sizealign",3]]]],[11,"ne","","",42,[[["sizealign",3]]]],[11,"eq","","",44,[[["unionlayout",3]]]],[11,"ne","","",44,[[["unionlayout",3]]]],[11,"eq","","",45,[[["declsyntax",4]]]],[11,"ne","","",45,[[["declsyntax",4]]]],[11,"eq","witx::polyfill","",3,[[["polyfill",3]]]],[11,"ne","","",3,[[["polyfill",3]]]],[11,"eq","","",4,[[["modulepolyfill",3]]]],[11,"ne","","",4,[[["modulepolyfill",3]]]],[11,"eq","","",5,[[["funcpolyfill",3]]]],[11,"ne","","",5,[[["funcpolyfill",3]]]],[11,"eq","","",6,[[["parampolyfill",3]]]],[11,"ne","","",6,[[["parampolyfill",3]]]],[11,"eq","","",7,[[["paramunknown",4]]]],[11,"ne","","",7,[[["paramunknown",4]]]],[11,"eq","","",8,[[["typepolyfill",4]]]],[11,"ne","","",8,[[["typepolyfill",4]]]],[11,"eq","witx","",46,[[["sexpr",4]]]],[11,"ne","","",46,[[["sexpr",4]]]],[11,"eq","","",47,[[["repequality",4]]]],[11,"eq","","",58,[[["location",3]]]],[11,"ne","","",58,[[["location",3]]]],[11,"partial_cmp","","",42,[[["sizealign",3]],[["ordering",4],["option",4]]]],[11,"lt","","",42,[[["sizealign",3]]]],[11,"le","","",42,[[["sizealign",3]]]],[11,"gt","","",42,[[["sizealign",3]]]],[11,"ge","","",42,[[["sizealign",3]]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","witx::polyfill","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","witx","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","witx::polyfill","",0,[[["formatter",3]],["result",6]]],[11,"fmt","witx","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"hash","","",60,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",62,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",42,[[]]],[11,"hash","witx::polyfill","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"source","witx","",59,[[],[["error",8],["option",4]]]],[11,"parse","","",9,[[["parser",3]],["result",6]]],[11,"parse","","",45,[[["parser",3]],["result",6]]],[11,"peek","","",9,[[["cursor",3]]]],[11,"display","","",9,[[]]],[11,"new","","",60,[[["asref",8]]]],[11,"as_str","","",60,[[]]],[11,"typename","","",61,[[["id",3]],[["rc",3],["option",4]]]],[11,"typenames","","",61,[[]]],[11,"error_types","","All of the (unique) types used as the first result value…",61,[[]]],[11,"module","","",61,[[["id",3]],[["option",4],["rc",3]]]],[11,"modules","","",61,[[]]],[11,"kind","","",11,[[]]],[11,"type_","","",31,[[],[["rc",3],["type",4]]]],[11,"type_","","",27,[[],[["rc",3],["type",4]]]],[11,"kind","","",30,[[]]],[11,"import","","",22,[[["id",3]],[["option",4],["rc",3]]]],[11,"imports","","",22,[[]]],[11,"func","","",22,[[["id",3]],[["rc",3],["option",4]]]],[11,"funcs","","",22,[[]]],[11,"passed_by","","Determine the simplest strategy by which a type may be…",30,[[],["typepassedby",4]]],[11,"repr","","Representation of the WebAssembly parameter. This is the…",37,[[],["atomtype",4]]],[11,"repr","","Representation of the WebAssembly parameter.",36,[[],["atomtype",4]]],[11,"pass_by_value","","Gives the WebAssembly type that corresponds to passing…",20,[[],[["coreparamtype",3],["option",4]]]],[11,"pass_by_reference","","Gives the WebAssembly types that correspond to passing…",20,[[],[["coreparamtype",3],["vec",3]]]],[11,"core_type","","Get the WebAssembly type signature for this interface…",19,[[],["corefunctype",3]]],[11,"type_name","","",9,[[]]],[11,"type_name","","",31,[[],["string",3]]],[11,"new","","",64,[[]]],[11,"mem_size","","",41,[[]]],[11,"mem_align","","",41,[[]]],[11,"member_layout","","",28,[[],[["structmemberlayout",3],["vec",3]]]],[11,"union_layout","","",32,[[],["unionlayout",3]]],[11,"word","","",46,[[],["sexpr",4]]],[11,"ident","","",46,[[],["sexpr",4]]],[11,"quote","","",46,[[],["sexpr",4]]],[11,"annot","","",46,[[],["sexpr",4]]],[11,"docs","","",46,[[["sexpr",4]],["sexpr",4]]],[11,"to_sexpr","","",60,[[],["sexpr",4]]],[11,"to_sexpr","","",9,[[],["sexpr",4]]],[11,"to_sexpr","","",27,[[],["sexpr",4]]],[11,"to_sexpr","","",31,[[],["sexpr",4]]],[11,"to_sexpr","","",30,[[],["sexpr",4]]],[11,"to_sexpr","","",12,[[],["sexpr",4]]],[11,"to_sexpr","","",14,[[],["sexpr",4]]],[11,"to_sexpr","","",28,[[],["sexpr",4]]],[11,"to_sexpr","","",32,[[],["sexpr",4]]],[11,"to_sexpr","","",62,[[],["sexpr",4]]],[11,"to_sexpr","","",18,[[],["sexpr",4]]],[11,"to_sexpr","","",22,[[],["sexpr",4]]],[11,"to_sexpr","","",25,[[],["sexpr",4]]],[11,"to_sexpr","","",19,[[],["sexpr",4]]],[11,"join","","",47,[[]]],[11,"report_with","","",49,[[["witxio",8]],["string",3]]],[11,"report","","",49,[[],["string",3]]]],"p":[[4,"PolyfillError"],[13,"ModuleNotPresent"],[13,"FuncNotPresent"],[3,"Polyfill"],[3,"ModulePolyfill"],[3,"FuncPolyfill"],[3,"ParamPolyfill"],[4,"ParamUnknown"],[4,"TypePolyfill"],[4,"BuiltinType"],[4,"Definition"],[4,"Entry"],[3,"EnumDatatype"],[3,"EnumVariant"],[3,"FlagsDatatype"],[3,"FlagsMember"],[3,"IntConst"],[3,"IntDatatype"],[4,"IntRepr"],[3,"InterfaceFunc"],[3,"InterfaceFuncParam"],[4,"InterfaceFuncParamPosition"],[3,"Module"],[4,"ModuleDefinition"],[4,"ModuleEntry"],[3,"ModuleImport"],[4,"ModuleImportVariant"],[3,"NamedType"],[3,"StructDatatype"],[3,"StructMember"],[4,"Type"],[4,"TypeRef"],[3,"UnionDatatype"],[3,"UnionVariant"],[4,"AtomType"],[3,"CoreFuncType"],[4,"CoreParamSignifies"],[3,"CoreParamType"],[4,"TypePassedBy"],[8,"Documentation"],[8,"WitxIo"],[8,"Layout"],[3,"SizeAlign"],[3,"StructMemberLayout"],[3,"UnionLayout"],[4,"DeclSyntax"],[4,"SExpr"],[4,"RepEquality"],[8,"Representable"],[4,"ValidationError"],[13,"UnknownName"],[13,"NameAlreadyExists"],[13,"WrongKindName"],[13,"Recursive"],[13,"InvalidRepr"],[13,"InvalidFirstResultType"],[13,"AnonymousStructure"],[13,"InvalidUnionField"],[3,"Location"],[4,"WitxError"],[3,"Id"],[3,"Document"],[3,"HandleDatatype"],[3,"Filesystem"],[3,"MockFs"]]},\
"yanix":{"doc":"`yanix` stands for Yet Another Nix crate, and, well, it is…","i":[[0,"clock","yanix","",null,null],[4,"ClockId","yanix::clock","",null,null],[13,"Realtime","","",0,null],[13,"Monotonic","","",0,null],[13,"ProcessCPUTime","","",0,null],[13,"ThreadCPUTime","","",0,null],[11,"as_raw","","",0,[[],["clockid_t",6]]],[5,"clock_getres","","",null,[[["clockid",4]],[["timespec",3],["result",6]]]],[5,"clock_gettime","","",null,[[["clockid",4]],[["timespec",3],["result",6]]]],[0,"dir","yanix","",null,null],[8,"EntryExt","yanix::dir","",null,null],[10,"ino","","",1,[[]]],[10,"seek_loc","","",1,[[],[["seekloc",3],["result",6]]]],[3,"Dir","","",null,null],[11,"from","","Takes the ownership of the passed-in descriptor-based…",2,[[["intorawfd",8]],["result",6]]],[11,"seek","","Set the position of the directory stream, see `seekdir(3)`.",2,[[["seekloc",3]]]],[11,"rewind","","Reset directory stream, see `rewinddir(3)`.",2,[[]]],[11,"tell","","Get the current position in the directory stream.",2,[[],["seekloc",3]]],[3,"Entry","","",null,null],[11,"file_name","","Returns the file name of this directory entry.",3,[[],["cstr",3]]],[11,"file_type","","Returns the type of this directory entry.",3,[[],["filetype",4]]],[3,"SeekLoc","","",null,null],[11,"to_raw","","",4,[[]]],[11,"from_raw","","",4,[[],["result",6]]],[3,"DirIter","","",null,null],[11,"new","","",5,[[]]],[0,"fcntl","yanix","",null,null],[5,"dup_fd","yanix::fcntl","",null,[[["rawfd",6]],[["result",6],["rawfd",6]]]],[5,"get_fd_flags","","",null,[[["rawfd",6]],[["fdflags",3],["result",6]]]],[5,"set_fd_flags","","",null,[[["rawfd",6],["fdflags",3]],["result",6]]],[5,"get_status_flags","","",null,[[["rawfd",6]],[["result",6],["oflags",3]]]],[5,"set_status_flags","","",null,[[["rawfd",6],["oflags",3]],["result",6]]],[0,"file","yanix","",null,null],[5,"isatty","yanix::file","",null,[[["rawfd",6]],["result",6]]],[3,"FdFlags","","",null,null],[18,"CLOEXEC","","",6,null],[11,"empty","","Returns an empty set of flags",6,[[],["fdflags",3]]],[11,"all","","Returns the set containing all flags.",6,[[],["fdflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",6,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",6,[[["c_int",6]],[["option",4],["fdflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",6,[[["c_int",6]],["fdflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",6,[[["c_int",6]],["fdflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",6,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",6,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",6,[[["fdflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",6,[[["fdflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",6,[[["fdflags",3]]]],[11,"remove","","Removes the specified flags in-place.",6,[[["fdflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",6,[[["fdflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",6,[[["fdflags",3]]]],[3,"AtFlags","","",null,null],[18,"REMOVEDIR","","",7,null],[18,"SYMLINK_FOLLOW","","",7,null],[18,"SYMLINK_NOFOLLOW","","",7,null],[18,"EMPTY_PATH","","",7,null],[11,"empty","","Returns an empty set of flags",7,[[],["atflags",3]]],[11,"all","","Returns the set containing all flags.",7,[[],["atflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",7,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",7,[[["c_int",6]],[["option",4],["atflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",7,[[["c_int",6]],["atflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",7,[[["c_int",6]],["atflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",7,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",7,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",7,[[["atflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",7,[[["atflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",7,[[["atflags",3]]]],[11,"remove","","Removes the specified flags in-place.",7,[[["atflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",7,[[["atflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",7,[[["atflags",3]]]],[3,"Mode","","",null,null],[18,"IRWXU","","",8,null],[18,"IRUSR","","",8,null],[18,"IWUSR","","",8,null],[18,"IXUSR","","",8,null],[18,"IRWXG","","",8,null],[18,"IRGRP","","",8,null],[18,"IWGRP","","",8,null],[18,"IXGRP","","",8,null],[18,"IRWXO","","",8,null],[18,"IROTH","","",8,null],[18,"IWOTH","","",8,null],[18,"IXOTH","","",8,null],[18,"ISUID","","",8,null],[18,"ISGID","","",8,null],[18,"ISVTX","","",8,null],[11,"empty","","Returns an empty set of flags",8,[[],["mode",3]]],[11,"all","","Returns the set containing all flags.",8,[[],["mode",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",8,[[],["mode_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",8,[[["mode_t",6]],[["option",4],["mode",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",8,[[["mode_t",6]],["mode",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",8,[[["mode_t",6]],["mode",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",8,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",8,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",8,[[["mode",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",8,[[["mode",3]]]],[11,"insert","","Inserts the specified flags in-place.",8,[[["mode",3]]]],[11,"remove","","Removes the specified flags in-place.",8,[[["mode",3]]]],[11,"toggle","","Toggles the specified flags in-place.",8,[[["mode",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",8,[[["mode",3]]]],[3,"OFlags","","",null,null],[18,"ACCMODE","","",9,null],[18,"APPEND","","",9,null],[18,"CREAT","","",9,null],[18,"DIRECTORY","","",9,null],[18,"DSYNC","","",9,null],[18,"EXCL","","",9,null],[18,"FSYNC","","",9,null],[18,"NOFOLLOW","","",9,null],[18,"NONBLOCK","","",9,null],[18,"RDONLY","","",9,null],[18,"WRONLY","","",9,null],[18,"RDWR","","",9,null],[18,"RSYNC","","",9,null],[18,"SYNC","","",9,null],[18,"TRUNC","","",9,null],[18,"PATH","","",9,null],[18,"CLOEXEC","","",9,null],[11,"empty","","Returns an empty set of flags",9,[[],["oflags",3]]],[11,"all","","Returns the set containing all flags.",9,[[],["oflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",9,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",9,[[["c_int",6]],[["option",4],["oflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",9,[[["c_int",6]],["oflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",9,[[["c_int",6]],["oflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",9,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",9,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",9,[[["oflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",9,[[["oflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",9,[[["oflags",3]]]],[11,"remove","","Removes the specified flags in-place.",9,[[["oflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",9,[[["oflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",9,[[["oflags",3]]]],[4,"FileType","","",null,null],[13,"CharacterDevice","","",10,null],[13,"Directory","","",10,null],[13,"BlockDevice","","",10,null],[13,"RegularFile","","",10,null],[13,"Symlink","","",10,null],[13,"Fifo","","",10,null],[13,"Socket","","",10,null],[13,"Unknown","","",10,null],[11,"from_stat_st_mode","","",10,[[["mode_t",6]]]],[11,"from_dirent_d_type","","",10,[[]]],[5,"openat","","",null,[[["rawfd",6],["asref",8],["path",3],["oflags",3],["mode",3]],[["result",6],["rawfd",6]]]],[5,"readlinkat","","",null,[[["rawfd",6],["asref",8],["path",3]],[["result",6],["osstring",3]]]],[5,"mkdirat","","",null,[[["rawfd",6],["asref",8],["path",3],["mode",3]],["result",6]]],[5,"linkat","","",null,[[["rawfd",6],["asref",8],["atflags",3],["path",3]],["result",6]]],[5,"unlinkat","","",null,[[["rawfd",6],["asref",8],["atflags",3],["path",3]],["result",6]]],[5,"renameat","","",null,[[["rawfd",6],["asref",8],["path",3]],["result",6]]],[5,"symlinkat","","",null,[[["asref",8],["rawfd",6],["path",3]],["result",6]]],[5,"fstatat","","",null,[[["rawfd",6],["asref",8],["atflags",3],["path",3]],[["result",6],["stat",3]]]],[5,"fstat","","",null,[[["rawfd",6]],[["result",6],["stat",3]]]],[5,"fionread","","`fionread()` function, equivalent to `ioctl(fd, FIONREAD,…",null,[[["rawfd",6]],["result",6]]],[5,"tell","","This function is unsafe because it operates on a raw file…",null,[[["rawfd",6]],["result",6]]],[0,"filetime","yanix","This module consists of helper types and functions for…",null,null],[5,"utimensat","yanix::filetime","Wrapper for `utimensat` syscall, however, with an added…",null,[[["filetime",4],["file",3]],["result",6]]],[4,"FileTime","","A wrapper `enum` around `filetime::FileTime` struct, but…",null,null],[13,"Now","","",11,null],[13,"Omit","","",11,null],[13,"FileTime","","",11,null],[0,"poll","yanix","",null,null],[3,"PollFlags","yanix::poll","",null,null],[18,"POLLIN","","",12,null],[18,"POLLPRI","","",12,null],[18,"POLLOUT","","",12,null],[18,"POLLRDNORM","","",12,null],[18,"POLLWRNORM","","",12,null],[18,"POLLRDBAND","","",12,null],[18,"POLLWRBAND","","",12,null],[18,"POLLERR","","",12,null],[18,"POLLHUP","","",12,null],[18,"POLLNVAL","","",12,null],[11,"empty","","Returns an empty set of flags",12,[[],["pollflags",3]]],[11,"all","","Returns the set containing all flags.",12,[[],["pollflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",12,[[],["c_short",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",12,[[["c_short",6]],[["pollflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",12,[[["c_short",6]],["pollflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",12,[[["c_short",6]],["pollflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",12,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",12,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",12,[[["pollflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",12,[[["pollflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",12,[[["pollflags",3]]]],[11,"remove","","Removes the specified flags in-place.",12,[[["pollflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",12,[[["pollflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",12,[[["pollflags",3]]]],[3,"PollFd","","",null,null],[11,"new","","",13,[[["rawfd",6],["pollflags",3]]]],[11,"revents","","",13,[[],[["option",4],["pollflags",3]]]],[5,"poll","","",null,[[["c_int",6]],["result",6]]],[0,"socket","yanix","",null,null],[4,"SockType","yanix::socket","",null,null],[13,"Stream","","",14,null],[13,"Datagram","","",14,null],[13,"SeqPacket","","",14,null],[13,"Raw","","",14,null],[13,"Rdm","","",14,null],[5,"get_socket_type","","",null,[[["rawfd",6]],[["socktype",4],["result",6]]]],[0,"fadvise","yanix","",null,null],[4,"PosixFadviseAdvice","yanix::fadvise","",null,null],[13,"Normal","","",15,null],[13,"Sequential","","",15,null],[13,"Random","","",15,null],[13,"NoReuse","","",15,null],[13,"WillNeed","","",15,null],[13,"DontNeed","","",15,null],[5,"posix_fadvise","","",null,[[["rawfd",6],["off_t",6],["posixfadviseadvice",4]],["result",6]]],[11,"from","yanix::clock","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","yanix::dir","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","yanix::file","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","yanix::filetime","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","yanix::poll","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","yanix::socket","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","yanix::fadvise","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"ino","yanix::dir","",3,[[]]],[11,"seek_loc","","",3,[[],[["seekloc",3],["result",6]]]],[11,"drop","","",2,[[]]],[11,"extend","yanix::file","",6,[[["intoiterator",8]]]],[11,"extend","","",7,[[["intoiterator",8]]]],[11,"extend","","",8,[[["intoiterator",8]]]],[11,"extend","","",9,[[["intoiterator",8]]]],[11,"extend","yanix::poll","",12,[[["intoiterator",8]]]],[11,"next","yanix::dir","",5,[[],["option",4]]],[11,"clone","yanix::clock","",0,[[],["clockid",4]]],[11,"clone","yanix::dir","",2,[[],["dir",3]]],[11,"clone","","",3,[[],["entry",3]]],[11,"clone","","",4,[[],["seekloc",3]]],[11,"clone","yanix::file","",6,[[],["fdflags",3]]],[11,"clone","","",7,[[],["atflags",3]]],[11,"clone","","",8,[[],["mode",3]]],[11,"clone","","",9,[[],["oflags",3]]],[11,"clone","","",10,[[],["filetype",4]]],[11,"clone","yanix::filetime","",11,[[],["filetime",4]]],[11,"clone","yanix::poll","",12,[[],["pollflags",3]]],[11,"clone","","",13,[[],["pollfd",3]]],[11,"clone","yanix::socket","",14,[[],["socktype",4]]],[11,"clone","yanix::fadvise","",15,[[],["posixfadviseadvice",4]]],[11,"cmp","yanix::file","",6,[[["fdflags",3]],["ordering",4]]],[11,"cmp","","",7,[[["atflags",3]],["ordering",4]]],[11,"cmp","","",8,[[["mode",3]],["ordering",4]]],[11,"cmp","","",9,[[["oflags",3]],["ordering",4]]],[11,"cmp","yanix::poll","",12,[[["pollflags",3]],["ordering",4]]],[11,"eq","yanix::dir","",2,[[["dir",3]]]],[11,"ne","","",2,[[["dir",3]]]],[11,"eq","yanix::file","",6,[[["fdflags",3]]]],[11,"ne","","",6,[[["fdflags",3]]]],[11,"eq","","",7,[[["atflags",3]]]],[11,"ne","","",7,[[["atflags",3]]]],[11,"eq","","",8,[[["mode",3]]]],[11,"ne","","",8,[[["mode",3]]]],[11,"eq","","",9,[[["oflags",3]]]],[11,"ne","","",9,[[["oflags",3]]]],[11,"eq","","",10,[[["filetype",4]]]],[11,"eq","yanix::poll","",12,[[["pollflags",3]]]],[11,"ne","","",12,[[["pollflags",3]]]],[11,"eq","","",13,[[["pollfd",3]]]],[11,"ne","","",13,[[["pollfd",3]]]],[11,"partial_cmp","yanix::file","",6,[[["fdflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["fdflags",3]]]],[11,"le","","",6,[[["fdflags",3]]]],[11,"gt","","",6,[[["fdflags",3]]]],[11,"ge","","",6,[[["fdflags",3]]]],[11,"partial_cmp","","",7,[[["atflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",7,[[["atflags",3]]]],[11,"le","","",7,[[["atflags",3]]]],[11,"gt","","",7,[[["atflags",3]]]],[11,"ge","","",7,[[["atflags",3]]]],[11,"partial_cmp","","",8,[[["mode",3]],[["ordering",4],["option",4]]]],[11,"lt","","",8,[[["mode",3]]]],[11,"le","","",8,[[["mode",3]]]],[11,"gt","","",8,[[["mode",3]]]],[11,"ge","","",8,[[["mode",3]]]],[11,"partial_cmp","","",9,[[["oflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",9,[[["oflags",3]]]],[11,"le","","",9,[[["oflags",3]]]],[11,"gt","","",9,[[["oflags",3]]]],[11,"ge","","",9,[[["oflags",3]]]],[11,"partial_cmp","yanix::poll","",12,[[["pollflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",12,[[["pollflags",3]]]],[11,"le","","",12,[[["pollflags",3]]]],[11,"gt","","",12,[[["pollflags",3]]]],[11,"ge","","",12,[[["pollflags",3]]]],[11,"fmt","yanix::clock","",0,[[["formatter",3]],["result",6]]],[11,"fmt","yanix::dir","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","yanix::file","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","yanix::filetime","",11,[[["formatter",3]],["result",6]]],[11,"fmt","yanix::poll","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","yanix::socket","",14,[[["formatter",3]],["result",6]]],[11,"fmt","yanix::fadvise","",15,[[["formatter",3]],["result",6]]],[11,"sub","yanix::file","Returns the set difference of the two sets of flags.",6,[[["fdflags",3]],["fdflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",7,[[["atflags",3]],["atflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",8,[[["mode",3]],["mode",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",9,[[["oflags",3]],["oflags",3]]],[11,"sub","yanix::poll","Returns the set difference of the two sets of flags.",12,[[["pollflags",3]],["pollflags",3]]],[11,"sub_assign","yanix::file","Disables all flags enabled in the set.",6,[[["fdflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",7,[[["atflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",8,[[["mode",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",9,[[["oflags",3]]]],[11,"sub_assign","yanix::poll","Disables all flags enabled in the set.",12,[[["pollflags",3]]]],[11,"not","yanix::file","Returns the complement of this set of flags.",6,[[],["fdflags",3]]],[11,"not","","Returns the complement of this set of flags.",7,[[],["atflags",3]]],[11,"not","","Returns the complement of this set of flags.",8,[[],["mode",3]]],[11,"not","","Returns the complement of this set of flags.",9,[[],["oflags",3]]],[11,"not","yanix::poll","Returns the complement of this set of flags.",12,[[],["pollflags",3]]],[11,"bitand","yanix::file","Returns the intersection between the two sets of flags.",6,[[["fdflags",3]],["fdflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",7,[[["atflags",3]],["atflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",8,[[["mode",3]],["mode",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",9,[[["oflags",3]],["oflags",3]]],[11,"bitand","yanix::poll","Returns the intersection between the two sets of flags.",12,[[["pollflags",3]],["pollflags",3]]],[11,"bitor","yanix::file","Returns the union of the two sets of flags.",6,[[["fdflags",3]],["fdflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",7,[[["atflags",3]],["atflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",8,[[["mode",3]],["mode",3]]],[11,"bitor","","Returns the union of the two sets of flags.",9,[[["oflags",3]],["oflags",3]]],[11,"bitor","yanix::poll","Returns the union of the two sets of flags.",12,[[["pollflags",3]],["pollflags",3]]],[11,"bitxor","yanix::file","Returns the left flags, but with all the right flags…",6,[[["fdflags",3]],["fdflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",7,[[["atflags",3]],["atflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",8,[[["mode",3]],["mode",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",9,[[["oflags",3]],["oflags",3]]],[11,"bitxor","yanix::poll","Returns the left flags, but with all the right flags…",12,[[["pollflags",3]],["pollflags",3]]],[11,"bitand_assign","yanix::file","Disables all flags disabled in the set.",6,[[["fdflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",7,[[["atflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",8,[[["mode",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",9,[[["oflags",3]]]],[11,"bitand_assign","yanix::poll","Disables all flags disabled in the set.",12,[[["pollflags",3]]]],[11,"bitor_assign","yanix::file","Adds the set of flags.",6,[[["fdflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",7,[[["atflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",8,[[["mode",3]]]],[11,"bitor_assign","","Adds the set of flags.",9,[[["oflags",3]]]],[11,"bitor_assign","yanix::poll","Adds the set of flags.",12,[[["pollflags",3]]]],[11,"bitxor_assign","yanix::file","Toggles the set of flags.",6,[[["fdflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",7,[[["atflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",8,[[["mode",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",9,[[["oflags",3]]]],[11,"bitxor_assign","yanix::poll","Toggles the set of flags.",12,[[["pollflags",3]]]],[11,"hash","yanix::dir","",2,[[]]],[11,"hash","yanix::file","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","yanix::poll","",12,[[]]],[11,"hash","","",13,[[]]],[11,"from_iter","yanix::file","",6,[[["intoiterator",8]],["fdflags",3]]],[11,"from_iter","","",7,[[["intoiterator",8]],["atflags",3]]],[11,"from_iter","","",8,[[["intoiterator",8]],["mode",3]]],[11,"from_iter","","",9,[[["intoiterator",8]],["oflags",3]]],[11,"from_iter","yanix::poll","",12,[[["intoiterator",8]],["pollflags",3]]],[11,"fmt","yanix::file","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","yanix::poll","",12,[[["formatter",3]],["result",6]]],[11,"fmt","yanix::file","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","yanix::poll","",12,[[["formatter",3]],["result",6]]],[11,"fmt","yanix::file","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","yanix::poll","",12,[[["formatter",3]],["result",6]]],[11,"fmt","yanix::file","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","yanix::poll","",12,[[["formatter",3]],["result",6]]],[11,"as_raw_fd","yanix::dir","",2,[[],["rawfd",6]]]],"p":[[4,"ClockId"],[8,"EntryExt"],[3,"Dir"],[3,"Entry"],[3,"SeekLoc"],[3,"DirIter"],[3,"FdFlags"],[3,"AtFlags"],[3,"Mode"],[3,"OFlags"],[4,"FileType"],[4,"FileTime"],[3,"PollFlags"],[3,"PollFd"],[4,"SockType"],[4,"PosixFadviseAdvice"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);